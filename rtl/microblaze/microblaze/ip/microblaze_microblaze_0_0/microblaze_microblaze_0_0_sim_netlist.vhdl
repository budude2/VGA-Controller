-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- --------------------------------------------------------------------------------
-- Tool Version: Vivado v.2018.3 (win64) Build 2405991 Thu Dec  6 23:38:27 MST 2018
-- Date        : Fri May 10 15:35:48 2019
-- Host        : DESKTOP-KBPHQS1 running 64-bit major release  (build 9200)
-- Command     : write_vhdl -force -mode funcsim
--               C:/Users/xtjac/School/VGA-Controller/rtl/microblaze/microblaze/ip/microblaze_microblaze_0_0/microblaze_microblaze_0_0_sim_netlist.vhdl
-- Design      : microblaze_microblaze_0_0
-- Purpose     : This VHDL netlist is a functional simulation representation of the design and should not be modified or
--               synthesized. This netlist cannot be used for SDF annotated simulation.
-- Device      : xc7a100tcsg324-1
-- --------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Byte_Doublet_Handle_ff is
  port (
    \m1_unaligned_addr_3lsb_reg[2]_0\ : out STD_LOGIC;
    \m1_unaligned_addr_3lsb_reg[1]_0\ : out STD_LOGIC;
    \m1_op3_reg[24]_0\ : out STD_LOGIC_VECTOR ( 27 downto 0 );
    WB_Byte_Access_reg : out STD_LOGIC;
    \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_1\ : out STD_LOGIC;
    \m1_op3_reg[8]_0\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    \WB_DataBus_Byte_Enable_reg[0]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_DataBus_Write_Data_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    sync_reset : in STD_LOGIC;
    \m0_op3_reg[31]_0\ : in STD_LOGIC;
    ex_alu_result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    m1_byte_access : in STD_LOGIC;
    m1_doublet_access : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m2_piperun : in STD_LOGIC;
    \m3_databus_write_data_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 35 downto 0 );
    m3_piperun : in STD_LOGIC;
    m1_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Byte_Doublet_Handle_ff : entity is "Byte_Doublet_Handle_ff";
end microblaze_microblaze_0_0_Byte_Doublet_Handle_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Byte_Doublet_Handle_ff is
  signal \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal m0_addr_3lsb : STD_LOGIC_VECTOR ( 1 to 2 );
  signal m0_op3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m1_op3 : STD_LOGIC_VECTOR ( 0 to 23 );
  signal \^m1_op3_reg[24]_0\ : STD_LOGIC_VECTOR ( 27 downto 0 );
  signal \^m1_unaligned_addr_3lsb_reg[1]_0\ : STD_LOGIC;
  signal \^m1_unaligned_addr_3lsb_reg[2]_0\ : STD_LOGIC;
  signal m2_byte_selects : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \m2_byte_selects[0]_i_1_n_0\ : STD_LOGIC;
  signal \m2_byte_selects[1]_i_1_n_0\ : STD_LOGIC;
  signal m3_byte_selects : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \m3_databus_byte_enable_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \m3_databus_byte_enable_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \m3_databus_byte_enable_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \m3_databus_byte_enable_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[10]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[11]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[13]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[15]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[16]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[17]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[18]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[27]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[31]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[4]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[5]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[6]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[7]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[8]\ : STD_LOGIC;
  signal \m3_databus_write_data_i_reg_n_0_[9]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Byte_Enable[0]_INST_0\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \Byte_Enable[1]_INST_0\ : label is "soft_lutpair17";
  attribute SOFT_HLUTNM of \Byte_Enable[2]_INST_0\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \Byte_Enable[3]_INST_0\ : label is "soft_lutpair16";
  attribute SOFT_HLUTNM of \Data_Write[0]_INST_0\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Data_Write[16]_INST_0\ : label is "soft_lutpair8";
  attribute SOFT_HLUTNM of \Data_Write[17]_INST_0\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \Data_Write[18]_INST_0\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \Data_Write[19]_INST_0\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Data_Write[1]_INST_0\ : label is "soft_lutpair9";
  attribute SOFT_HLUTNM of \Data_Write[20]_INST_0\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Data_Write[21]_INST_0\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Data_Write[22]_INST_0\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Data_Write[23]_INST_0\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \Data_Write[2]_INST_0\ : label is "soft_lutpair15";
  attribute SOFT_HLUTNM of \Data_Write[3]_INST_0\ : label is "soft_lutpair14";
  attribute SOFT_HLUTNM of \Data_Write[4]_INST_0\ : label is "soft_lutpair13";
  attribute SOFT_HLUTNM of \Data_Write[5]_INST_0\ : label is "soft_lutpair12";
  attribute SOFT_HLUTNM of \Data_Write[6]_INST_0\ : label is "soft_lutpair11";
  attribute SOFT_HLUTNM of \Data_Write[7]_INST_0\ : label is "soft_lutpair10";
  attribute SOFT_HLUTNM of \trace_new_reg_value_i[24]_i_5\ : label is "soft_lutpair18";
  attribute SOFT_HLUTNM of \trace_new_reg_value_i[24]_i_6\ : label is "soft_lutpair18";
begin
  \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\(1 downto 0) <= \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(1 downto 0);
  \m1_op3_reg[24]_0\(27 downto 0) <= \^m1_op3_reg[24]_0\(27 downto 0);
  \m1_unaligned_addr_3lsb_reg[1]_0\ <= \^m1_unaligned_addr_3lsb_reg[1]_0\;
  \m1_unaligned_addr_3lsb_reg[2]_0\ <= \^m1_unaligned_addr_3lsb_reg[2]_0\;
\Byte_Enable[0]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88CF"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      I1 => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      I2 => m1_doublet_access,
      I3 => m1_byte_access,
      O => \^m1_op3_reg[24]_0\(3)
    );
\Byte_Enable[1]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"44CF"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      I1 => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      I2 => m1_doublet_access,
      I3 => m1_byte_access,
      O => \^m1_op3_reg[24]_0\(2)
    );
\Byte_Enable[2]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"232F"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      I1 => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      I2 => m1_byte_access,
      I3 => m1_doublet_access,
      O => \^m1_op3_reg[24]_0\(1)
    );
\Byte_Enable[3]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"131F"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      I1 => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      I2 => m1_byte_access,
      I3 => m1_doublet_access,
      O => \^m1_op3_reg[24]_0\(0)
    );
\Data_Write[0]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(11),
      I1 => m1_byte_access,
      I2 => m1_op3(16),
      I3 => m1_doublet_access,
      I4 => m1_op3(0),
      O => \^m1_op3_reg[24]_0\(27)
    );
\Data_Write[16]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(11),
      I1 => m1_byte_access,
      I2 => m1_op3(16),
      O => \^m1_op3_reg[24]_0\(19)
    );
\Data_Write[17]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(10),
      I1 => m1_byte_access,
      I2 => m1_op3(17),
      O => \^m1_op3_reg[24]_0\(18)
    );
\Data_Write[18]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(9),
      I1 => m1_byte_access,
      I2 => m1_op3(18),
      O => \^m1_op3_reg[24]_0\(17)
    );
\Data_Write[19]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(8),
      I1 => m1_byte_access,
      I2 => m1_op3(19),
      O => \^m1_op3_reg[24]_0\(16)
    );
\Data_Write[1]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(10),
      I1 => m1_byte_access,
      I2 => m1_op3(17),
      I3 => m1_doublet_access,
      I4 => m1_op3(1),
      O => \^m1_op3_reg[24]_0\(26)
    );
\Data_Write[20]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(7),
      I1 => m1_byte_access,
      I2 => m1_op3(20),
      O => \^m1_op3_reg[24]_0\(15)
    );
\Data_Write[21]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(6),
      I1 => m1_byte_access,
      I2 => m1_op3(21),
      O => \^m1_op3_reg[24]_0\(14)
    );
\Data_Write[22]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(5),
      I1 => m1_byte_access,
      I2 => m1_op3(22),
      O => \^m1_op3_reg[24]_0\(13)
    );
\Data_Write[23]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(4),
      I1 => m1_byte_access,
      I2 => m1_op3(23),
      O => \^m1_op3_reg[24]_0\(12)
    );
\Data_Write[2]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(9),
      I1 => m1_byte_access,
      I2 => m1_op3(18),
      I3 => m1_doublet_access,
      I4 => m1_op3(2),
      O => \^m1_op3_reg[24]_0\(25)
    );
\Data_Write[3]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(8),
      I1 => m1_byte_access,
      I2 => m1_op3(19),
      I3 => m1_doublet_access,
      I4 => m1_op3(3),
      O => \^m1_op3_reg[24]_0\(24)
    );
\Data_Write[4]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(7),
      I1 => m1_byte_access,
      I2 => m1_op3(20),
      I3 => m1_doublet_access,
      I4 => m1_op3(4),
      O => \^m1_op3_reg[24]_0\(23)
    );
\Data_Write[5]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(6),
      I1 => m1_byte_access,
      I2 => m1_op3(21),
      I3 => m1_doublet_access,
      I4 => m1_op3(5),
      O => \^m1_op3_reg[24]_0\(22)
    );
\Data_Write[6]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(5),
      I1 => m1_byte_access,
      I2 => m1_op3(22),
      I3 => m1_doublet_access,
      I4 => m1_op3(6),
      O => \^m1_op3_reg[24]_0\(21)
    );
\Data_Write[7]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^m1_op3_reg[24]_0\(4),
      I1 => m1_byte_access,
      I2 => m1_op3(23),
      I3 => m1_doublet_access,
      I4 => m1_op3(7),
      O => \^m1_op3_reg[24]_0\(20)
    );
\No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_byte_selects(0),
      Q => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(1),
      R => sync_reset
    );
\No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_byte_selects(1),
      Q => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(0),
      R => sync_reset
    );
\WB_DataBus_Byte_Enable_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_byte_enable_i_reg_n_0_[0]\,
      Q => \WB_DataBus_Byte_Enable_reg[0]_0\(3),
      R => sync_reset
    );
\WB_DataBus_Byte_Enable_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_byte_enable_i_reg_n_0_[1]\,
      Q => \WB_DataBus_Byte_Enable_reg[0]_0\(2),
      R => sync_reset
    );
\WB_DataBus_Byte_Enable_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_byte_enable_i_reg_n_0_[2]\,
      Q => \WB_DataBus_Byte_Enable_reg[0]_0\(1),
      R => sync_reset
    );
\WB_DataBus_Byte_Enable_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_byte_enable_i_reg_n_0_[3]\,
      Q => \WB_DataBus_Byte_Enable_reg[0]_0\(0),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[0]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(31),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[10]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(21),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[11]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(20),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[12]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(19),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[13]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(18),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[14]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(17),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[15]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(16),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[16]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(15),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[17]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(14),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[18]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(13),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[19]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(12),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[1]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(30),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[20]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(11),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[21]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(10),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[22]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(9),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[23]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(8),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[24]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(7),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[25]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(6),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[26]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(5),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[27]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(4),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[28]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(3),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[29]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(2),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[2]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(29),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[30]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(1),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[31]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(0),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[3]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(28),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[4]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(27),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[5]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(26),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[6]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(25),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[7]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(24),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[8]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(23),
      R => sync_reset
    );
\WB_DataBus_Write_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \m3_databus_write_data_i_reg_n_0_[9]\,
      Q => \WB_DataBus_Write_Data_reg[0]_0\(22),
      R => sync_reset
    );
\m0_addr_3lsb_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => ex_alu_result(1),
      Q => m0_addr_3lsb(1),
      R => sync_reset
    );
\m0_addr_3lsb_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => ex_alu_result(0),
      Q => m0_addr_3lsb(2),
      R => sync_reset
    );
\m0_op3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(31),
      Q => m0_op3(0),
      R => sync_reset
    );
\m0_op3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(21),
      Q => m0_op3(10),
      R => sync_reset
    );
\m0_op3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(20),
      Q => m0_op3(11),
      R => sync_reset
    );
\m0_op3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(19),
      Q => m0_op3(12),
      R => sync_reset
    );
\m0_op3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(18),
      Q => m0_op3(13),
      R => sync_reset
    );
\m0_op3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(17),
      Q => m0_op3(14),
      R => sync_reset
    );
\m0_op3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(16),
      Q => m0_op3(15),
      R => sync_reset
    );
\m0_op3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(15),
      Q => m0_op3(16),
      R => sync_reset
    );
\m0_op3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(14),
      Q => m0_op3(17),
      R => sync_reset
    );
\m0_op3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(13),
      Q => m0_op3(18),
      R => sync_reset
    );
\m0_op3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(12),
      Q => m0_op3(19),
      R => sync_reset
    );
\m0_op3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(30),
      Q => m0_op3(1),
      R => sync_reset
    );
\m0_op3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(11),
      Q => m0_op3(20),
      R => sync_reset
    );
\m0_op3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(10),
      Q => m0_op3(21),
      R => sync_reset
    );
\m0_op3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(9),
      Q => m0_op3(22),
      R => sync_reset
    );
\m0_op3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(8),
      Q => m0_op3(23),
      R => sync_reset
    );
\m0_op3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(7),
      Q => m0_op3(24),
      R => sync_reset
    );
\m0_op3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(6),
      Q => m0_op3(25),
      R => sync_reset
    );
\m0_op3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(5),
      Q => m0_op3(26),
      R => sync_reset
    );
\m0_op3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(4),
      Q => m0_op3(27),
      R => sync_reset
    );
\m0_op3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(3),
      Q => m0_op3(28),
      R => sync_reset
    );
\m0_op3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(2),
      Q => m0_op3(29),
      R => sync_reset
    );
\m0_op3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(29),
      Q => m0_op3(2),
      R => sync_reset
    );
\m0_op3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(1),
      Q => m0_op3(30),
      R => sync_reset
    );
\m0_op3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(0),
      Q => m0_op3(31),
      R => sync_reset
    );
\m0_op3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(28),
      Q => m0_op3(3),
      R => sync_reset
    );
\m0_op3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(27),
      Q => m0_op3(4),
      R => sync_reset
    );
\m0_op3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(26),
      Q => m0_op3(5),
      R => sync_reset
    );
\m0_op3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(25),
      Q => m0_op3(6),
      R => sync_reset
    );
\m0_op3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(24),
      Q => m0_op3(7),
      R => sync_reset
    );
\m0_op3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(23),
      Q => m0_op3(8),
      R => sync_reset
    );
\m0_op3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_op3_reg[31]_0\,
      D => Q(22),
      Q => m0_op3(9),
      R => sync_reset
    );
\m1_op3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(0),
      Q => m1_op3(0),
      R => sync_reset
    );
\m1_op3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(10),
      Q => \m1_op3_reg[8]_0\(5),
      R => sync_reset
    );
\m1_op3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(11),
      Q => \m1_op3_reg[8]_0\(4),
      R => sync_reset
    );
\m1_op3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(12),
      Q => \m1_op3_reg[8]_0\(3),
      R => sync_reset
    );
\m1_op3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(13),
      Q => \m1_op3_reg[8]_0\(2),
      R => sync_reset
    );
\m1_op3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(14),
      Q => \m1_op3_reg[8]_0\(1),
      R => sync_reset
    );
\m1_op3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(15),
      Q => \m1_op3_reg[8]_0\(0),
      R => sync_reset
    );
\m1_op3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(16),
      Q => m1_op3(16),
      R => sync_reset
    );
\m1_op3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(17),
      Q => m1_op3(17),
      R => sync_reset
    );
\m1_op3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(18),
      Q => m1_op3(18),
      R => sync_reset
    );
\m1_op3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(19),
      Q => m1_op3(19),
      R => sync_reset
    );
\m1_op3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(1),
      Q => m1_op3(1),
      R => sync_reset
    );
\m1_op3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(20),
      Q => m1_op3(20),
      R => sync_reset
    );
\m1_op3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(21),
      Q => m1_op3(21),
      R => sync_reset
    );
\m1_op3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(22),
      Q => m1_op3(22),
      R => sync_reset
    );
\m1_op3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(23),
      Q => m1_op3(23),
      R => sync_reset
    );
\m1_op3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(24),
      Q => \^m1_op3_reg[24]_0\(11),
      R => sync_reset
    );
\m1_op3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(25),
      Q => \^m1_op3_reg[24]_0\(10),
      R => sync_reset
    );
\m1_op3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(26),
      Q => \^m1_op3_reg[24]_0\(9),
      R => sync_reset
    );
\m1_op3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(27),
      Q => \^m1_op3_reg[24]_0\(8),
      R => sync_reset
    );
\m1_op3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(28),
      Q => \^m1_op3_reg[24]_0\(7),
      R => sync_reset
    );
\m1_op3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(29),
      Q => \^m1_op3_reg[24]_0\(6),
      R => sync_reset
    );
\m1_op3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(2),
      Q => m1_op3(2),
      R => sync_reset
    );
\m1_op3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(30),
      Q => \^m1_op3_reg[24]_0\(5),
      R => sync_reset
    );
\m1_op3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(31),
      Q => \^m1_op3_reg[24]_0\(4),
      R => sync_reset
    );
\m1_op3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(3),
      Q => m1_op3(3),
      R => sync_reset
    );
\m1_op3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(4),
      Q => m1_op3(4),
      R => sync_reset
    );
\m1_op3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(5),
      Q => m1_op3(5),
      R => sync_reset
    );
\m1_op3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(6),
      Q => m1_op3(6),
      R => sync_reset
    );
\m1_op3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(7),
      Q => m1_op3(7),
      R => sync_reset
    );
\m1_op3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(8),
      Q => \m1_op3_reg[8]_0\(7),
      R => sync_reset
    );
\m1_op3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_op3(9),
      Q => \m1_op3_reg[8]_0\(6),
      R => sync_reset
    );
\m1_unaligned_addr_3lsb_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_addr_3lsb(1),
      Q => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      R => sync_reset
    );
\m1_unaligned_addr_3lsb_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_addr_3lsb(2),
      Q => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      R => sync_reset
    );
\m2_byte_selects[0]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[1]_0\,
      O => \m2_byte_selects[0]_i_1_n_0\
    );
\m2_byte_selects[1]_i_1\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^m1_unaligned_addr_3lsb_reg[2]_0\,
      O => \m2_byte_selects[1]_i_1_n_0\
    );
\m2_byte_selects_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \m2_byte_selects[0]_i_1_n_0\,
      Q => m2_byte_selects(0),
      R => sync_reset
    );
\m2_byte_selects_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \m2_byte_selects[1]_i_1_n_0\,
      Q => m2_byte_selects(1),
      R => sync_reset
    );
\m3_byte_selects_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_byte_selects(0),
      Q => m3_byte_selects(0),
      R => sync_reset
    );
\m3_byte_selects_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_byte_selects(1),
      Q => m3_byte_selects(1),
      R => sync_reset
    );
\m3_databus_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(3),
      Q => \m3_databus_byte_enable_i_reg_n_0_[0]\,
      R => sync_reset
    );
\m3_databus_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(2),
      Q => \m3_databus_byte_enable_i_reg_n_0_[1]\,
      R => sync_reset
    );
\m3_databus_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(1),
      Q => \m3_databus_byte_enable_i_reg_n_0_[2]\,
      R => sync_reset
    );
\m3_databus_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(0),
      Q => \m3_databus_byte_enable_i_reg_n_0_[3]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(35),
      Q => \m3_databus_write_data_i_reg_n_0_[0]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(25),
      Q => \m3_databus_write_data_i_reg_n_0_[10]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(24),
      Q => \m3_databus_write_data_i_reg_n_0_[11]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(23),
      Q => \m3_databus_write_data_i_reg_n_0_[12]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(22),
      Q => \m3_databus_write_data_i_reg_n_0_[13]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(21),
      Q => \m3_databus_write_data_i_reg_n_0_[14]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(20),
      Q => \m3_databus_write_data_i_reg_n_0_[15]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(19),
      Q => \m3_databus_write_data_i_reg_n_0_[16]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(18),
      Q => \m3_databus_write_data_i_reg_n_0_[17]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(17),
      Q => \m3_databus_write_data_i_reg_n_0_[18]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(16),
      Q => \m3_databus_write_data_i_reg_n_0_[19]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(34),
      Q => \m3_databus_write_data_i_reg_n_0_[1]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(15),
      Q => \m3_databus_write_data_i_reg_n_0_[20]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(14),
      Q => \m3_databus_write_data_i_reg_n_0_[21]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(13),
      Q => \m3_databus_write_data_i_reg_n_0_[22]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(12),
      Q => \m3_databus_write_data_i_reg_n_0_[23]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(11),
      Q => \m3_databus_write_data_i_reg_n_0_[24]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(10),
      Q => \m3_databus_write_data_i_reg_n_0_[25]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(9),
      Q => \m3_databus_write_data_i_reg_n_0_[26]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(8),
      Q => \m3_databus_write_data_i_reg_n_0_[27]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(7),
      Q => \m3_databus_write_data_i_reg_n_0_[28]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(6),
      Q => \m3_databus_write_data_i_reg_n_0_[29]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(33),
      Q => \m3_databus_write_data_i_reg_n_0_[2]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(5),
      Q => \m3_databus_write_data_i_reg_n_0_[30]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(4),
      Q => \m3_databus_write_data_i_reg_n_0_[31]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(32),
      Q => \m3_databus_write_data_i_reg_n_0_[3]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(31),
      Q => \m3_databus_write_data_i_reg_n_0_[4]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(30),
      Q => \m3_databus_write_data_i_reg_n_0_[5]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(29),
      Q => \m3_databus_write_data_i_reg_n_0_[6]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(28),
      Q => \m3_databus_write_data_i_reg_n_0_[7]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(27),
      Q => \m3_databus_write_data_i_reg_n_0_[8]\,
      R => sync_reset
    );
\m3_databus_write_data_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \m3_databus_write_data_i_reg[0]_0\(26),
      Q => \m3_databus_write_data_i_reg_n_0_[9]\,
      R => sync_reset
    );
\trace_new_reg_value_i[24]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(1),
      I1 => wb_byte_access,
      I2 => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(0),
      O => \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_1\
    );
\trace_new_reg_value_i[24]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => wb_byte_access,
      I1 => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(0),
      I2 => \^no_long.no_reverse_mem_accesses.wb_byte_selects_reg[0]_0\(1),
      O => WB_Byte_Access_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Cache_ff is
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Cache_ff : entity is "Cache_ff";
end microblaze_microblaze_0_0_Cache_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Cache_ff is
  signal c2_first_cycle_cmb : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of c2_first_cycle_cmb : signal is "true";
begin
DCache_I1i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => c2_first_cycle_cmb
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_Cache_ff__parameterized1\ is
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_Cache_ff__parameterized1\ : entity is "Cache_ff";
end \microblaze_microblaze_0_0_Cache_ff__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_Cache_ff__parameterized1\ is
  signal c2_first_cycle_cmb : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of c2_first_cycle_cmb : signal is "true";
begin
ICache_I1i_0: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => '0',
      O => c2_first_cycle_cmb
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_DAXI_interface_ff is
  port (
    m3_active_access : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 70 downto 0 );
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_0\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ : out STD_LOGIC;
    \Use_DAXI.m2_active_access_unmasked_reg_0\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_1\ : out STD_LOGIC;
    m2_databus_access_i_reg : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    sync_reset : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m2_active_access : in STD_LOGIC;
    Clk : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\ : in STD_LOGIC_VECTOR ( 65 downto 0 );
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_1\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ : in STD_LOGIC;
    \Use_DAXI.m2_active_access_unmasked_reg_1\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_2\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ : in STD_LOGIC;
    \Use_DAXI.wb_data_has_been_used_reg_0\ : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \LOCKSTEP_Out_reg[721]\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    m3_sel_load_res : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARADDR_reg[1]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_DAXI_interface_ff : entity is "DAXI_interface_ff";
end microblaze_microblaze_0_0_DAXI_interface_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_DAXI_interface_ff is
  signal \^d\ : STD_LOGIC_VECTOR ( 70 downto 0 );
  signal M3_DAXI_Data_Strobe : STD_LOGIC;
  signal \Use_DAXI.M3_DAXI_Data_Strobe_i_1_n_0\ : STD_LOGIC;
  signal \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\ : STD_LOGIC;
  signal \^use_daxi.m_axi_dp_awvalid_unmasked_reg_0\ : STD_LOGIC;
  signal \^use_daxi.m_axi_dp_wvalid_unmasked_reg_0\ : STD_LOGIC;
  signal m3_daxi_stall : STD_LOGIC;
  signal p_0_out : STD_LOGIC;
  signal p_1_out : STD_LOGIC;
  signal wb_daxi_data_strobe : STD_LOGIC;
begin
  D(70 downto 0) <= \^d\(70 downto 0);
  \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ <= \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\;
  \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_0\ <= \^use_daxi.m_axi_dp_awvalid_unmasked_reg_0\;
  \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ <= \^use_daxi.m_axi_dp_wvalid_unmasked_reg_0\;
M_AXI_DP_ARVALID_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000040400000444"
    )
        port map (
      I0 => \^d\(2),
      I1 => \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\,
      I2 => m2_allow_dready,
      I3 => DReady,
      I4 => \LOCKSTEP_Out_reg[721]\,
      I5 => DWait,
      O => \^d\(1)
    );
\Use_DAXI.M3_DAXI_Data_Strobe_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FC00FC000000AA"
    )
        port map (
      I0 => M3_DAXI_Data_Strobe,
      I1 => M_AXI_DP_BVALID,
      I2 => M_AXI_DP_RVALID,
      I3 => sync_reset,
      I4 => m3_piperun,
      I5 => m3_daxi_stall,
      O => \Use_DAXI.M3_DAXI_Data_Strobe_i_1_n_0\
    );
\Use_DAXI.M3_DAXI_Data_Strobe_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^d\(0),
      I1 => \^d\(2),
      O => m3_daxi_stall
    );
\Use_DAXI.M3_DAXI_Data_Strobe_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M3_DAXI_Data_Strobe_i_1_n_0\,
      Q => M3_DAXI_Data_Strobe,
      R => '0'
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[1]_0\(0),
      Q => \^d\(39),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(44),
      Q => \^d\(49),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(45),
      Q => \^d\(50),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(46),
      Q => \^d\(51),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(47),
      Q => \^d\(52),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(48),
      Q => \^d\(53),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(49),
      Q => \^d\(54),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(50),
      Q => \^d\(55),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(51),
      Q => \^d\(56),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(52),
      Q => \^d\(57),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(53),
      Q => \^d\(58),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[1]_0\(1),
      Q => \^d\(40),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(54),
      Q => \^d\(59),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(55),
      Q => \^d\(60),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(56),
      Q => \^d\(61),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(57),
      Q => \^d\(62),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(58),
      Q => \^d\(63),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(59),
      Q => \^d\(64),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(60),
      Q => \^d\(65),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(61),
      Q => \^d\(66),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(62),
      Q => \^d\(67),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(63),
      Q => \^d\(68),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(36),
      Q => \^d\(41),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(64),
      Q => \^d\(69),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(65),
      Q => \^d\(70),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(37),
      Q => \^d\(42),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(38),
      Q => \^d\(43),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(39),
      Q => \^d\(44),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(40),
      Q => \^d\(45),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(41),
      Q => \^d\(46),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(42),
      Q => \^d\(47),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARADDR_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(43),
      Q => \^d\(48),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_ARVALID_unmasked_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF00FFFFFF40"
    )
        port map (
      I0 => \^d\(2),
      I1 => \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\,
      I2 => M_AXI_DP_ARREADY,
      I3 => sync_reset,
      I4 => m2_dlmb_drop_request,
      I5 => m1_piperun,
      O => \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\
    );
\Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\,
      Q => \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\,
      R => '0'
    );
\Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_1\,
      Q => \^use_daxi.m_axi_dp_awvalid_unmasked_reg_0\,
      R => '0'
    );
\Use_DAXI.M_AXI_DP_BREADY_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M_AXI_DP_BREADY_I_reg_2\,
      Q => \^d\(2),
      R => '0'
    );
\Use_DAXI.M_AXI_DP_RREADY_I_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      Q => \^d\(0),
      R => '0'
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(4),
      Q => \^d\(7),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(14),
      Q => \^d\(17),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(15),
      Q => \^d\(18),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(16),
      Q => \^d\(19),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(17),
      Q => \^d\(20),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(18),
      Q => \^d\(21),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(19),
      Q => \^d\(22),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(20),
      Q => \^d\(23),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(21),
      Q => \^d\(24),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(22),
      Q => \^d\(25),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(23),
      Q => \^d\(26),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(5),
      Q => \^d\(8),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(24),
      Q => \^d\(27),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(25),
      Q => \^d\(28),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(26),
      Q => \^d\(29),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(27),
      Q => \^d\(30),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(28),
      Q => \^d\(31),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(29),
      Q => \^d\(32),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(30),
      Q => \^d\(33),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(31),
      Q => \^d\(34),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(32),
      Q => \^d\(35),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(33),
      Q => \^d\(36),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(6),
      Q => \^d\(9),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(34),
      Q => \^d\(37),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(35),
      Q => \^d\(38),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(7),
      Q => \^d\(10),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(8),
      Q => \^d\(11),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(9),
      Q => \^d\(12),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(10),
      Q => \^d\(13),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(11),
      Q => \^d\(14),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(12),
      Q => \^d\(15),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WDATA_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(13),
      Q => \^d\(16),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WSTRB_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(0),
      Q => \^d\(3),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WSTRB_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(1),
      Q => \^d\(4),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WSTRB_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(2),
      Q => \^d\(5),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WSTRB_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(3),
      Q => \^d\(6),
      R => sync_reset
    );
\Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\,
      Q => \^use_daxi.m_axi_dp_wvalid_unmasked_reg_0\,
      R => '0'
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF10"
    )
        port map (
      I0 => \^d\(0),
      I1 => \^d\(2),
      I2 => wb_daxi_data_strobe,
      I3 => sync_reset,
      O => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E0"
    )
        port map (
      I0 => \^d\(2),
      I1 => \^d\(0),
      I2 => M_AXI_DP_RVALID,
      O => p_0_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(31),
      Q => Q(31),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(21),
      Q => Q(21),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(20),
      Q => Q(20),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(19),
      Q => Q(19),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(18),
      Q => Q(18),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(17),
      Q => Q(17),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(16),
      Q => Q(16),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(15),
      Q => Q(15),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(14),
      Q => Q(14),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(13),
      Q => Q(13),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(12),
      Q => Q(12),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(30),
      Q => Q(30),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(11),
      Q => Q(11),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(10),
      Q => Q(10),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(9),
      Q => Q(9),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(8),
      Q => Q(8),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(7),
      Q => Q(7),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(6),
      Q => Q(6),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(5),
      Q => Q(5),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(4),
      Q => Q(4),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(3),
      Q => Q(3),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(2),
      Q => Q(2),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(29),
      Q => Q(29),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(1),
      Q => Q(1),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(0),
      Q => Q(0),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(28),
      Q => Q(28),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(27),
      Q => Q(27),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(26),
      Q => Q(26),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(25),
      Q => Q(25),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(24),
      Q => Q(24),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(23),
      Q => Q(23),
      R => p_1_out
    );
\Use_DAXI.WB_DAXI_Valid_Read_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => p_0_out,
      D => M_AXI_DP_RDATA(22),
      Q => Q(22),
      R => p_1_out
    );
\Use_DAXI.m2_active_access_unmasked_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.m2_active_access_unmasked_reg_1\,
      Q => \Use_DAXI.m2_active_access_unmasked_reg_0\,
      R => sync_reset
    );
\Use_DAXI.m3_active_access_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_active_access,
      Q => m3_active_access,
      R => sync_reset
    );
\Use_DAXI.wb_data_has_been_used_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DAXI.wb_data_has_been_used_reg_0\,
      Q => wb_daxi_data_strobe,
      R => '0'
    );
\Using_FPGA.Native_i_1__217\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => M3_DAXI_Data_Strobe,
      O => S
    );
\Using_FPGA.Native_i_1__30\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1FFF"
    )
        port map (
      I0 => \^d\(2),
      I1 => \^d\(0),
      I2 => m3_sel_load_res,
      I3 => \Using_FPGA.Native\,
      O => \Use_DAXI.M_AXI_DP_BREADY_I_reg_1\
    );
\Using_FPGA.Native_i_1__35\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F7F7F7F7F7F7F7FF"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => m2_dlmb_drop_request,
      I3 => \^use_daxi.m_axi_dp_awvalid_unmasked_reg_0\,
      I4 => \^use_daxi.m_axi_dp_wvalid_unmasked_reg_0\,
      I5 => \^use_daxi.m_axi_dp_arvalid_unmasked_reg_0\,
      O => m2_databus_access_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_DLMB_Interface_ff is
  port (
    m2_allow_dready : out STD_LOGIC;
    m1_dlmb_issued : out STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg_0\ : out STD_LOGIC;
    m2_potential_bubble : out STD_LOGIC;
    m2_dlmb_dready : out STD_LOGIC;
    DWait_0 : out STD_LOGIC;
    m2_active_access : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m2_dlmb_drop_request : out STD_LOGIC;
    S : out STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[15]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[14]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[13]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[12]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[11]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[10]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[9]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[8]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[23]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[22]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[21]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[20]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[19]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[18]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[17]_0\ : out STD_LOGIC;
    \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[16]_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Use_DLMB.m2_allow_dready_reg_0\ : in STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg_1\ : in STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg_1\ : in STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg_0\ : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \Use_DAXI.m3_active_access_reg\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[629]\ : in STD_LOGIC;
    \LOCKSTEP_Out_reg[555]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[31]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[16]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \trace_new_reg_value_i_reg[31]_0\ : in STD_LOGIC;
    wb_databus_read_data : in STD_LOGIC_VECTOR ( 7 downto 0 );
    wb_doublet_access : in STD_LOGIC;
    \trace_new_reg_value_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \trace_new_reg_value_i[31]_i_2_0\ : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_DLMB_Interface_ff : entity is "DLMB_Interface_ff";
end microblaze_microblaze_0_0_DLMB_Interface_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_DLMB_Interface_ff is
  signal \^q\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\ : STD_LOGIC;
  signal \Use_DLMB.m1_dready_hold_i_1_n_0\ : STD_LOGIC;
  signal \^use_dlmb.m2_dready_hold_reg_0\ : STD_LOGIC;
  signal \Use_DLMB.m3_DLMB_Data_Strobe_i_i_1_n_0\ : STD_LOGIC;
  signal dlmb_data_bubble : STD_LOGIC_VECTOR ( 0 to 31 );
  signal dlmb_data_direct : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m1_dlmb_issued\ : STD_LOGIC;
  signal m1_dready_hold : STD_LOGIC;
  signal \^m2_allow_dready\ : STD_LOGIC;
  signal \^m2_dlmb_dready\ : STD_LOGIC;
  signal \^m2_potential_bubble\ : STD_LOGIC;
  signal m3_DLMB_Data_Strobe_i : STD_LOGIC;
  signal m3_dlmb_read_data_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m3_use_bubble : STD_LOGIC;
  signal p_5_out : STD_LOGIC;
  signal \trace_new_reg_value_i[24]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[25]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[26]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[27]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[28]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[29]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[30]_i_3_n_0\ : STD_LOGIC;
  signal \trace_new_reg_value_i[31]_i_3_n_0\ : STD_LOGIC;
  signal wb_dlmb_valid_read_data : STD_LOGIC_VECTOR ( 16 to 31 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of M_AXI_DP_AWVALID_INST_0 : label is "soft_lutpair261";
  attribute SOFT_HLUTNM of \Use_DAXI.M_AXI_DP_BREADY_I_i_2\ : label is "soft_lutpair260";
  attribute SOFT_HLUTNM of \Use_DAXI.m3_active_access_i_1\ : label is "soft_lutpair260";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_2\ : label is "soft_lutpair277";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[10]_i_1\ : label is "soft_lutpair272";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[11]_i_1\ : label is "soft_lutpair272";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[12]_i_1\ : label is "soft_lutpair271";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[13]_i_1\ : label is "soft_lutpair271";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[14]_i_1\ : label is "soft_lutpair270";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[15]_i_1\ : label is "soft_lutpair270";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[16]_i_1\ : label is "soft_lutpair269";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[17]_i_1\ : label is "soft_lutpair269";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[18]_i_1\ : label is "soft_lutpair268";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[19]_i_1\ : label is "soft_lutpair268";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[1]_i_1\ : label is "soft_lutpair277";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[20]_i_1\ : label is "soft_lutpair267";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[21]_i_1\ : label is "soft_lutpair267";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[22]_i_1\ : label is "soft_lutpair266";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[23]_i_1\ : label is "soft_lutpair266";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[24]_i_1\ : label is "soft_lutpair265";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[25]_i_1\ : label is "soft_lutpair265";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[26]_i_1\ : label is "soft_lutpair264";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[27]_i_1\ : label is "soft_lutpair264";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[28]_i_1\ : label is "soft_lutpair263";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[29]_i_1\ : label is "soft_lutpair263";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[2]_i_1\ : label is "soft_lutpair276";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[30]_i_1\ : label is "soft_lutpair262";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[31]_i_1\ : label is "soft_lutpair262";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[3]_i_1\ : label is "soft_lutpair276";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[4]_i_1\ : label is "soft_lutpair275";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[5]_i_1\ : label is "soft_lutpair275";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[6]_i_1\ : label is "soft_lutpair274";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[7]_i_1\ : label is "soft_lutpair274";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[8]_i_1\ : label is "soft_lutpair273";
  attribute SOFT_HLUTNM of \Use_DLMB.WB_DLMB_Valid_Read_Data[9]_i_1\ : label is "soft_lutpair273";
  attribute SOFT_HLUTNM of \Use_DLMB.m3_DLMB_Data_Strobe_i_i_2\ : label is "soft_lutpair261";
begin
  Q(15 downto 0) <= \^q\(15 downto 0);
  \Use_DLMB.m2_dready_hold_reg_0\ <= \^use_dlmb.m2_dready_hold_reg_0\;
  m1_dlmb_issued <= \^m1_dlmb_issued\;
  m2_allow_dready <= \^m2_allow_dready\;
  m2_dlmb_dready <= \^m2_dlmb_dready\;
  m2_potential_bubble <= \^m2_potential_bubble\;
M_AXI_DP_AWVALID_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0022002A"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[555]\,
      I1 => \^m2_allow_dready\,
      I2 => DReady,
      I3 => \^use_dlmb.m2_dready_hold_reg_0\,
      I4 => DWait,
      O => D(1)
    );
M_AXI_DP_WVALID_INST_0: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0022002A"
    )
        port map (
      I0 => \LOCKSTEP_Out_reg[629]\,
      I1 => \^m2_allow_dready\,
      I2 => DReady,
      I3 => \^use_dlmb.m2_dready_hold_reg_0\,
      I4 => DWait,
      O => D(0)
    );
\Use_DAXI.M_AXI_DP_AWVALID_unmasked_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF55545050"
    )
        port map (
      I0 => m1_piperun,
      I1 => DWait,
      I2 => \^use_dlmb.m2_dready_hold_reg_0\,
      I3 => DReady,
      I4 => \^m2_allow_dready\,
      I5 => sync_reset,
      O => DWait_0
    );
\Use_DAXI.M_AXI_DP_BREADY_I_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FECC"
    )
        port map (
      I0 => DWait,
      I1 => \^use_dlmb.m2_dready_hold_reg_0\,
      I2 => DReady,
      I3 => \^m2_allow_dready\,
      O => m2_dlmb_drop_request
    );
\Use_DAXI.m3_active_access_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0022002A"
    )
        port map (
      I0 => \Use_DAXI.m3_active_access_reg\,
      I1 => \^m2_allow_dready\,
      I2 => DReady,
      I3 => \^use_dlmb.m2_dready_hold_reg_0\,
      I4 => DWait,
      O => m2_active_access
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => sync_reset,
      I1 => m3_DLMB_Data_Strobe_i,
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(0),
      I1 => dlmb_data_direct(0),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(0)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(10),
      I1 => dlmb_data_direct(10),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(10)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(11),
      I1 => dlmb_data_direct(11),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(11)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(12),
      I1 => dlmb_data_direct(12),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(12)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(13),
      I1 => dlmb_data_direct(13),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(13)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(14),
      I1 => dlmb_data_direct(14),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(14)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(15),
      I1 => dlmb_data_direct(15),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(15)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(16),
      I1 => dlmb_data_direct(16),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(16)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(17),
      I1 => dlmb_data_direct(17),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(17)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(18),
      I1 => dlmb_data_direct(18),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(18)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(19),
      I1 => dlmb_data_direct(19),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(19)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(1),
      I1 => dlmb_data_direct(1),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(1)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(20),
      I1 => dlmb_data_direct(20),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(20)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(21),
      I1 => dlmb_data_direct(21),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(21)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(22),
      I1 => dlmb_data_direct(22),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(22)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(23),
      I1 => dlmb_data_direct(23),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(23)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(24),
      I1 => dlmb_data_direct(24),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(24)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(25),
      I1 => dlmb_data_direct(25),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(25)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(26),
      I1 => dlmb_data_direct(26),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(26)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(27),
      I1 => dlmb_data_direct(27),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(27)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(28),
      I1 => dlmb_data_direct(28),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(28)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(29),
      I1 => dlmb_data_direct(29),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(29)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(2),
      I1 => dlmb_data_direct(2),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(2)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(30),
      I1 => dlmb_data_direct(30),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(30)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(31),
      I1 => dlmb_data_direct(31),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(31)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(3),
      I1 => dlmb_data_direct(3),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(3)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(4),
      I1 => dlmb_data_direct(4),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(4)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(5),
      I1 => dlmb_data_direct(5),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(5)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(6),
      I1 => dlmb_data_direct(6),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(6)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(7),
      I1 => dlmb_data_direct(7),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(7)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(8),
      I1 => dlmb_data_direct(8),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(8)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => dlmb_data_bubble(9),
      I1 => dlmb_data_direct(9),
      I2 => m3_use_bubble,
      O => m3_dlmb_read_data_i(9)
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(0),
      Q => \^q\(15),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(10),
      Q => \^q\(5),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(11),
      Q => \^q\(4),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(12),
      Q => \^q\(3),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(13),
      Q => \^q\(2),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(14),
      Q => \^q\(1),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(15),
      Q => \^q\(0),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(16),
      Q => wb_dlmb_valid_read_data(16),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(17),
      Q => wb_dlmb_valid_read_data(17),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(18),
      Q => wb_dlmb_valid_read_data(18),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(19),
      Q => wb_dlmb_valid_read_data(19),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(1),
      Q => \^q\(14),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(20),
      Q => wb_dlmb_valid_read_data(20),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(21),
      Q => wb_dlmb_valid_read_data(21),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(22),
      Q => wb_dlmb_valid_read_data(22),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(23),
      Q => wb_dlmb_valid_read_data(23),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(24),
      Q => wb_dlmb_valid_read_data(24),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(25),
      Q => wb_dlmb_valid_read_data(25),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(26),
      Q => wb_dlmb_valid_read_data(26),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(27),
      Q => wb_dlmb_valid_read_data(27),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(28),
      Q => wb_dlmb_valid_read_data(28),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(29),
      Q => wb_dlmb_valid_read_data(29),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(2),
      Q => \^q\(13),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(30),
      Q => wb_dlmb_valid_read_data(30),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(31),
      Q => wb_dlmb_valid_read_data(31),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(3),
      Q => \^q\(12),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(4),
      Q => \^q\(11),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(5),
      Q => \^q\(10),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(6),
      Q => \^q\(9),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(7),
      Q => \^q\(8),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(8),
      Q => \^q\(7),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.WB_DLMB_Valid_Read_Data_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_dlmb_read_data_i(9),
      Q => \^q\(6),
      R => \Use_DLMB.WB_DLMB_Valid_Read_Data[0]_i_1_n_0\
    );
\Use_DLMB.dlmb_data_bubble_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(0),
      Q => dlmb_data_bubble(0),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(10),
      Q => dlmb_data_bubble(10),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(11),
      Q => dlmb_data_bubble(11),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(12),
      Q => dlmb_data_bubble(12),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(13),
      Q => dlmb_data_bubble(13),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(14),
      Q => dlmb_data_bubble(14),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(15),
      Q => dlmb_data_bubble(15),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(16),
      Q => dlmb_data_bubble(16),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(17),
      Q => dlmb_data_bubble(17),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(18),
      Q => dlmb_data_bubble(18),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(19),
      Q => dlmb_data_bubble(19),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(1),
      Q => dlmb_data_bubble(1),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(20),
      Q => dlmb_data_bubble(20),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(21),
      Q => dlmb_data_bubble(21),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(22),
      Q => dlmb_data_bubble(22),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(23),
      Q => dlmb_data_bubble(23),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(24),
      Q => dlmb_data_bubble(24),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(25),
      Q => dlmb_data_bubble(25),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(26),
      Q => dlmb_data_bubble(26),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(27),
      Q => dlmb_data_bubble(27),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(28),
      Q => dlmb_data_bubble(28),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(29),
      Q => dlmb_data_bubble(29),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(2),
      Q => dlmb_data_bubble(2),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(30),
      Q => dlmb_data_bubble(30),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(31),
      Q => dlmb_data_bubble(31),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(3),
      Q => dlmb_data_bubble(3),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(4),
      Q => dlmb_data_bubble(4),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(5),
      Q => dlmb_data_bubble(5),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(6),
      Q => dlmb_data_bubble(6),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(7),
      Q => dlmb_data_bubble(7),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(8),
      Q => dlmb_data_bubble(8),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_bubble_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => dlmb_data_direct(9),
      Q => dlmb_data_bubble(9),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(0),
      Q => dlmb_data_direct(0),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(10),
      Q => dlmb_data_direct(10),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(11),
      Q => dlmb_data_direct(11),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(12),
      Q => dlmb_data_direct(12),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(13),
      Q => dlmb_data_direct(13),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(14),
      Q => dlmb_data_direct(14),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(15),
      Q => dlmb_data_direct(15),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(16),
      Q => dlmb_data_direct(16),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(17),
      Q => dlmb_data_direct(17),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(18),
      Q => dlmb_data_direct(18),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(19),
      Q => dlmb_data_direct(19),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(1),
      Q => dlmb_data_direct(1),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(20),
      Q => dlmb_data_direct(20),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(21),
      Q => dlmb_data_direct(21),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(22),
      Q => dlmb_data_direct(22),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(23),
      Q => dlmb_data_direct(23),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(24),
      Q => dlmb_data_direct(24),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(25),
      Q => dlmb_data_direct(25),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(26),
      Q => dlmb_data_direct(26),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(27),
      Q => dlmb_data_direct(27),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(28),
      Q => dlmb_data_direct(28),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(29),
      Q => dlmb_data_direct(29),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(2),
      Q => dlmb_data_direct(2),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(30),
      Q => dlmb_data_direct(30),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(31),
      Q => dlmb_data_direct(31),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(3),
      Q => dlmb_data_direct(3),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(4),
      Q => dlmb_data_direct(4),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(5),
      Q => dlmb_data_direct(5),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(6),
      Q => dlmb_data_direct(6),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(7),
      Q => dlmb_data_direct(7),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(8),
      Q => dlmb_data_direct(8),
      R => sync_reset
    );
\Use_DLMB.dlmb_data_direct_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => DReady,
      D => Data_Read(9),
      Q => dlmb_data_direct(9),
      R => sync_reset
    );
\Use_DLMB.m1_dlmb_issued_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m1_dlmb_issued_reg_1\,
      Q => \^m1_dlmb_issued\,
      R => '0'
    );
\Use_DLMB.m1_dready_hold_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => m1_dready_hold,
      I1 => DReady,
      I2 => \^m1_dlmb_issued\,
      I3 => m1_piperun,
      I4 => sync_reset,
      O => \Use_DLMB.m1_dready_hold_i_1_n_0\
    );
\Use_DLMB.m1_dready_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m1_dready_hold_i_1_n_0\,
      Q => m1_dready_hold,
      R => '0'
    );
\Use_DLMB.m2_allow_dready_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m2_allow_dready_reg_0\,
      Q => \^m2_allow_dready\,
      R => sync_reset
    );
\Use_DLMB.m2_dready_hold_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8FFFFA8A8F000"
    )
        port map (
      I0 => \^m1_dlmb_issued\,
      I1 => m1_dready_hold,
      I2 => DReady,
      I3 => \^m2_allow_dready\,
      I4 => m1_piperun,
      I5 => \^use_dlmb.m2_dready_hold_reg_0\,
      O => \Use_DLMB.m1_dlmb_issued_reg_0\
    );
\Use_DLMB.m2_dready_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m2_dready_hold_reg_1\,
      Q => \^use_dlmb.m2_dready_hold_reg_0\,
      R => '0'
    );
\Use_DLMB.m2_potential_bubble_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m2_potential_bubble_reg_0\,
      Q => \^m2_potential_bubble\,
      R => '0'
    );
\Use_DLMB.m3_DLMB_Data_Strobe_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C0C000A"
    )
        port map (
      I0 => m3_DLMB_Data_Strobe_i,
      I1 => \^m2_dlmb_dready\,
      I2 => sync_reset,
      I3 => m3_piperun,
      I4 => m2_piperun,
      O => \Use_DLMB.m3_DLMB_Data_Strobe_i_i_1_n_0\
    );
\Use_DLMB.m3_DLMB_Data_Strobe_i_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^m2_allow_dready\,
      I1 => DReady,
      I2 => \^use_dlmb.m2_dready_hold_reg_0\,
      O => \^m2_dlmb_dready\
    );
\Use_DLMB.m3_DLMB_Data_Strobe_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_DLMB.m3_DLMB_Data_Strobe_i_i_1_n_0\,
      Q => m3_DLMB_Data_Strobe_i,
      R => '0'
    );
\Use_DLMB.m3_use_bubble_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8880"
    )
        port map (
      I0 => \^m2_potential_bubble\,
      I1 => \^m1_dlmb_issued\,
      I2 => m1_dready_hold,
      I3 => DReady,
      O => p_5_out
    );
\Use_DLMB.m3_use_bubble_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => p_5_out,
      Q => m3_use_bubble,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__206\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => m3_DLMB_Data_Strobe_i,
      O => S
    );
\trace_new_reg_value_i[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(16),
      I1 => \trace_new_reg_value_i_reg[16]\(15),
      I2 => \^q\(15),
      I3 => \trace_new_reg_value_i_reg[16]\(31),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[16]_0\
    );
\trace_new_reg_value_i[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(17),
      I1 => \trace_new_reg_value_i_reg[16]\(14),
      I2 => \^q\(14),
      I3 => \trace_new_reg_value_i_reg[16]\(30),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[17]_0\
    );
\trace_new_reg_value_i[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(18),
      I1 => \trace_new_reg_value_i_reg[16]\(13),
      I2 => \^q\(13),
      I3 => \trace_new_reg_value_i_reg[16]\(29),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[18]_0\
    );
\trace_new_reg_value_i[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(19),
      I1 => \trace_new_reg_value_i_reg[16]\(12),
      I2 => \^q\(12),
      I3 => \trace_new_reg_value_i_reg[16]\(28),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[19]_0\
    );
\trace_new_reg_value_i[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(20),
      I1 => \trace_new_reg_value_i_reg[16]\(11),
      I2 => \^q\(11),
      I3 => \trace_new_reg_value_i_reg[16]\(27),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[20]_0\
    );
\trace_new_reg_value_i[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(21),
      I1 => \trace_new_reg_value_i_reg[16]\(10),
      I2 => \^q\(10),
      I3 => \trace_new_reg_value_i_reg[16]\(26),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[21]_0\
    );
\trace_new_reg_value_i[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(22),
      I1 => \trace_new_reg_value_i_reg[16]\(9),
      I2 => \^q\(9),
      I3 => \trace_new_reg_value_i_reg[16]\(25),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[22]_0\
    );
\trace_new_reg_value_i[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"11111111000F1111"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(23),
      I1 => \trace_new_reg_value_i_reg[16]\(8),
      I2 => \^q\(8),
      I3 => \trace_new_reg_value_i_reg[16]\(24),
      I4 => wb_doublet_access,
      I5 => \trace_new_reg_value_i_reg[23]\(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[23]_0\
    );
\trace_new_reg_value_i[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[24]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(7),
      I3 => \trace_new_reg_value_i_reg[16]\(23),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(7),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[8]_0\
    );
\trace_new_reg_value_i[24]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(24),
      I1 => \trace_new_reg_value_i_reg[16]\(7),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(16),
      I4 => \trace_new_reg_value_i_reg[16]\(15),
      O => \trace_new_reg_value_i[24]_i_3_n_0\
    );
\trace_new_reg_value_i[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[25]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(6),
      I3 => \trace_new_reg_value_i_reg[16]\(22),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(6),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[9]_0\
    );
\trace_new_reg_value_i[25]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(25),
      I1 => \trace_new_reg_value_i_reg[16]\(6),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(17),
      I4 => \trace_new_reg_value_i_reg[16]\(14),
      O => \trace_new_reg_value_i[25]_i_3_n_0\
    );
\trace_new_reg_value_i[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[26]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(5),
      I3 => \trace_new_reg_value_i_reg[16]\(21),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(5),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[10]_0\
    );
\trace_new_reg_value_i[26]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(26),
      I1 => \trace_new_reg_value_i_reg[16]\(5),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(18),
      I4 => \trace_new_reg_value_i_reg[16]\(13),
      O => \trace_new_reg_value_i[26]_i_3_n_0\
    );
\trace_new_reg_value_i[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[27]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(4),
      I3 => \trace_new_reg_value_i_reg[16]\(20),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(4),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[11]_0\
    );
\trace_new_reg_value_i[27]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(27),
      I1 => \trace_new_reg_value_i_reg[16]\(4),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(19),
      I4 => \trace_new_reg_value_i_reg[16]\(12),
      O => \trace_new_reg_value_i[27]_i_3_n_0\
    );
\trace_new_reg_value_i[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[28]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(3),
      I3 => \trace_new_reg_value_i_reg[16]\(19),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(3),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[12]_0\
    );
\trace_new_reg_value_i[28]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(28),
      I1 => \trace_new_reg_value_i_reg[16]\(3),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(20),
      I4 => \trace_new_reg_value_i_reg[16]\(11),
      O => \trace_new_reg_value_i[28]_i_3_n_0\
    );
\trace_new_reg_value_i[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[29]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(2),
      I3 => \trace_new_reg_value_i_reg[16]\(18),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(2),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[13]_0\
    );
\trace_new_reg_value_i[29]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(29),
      I1 => \trace_new_reg_value_i_reg[16]\(2),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(21),
      I4 => \trace_new_reg_value_i_reg[16]\(10),
      O => \trace_new_reg_value_i[29]_i_3_n_0\
    );
\trace_new_reg_value_i[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[30]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(1),
      I3 => \trace_new_reg_value_i_reg[16]\(17),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(1),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[14]_0\
    );
\trace_new_reg_value_i[30]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(30),
      I1 => \trace_new_reg_value_i_reg[16]\(1),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(22),
      I4 => \trace_new_reg_value_i_reg[16]\(9),
      O => \trace_new_reg_value_i[30]_i_3_n_0\
    );
\trace_new_reg_value_i[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDD1FFFFDDD10000"
    )
        port map (
      I0 => \trace_new_reg_value_i[31]_i_3_n_0\,
      I1 => \trace_new_reg_value_i_reg[31]\,
      I2 => \^q\(0),
      I3 => \trace_new_reg_value_i_reg[16]\(16),
      I4 => \trace_new_reg_value_i_reg[31]_0\,
      I5 => wb_databus_read_data(0),
      O => \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[15]_0\
    );
\trace_new_reg_value_i[31]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1010101F"
    )
        port map (
      I0 => wb_dlmb_valid_read_data(31),
      I1 => \trace_new_reg_value_i_reg[16]\(0),
      I2 => \trace_new_reg_value_i[31]_i_2_0\,
      I3 => wb_dlmb_valid_read_data(23),
      I4 => \trace_new_reg_value_i_reg[16]\(8),
      O => \trace_new_reg_value_i[31]_i_3_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ILMB_Interface_ff is
  port (
    if3_allow_iready : out STD_LOGIC;
    if2_ilmb_issued : out STD_LOGIC;
    if3_potential_bubble : out STD_LOGIC;
    if3_ilmb_iready : out STD_LOGIC;
    S : out STD_LOGIC;
    if4_data : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Use_ILMB.if2_ilmb_issued_reg_0\ : out STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg_0\ : out STD_LOGIC;
    \in\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    if3_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Use_ILMB.if3_allow_iready_reg_0\ : in STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg_1\ : in STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg_1\ : in STD_LOGIC;
    \Use_ILMB.if3_potential_bubble_reg_0\ : in STD_LOGIC;
    if4_piperun : in STD_LOGIC;
    IReady : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[31]\ : in STD_LOGIC;
    if2_piperun : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ILMB_Interface_ff : entity is "ILMB_Interface_ff";
end microblaze_microblaze_0_0_ILMB_Interface_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_ILMB_Interface_ff is
  signal \Use_ILMB.if2_iready_hold_i_1_n_0\ : STD_LOGIC;
  signal \Use_ILMB.if3_iready_hold_reg_n_0\ : STD_LOGIC;
  signal \Use_ILMB.if4_ILMB_Data_Strobe_i_i_1_n_0\ : STD_LOGIC;
  signal \^if2_ilmb_issued\ : STD_LOGIC;
  signal if2_iready_hold : STD_LOGIC;
  signal \^if3_allow_iready\ : STD_LOGIC;
  signal \^if3_ilmb_iready\ : STD_LOGIC;
  signal \^if3_potential_bubble\ : STD_LOGIC;
  signal \^if4_data\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if4_ilmb_data_strobe : STD_LOGIC;
  signal if4_use_bubble : STD_LOGIC;
  signal ilmb_data_bubble : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ilmb_data_direct : STD_LOGIC_VECTOR ( 0 to 31 );
  signal p_5_out : STD_LOGIC;
begin
  if2_ilmb_issued <= \^if2_ilmb_issued\;
  if3_allow_iready <= \^if3_allow_iready\;
  if3_ilmb_iready <= \^if3_ilmb_iready\;
  if3_potential_bubble <= \^if3_potential_bubble\;
  if4_data(0 to 31) <= \^if4_data\(0 to 31);
\Use_ILMB.if2_ilmb_issued_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if2_ilmb_issued_reg_1\,
      Q => \^if2_ilmb_issued\,
      R => '0'
    );
\Use_ILMB.if2_iready_hold_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => if2_iready_hold,
      I1 => IReady,
      I2 => \^if2_ilmb_issued\,
      I3 => if2_piperun,
      I4 => sync_reset,
      O => \Use_ILMB.if2_iready_hold_i_1_n_0\
    );
\Use_ILMB.if2_iready_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if2_iready_hold_i_1_n_0\,
      Q => if2_iready_hold,
      R => '0'
    );
\Use_ILMB.if3_allow_iready_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if3_allow_iready_reg_0\,
      Q => \^if3_allow_iready\,
      R => sync_reset
    );
\Use_ILMB.if3_iready_hold_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A8A8FFFFA8A8F000"
    )
        port map (
      I0 => \^if2_ilmb_issued\,
      I1 => if2_iready_hold,
      I2 => IReady,
      I3 => \^if3_allow_iready\,
      I4 => if2_piperun,
      I5 => \Use_ILMB.if3_iready_hold_reg_n_0\,
      O => \Use_ILMB.if2_ilmb_issued_reg_0\
    );
\Use_ILMB.if3_iready_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if3_iready_hold_reg_1\,
      Q => \Use_ILMB.if3_iready_hold_reg_n_0\,
      R => '0'
    );
\Use_ILMB.if3_potential_bubble_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if3_potential_bubble_reg_0\,
      Q => \^if3_potential_bubble\,
      R => '0'
    );
\Use_ILMB.if4_ILMB_Data_Strobe_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C0C000A"
    )
        port map (
      I0 => if4_ilmb_data_strobe,
      I1 => \^if3_ilmb_iready\,
      I2 => sync_reset,
      I3 => if4_piperun,
      I4 => if3_piperun,
      O => \Use_ILMB.if4_ILMB_Data_Strobe_i_i_1_n_0\
    );
\Use_ILMB.if4_ILMB_Data_Strobe_i_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"F8"
    )
        port map (
      I0 => \^if3_allow_iready\,
      I1 => IReady,
      I2 => \Use_ILMB.if3_iready_hold_reg_n_0\,
      O => \^if3_ilmb_iready\
    );
\Use_ILMB.if4_ILMB_Data_Strobe_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Use_ILMB.if4_ILMB_Data_Strobe_i_i_1_n_0\,
      Q => if4_ilmb_data_strobe,
      R => '0'
    );
\Use_ILMB.if4_use_bubble_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8880"
    )
        port map (
      I0 => \^if3_potential_bubble\,
      I1 => \^if2_ilmb_issued\,
      I2 => if2_iready_hold,
      I3 => IReady,
      O => p_5_out
    );
\Use_ILMB.if4_use_bubble_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => p_5_out,
      Q => if4_use_bubble,
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(0),
      Q => ilmb_data_bubble(0),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(10),
      Q => ilmb_data_bubble(10),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(11),
      Q => ilmb_data_bubble(11),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(12),
      Q => ilmb_data_bubble(12),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(13),
      Q => ilmb_data_bubble(13),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(14),
      Q => ilmb_data_bubble(14),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(15),
      Q => ilmb_data_bubble(15),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(16),
      Q => ilmb_data_bubble(16),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(17),
      Q => ilmb_data_bubble(17),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(18),
      Q => ilmb_data_bubble(18),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(19),
      Q => ilmb_data_bubble(19),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(1),
      Q => ilmb_data_bubble(1),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(20),
      Q => ilmb_data_bubble(20),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(21),
      Q => ilmb_data_bubble(21),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(22),
      Q => ilmb_data_bubble(22),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(23),
      Q => ilmb_data_bubble(23),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(24),
      Q => ilmb_data_bubble(24),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(25),
      Q => ilmb_data_bubble(25),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(26),
      Q => ilmb_data_bubble(26),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(27),
      Q => ilmb_data_bubble(27),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(28),
      Q => ilmb_data_bubble(28),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(29),
      Q => ilmb_data_bubble(29),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(2),
      Q => ilmb_data_bubble(2),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(30),
      Q => ilmb_data_bubble(30),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(31),
      Q => ilmb_data_bubble(31),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(3),
      Q => ilmb_data_bubble(3),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(4),
      Q => ilmb_data_bubble(4),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(5),
      Q => ilmb_data_bubble(5),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(6),
      Q => ilmb_data_bubble(6),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(7),
      Q => ilmb_data_bubble(7),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(8),
      Q => ilmb_data_bubble(8),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_bubble_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => ilmb_data_direct(9),
      Q => ilmb_data_bubble(9),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(0),
      Q => ilmb_data_direct(0),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(10),
      Q => ilmb_data_direct(10),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(11),
      Q => ilmb_data_direct(11),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(12),
      Q => ilmb_data_direct(12),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(13),
      Q => ilmb_data_direct(13),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(14),
      Q => ilmb_data_direct(14),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(15),
      Q => ilmb_data_direct(15),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(16),
      Q => ilmb_data_direct(16),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(17),
      Q => ilmb_data_direct(17),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(18),
      Q => ilmb_data_direct(18),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(19),
      Q => ilmb_data_direct(19),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(1),
      Q => ilmb_data_direct(1),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(20),
      Q => ilmb_data_direct(20),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(21),
      Q => ilmb_data_direct(21),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(22),
      Q => ilmb_data_direct(22),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(23),
      Q => ilmb_data_direct(23),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(24),
      Q => ilmb_data_direct(24),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(25),
      Q => ilmb_data_direct(25),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(26),
      Q => ilmb_data_direct(26),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(27),
      Q => ilmb_data_direct(27),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(28),
      Q => ilmb_data_direct(28),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(29),
      Q => ilmb_data_direct(29),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(2),
      Q => ilmb_data_direct(2),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(30),
      Q => ilmb_data_direct(30),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(31),
      Q => ilmb_data_direct(31),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(3),
      Q => ilmb_data_direct(3),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(4),
      Q => ilmb_data_direct(4),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(5),
      Q => ilmb_data_direct(5),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(6),
      Q => ilmb_data_direct(6),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(7),
      Q => ilmb_data_direct(7),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(8),
      Q => ilmb_data_direct(8),
      R => sync_reset
    );
\Use_ILMB.ilmb_data_direct_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => IReady,
      D => Instr(9),
      Q => ilmb_data_direct(9),
      R => sync_reset
    );
\Using_FPGA.Native_i_1__207\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => if4_ilmb_data_strobe,
      O => S
    );
\Using_FPGA.Native_i_1__218\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFFF"
    )
        port map (
      I0 => \Use_ILMB.if3_iready_hold_reg_n_0\,
      I1 => IReady,
      I2 => IWAIT,
      I3 => \^if3_allow_iready\,
      O => \Use_ILMB.if3_iready_hold_reg_0\
    );
\data_buffer_reg[3][0]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(0),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(31),
      I3 => ilmb_data_direct(31),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(31)
    );
\data_buffer_reg[3][10]_srl4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^if4_data\(0),
      I1 => \^if4_data\(1),
      I2 => \^if4_data\(3),
      O => \in\(0)
    );
\data_buffer_reg[3][10]_srl4_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(10),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(21),
      I3 => ilmb_data_direct(21),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(21)
    );
\data_buffer_reg[3][11]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(11),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(20),
      I3 => ilmb_data_direct(20),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(20)
    );
\data_buffer_reg[3][12]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(12),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(19),
      I3 => ilmb_data_direct(19),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(19)
    );
\data_buffer_reg[3][13]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(13),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(18),
      I3 => ilmb_data_direct(18),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(18)
    );
\data_buffer_reg[3][14]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(14),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(17),
      I3 => ilmb_data_direct(17),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(17)
    );
\data_buffer_reg[3][15]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(15),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(16),
      I3 => ilmb_data_direct(16),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(16)
    );
\data_buffer_reg[3][16]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(16),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(15),
      I3 => ilmb_data_direct(15),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(15)
    );
\data_buffer_reg[3][17]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(17),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(14),
      I3 => ilmb_data_direct(14),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(14)
    );
\data_buffer_reg[3][18]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(18),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(13),
      I3 => ilmb_data_direct(13),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(13)
    );
\data_buffer_reg[3][19]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(19),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(12),
      I3 => ilmb_data_direct(12),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(12)
    );
\data_buffer_reg[3][1]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(1),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(30),
      I3 => ilmb_data_direct(30),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(30)
    );
\data_buffer_reg[3][20]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(20),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(11),
      I3 => ilmb_data_direct(11),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(11)
    );
\data_buffer_reg[3][21]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(21),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(10),
      I3 => ilmb_data_direct(10),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(10)
    );
\data_buffer_reg[3][22]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(22),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(9),
      I3 => ilmb_data_direct(9),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(9)
    );
\data_buffer_reg[3][23]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(23),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(8),
      I3 => ilmb_data_direct(8),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(8)
    );
\data_buffer_reg[3][24]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(24),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(7),
      I3 => ilmb_data_direct(7),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(7)
    );
\data_buffer_reg[3][25]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(25),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(6),
      I3 => ilmb_data_direct(6),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(6)
    );
\data_buffer_reg[3][26]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(26),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(5),
      I3 => ilmb_data_direct(5),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(5)
    );
\data_buffer_reg[3][27]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(27),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(4),
      I3 => ilmb_data_direct(4),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(4)
    );
\data_buffer_reg[3][28]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(28),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(3),
      I3 => ilmb_data_direct(3),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(3)
    );
\data_buffer_reg[3][29]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(29),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(2),
      I3 => ilmb_data_direct(2),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(2)
    );
\data_buffer_reg[3][2]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(2),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(29),
      I3 => ilmb_data_direct(29),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(29)
    );
\data_buffer_reg[3][30]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(30),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(1),
      I3 => ilmb_data_direct(1),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(1)
    );
\data_buffer_reg[3][31]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(31),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(0),
      I3 => ilmb_data_direct(0),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(0)
    );
\data_buffer_reg[3][3]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(3),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(28),
      I3 => ilmb_data_direct(28),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(28)
    );
\data_buffer_reg[3][4]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(4),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(27),
      I3 => ilmb_data_direct(27),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(27)
    );
\data_buffer_reg[3][5]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(5),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(26),
      I3 => ilmb_data_direct(26),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(26)
    );
\data_buffer_reg[3][6]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(6),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(25),
      I3 => ilmb_data_direct(25),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(25)
    );
\data_buffer_reg[3][7]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(7),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(24),
      I3 => ilmb_data_direct(24),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(24)
    );
\data_buffer_reg[3][8]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(8),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(23),
      I3 => ilmb_data_direct(23),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(23)
    );
\data_buffer_reg[3][9]_srl4_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAF3C00000"
    )
        port map (
      I0 => LOCKSTEP_Master_Out(9),
      I1 => if4_use_bubble,
      I2 => ilmb_data_bubble(22),
      I3 => ilmb_data_direct(22),
      I4 => if4_ilmb_data_strobe,
      I5 => \cur_data_i_reg[31]\,
      O => \^if4_data\(22)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L is
  port (
    if4_push_instr_fetch : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    if4_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L is
  signal \^if4_push_instr_fetch\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  if4_push_instr_fetch <= \^if4_push_instr_fetch\;
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => \Using_FPGA.Native_1\,
      O => \^if4_push_instr_fetch\,
      SRI => \Using_FPGA.Native_2\
    );
\cur_data_i[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^if4_push_instr_fetch\,
      I1 => if4_sel_input(0),
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_312 is
  port (
    of_m2_no_stall_conflict : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_312 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_312;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_312 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m2_write_op_conflict,
      O => of_m2_no_stall_conflict,
      SRI => m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_320 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_320 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_320;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_320 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m1_write_op_conflict,
      O => of_m1_no_stall_conflict,
      SRI => m1_m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_328 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_328 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_328;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_328 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m0_write_op_conflict,
      O => of_m0_no_stall_conflict,
      SRI => m0_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_336 is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_336 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_336;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_336 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_ex_write_op_conflict,
      O => And_OUT,
      SRI => ex_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_415 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m2_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_415 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_415;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_415 is
  signal of_m2_no_stall_conflict : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m2_write_op_conflict,
      O => of_m2_no_stall_conflict,
      SRI => m2_complete_in_later_stage
    );
\Using_FPGA.Native_i_1__214\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFF0FFFFFFFB"
    )
        port map (
      I0 => of_m2_no_stall_conflict,
      I1 => of_m3_stall_conflict,
      I2 => of_m1_no_stall_conflict,
      I3 => And_OUT,
      I4 => of_m0_no_stall_conflict,
      I5 => of_m2_stall_conflict,
      O => m2_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_423 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_423 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_423;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_423 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m1_write_op_conflict,
      O => of_m1_no_stall_conflict,
      SRI => m1_m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_431 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_431 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_431;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_431 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m0_write_op_conflict,
      O => of_m0_no_stall_conflict,
      SRI => m0_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_439 is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_439 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_439;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_439 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_ex_write_op_conflict,
      O => And_OUT,
      SRI => ex_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_508 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m2_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_508 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_508;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_508 is
  signal of_m2_no_stall_conflict : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m2_write_op_conflict,
      O => of_m2_no_stall_conflict,
      SRI => m2_complete_in_later_stage
    );
\Using_FPGA.Native_i_1__212\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFF0FFFFFFFB"
    )
        port map (
      I0 => of_m2_no_stall_conflict,
      I1 => of_m3_stall_conflict,
      I2 => of_m1_no_stall_conflict,
      I3 => And_OUT,
      I4 => of_m0_no_stall_conflict,
      I5 => of_m2_stall_conflict,
      O => m2_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_516 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_516 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_516;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_516 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m1_write_op_conflict,
      O => of_m1_no_stall_conflict,
      SRI => m1_m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_524 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_524 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_524;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_524 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_m0_write_op_conflict,
      O => of_m0_no_stall_conflict,
      SRI => m0_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_AND2B1L_532 is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_AND2B1L_532 : entity is "MB_AND2B1L";
end microblaze_microblaze_0_0_MB_AND2B1L_532;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_AND2B1L_532 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.AND2B1L
    generic map(
      IS_SRI_INVERTED => '0'
    )
        port map (
      DI => of_read_ex_write_op_conflict,
      O => And_OUT,
      SRI => ex_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_DSP48E1 is
  port (
    D : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_2\ : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_DSP48E1 : entity is "MB_DSP48E1";
end microblaze_microblaze_0_0_MB_DSP48E1;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_DSP48E1 is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal m0_bd_p : STD_LOGIC_VECTOR ( 0 to 30 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 0,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => \Using_FPGA.DSP48E1_I1_2\(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => Q(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => '0',
      CEP => \Using_FPGA.DSP48E1_I1_1\,
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0000101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => m0_bd_p(0),
      P(46) => m0_bd_p(1),
      P(45) => m0_bd_p(2),
      P(44) => m0_bd_p(3),
      P(43) => m0_bd_p(4),
      P(42) => m0_bd_p(5),
      P(41) => m0_bd_p(6),
      P(40) => m0_bd_p(7),
      P(39) => m0_bd_p(8),
      P(38) => m0_bd_p(9),
      P(37) => m0_bd_p(10),
      P(36) => m0_bd_p(11),
      P(35) => m0_bd_p(12),
      P(34) => m0_bd_p(13),
      P(33) => m0_bd_p(14),
      P(32) => m0_bd_p(15),
      P(31) => m0_bd_p(16),
      P(30) => m0_bd_p(17),
      P(29) => m0_bd_p(18),
      P(28) => m0_bd_p(19),
      P(27) => m0_bd_p(20),
      P(26) => m0_bd_p(21),
      P(25) => m0_bd_p(22),
      P(24) => m0_bd_p(23),
      P(23) => m0_bd_p(24),
      P(22) => m0_bd_p(25),
      P(21) => m0_bd_p(26),
      P(20) => m0_bd_p(27),
      P(19) => m0_bd_p(28),
      P(18) => m0_bd_p(29),
      P(17) => m0_bd_p(30),
      P(16 downto 0) => D(16 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      PCOUT(47 downto 0) => \Using_FPGA.DSP48E1_I1_0\(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_DSP48E1__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_2\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_DSP48E1__parameterized1\ : entity is "MB_DSP48E1";
end \microblaze_microblaze_0_0_MB_DSP48E1__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_DSP48E1__parameterized1\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal m1_ad_p : STD_LOGIC_VECTOR ( 0 to 47 );
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of \Using_FPGA.DSP48E1_I1\ : label is "{SYNTH-12 {cell *THIS*}}";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 0,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 0,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 0,
      BREG => 0,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 1,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(28) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(27) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(26) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(25) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(24) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(23) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(22) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(21) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(20) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(19) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(18) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(17) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(16) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(15) => \Using_FPGA.DSP48E1_I1_1\(14),
      A(14 downto 0) => \Using_FPGA.DSP48E1_I1_1\(14 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => '0',
      B(16 downto 0) => Q(16 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => '0',
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => '0',
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => \Using_FPGA.DSP48E1_I1_0\,
      CEP => m0_piperun,
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"1010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => m1_ad_p(0),
      P(46) => m1_ad_p(1),
      P(45) => m1_ad_p(2),
      P(44) => m1_ad_p(3),
      P(43) => m1_ad_p(4),
      P(42) => m1_ad_p(5),
      P(41) => m1_ad_p(6),
      P(40) => m1_ad_p(7),
      P(39) => m1_ad_p(8),
      P(38) => m1_ad_p(9),
      P(37) => m1_ad_p(10),
      P(36) => m1_ad_p(11),
      P(35) => m1_ad_p(12),
      P(34) => m1_ad_p(13),
      P(33) => m1_ad_p(14),
      P(32) => m1_ad_p(15),
      P(31) => m1_ad_p(16),
      P(30) => m1_ad_p(17),
      P(29) => m1_ad_p(18),
      P(28) => m1_ad_p(19),
      P(27) => m1_ad_p(20),
      P(26) => m1_ad_p(21),
      P(25) => m1_ad_p(22),
      P(24) => m1_ad_p(23),
      P(23) => m1_ad_p(24),
      P(22) => m1_ad_p(25),
      P(21) => m1_ad_p(26),
      P(20) => m1_ad_p(27),
      P(19) => m1_ad_p(28),
      P(18) => m1_ad_p(29),
      P(17) => m1_ad_p(30),
      P(16) => m1_ad_p(31),
      P(15) => m1_ad_p(32),
      P(14) => m1_ad_p(33),
      P(13) => m1_ad_p(34),
      P(12) => m1_ad_p(35),
      P(11) => m1_ad_p(36),
      P(10) => m1_ad_p(37),
      P(9) => m1_ad_p(38),
      P(8) => m1_ad_p(39),
      P(7) => m1_ad_p(40),
      P(6) => m1_ad_p(41),
      P(5) => m1_ad_p(42),
      P(4) => m1_ad_p(43),
      P(3) => m1_ad_p(44),
      P(2) => m1_ad_p(45),
      P(1) => m1_ad_p(46),
      P(0) => m1_ad_p(47),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => \Using_FPGA.DSP48E1_I1_2\(47 downto 0),
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_DSP48E1__parameterized3\ is
  port (
    m1_mul_result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_DSP48E1__parameterized3\ : entity is "MB_DSP48E1";
end \microblaze_microblaze_0_0_MB_DSP48E1__parameterized3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_DSP48E1__parameterized3\ is
  signal \Using_FPGA.DSP48E1_I1_n_0\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_1\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_10\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_106\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_107\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_108\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_109\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_11\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_110\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_111\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_112\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_113\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_114\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_115\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_116\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_117\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_118\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_119\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_12\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_120\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_121\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_122\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_123\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_124\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_125\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_126\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_127\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_128\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_129\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_13\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_130\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_131\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_132\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_133\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_134\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_135\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_136\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_137\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_138\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_139\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_14\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_140\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_141\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_142\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_143\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_144\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_145\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_146\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_147\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_148\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_149\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_15\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_150\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_151\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_152\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_153\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_16\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_17\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_18\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_19\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_2\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_20\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_21\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_22\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_23\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_24\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_25\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_26\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_27\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_28\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_29\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_3\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_30\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_31\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_32\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_33\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_34\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_35\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_36\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_37\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_38\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_39\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_4\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_40\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_41\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_42\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_43\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_44\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_45\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_46\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_47\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_48\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_49\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_5\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_50\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_51\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_52\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_53\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_54\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_55\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_56\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_57\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_58\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_59\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_6\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_60\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_61\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_62\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_63\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_64\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_65\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_66\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_67\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_68\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_69\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_7\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_70\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_71\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_72\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_73\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_74\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_75\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_76\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_77\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_78\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_79\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_8\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_80\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_81\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_82\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_83\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_84\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_85\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_86\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_87\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_88\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_89\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_9\ : STD_LOGIC;
  signal \Using_FPGA.DSP48E1_I1_n_90\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.DSP48E1_I1\ : label is "PRIMITIVE";
begin
\Using_FPGA.DSP48E1_I1\: unisim.vcomponents.DSP48E1
    generic map(
      ACASCREG => 1,
      ADREG => 1,
      ALUMODEREG => 0,
      AREG => 1,
      AUTORESET_PATDET => "NO_RESET",
      A_INPUT => "DIRECT",
      BCASCREG => 1,
      BREG => 1,
      B_INPUT => "DIRECT",
      CARRYINREG => 0,
      CARRYINSELREG => 0,
      CREG => 0,
      DREG => 1,
      INMODEREG => 0,
      IS_ALUMODE_INVERTED => B"0000",
      IS_CARRYIN_INVERTED => '0',
      IS_CLK_INVERTED => '0',
      IS_INMODE_INVERTED => B"00000",
      IS_OPMODE_INVERTED => B"0000000",
      MASK => X"FFFFFFFFFFFF",
      MREG => 1,
      OPMODEREG => 0,
      PATTERN => X"FFFFFFFFFFFF",
      PREG => 0,
      SEL_MASK => "MASK",
      SEL_PATTERN => "PATTERN",
      USE_DPORT => false,
      USE_MULT => "MULTIPLY",
      USE_PATTERN_DETECT => "NO_PATDET",
      USE_SIMD => "ONE48"
    )
        port map (
      A(29 downto 17) => B"0000000000000",
      A(16 downto 0) => \Using_FPGA.DSP48E1_I1_1\(16 downto 0),
      ACIN(29 downto 0) => B"000000000000000000000000000000",
      ACOUT(29) => \Using_FPGA.DSP48E1_I1_n_24\,
      ACOUT(28) => \Using_FPGA.DSP48E1_I1_n_25\,
      ACOUT(27) => \Using_FPGA.DSP48E1_I1_n_26\,
      ACOUT(26) => \Using_FPGA.DSP48E1_I1_n_27\,
      ACOUT(25) => \Using_FPGA.DSP48E1_I1_n_28\,
      ACOUT(24) => \Using_FPGA.DSP48E1_I1_n_29\,
      ACOUT(23) => \Using_FPGA.DSP48E1_I1_n_30\,
      ACOUT(22) => \Using_FPGA.DSP48E1_I1_n_31\,
      ACOUT(21) => \Using_FPGA.DSP48E1_I1_n_32\,
      ACOUT(20) => \Using_FPGA.DSP48E1_I1_n_33\,
      ACOUT(19) => \Using_FPGA.DSP48E1_I1_n_34\,
      ACOUT(18) => \Using_FPGA.DSP48E1_I1_n_35\,
      ACOUT(17) => \Using_FPGA.DSP48E1_I1_n_36\,
      ACOUT(16) => \Using_FPGA.DSP48E1_I1_n_37\,
      ACOUT(15) => \Using_FPGA.DSP48E1_I1_n_38\,
      ACOUT(14) => \Using_FPGA.DSP48E1_I1_n_39\,
      ACOUT(13) => \Using_FPGA.DSP48E1_I1_n_40\,
      ACOUT(12) => \Using_FPGA.DSP48E1_I1_n_41\,
      ACOUT(11) => \Using_FPGA.DSP48E1_I1_n_42\,
      ACOUT(10) => \Using_FPGA.DSP48E1_I1_n_43\,
      ACOUT(9) => \Using_FPGA.DSP48E1_I1_n_44\,
      ACOUT(8) => \Using_FPGA.DSP48E1_I1_n_45\,
      ACOUT(7) => \Using_FPGA.DSP48E1_I1_n_46\,
      ACOUT(6) => \Using_FPGA.DSP48E1_I1_n_47\,
      ACOUT(5) => \Using_FPGA.DSP48E1_I1_n_48\,
      ACOUT(4) => \Using_FPGA.DSP48E1_I1_n_49\,
      ACOUT(3) => \Using_FPGA.DSP48E1_I1_n_50\,
      ACOUT(2) => \Using_FPGA.DSP48E1_I1_n_51\,
      ACOUT(1) => \Using_FPGA.DSP48E1_I1_n_52\,
      ACOUT(0) => \Using_FPGA.DSP48E1_I1_n_53\,
      ALUMODE(3 downto 0) => B"0000",
      B(17) => Q(14),
      B(16) => Q(14),
      B(15) => Q(14),
      B(14 downto 0) => Q(14 downto 0),
      BCIN(17 downto 0) => B"000000000000000000",
      BCOUT(17) => \Using_FPGA.DSP48E1_I1_n_6\,
      BCOUT(16) => \Using_FPGA.DSP48E1_I1_n_7\,
      BCOUT(15) => \Using_FPGA.DSP48E1_I1_n_8\,
      BCOUT(14) => \Using_FPGA.DSP48E1_I1_n_9\,
      BCOUT(13) => \Using_FPGA.DSP48E1_I1_n_10\,
      BCOUT(12) => \Using_FPGA.DSP48E1_I1_n_11\,
      BCOUT(11) => \Using_FPGA.DSP48E1_I1_n_12\,
      BCOUT(10) => \Using_FPGA.DSP48E1_I1_n_13\,
      BCOUT(9) => \Using_FPGA.DSP48E1_I1_n_14\,
      BCOUT(8) => \Using_FPGA.DSP48E1_I1_n_15\,
      BCOUT(7) => \Using_FPGA.DSP48E1_I1_n_16\,
      BCOUT(6) => \Using_FPGA.DSP48E1_I1_n_17\,
      BCOUT(5) => \Using_FPGA.DSP48E1_I1_n_18\,
      BCOUT(4) => \Using_FPGA.DSP48E1_I1_n_19\,
      BCOUT(3) => \Using_FPGA.DSP48E1_I1_n_20\,
      BCOUT(2) => \Using_FPGA.DSP48E1_I1_n_21\,
      BCOUT(1) => \Using_FPGA.DSP48E1_I1_n_22\,
      BCOUT(0) => \Using_FPGA.DSP48E1_I1_n_23\,
      C(47 downto 0) => B"000000000000000000000000000000000000000000000000",
      CARRYCASCIN => '0',
      CARRYCASCOUT => \Using_FPGA.DSP48E1_I1_n_0\,
      CARRYIN => '0',
      CARRYINSEL(2 downto 0) => B"000",
      CARRYOUT(3) => \Using_FPGA.DSP48E1_I1_n_54\,
      CARRYOUT(2) => \Using_FPGA.DSP48E1_I1_n_55\,
      CARRYOUT(1) => \Using_FPGA.DSP48E1_I1_n_56\,
      CARRYOUT(0) => \Using_FPGA.DSP48E1_I1_n_57\,
      CEA1 => '0',
      CEA2 => \Using_FPGA.DSP48E1_I1_0\,
      CEAD => '0',
      CEALUMODE => '0',
      CEB1 => '0',
      CEB2 => \Using_FPGA.DSP48E1_I1_0\,
      CEC => '0',
      CECARRYIN => '0',
      CECTRL => '0',
      CED => '0',
      CEINMODE => '0',
      CEM => m0_piperun,
      CEP => '0',
      CLK => Clk,
      D(24 downto 0) => B"1111111111111111111111111",
      INMODE(4 downto 0) => B"00000",
      MULTSIGNIN => '0',
      MULTSIGNOUT => \Using_FPGA.DSP48E1_I1_n_1\,
      OPMODE(6 downto 0) => B"0010101",
      OVERFLOW => \Using_FPGA.DSP48E1_I1_n_2\,
      P(47) => \Using_FPGA.DSP48E1_I1_n_58\,
      P(46) => \Using_FPGA.DSP48E1_I1_n_59\,
      P(45) => \Using_FPGA.DSP48E1_I1_n_60\,
      P(44) => \Using_FPGA.DSP48E1_I1_n_61\,
      P(43) => \Using_FPGA.DSP48E1_I1_n_62\,
      P(42) => \Using_FPGA.DSP48E1_I1_n_63\,
      P(41) => \Using_FPGA.DSP48E1_I1_n_64\,
      P(40) => \Using_FPGA.DSP48E1_I1_n_65\,
      P(39) => \Using_FPGA.DSP48E1_I1_n_66\,
      P(38) => \Using_FPGA.DSP48E1_I1_n_67\,
      P(37) => \Using_FPGA.DSP48E1_I1_n_68\,
      P(36) => \Using_FPGA.DSP48E1_I1_n_69\,
      P(35) => \Using_FPGA.DSP48E1_I1_n_70\,
      P(34) => \Using_FPGA.DSP48E1_I1_n_71\,
      P(33) => \Using_FPGA.DSP48E1_I1_n_72\,
      P(32) => \Using_FPGA.DSP48E1_I1_n_73\,
      P(31) => \Using_FPGA.DSP48E1_I1_n_74\,
      P(30) => \Using_FPGA.DSP48E1_I1_n_75\,
      P(29) => \Using_FPGA.DSP48E1_I1_n_76\,
      P(28) => \Using_FPGA.DSP48E1_I1_n_77\,
      P(27) => \Using_FPGA.DSP48E1_I1_n_78\,
      P(26) => \Using_FPGA.DSP48E1_I1_n_79\,
      P(25) => \Using_FPGA.DSP48E1_I1_n_80\,
      P(24) => \Using_FPGA.DSP48E1_I1_n_81\,
      P(23) => \Using_FPGA.DSP48E1_I1_n_82\,
      P(22) => \Using_FPGA.DSP48E1_I1_n_83\,
      P(21) => \Using_FPGA.DSP48E1_I1_n_84\,
      P(20) => \Using_FPGA.DSP48E1_I1_n_85\,
      P(19) => \Using_FPGA.DSP48E1_I1_n_86\,
      P(18) => \Using_FPGA.DSP48E1_I1_n_87\,
      P(17) => \Using_FPGA.DSP48E1_I1_n_88\,
      P(16) => \Using_FPGA.DSP48E1_I1_n_89\,
      P(15) => \Using_FPGA.DSP48E1_I1_n_90\,
      P(14 downto 0) => m1_mul_result(14 downto 0),
      PATTERNBDETECT => \Using_FPGA.DSP48E1_I1_n_3\,
      PATTERNDETECT => \Using_FPGA.DSP48E1_I1_n_4\,
      PCIN(47 downto 0) => PCOUT(47 downto 0),
      PCOUT(47) => \Using_FPGA.DSP48E1_I1_n_106\,
      PCOUT(46) => \Using_FPGA.DSP48E1_I1_n_107\,
      PCOUT(45) => \Using_FPGA.DSP48E1_I1_n_108\,
      PCOUT(44) => \Using_FPGA.DSP48E1_I1_n_109\,
      PCOUT(43) => \Using_FPGA.DSP48E1_I1_n_110\,
      PCOUT(42) => \Using_FPGA.DSP48E1_I1_n_111\,
      PCOUT(41) => \Using_FPGA.DSP48E1_I1_n_112\,
      PCOUT(40) => \Using_FPGA.DSP48E1_I1_n_113\,
      PCOUT(39) => \Using_FPGA.DSP48E1_I1_n_114\,
      PCOUT(38) => \Using_FPGA.DSP48E1_I1_n_115\,
      PCOUT(37) => \Using_FPGA.DSP48E1_I1_n_116\,
      PCOUT(36) => \Using_FPGA.DSP48E1_I1_n_117\,
      PCOUT(35) => \Using_FPGA.DSP48E1_I1_n_118\,
      PCOUT(34) => \Using_FPGA.DSP48E1_I1_n_119\,
      PCOUT(33) => \Using_FPGA.DSP48E1_I1_n_120\,
      PCOUT(32) => \Using_FPGA.DSP48E1_I1_n_121\,
      PCOUT(31) => \Using_FPGA.DSP48E1_I1_n_122\,
      PCOUT(30) => \Using_FPGA.DSP48E1_I1_n_123\,
      PCOUT(29) => \Using_FPGA.DSP48E1_I1_n_124\,
      PCOUT(28) => \Using_FPGA.DSP48E1_I1_n_125\,
      PCOUT(27) => \Using_FPGA.DSP48E1_I1_n_126\,
      PCOUT(26) => \Using_FPGA.DSP48E1_I1_n_127\,
      PCOUT(25) => \Using_FPGA.DSP48E1_I1_n_128\,
      PCOUT(24) => \Using_FPGA.DSP48E1_I1_n_129\,
      PCOUT(23) => \Using_FPGA.DSP48E1_I1_n_130\,
      PCOUT(22) => \Using_FPGA.DSP48E1_I1_n_131\,
      PCOUT(21) => \Using_FPGA.DSP48E1_I1_n_132\,
      PCOUT(20) => \Using_FPGA.DSP48E1_I1_n_133\,
      PCOUT(19) => \Using_FPGA.DSP48E1_I1_n_134\,
      PCOUT(18) => \Using_FPGA.DSP48E1_I1_n_135\,
      PCOUT(17) => \Using_FPGA.DSP48E1_I1_n_136\,
      PCOUT(16) => \Using_FPGA.DSP48E1_I1_n_137\,
      PCOUT(15) => \Using_FPGA.DSP48E1_I1_n_138\,
      PCOUT(14) => \Using_FPGA.DSP48E1_I1_n_139\,
      PCOUT(13) => \Using_FPGA.DSP48E1_I1_n_140\,
      PCOUT(12) => \Using_FPGA.DSP48E1_I1_n_141\,
      PCOUT(11) => \Using_FPGA.DSP48E1_I1_n_142\,
      PCOUT(10) => \Using_FPGA.DSP48E1_I1_n_143\,
      PCOUT(9) => \Using_FPGA.DSP48E1_I1_n_144\,
      PCOUT(8) => \Using_FPGA.DSP48E1_I1_n_145\,
      PCOUT(7) => \Using_FPGA.DSP48E1_I1_n_146\,
      PCOUT(6) => \Using_FPGA.DSP48E1_I1_n_147\,
      PCOUT(5) => \Using_FPGA.DSP48E1_I1_n_148\,
      PCOUT(4) => \Using_FPGA.DSP48E1_I1_n_149\,
      PCOUT(3) => \Using_FPGA.DSP48E1_I1_n_150\,
      PCOUT(2) => \Using_FPGA.DSP48E1_I1_n_151\,
      PCOUT(1) => \Using_FPGA.DSP48E1_I1_n_152\,
      PCOUT(0) => \Using_FPGA.DSP48E1_I1_n_153\,
      RSTA => '0',
      RSTALLCARRYIN => '0',
      RSTALUMODE => '0',
      RSTB => '0',
      RSTC => '0',
      RSTCTRL => '0',
      RSTD => '0',
      RSTINMODE => '0',
      RSTM => '0',
      RSTP => '0',
      UNDERFLOW => \Using_FPGA.DSP48E1_I1_n_5\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR is
  port (
    wb_gpr_wr : out STD_LOGIC;
    wb_reset_reg : out STD_LOGIC;
    wb_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    trace_reg_write_i_reg : in STD_LOGIC;
    trace_reg_write_i_reg_0 : in STD_LOGIC;
    wb_reset : in STD_LOGIC;
    \EX_Op2[0]_i_20\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR is
  signal wb_gpr_write : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[30]_i_10\ : label is "soft_lutpair202";
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_26\ : label is "soft_lutpair202";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\EX_Branch_CMP_Op1[30]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => wb_gpr_write,
      I1 => trace_reg_write_i_reg_0,
      O => \Using_FPGA.Native_0\
    );
\EX_Op2[0]_i_26\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7F77"
    )
        port map (
      I0 => trace_reg_write_i_reg_0,
      I1 => wb_gpr_write,
      I2 => \EX_Op2[0]_i_20\(0),
      I3 => Q(0),
      O => wb_raw_valid_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => wb_gpr_write,
      R => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__29\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFBAAA"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => trace_reg_write_i_reg,
      I2 => trace_reg_write_i_reg_0,
      I3 => wb_gpr_write,
      I4 => wb_reset,
      O => wb_gpr_wr
    );
trace_reg_write_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AAEA"
    )
        port map (
      I0 => wb_reset,
      I1 => wb_gpr_write,
      I2 => trace_reg_write_i_reg_0,
      I3 => trace_reg_write_i_reg,
      O => wb_reset_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_141 is
  port (
    wb_gpr_wr_dbg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_141 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_141;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_141 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => wb_gpr_wr_dbg,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_264 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_iii_3 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_264 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_264;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_264 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_3,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_265 is
  port (
    Prefetch_Almost_Full : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_iii_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    if0_pause : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    Prefetch_Early_Full : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_265 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_265;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_265 is
  signal \^prefetch_almost_full\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Prefetch_Almost_Full <= \^prefetch_almost_full\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_2,
      Q => \^prefetch_almost_full\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__32\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0001010101030103"
    )
        port map (
      I0 => \^prefetch_almost_full\,
      I1 => \Using_FPGA.Native_2\,
      I2 => if0_pause,
      I3 => \Using_FPGA.Native_3\,
      I4 => Prefetch_Early_Full,
      I5 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_1\
    );
\data_buffer_reg[3][0]_srl4_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^prefetch_almost_full\,
      I1 => \Using_FPGA.Native_2\,
      O => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_267 is
  port (
    Prefetch_Early_Full : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_iii_1 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_267 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_267;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_267 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_iii_1,
      Q => Prefetch_Early_Full,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_269 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    sync_reset : in STD_LOGIC;
    sel_input_i : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[31]\ : in STD_LOGIC;
    if4_data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \cur_data_i_reg[0]\ : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_269 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_269;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_269 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_i,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\cur_data_i[0]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(0),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(31),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(0),
      O => D(0)
    );
\cur_data_i[10]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(10),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(21),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(10),
      O => D(10)
    );
\cur_data_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(11),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(20),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(11),
      O => D(11)
    );
\cur_data_i[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(12),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(19),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(12),
      O => D(12)
    );
\cur_data_i[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(13),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(18),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(13),
      O => D(13)
    );
\cur_data_i[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(14),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(17),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(14),
      O => D(14)
    );
\cur_data_i[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(15),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(16),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(15),
      O => D(15)
    );
\cur_data_i[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(16),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(15),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(16),
      O => D(16)
    );
\cur_data_i[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(17),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(14),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(17),
      O => D(17)
    );
\cur_data_i[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(18),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(13),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(18),
      O => D(18)
    );
\cur_data_i[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(19),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(12),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(19),
      O => D(19)
    );
\cur_data_i[1]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(1),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(30),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(1),
      O => D(1)
    );
\cur_data_i[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(20),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(11),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(20),
      O => D(20)
    );
\cur_data_i[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(21),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(10),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(21),
      O => D(21)
    );
\cur_data_i[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(22),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(9),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(22),
      O => D(22)
    );
\cur_data_i[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(23),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(8),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(23),
      O => D(23)
    );
\cur_data_i[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(24),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(7),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(24),
      O => D(24)
    );
\cur_data_i[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(25),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(6),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(25),
      O => D(25)
    );
\cur_data_i[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(26),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(5),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(26),
      O => D(26)
    );
\cur_data_i[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(27),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(4),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(27),
      O => D(27)
    );
\cur_data_i[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(28),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(3),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(28),
      O => D(28)
    );
\cur_data_i[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(29),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(2),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(29),
      O => D(29)
    );
\cur_data_i[2]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(2),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(29),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(2),
      O => D(2)
    );
\cur_data_i[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(30),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(1),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(30),
      O => D(30)
    );
\cur_data_i[31]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(31),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(0),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(31),
      O => D(31)
    );
\cur_data_i[3]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(3),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(28),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(3),
      O => D(3)
    );
\cur_data_i[4]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(4),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(27),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(4),
      O => D(4)
    );
\cur_data_i[5]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(5),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(26),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(5),
      O => D(5)
    );
\cur_data_i[6]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(6),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(25),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(6),
      O => D(6)
    );
\cur_data_i[7]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(7),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(24),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(7),
      O => D(7)
    );
\cur_data_i[8]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(8),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(23),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(8),
      O => D(8)
    );
\cur_data_i[9]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \out\(9),
      I2 => \cur_data_i_reg[31]\,
      I3 => if4_data(22),
      I4 => \cur_data_i_reg[0]\,
      I5 => Q(9),
      O => D(9)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_271 is
  port (
    of_raw_valid : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_atomic_instruction_pair0 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    cur_valid_cmb : in STD_LOGIC;
    Clk : in STD_LOGIC;
    ex_jump_nodelay : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    Dbg_Clean_Stop_reg : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \imm_reg_reg[15]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_271 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_271;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_271 is
  signal \^using_fpga.native_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^of_raw_valid\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_Clean_Stop_i_1 : label is "soft_lutpair164";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of ex_atomic_instruction_pair_i_1 : label is "soft_lutpair164";
begin
  \Using_FPGA.Native_0\(0) <= \^using_fpga.native_0\(0);
  of_raw_valid <= \^of_raw_valid\;
Dbg_Clean_Stop_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"888F"
    )
        port map (
      I0 => ex_jump_nodelay,
      I1 => ex_jump,
      I2 => Dbg_Clean_Stop_reg,
      I3 => \^using_fpga.native_0\(0),
      O => ex_jump_nodelay_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => cur_valid_cmb,
      Q => \^of_raw_valid\,
      R => sync_reset
    );
ex_atomic_instruction_pair_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^using_fpga.native_0\(0),
      I1 => Dbg_Clean_Stop_reg,
      O => ex_atomic_instruction_pair0
    );
\imm_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00020000"
    )
        port map (
      I0 => \^of_raw_valid\,
      I1 => Q(1),
      I2 => Q(0),
      I3 => \imm_reg_reg[15]\,
      I4 => Q(2),
      O => \^using_fpga.native_0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_548 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_548 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_548;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_548 is
  signal D : STD_LOGIC;
  signal m3_div_zero_overflow_of_hold : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m3_div_zero_overflow_of_hold,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002222EEE2"
    )
        port map (
      I0 => m3_div_zero_overflow_of_hold,
      I1 => \Using_FPGA.Native_0\,
      I2 => m3_div_by_zero,
      I3 => m3_div_overflow,
      I4 => \Using_FPGA.Native_1\,
      I5 => \Using_FPGA.Native_2\,
      O => D
    );
of_MSR_cmb_pipemove_inferred_i_9: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF54"
    )
        port map (
      I0 => \of_MSR_i_reg[25]\,
      I1 => m3_div_overflow,
      I2 => m3_div_by_zero,
      I3 => m3_div_zero_overflow_of_hold,
      I4 => \of_MSR_i_reg[25]_0\,
      O => \wb_exception_from_m3_reg_rep__0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_549 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    A0_out : out STD_LOGIC;
    m3_raw_valid_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_549 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_549;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_549 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[29]_i_15\ : label is "soft_lutpair147";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__14\ : label is "soft_lutpair147";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Branch_CMP_Op1[29]_i_15\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \^using_fpga.native_0\,
      O => m3_raw_valid_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_0,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => A0_out
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      O => D
    );
\Using_FPGA.Native_i_1__73\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__83\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_550 is
  port (
    m3_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_550 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_550;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_550 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m3_gpr_write_dbg,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_551 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m3_exception_taken : out STD_LOGIC;
    m3_databus_access_i0 : out STD_LOGIC;
    wb_exception_from_m3_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_exception_from_m3_reg_0 : out STD_LOGIC;
    wb_exception_from_m3_reg_1 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    m3_databus_access_i_reg : in STD_LOGIC;
    m3_databus_access_i_reg_0 : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m2_exception_taken : in STD_LOGIC;
    m1_databus_addr_from_m0_i_2 : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    m3_databus_access_i_reg_1 : in STD_LOGIC;
    m2_exception_from_m1 : in STD_LOGIC;
    wb_abort_div : in STD_LOGIC;
    wb_exception_from_m3_reg_2 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    wb_exception_from_m3_reg_3 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_551 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_551;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_551 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^m3_exception_taken\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of m3_databus_access_i_i_2 : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of \wb_exception_raw_kind[28]_i_1\ : label is "soft_lutpair145";
  attribute SOFT_HLUTNM of \wb_exception_raw_kind[30]_i_1\ : label is "soft_lutpair146";
  attribute SOFT_HLUTNM of \wb_exception_raw_kind[31]_i_1\ : label is "soft_lutpair146";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  m3_exception_taken <= \^m3_exception_taken\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_0,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => m3_databus_access_i_reg,
      I1 => m3_databus_access_i_reg_0,
      I2 => m2_dead_valid_hold,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m1_databus_addr_from_m0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEFEEEEEEEEEE"
    )
        port map (
      I0 => \^m3_exception_taken\,
      I1 => m2_exception_taken,
      I2 => m3_databus_access_i_reg,
      I3 => m1_databus_addr_from_m0_i_2,
      I4 => m1_dead_valid_hold,
      I5 => m1_exception_from_m0,
      O => \wb_exception_from_m3_reg_rep__0_0\
    );
m3_databus_access_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444404444444444"
    )
        port map (
      I0 => \^m3_exception_taken\,
      I1 => m3_databus_access_i_reg_1,
      I2 => m3_databus_access_i_reg,
      I3 => m3_databus_access_i_reg_0,
      I4 => m2_dead_valid_hold,
      I5 => m2_exception_from_m1,
      O => m3_databus_access_i0
    );
m3_databus_access_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m3_dead_valid_hold,
      I2 => wb_exception_from_m3_reg_2,
      I3 => m3_databus_access_i_reg,
      O => \^m3_exception_taken\
    );
wb_exception_from_m3_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004000000"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_from_m3_reg_2,
      I2 => m3_dead_valid_hold,
      I3 => \^using_fpga.native_0\,
      I4 => wb_exception_from_m3_reg_3,
      I5 => sync_reset,
      O => wb_exception_from_m3_reg
    );
\wb_exception_from_m3_rep__0_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004000000"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_from_m3_reg_2,
      I2 => m3_dead_valid_hold,
      I3 => \^using_fpga.native_0\,
      I4 => wb_exception_from_m3_reg_3,
      I5 => sync_reset,
      O => wb_exception_from_m3_reg_1
    );
wb_exception_from_m3_rep_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004000000"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_from_m3_reg_2,
      I2 => m3_dead_valid_hold,
      I3 => \^using_fpga.native_0\,
      I4 => wb_exception_from_m3_reg_3,
      I5 => sync_reset,
      O => wb_exception_from_m3_reg_0
    );
\wb_exception_raw_kind[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(2),
      O => D(2)
    );
\wb_exception_raw_kind[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(1),
      O => D(1)
    );
\wb_exception_raw_kind[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_552 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    A1_out : out STD_LOGIC;
    m2_raw_valid_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_552 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_552;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_552 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[29]_i_13\ : label is "soft_lutpair144";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__61\ : label is "soft_lutpair144";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Branch_CMP_Op1[29]_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \^using_fpga.native_0\,
      O => m2_raw_valid_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_0,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => A1_out
    );
\Using_FPGA.Native_i_1__61\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => E(0),
      I2 => m3_gpr_write,
      I3 => \Using_FPGA.Native_5\,
      O => D
    );
\Using_FPGA.Native_i_1__71\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__81\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_553 is
  port (
    m2_gpr_write_dbg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_gpr_write_dbg : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_553 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_553;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_553 is
  signal \^m2_gpr_write_dbg\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  m2_gpr_write_dbg <= \^m2_gpr_write_dbg\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_0,
      Q => \^m2_gpr_write_dbg\,
      R => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__62\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => \^m2_gpr_write_dbg\,
      I1 => E(0),
      I2 => m3_gpr_write_dbg,
      I3 => \Using_FPGA.Native_1\,
      O => D
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_554 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    m2_databus_access_i0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    m2_exception_taken : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    m2_databus_access_i_reg : in STD_LOGIC;
    m2_raw_valid_reg : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    m1_databus_access : in STD_LOGIC;
    m3_exception_from_m2 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    m2_databus_access_i_reg_0 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m1_databus_addr_from_m0_i_3 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_554 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_554;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_554 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_1\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of m1_databus_addr_from_m0_i_4 : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \m3_exception_raw_kind[28]_i_1\ : label is "soft_lutpair142";
  attribute SOFT_HLUTNM of \m3_exception_raw_kind[30]_i_1\ : label is "soft_lutpair143";
  attribute SOFT_HLUTNM of \m3_exception_raw_kind[31]_i_1\ : label is "soft_lutpair143";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_1\ <= \^using_fpga.native_1\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_1,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__18\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80808F80"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_2\,
      I2 => E(0),
      I3 => m3_exception_from_m2,
      I4 => \Using_FPGA.Native_3\,
      O => D_0
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => m2_databus_access_i_reg,
      I1 => m2_raw_valid_reg,
      I2 => m1_dead_valid_hold,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m1_databus_addr_from_m0_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m2_dead_valid_hold,
      I2 => m1_databus_addr_from_m0_i_3,
      I3 => m2_databus_access_i_reg,
      O => m2_exception_taken
    );
m2_databus_access_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888888888088888"
    )
        port map (
      I0 => m1_databus_access,
      I1 => \^using_fpga.native_1\,
      I2 => m3_exception_from_m2,
      I3 => m3_dead_valid_hold,
      I4 => m2_databus_access_i_reg_0,
      I5 => m2_databus_access_i_reg,
      O => m2_databus_access_i0
    );
m2_databus_access_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7777707777777777"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \^using_fpga.native_0\,
      I2 => m2_databus_access_i_reg,
      I3 => m2_raw_valid_reg,
      I4 => m1_dead_valid_hold,
      I5 => m1_exception_from_m0,
      O => \^using_fpga.native_1\
    );
\m3_exception_raw_kind[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(2),
      O => D(2)
    );
\m3_exception_raw_kind[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(1),
      O => D(1)
    );
\m3_exception_raw_kind[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_555 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_555 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_555;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_555 is
  signal D : STD_LOGIC;
  signal m3_div_zero_overflow_m2_hold : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m3_div_zero_overflow_m2_hold,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0232023202320202"
    )
        port map (
      I0 => m3_div_zero_overflow_m2_hold,
      I1 => E(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_1\,
      I4 => m3_div_overflow,
      I5 => m3_div_by_zero,
      O => D
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFF54FFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => m3_div_overflow,
      I2 => m3_div_by_zero,
      I3 => m3_div_zero_overflow_m2_hold,
      I4 => E(0),
      I5 => \Using_FPGA.Native_3\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_556 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    floating_hold_div_by_zero_reg : out STD_LOGIC;
    floating_hold_div_by_zero_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \floating_hold_div_by_zero__0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    floating_hold_div_by_zero_reg_1 : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    floating_hold_div_by_zero_reg_2 : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    floating_hold_div_overflow_reg : in STD_LOGIC;
    last_cycle : in STD_LOGIC;
    floating_hold_div_overflow_reg_0 : in STD_LOGIC;
    m3_div_overflow_i_reg : in STD_LOGIC;
    m3_div_overflow_i_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_556 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_556;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_556 is
  signal M3_Div_By_Zero_i_2_n_0 : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of M3_Div_By_Zero_i_2 : label is "soft_lutpair141";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of m3_div_overflow_i_i_1 : label is "soft_lutpair141";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
M3_Div_By_Zero_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF8A0080"
    )
        port map (
      I0 => M3_Div_By_Zero_i_2_n_0,
      I1 => \floating_hold_div_by_zero__0\,
      I2 => E(0),
      I3 => floating_hold_div_by_zero_reg_1,
      I4 => m3_div_by_zero,
      I5 => floating_hold_div_by_zero_reg_2,
      O => floating_hold_div_by_zero_reg_0
    );
M3_Div_By_Zero_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A3"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m3_div_overflow_i_reg,
      I2 => E(0),
      O => M3_Div_By_Zero_i_2_n_0
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
floating_hold_div_by_zero_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF2A002A"
    )
        port map (
      I0 => \floating_hold_div_by_zero__0\,
      I1 => \^using_fpga.native_0\,
      I2 => E(0),
      I3 => floating_hold_div_by_zero_reg_1,
      I4 => EX_Op1_Zero,
      I5 => floating_hold_div_by_zero_reg_2,
      O => floating_hold_div_by_zero_reg
    );
floating_hold_div_overflow_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000F077F000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => E(0),
      I2 => floating_hold_div_overflow_reg,
      I3 => last_cycle,
      I4 => floating_hold_div_overflow_reg_0,
      I5 => floating_hold_div_by_zero_reg_2,
      O => \Using_FPGA.Native_1\
    );
m3_div_overflow_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFA3"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m3_div_overflow_i_reg,
      I2 => E(0),
      I3 => last_cycle,
      I4 => m3_div_overflow_i_reg_0,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_557 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    A2_out : out STD_LOGIC;
    m1_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_557 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_557;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_557 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Branch_CMP_Op1[29]_i_10\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \^using_fpga.native_0\,
      O => m1_raw_valid_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => A2_out
    );
\Using_FPGA.Native_i_1__69\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__79\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_558 is
  port (
    m1_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_558 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_558;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_558 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m1_gpr_write_dbg,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_559 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    A_N201_out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_exception_from_m1 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_raw_valid_reg : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_raw_valid_reg_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_559 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_559;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_559 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \m2_exception_raw_kind[28]_i_1\ : label is "soft_lutpair140";
  attribute SOFT_HLUTNM of \m2_exception_raw_kind[30]_i_1\ : label is "soft_lutpair140";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_1,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__17\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20202F20"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => E(0),
      I3 => m2_exception_from_m1,
      I4 => \Using_FPGA.Native_2\(0),
      O => D_0
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => m1_raw_valid_reg,
      I1 => m0_dead_valid_hold,
      I2 => m1_raw_valid_reg_0,
      O => A_N201_out
    );
\m2_exception_raw_kind[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(2),
      O => D(2)
    );
\m2_exception_raw_kind[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(1),
      O => D(1)
    );
\m2_exception_raw_kind[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => Q(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_560 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_560 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_560;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_560 is
  signal D : STD_LOGIC;
  signal m3_div_zero_overflow_m1_hold : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m3_div_zero_overflow_m1_hold,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__28\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002222EEE2"
    )
        port map (
      I0 => m3_div_zero_overflow_m1_hold,
      I1 => \Using_FPGA.Native_0\,
      I2 => m3_div_by_zero,
      I3 => m3_div_overflow,
      I4 => \Using_FPGA.Native_1\,
      I5 => E(0),
      O => D
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFF54FFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => m3_div_overflow,
      I2 => m3_div_by_zero,
      I3 => m3_div_zero_overflow_m1_hold,
      I4 => E(0),
      I5 => \Using_FPGA.Native_3\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_561 is
  port (
    m1_is_div_instr_i : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_561 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_561;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_561 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m1_is_div_instr_i,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_562 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_Interrupt_raw_reg : out STD_LOGIC;
    m1_databus_access_from_m00 : out STD_LOGIC;
    ex_reservation_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    m1_databus_access_from_m0_reg : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_databus_access_from_m0_reg_0 : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    m0_databus_read_i0 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_562 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_562;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_562 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => m1_databus_access_from_m0_reg,
      I4 => ex_dead_valid_hold,
      O => ex_Interrupt_raw_reg
    );
\Using_FPGA.Native_i_3__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF04FF"
    )
        port map (
      I0 => ex_reservation,
      I1 => \Using_FPGA.Native_4\,
      I2 => m0_databus_read_i0,
      I3 => \Using_FPGA.Native_5\,
      I4 => m1_databus_access_from_m0_reg,
      I5 => ex_dead_valid_hold,
      O => ex_reservation_reg
    );
m1_databus_access_from_m0_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0010"
    )
        port map (
      I0 => m1_databus_access_from_m0_reg,
      I1 => m0_dead_valid_hold,
      I2 => \^using_fpga.native_0\,
      I3 => m1_databus_access_from_m0_reg_0,
      O => m1_databus_access_from_m00
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_563 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    A3_out : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    m0_raw_valid_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_563 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_563;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_563 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Branch_CMP_Op1[29]_i_17\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \^using_fpga.native_0\,
      O => A3_out
    );
\Using_FPGA.Native_i_1__67\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \^using_fpga.native_0\,
      O => m0_raw_valid_reg
    );
\Using_FPGA.Native_i_1__77\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \^using_fpga.native_0\,
      O => m0_raw_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_564 is
  port (
    m0_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_564 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_564;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_564 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m0_gpr_write_dbg,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_565 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \p_43_out__4\ : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    wb_exception_from_m3_reg_rep : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    ex_dead_valid_hold_reg : out STD_LOGIC;
    wb_exception_from_m3_reg_rep_0 : out STD_LOGIC;
    of_next_ex_valid : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    A_N201_out : in STD_LOGIC;
    m3_exception_taken : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    p_48_out : in STD_LOGIC;
    ex_first_cycle_reg : in STD_LOGIC;
    ex_raw_valid_reg : in STD_LOGIC;
    ex_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    m1_databus_addr_from_m0_reg : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_0 : in STD_LOGIC;
    of_read_imm_reg_raw_reg : in STD_LOGIC;
    of_raw_valid : in STD_LOGIC;
    of_dead_valid_hold : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_jump_nodelay : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    of_read_imm_reg_raw_reg_0 : in STD_LOGIC;
    of_read_imm_reg_raw_reg_1 : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_1 : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_2 : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_exception_raw_kind : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_565 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_565;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_565 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^ex_dead_valid_hold_reg\ : STD_LOGIC;
  signal \^m0_raw_valid_reg\ : STD_LOGIC;
  signal \^p_43_out__4\ : STD_LOGIC;
  signal \^wb_exception_from_m3_reg_rep\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of ex_first_cycle_i_1 : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of ex_valid_keep_i_1 : label is "soft_lutpair138";
  attribute SOFT_HLUTNM of \m1_exception_raw_kind[28]_i_1\ : label is "soft_lutpair139";
  attribute SOFT_HLUTNM of \m1_exception_raw_kind[31]_i_1\ : label is "soft_lutpair139";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  ex_dead_valid_hold_reg <= \^ex_dead_valid_hold_reg\;
  m0_raw_valid_reg <= \^m0_raw_valid_reg\;
  \p_43_out__4\ <= \^p_43_out__4\;
  wb_exception_from_m3_reg_rep <= \^wb_exception_from_m3_reg_rep\;
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000070000000000"
    )
        port map (
      I0 => A_N201_out,
      I1 => \^using_fpga.native_0\,
      I2 => m3_exception_taken,
      I3 => \Using_FPGA.Native_2\,
      I4 => wb_exception_taken,
      I5 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      O => \^p_43_out__4\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_single_step_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F05555F0F030F0"
    )
        port map (
      I0 => single_Step_N,
      I1 => \^p_43_out__4\,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      I3 => E(0),
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      I5 => p_48_out,
      O => single_Step_N_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_2,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101010100FF0000"
    )
        port map (
      I0 => \^m0_raw_valid_reg\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_3\,
      I3 => in0,
      I4 => m1_databus_addr_from_m0_reg,
      I5 => E(0),
      O => D_0
    );
\Using_FPGA.Native_i_1__19\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80808F80"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => A_N201_out,
      I2 => in0,
      I3 => m1_exception_from_m0,
      I4 => \Using_FPGA.Native_4\(0),
      O => D_1
    );
ex_first_cycle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0100"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep\,
      I1 => ex_first_cycle_reg,
      I2 => sync_reset,
      I3 => ex_raw_valid_reg,
      O => wb_exception_from_m3_reg_rep_0
    );
ex_raw_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100010001110100"
    )
        port map (
      I0 => sync_reset,
      I1 => ex_first_cycle_reg,
      I2 => \^wb_exception_from_m3_reg_rep\,
      I3 => ex_raw_valid_reg,
      I4 => ex_raw_valid_reg_0,
      I5 => E(0),
      O => \Use_Async_Reset.sync_reset_reg\
    );
ex_valid_keep_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep\,
      O => of_next_ex_valid
    );
ex_valid_keep_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFEFFFEFFFEF"
    )
        port map (
      I0 => \^ex_dead_valid_hold_reg\,
      I1 => ex_first_cycle_reg,
      I2 => of_raw_valid,
      I3 => of_dead_valid_hold,
      I4 => ex_jump,
      I5 => ex_jump_nodelay,
      O => \^wb_exception_from_m3_reg_rep\
    );
m1_databus_addr_from_m0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000040000"
    )
        port map (
      I0 => \^m0_raw_valid_reg\,
      I1 => m1_databus_addr_from_m0_reg,
      I2 => m0_dead_valid_hold,
      I3 => m1_databus_addr_from_m0_reg_0,
      I4 => in0,
      I5 => sync_reset,
      O => \Using_FPGA.Native_1\
    );
m1_databus_addr_from_m0_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0200"
    )
        port map (
      I0 => m1_databus_addr_from_m0_reg_1,
      I1 => m0_dead_valid_hold,
      I2 => m1_databus_addr_from_m0_reg_0,
      I3 => \^using_fpga.native_0\,
      I4 => m1_databus_addr_from_m0_reg_2,
      O => \^m0_raw_valid_reg\
    );
\m1_exception_raw_kind[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_exception_raw_kind(2),
      O => D(2)
    );
\m1_exception_raw_kind[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_exception_raw_kind(1),
      O => D(1)
    );
\m1_exception_raw_kind[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_exception_raw_kind(0),
      O => D(0)
    );
of_read_imm_reg_raw_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^ex_dead_valid_hold_reg\,
      I1 => m1_databus_addr_from_m0_reg_0,
      I2 => sync_reset,
      I3 => of_read_imm_reg_raw_reg,
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
of_read_imm_reg_raw_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF10101000"
    )
        port map (
      I0 => ex_dead_valid_hold,
      I1 => m1_databus_addr_from_m0_reg_0,
      I2 => ex_raw_valid_reg_0,
      I3 => of_read_imm_reg_raw_reg_0,
      I4 => of_read_imm_reg_raw_reg_1,
      I5 => \^m0_raw_valid_reg\,
      O => \^ex_dead_valid_hold_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_566 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_566 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_566;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_566 is
  signal D : STD_LOGIC;
  signal m3_div_zero_overflow_m0_hold : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m3_div_zero_overflow_m0_hold,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__27\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002222EEE2"
    )
        port map (
      I0 => m3_div_zero_overflow_m0_hold,
      I1 => \Using_FPGA.Native_0\,
      I2 => m3_div_by_zero,
      I3 => m3_div_overflow,
      I4 => \Using_FPGA.Native_1\,
      I5 => in0,
      O => D
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFF54FFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => m3_div_overflow,
      I2 => m3_div_by_zero,
      I3 => m3_div_zero_overflow_m0_hold,
      I4 => in0,
      I5 => \Using_FPGA.Native_3\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_567 is
  port (
    m0_is_div_instr_i : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_567 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_567;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_567 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => m0_is_div_instr_i,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_572 is
  port (
    ex_jump_hold : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    of_raw_valid : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_572 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_572;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_572 is
  signal \^ex_jump_hold\ : STD_LOGIC;
  signal ex_jump_hold_next6_out : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  ex_jump_hold <= \^ex_jump_hold\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => ex_jump_hold_next6_out,
      Q => \^ex_jump_hold\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__34\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"45"
    )
        port map (
      I0 => \^ex_jump_hold\,
      I1 => of_raw_valid,
      I2 => ex_branch_with_delayslot,
      O => \Using_FPGA.Native_0\
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => \^ex_jump_hold\,
      I1 => \Using_FPGA.Native_1\,
      I2 => E(0),
      I3 => \Using_FPGA.Native_2\,
      O => ex_jump_hold_next6_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_580 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_sleep_i0 : out STD_LOGIC;
    ex_mbar_decode_reg : out STD_LOGIC;
    ex_mbar_decode_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    ex_mbar_wait_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_hibernate_i_reg : in STD_LOGIC;
    ex_hibernate_i_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_580 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_580;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_580 is
  signal \^use_async_reset.sync_reset_reg\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Use_Async_Reset.sync_reset_reg\ <= \^use_async_reset.sync_reset_reg\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \^using_fpga.native_0\,
      R => \^use_async_reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_1__101\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000DDDF"
    )
        port map (
      I0 => ex_hibernate_i_reg,
      I1 => \^using_fpga.native_0\,
      I2 => ex_mbar_wait_1,
      I3 => ex_first_cycle,
      I4 => ex_mbar_sleep,
      O => ex_mbar_decode_reg_0
    );
\Using_FPGA.Native_i_1__208\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => \Using_FPGA.Native_2\,
      O => \^use_async_reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000DDDF"
    )
        port map (
      I0 => ex_hibernate_i_reg,
      I1 => \^using_fpga.native_0\,
      I2 => ex_mbar_wait_1,
      I3 => ex_first_cycle,
      I4 => ex_mbar_sleep,
      O => ex_mbar_decode_reg
    );
ex_hibernate_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA888AAAAA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => \^using_fpga.native_0\,
      I2 => ex_mbar_wait_1,
      I3 => ex_first_cycle,
      I4 => ex_hibernate_i_reg,
      I5 => ex_hibernate_i_reg_0,
      O => ex_sleep_i0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_581 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    A4_out : out STD_LOGIC;
    ex_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_581 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_581;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_581 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\EX_Op3[0]_i_11\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"7"
    )
        port map (
      I0 => \Using_FPGA.Native_4\,
      I1 => \^using_fpga.native_0\,
      O => ex_raw_valid_reg
    );
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^using_fpga.native_0\,
      R => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => A4_out
    );
\Using_FPGA.Native_i_1__65\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__75\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_4\,
      O => \Using_FPGA.Native_2\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_582 is
  port (
    ex_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_582 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_582;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_582 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => ex_gpr_write_dbg,
      R => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_583 is
  port (
    m3_div_zero_overflow_ex_hold : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_583 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_583;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_583 is
  signal D : STD_LOGIC;
  signal \^m3_div_zero_overflow_ex_hold\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  m3_div_zero_overflow_ex_hold <= \^m3_div_zero_overflow_ex_hold\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D,
      Q => \^m3_div_zero_overflow_ex_hold\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__26\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002222EEE2"
    )
        port map (
      I0 => \^m3_div_zero_overflow_ex_hold\,
      I1 => \Using_FPGA.Native_0\,
      I2 => m3_div_by_zero,
      I3 => m3_div_overflow,
      I4 => \Using_FPGA.Native_1\,
      I5 => E(0),
      O => D
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_700 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_700 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_700;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_700 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D_2,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_701 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_701 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_701;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_701 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_702 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_702 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_702;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_702 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_703 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_703 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_703;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_703 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_704 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_704 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_704;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_704 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_705 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_705 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_705;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_705 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_706 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_706 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_706;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_706 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_707 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_707 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_707;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_707 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_708 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_708 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_708;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_708 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_709 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_709 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_709;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_709 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_710 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_710 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_710;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_710 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_711 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_711 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_711;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_711 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_712 is
  port (
    EX_CarryIn : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_712 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_712;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_712 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => EX_CarryIn,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_713 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_713 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_713;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_713 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_714 is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_714 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_714;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_714 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => ex_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_715 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_715 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_715;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_715 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_716 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_716 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_716;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_716 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_717 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_717 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_717;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_717 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_718 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_718 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_718;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_718 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_719 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_719 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_719;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_719 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_720 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_720 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_720;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_720 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_721 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_721 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_721;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_721 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_722 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_722 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_722;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_722 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_723 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_723 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_723;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_723 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_724 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_724 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_724;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_724 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_725 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_725 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_725;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_725 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_726 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_726 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_726;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_726 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_727 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_727 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_727;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_727 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_728 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_728 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_728;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_728 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_729 is
  port (
    m0_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_729 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_729;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_729 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m0_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_730 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_730 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_730;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_730 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_731 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_731 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_731;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_731 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_732 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_732 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_732;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_732 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_733 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_733 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_733;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_733 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_734 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_734 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_734;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_734 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_735 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_735 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_735;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_735 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_736 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_736 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_736;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_736 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_737 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_737 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_737;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_737 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_738 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_738 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_738;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_738 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_739 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_739 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_739;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_739 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_740 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_740 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_740;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_740 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_741 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_741 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_741;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_741 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_742 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_742 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_742;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_742 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_743 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_743 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_743;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_743 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_744 is
  port (
    m1_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_744 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_744;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_744 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m1_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_745 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_745 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_745;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_745 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_746 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_746 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_746;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_746 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_747 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_747 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_747;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_747 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_748 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_748 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_748;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_748 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_749 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_749 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_749;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_749 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_750 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_750 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_750;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_750 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_751 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_751 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_751;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_751 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_752 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_752 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_752;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_752 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_753 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_753 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_753;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_753 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_754 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_754 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_754;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_754 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_755 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_755 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_755;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_755 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_756 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_756 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_756;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_756 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_757 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_757 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_757;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_757 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_758 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_758 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_758;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_758 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_759 is
  port (
    m2_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_759 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_759;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_759 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m2_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_760 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_760 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_760;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_760 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_761 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_761 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_761;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_761 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_762 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_762 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_762;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_762 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_763 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_763 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_763;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_763 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_764 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_764 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_764;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_764 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_765 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_765 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_765;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_765 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_766 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_766 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_766;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_766 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_767 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_767 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_767;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_767 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_768 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    wb_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_div_zero_overflow : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_768 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_768;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_768 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_2\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__139\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE2"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_3\,
      I2 => wb_msr(0),
      I3 => wb_div_zero_overflow,
      O => \Using_FPGA.Native_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_769 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_769 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_769;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_769 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_770 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_770 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_770;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_770 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_771 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_771 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_771;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_771 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_772 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_772 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_772;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_772 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_1\,
      Q => \Using_FPGA.Native_0\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_773 is
  port (
    m3_msr : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_773 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_773;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_773 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_msr(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_774 is
  port (
    m3_MSR_i : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_774 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_774;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_774 is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => m3_MSR_i(0),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_775 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_775 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_775;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_775 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__156_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__156\ : label is "soft_lutpair95";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__157\ : label is "soft_lutpair95";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__156_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__156\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__156_n_0\
    );
\Using_FPGA.Native_i_1__157\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__169\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__181\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__193\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[17]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_776 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_776 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_776;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_776 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__155_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__155\ : label is "soft_lutpair96";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__158\ : label is "soft_lutpair96";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__155_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__155\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__155_n_0\
    );
\Using_FPGA.Native_i_1__158\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__170\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__182\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__194\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[18]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_777 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_777 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_777;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_777 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__154_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__154\ : label is "soft_lutpair97";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__159\ : label is "soft_lutpair97";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__154_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__154\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__154_n_0\
    );
\Using_FPGA.Native_i_1__159\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__171\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__183\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__195\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[19]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_778 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_778 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_778;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_778 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__153_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__153\ : label is "soft_lutpair98";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__160\ : label is "soft_lutpair98";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__153_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__153\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__153_n_0\
    );
\Using_FPGA.Native_i_1__160\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__172\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__184\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__196\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[20]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_779 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_779 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_779;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_779 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__152_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__152\ : label is "soft_lutpair99";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__161\ : label is "soft_lutpair99";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__152_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__152\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__152_n_0\
    );
\Using_FPGA.Native_i_1__161\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__173\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__185\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__197\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[21]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_780 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_780 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_780;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_780 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__151_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__151\ : label is "soft_lutpair100";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__162\ : label is "soft_lutpair100";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__151_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__151\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__151_n_0\
    );
\Using_FPGA.Native_i_1__162\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__174\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__186\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__198\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[22]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_781 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_781 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_781;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_781 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__150_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__150\ : label is "soft_lutpair101";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__163\ : label is "soft_lutpair101";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__150_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__150\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__150_n_0\
    );
\Using_FPGA.Native_i_1__163\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__175\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__187\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__199\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[23]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_782 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_782 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_782;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_782 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__149_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__149\ : label is "soft_lutpair102";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__164\ : label is "soft_lutpair102";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__149_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__149\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__149_n_0\
    );
\Using_FPGA.Native_i_1__164\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__176\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__188\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__200\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[24]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_783 is
  port (
    wb_msr : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \data_rd_reg_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[25]_0\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_783 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_783;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_783 is
  signal \^wb_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  wb_msr(0) <= \^wb_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^wb_msr\(0),
      R => sync_reset
    );
\data_rd_reg[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB8B8B800B8B8B8"
    )
        port map (
      I0 => \^wb_msr\(0),
      I1 => read_register_MSR_1,
      I2 => \data_rd_reg_reg[25]\(0),
      I3 => wb_gpr_wr_dbg,
      I4 => \data_rd_reg_reg[25]_0\,
      I5 => WB_Fwd(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_784 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_784 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_784;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_784 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__148_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__148\ : label is "soft_lutpair103";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__165\ : label is "soft_lutpair103";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__148_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__148\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__148_n_0\
    );
\Using_FPGA.Native_i_1__165\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__177\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__189\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__201\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[26]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_785 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_785 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_785;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_785 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__147_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__147\ : label is "soft_lutpair104";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__166\ : label is "soft_lutpair104";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__147_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__147\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__147_n_0\
    );
\Using_FPGA.Native_i_1__166\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__178\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__190\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__202\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[27]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_786 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \data_rd_reg_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[28]_0\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_msr_clear_bip : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \of_MSR_i_reg[28]\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_786 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_786;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_786 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_6\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__141\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => wb_msr_clear_bip,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_8\,
      I4 => m2_piperun,
      I5 => \Using_FPGA.Native_9\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__142\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => wb_msr_clear_bip,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_10\,
      I4 => m1_piperun,
      I5 => \Using_FPGA.Native_8\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__143\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => wb_msr_clear_bip,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_11\,
      I4 => m0_piperun,
      I5 => \Using_FPGA.Native_10\,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__144\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => wb_msr_clear_bip,
      I2 => \Using_FPGA.Native_7\,
      I3 => \Using_FPGA.Native_9\,
      I4 => m3_piperun,
      I5 => \Using_FPGA.Native_12\,
      O => \Using_FPGA.Native_4\
    );
\data_rd_reg[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB8B8B800B8B8B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => read_register_MSR_1,
      I2 => \data_rd_reg_reg[28]\(0),
      I3 => wb_gpr_wr_dbg,
      I4 => \data_rd_reg_reg[28]_0\,
      I5 => WB_Fwd(0),
      O => D(0)
    );
\of_MSR_i[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => wb_msr_clear_bip,
      I2 => \of_MSR_i_reg[28]\,
      I3 => \out\(0),
      I4 => of_piperun,
      I5 => \of_MSR_i_reg[28]_0\(0),
      O => \Using_FPGA.Native_5\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_787 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \data_rd_reg_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[29]_0\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_787 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_787;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_787 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__146_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__146\ : label is "soft_lutpair105";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__167\ : label is "soft_lutpair105";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__146_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__146\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_i_1__146_n_0\
    );
\Using_FPGA.Native_i_1__167\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_8\,
      I3 => m3_piperun,
      I4 => \Using_FPGA.Native_7\,
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__179\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => EX_CarryIn,
      I3 => m0_piperun,
      I4 => \Using_FPGA.Native_9\,
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__191\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_9\,
      I3 => m1_piperun,
      I4 => \Using_FPGA.Native_10\,
      O => \Using_FPGA.Native_4\
    );
\Using_FPGA.Native_i_1__203\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \Using_FPGA.Native_10\,
      I3 => m2_piperun,
      I4 => \Using_FPGA.Native_8\,
      O => \Using_FPGA.Native_5\
    );
\data_rd_reg[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB8B8B800B8B8B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => read_register_MSR_1,
      I2 => \data_rd_reg_reg[29]\(0),
      I3 => wb_gpr_wr_dbg,
      I4 => \data_rd_reg_reg[29]_0\,
      I5 => WB_Fwd(0),
      O => D(0)
    );
\of_MSR_i[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_6\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[29]\(0),
      O => \Using_FPGA.Native_1\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_788 is
  port (
    wb_msr : out STD_LOGIC_VECTOR ( 0 to 0 );
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[30]_0\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_788 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_788;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_788 is
  signal \^wb_msr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  wb_msr(0) <= \^wb_msr\(0);
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_0\,
      Q => \^wb_msr\(0),
      R => sync_reset
    );
\data_rd_reg[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFB8B8B800B8B8B8"
    )
        port map (
      I0 => \^wb_msr\(0),
      I1 => read_register_MSR_1,
      I2 => \data_rd_reg_reg[30]\(0),
      I3 => wb_gpr_wr_dbg,
      I4 => \data_rd_reg_reg[30]_0\,
      I5 => WB_Fwd(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDR_789 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m3_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    \out\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_piperun : in STD_LOGIC;
    ex_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_piperun : in STD_LOGIC;
    m0_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_piperun : in STD_LOGIC;
    m1_MSR_i : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDR_789 : entity is "MB_FDR";
end microblaze_microblaze_0_0_MB_FDR_789;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDR_789 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__145_n_0\ : STD_LOGIC;
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDR";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__145\ : label is "soft_lutpair106";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__168\ : label is "soft_lutpair106";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
\Using_FPGA.Native\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Using_FPGA.Native_i_1__145_n_0\,
      Q => \^using_fpga.native_0\,
      R => sync_reset
    );
\Using_FPGA.Native_i_1__145\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m3_MSR_i(0),
      O => \Using_FPGA.Native_i_1__145_n_0\
    );
\Using_FPGA.Native_i_1__168\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m2_MSR_i(0),
      I3 => m3_piperun,
      I4 => m3_MSR_i(0),
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__180\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => ex_MSR_i(0),
      I3 => m0_piperun,
      I4 => m0_MSR_i(0),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__192\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m0_MSR_i(0),
      I3 => m1_piperun,
      I4 => m1_MSR_i(0),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__204\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => m1_MSR_i(0),
      I3 => m2_piperun,
      I4 => m2_MSR_i(0),
      O => \Using_FPGA.Native_4\
    );
\of_MSR_i[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Using_FPGA.Native_5\,
      I2 => \out\(0),
      I3 => of_piperun,
      I4 => \of_MSR_i_reg[31]\(0),
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_FDS is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    sel_input_depth : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_FDS : entity is "MB_FDS";
end microblaze_microblaze_0_0_MB_FDS;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_FDS is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "FDS";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.FDSE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sel_input_depth,
      Q => \Using_FPGA.Native_0\,
      S => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT4 is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    I2 : in STD_LOGIC;
    alu_AddSub_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT4 : entity is "MB_LUT4";
end microblaze_microblaze_0_0_MB_LUT4;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT4 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FA0A"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[0]\(0),
      I2 => I2,
      I3 => alu_AddSub_1,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1\ is
  port (
    New_Q_Sel_31 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \R_reg[32]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \R_reg[32]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => New_Q_Sel_31
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_623\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_623\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_623\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_623\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[10]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_625\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_625\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_625\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_625\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[11]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_627\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_627\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_627\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_627\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[12]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_629\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_629\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_629\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_629\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[13]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_631\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_631\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_631\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_631\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[14]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_633\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_633\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_633\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_633\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[15]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_635\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_635\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_635\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_635\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[16]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_637\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_637\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_637\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_637\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[17]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_639\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_639\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_639\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_639\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[18]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_641\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_641\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_641\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_641\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[19]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_643\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_643\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_643\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_643\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[1]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_645\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_645\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_645\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_645\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[20]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_647\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_647\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_647\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_647\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[21]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_649\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_649\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_649\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_649\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[22]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_651\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_651\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_651\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_651\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[23]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_653\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_653\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_653\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_653\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[24]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_655\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_655\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_655\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_655\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[25]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_657\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_657\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_657\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_657\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[26]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_659\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_659\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_659\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_659\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[27]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_661\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_661\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_661\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_661\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[28]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_663\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_663\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_663\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_663\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[29]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_665\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_665\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_665\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_665\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[2]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_667\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_667\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_667\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_667\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[30]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_669\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_669\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_669\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_669\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[31]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_671\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_671\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_671\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_671\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[3]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_673\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_673\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_673\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_673\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[4]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_675\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_675\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_675\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_675\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[5]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_677\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_677\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_677\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_677\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[6]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_679\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_679\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_679\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_679\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[7]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_681\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_681\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_681\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_681\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[8]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT4__parameterized1_683\ is
  port (
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Q_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    New_Q_Carry : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_683\ : entity is "MB_LUT4";
end \microblaze_microblaze_0_0_MB_LUT4__parameterized1_683\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT4__parameterized1_683\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"3C5A"
    )
        port map (
      I0 => Q(0),
      I1 => \Q_reg[9]\(0),
      I2 => New_Q_Carry(0),
      I3 => ex_start_div,
      O => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6 is
  port (
    sel_input_iii_3 : out STD_LOGIC;
    Prefetch_Almost_Full : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6 : entity is "MB_LUT6";
end microblaze_microblaze_0_0_MB_LUT6;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => Prefetch_Almost_Full,
      I1 => \Using_FPGA.Native_0\,
      I2 => '0',
      I3 => if4_push_instr_fetch,
      I4 => \Using_FPGA.Native_1\,
      I5 => Clear_Buffer,
      O => sel_input_iii_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[9]\(1),
      I2 => \m0_databus_addr_i_reg[9]_0\(0),
      I3 => \m0_databus_addr_i_reg[9]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_266 is
  port (
    sel_input_iii_2 : out STD_LOGIC;
    Prefetch_Early_Full : in STD_LOGIC;
    Prefetch_Almost_Full : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_266 : entity is "MB_LUT6";
end microblaze_microblaze_0_0_MB_LUT6_266;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_266 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => Prefetch_Early_Full,
      I1 => Prefetch_Almost_Full,
      I2 => \Using_FPGA.Native_0\,
      I3 => if4_push_instr_fetch,
      I4 => \Using_FPGA.Native_1\,
      I5 => Clear_Buffer,
      O => sel_input_iii_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_268 is
  port (
    sel_input_iii_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    Prefetch_Early_Full : in STD_LOGIC;
    Prefetch_Almost_Full : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_268 : entity is "MB_LUT6";
end microblaze_microblaze_0_0_MB_LUT6_268;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_268 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => Prefetch_Early_Full,
      I2 => Prefetch_Almost_Full,
      I3 => if4_push_instr_fetch,
      I4 => \Using_FPGA.Native_1\,
      I5 => Clear_Buffer,
      O => sel_input_iii_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_270 is
  port (
    sel_input_iii_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Prefetch_Early_Full : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_270 : entity is "MB_LUT6";
end microblaze_microblaze_0_0_MB_LUT6_270;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_270 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000CCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Prefetch_Early_Full,
      I3 => if4_push_instr_fetch,
      I4 => \Using_FPGA.Native_2\,
      I5 => Clear_Buffer,
      O => sel_input_iii_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_855 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[8]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_855 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_855;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_855 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[8]\(1),
      I2 => \m0_databus_addr_i_reg[8]_0\(0),
      I3 => \m0_databus_addr_i_reg[8]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_857 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[7]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_857 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_857;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_857 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[7]\(1),
      I2 => \m0_databus_addr_i_reg[7]_0\(0),
      I3 => \m0_databus_addr_i_reg[7]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_859 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_859 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_859;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_859 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[6]\(1),
      I2 => \m0_databus_addr_i_reg[6]_0\(0),
      I3 => \m0_databus_addr_i_reg[6]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_861 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[5]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_861 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_861;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_861 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[5]\(1),
      I2 => \m0_databus_addr_i_reg[5]_0\(0),
      I3 => \m0_databus_addr_i_reg[5]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_863 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[4]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_863 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_863;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_863 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[4]\(1),
      I2 => \m0_databus_addr_i_reg[4]_0\(0),
      I3 => \m0_databus_addr_i_reg[4]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_865 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[3]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_865 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_865;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_865 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[3]\(1),
      I2 => \m0_databus_addr_i_reg[3]_0\(0),
      I3 => \m0_databus_addr_i_reg[3]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_867 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_addr_3lsb_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_addr_3lsb_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_867 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_867;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_867 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_addr_3lsb_reg[2]\(1),
      I2 => \m0_addr_3lsb_reg[2]_0\(0),
      I3 => \m0_addr_3lsb_reg[2]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_869 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_addr_3lsb_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_addr_3lsb_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_869 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_869;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_869 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_addr_3lsb_reg[1]\(1),
      I2 => \m0_addr_3lsb_reg[1]_0\(0),
      I3 => \m0_addr_3lsb_reg[1]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_871 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_871 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_871;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_871 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[2]\(1),
      I2 => \m0_databus_addr_i_reg[2]_0\(0),
      I3 => \m0_databus_addr_i_reg[2]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_873 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_873 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_873;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_873 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[29]\(1),
      I2 => \m0_databus_addr_i_reg[29]_0\(0),
      I3 => \m0_databus_addr_i_reg[29]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_875 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[28]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_875 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_875;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_875 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[28]\(1),
      I2 => \m0_databus_addr_i_reg[28]_0\(0),
      I3 => \m0_databus_addr_i_reg[28]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_877 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_877 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_877;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_877 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[27]\(1),
      I2 => \m0_databus_addr_i_reg[27]_0\(0),
      I3 => \m0_databus_addr_i_reg[27]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_879 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[26]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_879 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_879;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_879 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[26]\(1),
      I2 => \m0_databus_addr_i_reg[26]_0\(0),
      I3 => \m0_databus_addr_i_reg[26]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_881 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_881 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_881;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_881 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[25]\(1),
      I2 => \m0_databus_addr_i_reg[25]_0\(0),
      I3 => \m0_databus_addr_i_reg[25]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_883 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[24]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_883 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_883;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_883 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[24]\(1),
      I2 => \m0_databus_addr_i_reg[24]_0\(0),
      I3 => \m0_databus_addr_i_reg[24]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_885 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[23]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_885 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_885;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_885 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[23]\(1),
      I2 => \m0_databus_addr_i_reg[23]_0\(0),
      I3 => \m0_databus_addr_i_reg[23]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_887 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[22]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_887 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_887;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_887 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[22]\(1),
      I2 => \m0_databus_addr_i_reg[22]_0\(0),
      I3 => \m0_databus_addr_i_reg[22]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_889 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[21]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_889 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_889;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_889 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[21]\(1),
      I2 => \m0_databus_addr_i_reg[21]_0\(0),
      I3 => \m0_databus_addr_i_reg[21]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_891 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[20]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_891 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_891;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_891 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[20]\(1),
      I2 => \m0_databus_addr_i_reg[20]_0\(0),
      I3 => \m0_databus_addr_i_reg[20]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_893 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_893 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_893;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_893 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[1]\(1),
      I2 => \m0_databus_addr_i_reg[1]_0\(0),
      I3 => \m0_databus_addr_i_reg[1]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_895 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[19]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_895 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_895;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_895 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[19]\(1),
      I2 => \m0_databus_addr_i_reg[19]_0\(0),
      I3 => \m0_databus_addr_i_reg[19]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_897 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[18]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_897 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_897;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_897 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[18]\(1),
      I2 => \m0_databus_addr_i_reg[18]_0\(0),
      I3 => \m0_databus_addr_i_reg[18]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_899 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_899 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_899;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_899 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[17]\(1),
      I2 => \m0_databus_addr_i_reg[17]_0\(0),
      I3 => \m0_databus_addr_i_reg[17]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_901 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[16]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_901 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_901;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_901 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[16]\(1),
      I2 => \m0_databus_addr_i_reg[16]_0\(0),
      I3 => \m0_databus_addr_i_reg[16]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_903 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[15]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_903 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_903;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_903 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[15]\(1),
      I2 => \m0_databus_addr_i_reg[15]_0\(0),
      I3 => \m0_databus_addr_i_reg[15]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_905 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[14]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_905 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_905;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_905 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[14]\(1),
      I2 => \m0_databus_addr_i_reg[14]_0\(0),
      I3 => \m0_databus_addr_i_reg[14]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_907 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_907 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_907;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_907 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[13]\(1),
      I2 => \m0_databus_addr_i_reg[13]_0\(0),
      I3 => \m0_databus_addr_i_reg[13]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_909 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[12]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_909 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_909;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_909 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[12]\(1),
      I2 => \m0_databus_addr_i_reg[12]_0\(0),
      I3 => \m0_databus_addr_i_reg[12]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_911 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_911 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_911;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_911 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[11]\(1),
      I2 => \m0_databus_addr_i_reg[11]_0\(0),
      I3 => \m0_databus_addr_i_reg[11]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_LUT6_2_913 is
  port (
    DI : out STD_LOGIC;
    S : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[10]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_LUT6_2_913 : entity is "MB_LUT6_2";
end microblaze_microblaze_0_0_MB_LUT6_2_913;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_LUT6_2_913 is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6_2
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \m0_databus_addr_i_reg[10]\(1),
      I2 => \m0_databus_addr_i_reg[10]_0\(0),
      I3 => \m0_databus_addr_i_reg[10]\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O5 => DI,
      O6 => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized2\ is
  port (
    sel_input_delayslot : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    Prefetch_Early_Full : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized2\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized2\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized2\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FFFFCCF0AACC"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => Prefetch_Early_Full,
      I3 => if4_push_instr_fetch,
      I4 => \Using_FPGA.Native_2\,
      I5 => Clear_Buffer,
      O => sel_input_delayslot
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I0 : in STD_LOGIC;
    I1 : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I0,
      I1 => I1,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[0]\(0),
      I5 => \m1_M0_Result_i_reg[0]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_792\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I09_out : in STD_LOGIC;
    I020_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[10]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_792\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_792\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_792\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I09_out,
      I1 => I020_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[10]\(0),
      I5 => \m1_M0_Result_i_reg[10]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_793\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I010_out : in STD_LOGIC;
    I019_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[11]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_793\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_793\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_793\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I010_out,
      I1 => I019_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[11]\(0),
      I5 => \m1_M0_Result_i_reg[11]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_794\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I011_out : in STD_LOGIC;
    I018_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[12]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_794\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_794\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_794\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I011_out,
      I1 => I018_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[12]\(0),
      I5 => \m1_M0_Result_i_reg[12]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_795\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I012_out : in STD_LOGIC;
    I017_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[13]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_795\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_795\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_795\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I012_out,
      I1 => I017_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[13]\(0),
      I5 => \m1_M0_Result_i_reg[13]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_796\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I013_out : in STD_LOGIC;
    I016_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[14]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_796\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_796\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_796\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I013_out,
      I1 => I016_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[14]\(0),
      I5 => \m1_M0_Result_i_reg[14]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_797\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I014_out : in STD_LOGIC;
    I015_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_797\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_797\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_797\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I014_out,
      I1 => I015_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[15]\(0),
      I5 => \m1_M0_Result_i_reg[15]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_798\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I015_out : in STD_LOGIC;
    I014_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[16]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_798\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_798\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_798\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I015_out,
      I1 => I014_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[16]\(0),
      I5 => \m1_M0_Result_i_reg[16]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_799\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I016_out : in STD_LOGIC;
    I013_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[17]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_799\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_799\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_799\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I016_out,
      I1 => I013_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[17]\(0),
      I5 => \m1_M0_Result_i_reg[17]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_800\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I017_out : in STD_LOGIC;
    I012_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[18]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_800\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_800\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_800\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I017_out,
      I1 => I012_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[18]\(0),
      I5 => \m1_M0_Result_i_reg[18]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_801\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I018_out : in STD_LOGIC;
    I011_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[19]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_801\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_801\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_801\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I018_out,
      I1 => I011_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[19]\(0),
      I5 => \m1_M0_Result_i_reg[19]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_802\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I00_out : in STD_LOGIC;
    I029_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_802\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_802\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_802\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I00_out,
      I1 => I029_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[1]\(0),
      I5 => \m1_M0_Result_i_reg[1]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_803\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I019_out : in STD_LOGIC;
    I010_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[20]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_803\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_803\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_803\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I019_out,
      I1 => I010_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[20]\(0),
      I5 => \m1_M0_Result_i_reg[20]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_804\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I020_out : in STD_LOGIC;
    I09_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[21]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_804\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_804\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_804\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I020_out,
      I1 => I09_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[21]\(0),
      I5 => \m1_M0_Result_i_reg[21]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_805\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I021_out : in STD_LOGIC;
    I08_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[22]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_805\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_805\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_805\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I021_out,
      I1 => I08_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[22]\(0),
      I5 => \m1_M0_Result_i_reg[22]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_806\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I022_out : in STD_LOGIC;
    I07_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[23]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_806\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_806\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_806\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I022_out,
      I1 => I07_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[23]\(0),
      I5 => \m1_M0_Result_i_reg[23]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_807\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I023_out : in STD_LOGIC;
    I06_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[24]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_807\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_807\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_807\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I023_out,
      I1 => I06_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[24]\(0),
      I5 => \m1_M0_Result_i_reg[24]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_808\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I024_out : in STD_LOGIC;
    I05_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_808\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_808\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_808\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I024_out,
      I1 => I05_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[25]\(0),
      I5 => \m1_M0_Result_i_reg[25]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_809\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I025_out : in STD_LOGIC;
    I04_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[26]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_809\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_809\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_809\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I025_out,
      I1 => I04_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[26]\(0),
      I5 => \m1_M0_Result_i_reg[26]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_810\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I026_out : in STD_LOGIC;
    I03_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[27]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_810\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_810\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_810\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I026_out,
      I1 => I03_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[27]\(0),
      I5 => \m1_M0_Result_i_reg[27]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_811\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I027_out : in STD_LOGIC;
    I02_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[28]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_811\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_811\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_811\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I027_out,
      I1 => I02_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[28]\(0),
      I5 => \m1_M0_Result_i_reg[28]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_812\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I028_out : in STD_LOGIC;
    I01_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[29]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_812\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_812\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_812\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I028_out,
      I1 => I01_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[29]\(0),
      I5 => \m1_M0_Result_i_reg[29]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_813\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I01_out : in STD_LOGIC;
    I028_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[2]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_813\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_813\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_813\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I01_out,
      I1 => I028_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[2]\(0),
      I5 => \m1_M0_Result_i_reg[2]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_814\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I029_out : in STD_LOGIC;
    I00_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[30]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_814\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_814\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_814\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I029_out,
      I1 => I00_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[30]\(0),
      I5 => \m1_M0_Result_i_reg[30]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_815\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I1 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_815\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_815\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_815\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I1,
      I1 => I0,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[31]\(0),
      I5 => '0',
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_816\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I02_out : in STD_LOGIC;
    I027_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[3]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_816\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_816\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_816\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I02_out,
      I1 => I027_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[3]\(0),
      I5 => \m1_M0_Result_i_reg[3]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_817\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I03_out : in STD_LOGIC;
    I026_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[4]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_817\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_817\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_817\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I03_out,
      I1 => I026_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[4]\(0),
      I5 => \m1_M0_Result_i_reg[4]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_818\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I04_out : in STD_LOGIC;
    I025_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[5]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_818\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_818\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_818\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I04_out,
      I1 => I025_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[5]\(0),
      I5 => \m1_M0_Result_i_reg[5]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_819\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I05_out : in STD_LOGIC;
    I024_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[6]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_819\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_819\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_819\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I05_out,
      I1 => I024_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[6]\(0),
      I5 => \m1_M0_Result_i_reg[6]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_820\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I06_out : in STD_LOGIC;
    I023_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[7]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_820\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_820\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_820\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I06_out,
      I1 => I023_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[7]\(0),
      I5 => \m1_M0_Result_i_reg[7]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_821\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I07_out : in STD_LOGIC;
    I022_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[8]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_821\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_821\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_821\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I07_out,
      I1 => I022_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[8]\(0),
      I5 => \m1_M0_Result_i_reg[8]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized22_822\ is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    I08_out : in STD_LOGIC;
    I021_out : in STD_LOGIC;
    mem_left_shift : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[9]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m1_M0_Result_i_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_822\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized22_822\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized22_822\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF000000ACACFF00"
    )
        port map (
      I0 => I08_out,
      I1 => I021_out,
      I2 => mem_left_shift,
      I3 => Q(0),
      I4 => \m1_M0_Result_i_reg[9]\(0),
      I5 => \m1_M0_Result_i_reg[9]_0\(0),
      O => m0_barrel_result(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized4\ is
  port (
    sel_input_depth : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Use_Next_Data : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized4\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized4\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized4\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFFFAE0AAE0A"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => if4_push_instr_fetch,
      I3 => \Using_FPGA.Native_2\,
      I4 => Use_Next_Data,
      I5 => Clear_Buffer,
      O => sel_input_depth
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized6\ is
  port (
    cur_valid_cmb : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    Use_Next_Data : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized6\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized6\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized6\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF000051F551F5"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => if4_push_instr_fetch,
      I3 => \Using_FPGA.Native_2\,
      I4 => Use_Next_Data,
      I5 => Clear_Buffer,
      O => cur_valid_cmb
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_LUT6__parameterized8\ is
  port (
    alu_AddSub_1 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_LUT6__parameterized8\ : entity is "MB_LUT6";
end \microblaze_microblaze_0_0_MB_LUT6__parameterized8\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_LUT6__parameterized8\ is
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"607AA67800008888"
    )
        port map (
      I0 => Q(0),
      I1 => \Using_FPGA.Native_0\(1),
      I2 => \Using_FPGA.Native_1\(0),
      I3 => \Using_FPGA.Native_0\(0),
      I4 => ex_alu_sel_logic,
      I5 => EX_Enable_ALU,
      O => alu_AddSub_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MULT_AND is
  port (
    DI : out STD_LOGIC;
    I0 : in STD_LOGIC;
    \Using_FPGA.Native_I1\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MULT_AND : entity is "MB_MULT_AND";
end microblaze_microblaze_0_0_MB_MULT_AND;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MULT_AND is
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native\ : label is "MULT_AND";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => I0,
      I1 => \Using_FPGA.Native_I1\(0),
      O => DI
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY is
  port (
    carry_7 : out STD_LOGIC;
    SRL16_Sel_7 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_7,
      CYINIT => Q(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_143 is
  port (
    of_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_143 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_143;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_143 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_piperun_raw\ : STD_LOGIC;
  signal p_197_in : STD_LOGIC;
begin
  \^of_piperun_raw\ <= lopt;
  lopt_1 <= \<const1>\;
  lopt_2 <= p_197_in;
  of_piperun_raw <= \^of_piperun_raw\;
\Using_FPGA.Native_i_1__21\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => ex_dead_valid_hold,
      O => p_197_in
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_145 is
  port (
    of_piperun_masked_no9 : out STD_LOGIC;
    ex_is_div_instr_i_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no8 : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_145 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_145;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_145 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no9\ : STD_LOGIC;
begin
  \^of_piperun_masked_no9\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no9 <= \^of_piperun_masked_no9\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => \Using_FPGA.Native_i_1__8\,
      I1 => \Using_FPGA.Native_i_1__8_0\,
      I2 => \Using_FPGA.Native_i_1__8_1\,
      I3 => ex_dead_valid_hold,
      O => ex_is_div_instr_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_147 is
  port (
    of_piperun_masked_no8 : out STD_LOGIC;
    of_piperun_masked_no7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_147 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_147;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_147 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^of_piperun_masked_no8\ : STD_LOGIC;
begin
  \^of_piperun_masked_no8\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  of_piperun_masked_no8 <= \^of_piperun_masked_no8\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_149 is
  port (
    of_piperun_masked_no7 : out STD_LOGIC;
    of_piperun_masked_no6 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_149 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_149;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_149 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_piperun_masked_no6,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_piperun_masked_no7,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_15 is
  port (
    carry_6 : out STD_LOGIC;
    SRL16_Sel_6 : in STD_LOGIC;
    carry_7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_15 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_15;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_15 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_6\ : STD_LOGIC;
begin
  \^carry_6\ <= lopt;
  carry_6 <= \^carry_6\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_151 is
  port (
    of_piperun_masked_no6 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_151 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_151;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_151 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no6\ : STD_LOGIC;
begin
  \^of_piperun_masked_no6\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no6 <= \^of_piperun_masked_no6\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_153 is
  port (
    of_piperun_masked_no5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_153 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_153;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_153 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no5\ : STD_LOGIC;
begin
  \^of_piperun_masked_no5\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no5 <= \^of_piperun_masked_no5\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_155 is
  port (
    of_piperun_masked_no4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_155 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_155;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_155 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no4\ : STD_LOGIC;
begin
  \^of_piperun_masked_no4\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no4 <= \^of_piperun_masked_no4\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_157 is
  port (
    of_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_157 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_157;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_157 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_piperun_masked_no2,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_piperun_masked_no3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_159 is
  port (
    of_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_159 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_159;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_159 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no2\ : STD_LOGIC;
begin
  \^of_piperun_masked_no2\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no2 <= \^of_piperun_masked_no2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_161 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    p_48_out : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_raw_valid : in STD_LOGIC;
    of_piperun_masked_no10 : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ : in STD_LOGIC;
    \p_43_out__4\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_dead_valid_hold_reg : in STD_LOGIC;
    of_dead_valid_hold : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    \of_MSR_i_reg[30]\ : in STD_LOGIC;
    \of_MSR_i_reg[30]_0\ : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_1\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_161 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_161;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_161 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^p_48_out\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  p_48_out <= \^p_48_out\;
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AEFFAAAA"
    )
        port map (
      I0 => \^p_48_out\,
      I1 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\,
      I2 => \p_43_out__4\,
      I3 => \Using_FPGA.Native_1\(0),
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAA888A8888"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      I3 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0),
      I5 => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\,
      O => \^p_48_out\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_piperun_masked_no10,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^using_fpga.native_0\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => of_raw_valid
    );
\Using_FPGA.Native_i_1__57\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => \out\,
      I1 => \^using_fpga.native_0\,
      I2 => ex_gpr_write,
      I3 => \Using_FPGA.Native_1\(0),
      O => D
    );
\Using_FPGA.Native_i_1__58\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"88B8"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => \^using_fpga.native_0\,
      I2 => ex_gpr_write_dbg,
      I3 => \Using_FPGA.Native_1\(0),
      O => D_0
    );
\of_MSR_i[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFE0EFEFEFE0E0E0"
    )
        port map (
      I0 => \of_MSR_i_reg[25]_1\,
      I1 => \of_MSR_i_reg[25]_2\(0),
      I2 => \of_MSR_i_reg[30]_0\,
      I3 => \of_MSR_i_reg[25]\(1),
      I4 => \^using_fpga.native_0\,
      I5 => \of_MSR_i_reg[25]_0\(1),
      O => WB_Div_Zero_Overflow_reg(1)
    );
\of_MSR_i[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \of_MSR_i_reg[30]\,
      I1 => \of_MSR_i_reg[30]_0\,
      I2 => \of_MSR_i_reg[25]\(0),
      I3 => \^using_fpga.native_0\,
      I4 => \of_MSR_i_reg[25]_0\(0),
      O => WB_Div_Zero_Overflow_reg(0)
    );
of_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"11100000"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      I2 => of_dead_valid_hold_reg,
      I3 => of_dead_valid_hold,
      I4 => of_raw_valid,
      O => \Use_Async_Reset.sync_reset_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_163 is
  port (
    of_piperun_masked_no10 : out STD_LOGIC;
    of_piperun_masked_no9 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_163 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_163;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_163 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^of_piperun_masked_no10\ : STD_LOGIC;
begin
  \^of_piperun_masked_no10\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  of_piperun_masked_no10 <= \^of_piperun_masked_no10\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_165 is
  port (
    of_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_165 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_165;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_165 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_piperun_masked_no1\ : STD_LOGIC;
begin
  \^of_piperun_masked_no1\ <= lopt;
  lopt_1 <= \<const0>\;
  of_piperun_masked_no1 <= \^of_piperun_masked_no1\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_167 is
  port (
    m3_piperun_raw : out STD_LOGIC;
    m3_piperun_data_raw : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_167 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_167;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_167 is
  signal \<const1>\ : STD_LOGIC;
  signal A_N59_out : STD_LOGIC;
  signal \^m3_piperun_raw\ : STD_LOGIC;
begin
  \^m3_piperun_raw\ <= lopt;
  lopt_1 <= \<const1>\;
  lopt_2 <= A_N59_out;
  m3_piperun_raw <= \^m3_piperun_raw\;
\Using_FPGA.Native_i_1__31\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => A_N59_out
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_169 is
  port (
    m3_raw_valid_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    m3_raw_valid_reg_0 : out STD_LOGIC;
    wb_piperun_i_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m3_dead_valid_hold_reg : in STD_LOGIC;
    m3_piperun_masked_no3 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    m3_active_access : in STD_LOGIC;
    m3_raw_valid_reg_1 : in STD_LOGIC;
    m3_raw_valid_reg_2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_raw_valid_reg : in STD_LOGIC;
    wb_raw_valid_reg_0 : in STD_LOGIC;
    wb_raw_valid_reg_1 : in STD_LOGIC;
    m3_gpr_write_dbg : in STD_LOGIC;
    m3_dead_valid_hold_reg_0 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \wb_PC_i_reg[31]\ : in STD_LOGIC;
    \wb_PC_i_reg[31]_0\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m3_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_169 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_169;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_169 is
  signal \<const0>\ : STD_LOGIC;
  signal \^m3_raw_valid_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Use_DAXI.wb_data_has_been_used_i_1\ : label is "soft_lutpair201";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__15\ : label is "soft_lutpair201";
begin
  \^m3_raw_valid_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  m3_raw_valid_reg <= \^m3_raw_valid_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Use_DAXI.wb_data_has_been_used_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => sync_reset,
      I1 => \^m3_raw_valid_reg\,
      I2 => m3_active_access,
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Using_FPGA.Native_i_1__129\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => m3_dead_valid_hold_reg_0,
      I2 => \Using_FPGA.Native_1\,
      I3 => \^m3_raw_valid_reg\,
      I4 => m3_msr(0),
      O => \wb_exception_from_m3_reg_rep__0_0\
    );
\Using_FPGA.Native_i_1__15\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m3_raw_valid_reg\,
      I1 => m3_gpr_write_dbg,
      O => D
    );
m3_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => m3_dead_valid_hold_reg_0,
      I1 => m3_dead_valid_hold,
      I2 => m3_dead_valid_hold_reg,
      I3 => sync_reset,
      I4 => \^m3_raw_valid_reg\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m3_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => \^m3_raw_valid_reg\,
      I1 => m3_raw_valid_reg_1,
      I2 => m3_raw_valid_reg_2(0),
      I3 => m3_dead_valid_hold_reg,
      I4 => sync_reset,
      O => m3_raw_valid_reg_0
    );
\wb_PC_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FF7F00000000"
    )
        port map (
      I0 => Q(0),
      I1 => \wb_PC_i_reg[31]\,
      I2 => Q(2),
      I3 => Q(1),
      I4 => \wb_PC_i_reg[31]_0\,
      I5 => \^m3_raw_valid_reg\,
      O => \wb_exception_raw_kind_reg[31]\(0)
    );
wb_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => wb_raw_valid_reg,
      I1 => wb_raw_valid_reg_0,
      I2 => \^m3_raw_valid_reg\,
      I3 => wb_raw_valid_reg_1,
      I4 => sync_reset,
      O => wb_piperun_i_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_17 is
  port (
    carry_5 : out STD_LOGIC;
    SRL16_Sel_5 : in STD_LOGIC;
    carry_6 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_17 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_17;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_17 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_5\ : STD_LOGIC;
begin
  \^carry_5\ <= lopt;
  carry_5 <= \^carry_5\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_171 is
  port (
    m3_piperun_masked_no3 : out STD_LOGIC;
    WB_MSR_Set_IE_reg : in STD_LOGIC;
    m3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_171 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_171;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_171 is
  signal \<const0>\ : STD_LOGIC;
  signal \^m3_piperun_masked_no3\ : STD_LOGIC;
begin
  \^m3_piperun_masked_no3\ <= lopt;
  lopt_1 <= \<const0>\;
  m3_piperun_masked_no3 <= \^m3_piperun_masked_no3\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_173 is
  port (
    m3_piperun_masked_no2 : out STD_LOGIC;
    m3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_173 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_173;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_173 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m3_piperun_masked_no2\ : STD_LOGIC;
begin
  \^m3_piperun_masked_no2\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m3_piperun_masked_no2 <= \^m3_piperun_masked_no2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_175 is
  port (
    m3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_175 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_175;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_175 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => m3_piperun_raw,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m3_piperun_masked_no1,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_177 is
  port (
    m3_piperun_data_raw : out STD_LOGIC;
    m3_databus_ready : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_177 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_177;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_177 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__104_n_0\ : STD_LOGIC;
  signal \^m3_piperun_data_raw\ : STD_LOGIC;
begin
  \^m3_piperun_data_raw\ <= lopt;
  lopt_1 <= \<const1>\;
  lopt_2 <= \Using_FPGA.Native_i_1__104_n_0\;
  m3_piperun_data_raw <= \^m3_piperun_data_raw\;
\Using_FPGA.Native_i_1__104\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => \Using_FPGA.Native_i_1__104_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_179 is
  port (
    m2_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_179 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_179;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_179 is
  signal \Using_FPGA.Native_i_1__225_n_0\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.Native_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m2_piperun_raw,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_i_1__225_n_0\
    );
\Using_FPGA.Native_i_1__225\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => m3_dead_valid_hold,
      O => \Using_FPGA.Native_i_1__225_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_181 is
  port (
    m2_raw_valid_reg : out STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg\ : out STD_LOGIC;
    m2_raw_valid_reg_0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m2_dead_valid_hold_reg : in STD_LOGIC;
    m2_piperun_masked_no5 : in STD_LOGIC;
    m2_potential_bubble : in STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.m2_dready_hold_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_dlmb_dready : in STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m2_databus_write : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    m2_raw_valid_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m2_gpr_write : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m2_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_181 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_181;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_181 is
  signal \<const0>\ : STD_LOGIC;
  signal \DAXI_interface_I1/M_AXI_DP_BREADY_I\ : STD_LOGIC;
  signal \Use_DLMB.m2_potential_bubble_i_2_n_0\ : STD_LOGIC;
  signal \^m2_raw_valid_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Use_DLMB.m2_potential_bubble_i_2\ : label is "soft_lutpair200";
  attribute SOFT_HLUTNM of m2_dead_valid_hold_i_1 : label is "soft_lutpair200";
begin
  \^m2_raw_valid_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  m2_raw_valid_reg <= \^m2_raw_valid_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Use_DAXI.M_AXI_DP_BREADY_I_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002222E222"
    )
        port map (
      I0 => \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1),
      I1 => \^m2_raw_valid_reg\,
      I2 => m2_databus_write,
      I3 => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      I4 => m2_dlmb_drop_request,
      I5 => \DAXI_interface_I1/M_AXI_DP_BREADY_I\,
      O => \Use_DAXI.M_AXI_DP_BREADY_I_reg\
    );
\Use_DAXI.M_AXI_DP_BREADY_I_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FF54"
    )
        port map (
      I0 => \^m2_raw_valid_reg\,
      I1 => M_AXI_DP_RVALID,
      I2 => M_AXI_DP_BVALID,
      I3 => sync_reset,
      O => \DAXI_interface_I1/M_AXI_DP_BREADY_I\
    );
\Use_DAXI.M_AXI_DP_RREADY_I_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000022222E22"
    )
        port map (
      I0 => \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(0),
      I1 => \^m2_raw_valid_reg\,
      I2 => m2_databus_write,
      I3 => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      I4 => m2_dlmb_drop_request,
      I5 => \DAXI_interface_I1/M_AXI_DP_BREADY_I\,
      O => \Use_DAXI.M_AXI_DP_RREADY_I_reg\
    );
\Use_DLMB.m2_dready_hold_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2202"
    )
        port map (
      I0 => \Use_DLMB.m2_dready_hold_reg_0\,
      I1 => sync_reset,
      I2 => \^m2_raw_valid_reg\,
      I3 => \Use_DLMB.m2_dready_hold_reg\(0),
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Use_DLMB.m2_potential_bubble_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444454444444444"
    )
        port map (
      I0 => \Use_DLMB.m2_potential_bubble_i_2_n_0\,
      I1 => m2_potential_bubble,
      I2 => \Use_DLMB.m2_potential_bubble_reg_0\,
      I3 => D(0),
      I4 => \Use_DLMB.m2_dready_hold_reg\(0),
      I5 => m2_dlmb_dready,
      O => \Use_DLMB.m2_potential_bubble_reg\
    );
\Use_DLMB.m2_potential_bubble_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => sync_reset,
      I1 => \^m2_raw_valid_reg\,
      O => \Use_DLMB.m2_potential_bubble_i_2_n_0\
    );
\Using_FPGA.Native_i_1__126\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFEFE0E0E0E0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \^m2_raw_valid_reg\,
      I5 => \Using_FPGA.Native_4\,
      O => WB_Div_Zero_Overflow_reg
    );
\Using_FPGA.Native_i_1__132\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_5\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_6\,
      I3 => \^m2_raw_valid_reg\,
      I4 => \Using_FPGA.Native_7\,
      O => \wb_exception_from_m3_reg_rep__0_0\
    );
\Using_FPGA.Native_i_1__59\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m2_raw_valid_reg\,
      I1 => m2_gpr_write,
      I2 => \Use_DLMB.m2_dready_hold_reg\(0),
      I3 => m1_gpr_write,
      O => D_0
    );
\Using_FPGA.Native_i_1__60\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m2_raw_valid_reg\,
      I1 => m2_gpr_write_dbg,
      I2 => \Use_DLMB.m2_dready_hold_reg\(0),
      I3 => m1_gpr_write_dbg,
      O => D_1
    );
\Using_FPGA.Native_i_1__63\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m2_raw_valid_reg\,
      I1 => m2_is_div_instr,
      I2 => \Use_DLMB.m2_dready_hold_reg\(0),
      I3 => m1_is_div_instr_i,
      O => D_2
    );
m2_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => m2_dead_valid_hold,
      I2 => m2_dead_valid_hold_reg,
      I3 => \^m2_raw_valid_reg\,
      I4 => sync_reset,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m2_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00003530"
    )
        port map (
      I0 => \^m2_raw_valid_reg\,
      I1 => m2_raw_valid_reg_1,
      I2 => \Use_DLMB.m2_dready_hold_reg\(0),
      I3 => m2_dead_valid_hold_reg,
      I4 => sync_reset,
      O => m2_raw_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_183 is
  port (
    m2_piperun_masked_no5 : out STD_LOGIC;
    m2_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_183 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_183;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_183 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m2_piperun_masked_no5\ : STD_LOGIC;
begin
  \^m2_piperun_masked_no5\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m2_piperun_masked_no5 <= \^m2_piperun_masked_no5\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_185 is
  port (
    m2_piperun_masked_no4 : out STD_LOGIC;
    m2_piperun_masked_no3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_185 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_185;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_185 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => m2_piperun_masked_no3,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m2_piperun_masked_no4,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_187 is
  port (
    m2_piperun_masked_no3 : out STD_LOGIC;
    m2_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_187 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_187;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_187 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m2_piperun_masked_no3\ : STD_LOGIC;
begin
  \^m2_piperun_masked_no3\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m2_piperun_masked_no3 <= \^m2_piperun_masked_no3\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_189 is
  port (
    m2_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_189 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_189;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_189 is
  signal \<const0>\ : STD_LOGIC;
  signal \^m2_piperun_masked_no2\ : STD_LOGIC;
begin
  \^m2_piperun_masked_no2\ <= lopt;
  lopt_1 <= \<const0>\;
  m2_piperun_masked_no2 <= \^m2_piperun_masked_no2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_19 is
  port (
    carry_4 : out STD_LOGIC;
    SRL16_Sel_4 : in STD_LOGIC;
    carry_5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_19 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_19;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_19 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_4\ : STD_LOGIC;
begin
  \^carry_4\ <= lopt;
  carry_4 <= \^carry_4\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_191 is
  port (
    m2_piperun_masked_no1 : out STD_LOGIC;
    m2_piperun_raw : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_191 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_191;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_191 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__36_n_0\ : STD_LOGIC;
  signal \^m2_piperun_masked_no1\ : STD_LOGIC;
begin
  \^m2_piperun_masked_no1\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__36_n_0\;
  m2_piperun_masked_no1 <= \^m2_piperun_masked_no1\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__36\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFF7FFFFFFFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      I2 => m2_allow_dready,
      I3 => DReady,
      I4 => \Using_FPGA.Native_2\,
      I5 => DWait,
      O => \Using_FPGA.Native_i_1__36_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_193 is
  port (
    m1_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_193 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_193;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_193 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__224_n_0\ : STD_LOGIC;
  signal \^m1_piperun_raw\ : STD_LOGIC;
begin
  \^m1_piperun_raw\ <= lopt;
  lopt_1 <= \<const1>\;
  lopt_2 <= \Using_FPGA.Native_i_1__224_n_0\;
  m1_piperun_raw <= \^m1_piperun_raw\;
\Using_FPGA.Native_i_1__224\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\,
      I2 => m2_dead_valid_hold,
      O => \Using_FPGA.Native_i_1__224_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_195 is
  port (
    m1_raw_valid_reg : out STD_LOGIC;
    m1_databus_write_from_m0_reg : out STD_LOGIC;
    m1_databus_write_from_m0_reg_0 : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ : out STD_LOGIC;
    m1_databus_addr_from_m0_reg : out STD_LOGIC;
    m1_databus_access_from_m0_reg : out STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg\ : out STD_LOGIC;
    m1_raw_valid_reg_0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    \m2_PC_i_reg[0]\ : in STD_LOGIC;
    m1_piperun_masked_no2 : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ : in STD_LOGIC;
    m1_databus_access : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    \Use_DAXI.m2_active_access_unmasked_reg\ : in STD_LOGIC;
    m1_dlmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    A_N201_out : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_195 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_195;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_195 is
  signal \<const0>\ : STD_LOGIC;
  signal \^m1_raw_valid_reg\ : STD_LOGIC;
begin
  \^m1_raw_valid_reg\ <= lopt;
  lopt_1 <= \<const0>\;
  m1_raw_valid_reg <= \^m1_raw_valid_reg\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Use_DAXI.M_AXI_DP_ARVALID_unmasked_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000E222"
    )
        port map (
      I0 => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\,
      I1 => \^m1_raw_valid_reg\,
      I2 => D(0),
      I3 => m1_databus_access,
      I4 => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\,
      O => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\
    );
\Use_DAXI.M_AXI_DP_AWVALID_unmasked_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08000800080F0800"
    )
        port map (
      I0 => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\,
      I1 => m1_databus_access,
      I2 => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\,
      I3 => \^m1_raw_valid_reg\,
      I4 => \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\,
      I5 => M_AXI_DP_AWREADY,
      O => m1_databus_write_from_m0_reg
    );
\Use_DAXI.M_AXI_DP_WVALID_unmasked_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08000800080F0800"
    )
        port map (
      I0 => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\,
      I1 => m1_databus_access,
      I2 => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\,
      I3 => \^m1_raw_valid_reg\,
      I4 => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\,
      I5 => M_AXI_DP_WREADY,
      O => m1_databus_write_from_m0_reg_0
    );
\Use_DAXI.m2_active_access_unmasked_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8B88"
    )
        port map (
      I0 => m1_databus_access,
      I1 => \^m1_raw_valid_reg\,
      I2 => m2_dlmb_drop_request,
      I3 => \Use_DAXI.m2_active_access_unmasked_reg\,
      O => m1_databus_access_from_m0_reg
    );
\Use_DLMB.m1_dlmb_issued_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => m1_dlmb_issued,
      I1 => D(1),
      I2 => \^m1_raw_valid_reg\,
      I3 => sync_reset,
      O => \Use_DLMB.m1_dlmb_issued_reg\
    );
\Use_DLMB.m2_allow_dready_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => D(1),
      I1 => \^m1_raw_valid_reg\,
      I2 => DWait,
      I3 => m2_allow_dready,
      O => m1_databus_addr_from_m0_reg
    );
\Using_FPGA.Native_i_1__127\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFEFE0E0E0E0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_1\,
      I1 => \Using_FPGA.Native_2\(0),
      I2 => \Using_FPGA.Native_0\,
      I3 => \Using_FPGA.Native_3\,
      I4 => \^m1_raw_valid_reg\,
      I5 => \Using_FPGA.Native_4\,
      O => WB_Div_Zero_Overflow_reg
    );
\Using_FPGA.Native_i_1__131\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_5\,
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_6\,
      I3 => \^m1_raw_valid_reg\,
      I4 => \Using_FPGA.Native_7\,
      O => \wb_exception_from_m3_reg_rep__0_0\
    );
\Using_FPGA.Native_i_1__39\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m1_raw_valid_reg\,
      I1 => m1_is_div_instr_i,
      I2 => in0,
      I3 => m0_is_div_instr_i,
      O => D_0
    );
\Using_FPGA.Native_i_1__40\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m1_raw_valid_reg\,
      I1 => m1_gpr_write_dbg,
      I2 => in0,
      I3 => m0_gpr_write_dbg,
      O => D_1
    );
\Using_FPGA.Native_i_1__41\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^m1_raw_valid_reg\,
      I1 => m1_gpr_write,
      I2 => in0,
      I3 => m0_gpr_write,
      O => D_2
    );
m1_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => m1_dead_valid_hold,
      I2 => \m2_PC_i_reg[0]\,
      I3 => \^m1_raw_valid_reg\,
      I4 => sync_reset,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m1_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000C5C0"
    )
        port map (
      I0 => \^m1_raw_valid_reg\,
      I1 => A_N201_out,
      I2 => in0,
      I3 => \m2_PC_i_reg[0]\,
      I4 => sync_reset,
      O => m1_raw_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_197 is
  port (
    m1_piperun_masked_no2 : out STD_LOGIC;
    m1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_197 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_197;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_197 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m1_piperun_masked_no2\ : STD_LOGIC;
begin
  \^m1_piperun_masked_no2\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m1_piperun_masked_no2 <= \^m1_piperun_masked_no2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_199 is
  port (
    m1_piperun_masked_no1 : out STD_LOGIC;
    m1_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_199 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_199;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_199 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => m1_piperun_raw,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m1_piperun_masked_no1,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_201 is
  port (
    m0_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_201 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_201;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_201 is
  signal \<const1>\ : STD_LOGIC;
  signal A_N207_out : STD_LOGIC;
  signal \^m0_piperun_raw\ : STD_LOGIC;
begin
  \^m0_piperun_raw\ <= lopt;
  lopt_1 <= \<const1>\;
  lopt_2 <= A_N207_out;
  m0_piperun_raw <= \^m0_piperun_raw\;
\Using_FPGA.Native_i_1__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => m1_dead_valid_hold,
      I1 => \Using_FPGA.Native_1\,
      I2 => \Using_FPGA.Native_2\,
      O => A_N207_out
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_203 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m0_piperun_masked_no4 : in STD_LOGIC;
    m0_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_raw_valid_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_203 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_203;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_203 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => m0_piperun_masked_no4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^using_fpga.native_0\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
\Using_FPGA.Native_i_1__128\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFEFE0E0E0E0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_4\(0),
      I2 => \Using_FPGA.Native_2\,
      I3 => \Using_FPGA.Native_5\,
      I4 => \^using_fpga.native_0\,
      I5 => \Using_FPGA.Native_6\,
      O => WB_Div_Zero_Overflow_reg
    );
\Using_FPGA.Native_i_1__130\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_7\,
      I1 => \Using_FPGA.Native_2\,
      I2 => \Using_FPGA.Native_8\,
      I3 => \^using_fpga.native_0\,
      I4 => \Using_FPGA.Native_9\,
      O => \wb_exception_from_m3_reg_rep__0_0\
    );
\Using_FPGA.Native_i_1__37\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_gpr_write_dbg,
      I2 => \Using_FPGA.Native_1\(0),
      I3 => ex_gpr_write_dbg,
      O => D
    );
\Using_FPGA.Native_i_1__38\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F404"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_gpr_write,
      I2 => \Using_FPGA.Native_1\(0),
      I3 => ex_gpr_write,
      O => D_0
    );
m0_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000E0"
    )
        port map (
      I0 => \Using_FPGA.Native_2\,
      I1 => m0_dead_valid_hold,
      I2 => m0_raw_valid_reg_1,
      I3 => \^using_fpga.native_0\,
      I4 => sync_reset,
      O => \wb_exception_from_m3_reg_rep__0\
    );
m0_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00003530"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => m0_raw_valid_reg_0,
      I2 => \Using_FPGA.Native_1\(0),
      I3 => m0_raw_valid_reg_1,
      I4 => sync_reset,
      O => m0_raw_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_205 is
  port (
    m0_piperun_masked_no4 : out STD_LOGIC;
    m0_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_205 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_205;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_205 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m0_piperun_masked_no4\ : STD_LOGIC;
begin
  \^m0_piperun_masked_no4\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m0_piperun_masked_no4 <= \^m0_piperun_masked_no4\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_207 is
  port (
    m0_piperun_masked_no3 : out STD_LOGIC;
    m0_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_207 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_207;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_207 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m0_piperun_masked_no3\ : STD_LOGIC;
begin
  \^m0_piperun_masked_no3\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m0_piperun_masked_no3 <= \^m0_piperun_masked_no3\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_209 is
  port (
    m0_piperun_masked_no2 : out STD_LOGIC;
    m0_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_209 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_209;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_209 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^m0_piperun_masked_no2\ : STD_LOGIC;
begin
  \^m0_piperun_masked_no2\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
  m0_piperun_masked_no2 <= \^m0_piperun_masked_no2\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_21 is
  port (
    carry_3 : out STD_LOGIC;
    SRL16_Sel_3 : in STD_LOGIC;
    carry_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_21 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_21;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_21 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => carry_3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => SRL16_Sel_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_211 is
  port (
    m0_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m0_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_211 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_211;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_211 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => m0_piperun_raw,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m0_piperun_masked_no1,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_213 is
  port (
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ : in STD_LOGIC;
    if4_piperun_masked_no4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_213 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_213;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_213 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => if4_piperun_masked_no4,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_215 is
  port (
    if4_piperun_masked_no2 : out STD_LOGIC;
    if4_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_215 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_215;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_215 is
  signal \<const1>\ : STD_LOGIC;
  signal \^if4_piperun_masked_no2\ : STD_LOGIC;
begin
  \^if4_piperun_masked_no2\ <= lopt;
  if4_piperun_masked_no2 <= \^if4_piperun_masked_no2\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_217 is
  port (
    if4_piperun_masked_no1 : out STD_LOGIC;
    if4_ready : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_217 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_217;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_217 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  \^lopt_5\ <= lopt_4;
  \^lopt_7\ <= lopt_6;
  lopt <= \^lopt_1\;
  lopt_2 <= \^lopt_3\;
  lopt_5 <= \^lopt_6\;
  lopt_8 <= lopt_7;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => if4_ready,
      CO(3) => \^lopt_6\,
      CO(2) => \^lopt_3\,
      CO(1) => \^lopt_1\,
      CO(0) => if4_piperun_masked_no1,
      CYINIT => '0',
      DI(3) => \^lopt_7\,
      DI(2) => \^lopt_4\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_8,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_2\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_219 is
  port (
    if4_piperun_masked_no4 : out STD_LOGIC;
    if4_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_219 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_219;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_219 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^if4_piperun_masked_no4\ : STD_LOGIC;
begin
  \^if4_piperun_masked_no4\ <= lopt;
  if4_piperun_masked_no4 <= \^if4_piperun_masked_no4\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_221 is
  port (
    if4_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if4_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_221 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_221;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_221 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if4_piperun_masked_no3\ : STD_LOGIC;
begin
  \^if4_piperun_masked_no3\ <= lopt;
  if4_piperun_masked_no3 <= \^if4_piperun_masked_no3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_223 is
  port (
    if3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_223 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_223;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_223 is
  signal \<const1>\ : STD_LOGIC;
  signal \^if3_piperun_masked_no1\ : STD_LOGIC;
begin
  \^if3_piperun_masked_no1\ <= lopt;
  if3_piperun_masked_no1 <= \^if3_piperun_masked_no1\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_225 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC;
    if4_dead_fetch_hold_reg : out STD_LOGIC;
    if3_piperun_masked_no3 : in STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Use_ILMB.if3_potential_bubble_reg\ : in STD_LOGIC;
    if3_potential_bubble : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    if3_ilmb_iready : in STD_LOGIC;
    if4_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if4_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_225 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_225;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_225 is
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal if4_dead_fetch_hold : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Use_ILMB.if3_iready_hold_i_1\ : label is "soft_lutpair199";
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
  attribute SOFT_HLUTNM of if4_dead_fetch_hold_i_2 : label is "soft_lutpair199";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Use_ILMB.if3_iready_hold_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2202"
    )
        port map (
      I0 => \Use_ILMB.if3_iready_hold_reg\,
      I1 => sync_reset,
      I2 => \^using_fpga.native_0\,
      I3 => \Use_ILMB.if3_potential_bubble_reg\,
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Use_ILMB.if3_potential_bubble_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1011101010101010"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      I2 => if3_potential_bubble,
      I3 => \Use_ILMB.if3_potential_bubble_reg\,
      I4 => D(0),
      I5 => if3_ilmb_iready,
      O => \Use_Async_Reset.sync_reset_reg_0\
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => if3_piperun_masked_no3,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^using_fpga.native_0\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
if4_dead_fetch_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFEACCEA"
    )
        port map (
      I0 => if4_dead_fetch_hold_reg_1,
      I1 => kill_fetch,
      I2 => if4_dead_fetch_hold_reg_2,
      I3 => \^using_fpga.native_0\,
      I4 => if4_dead_fetch_hold_reg_3,
      I5 => if4_dead_fetch_hold,
      O => if4_dead_fetch_hold_reg
    );
if4_dead_fetch_hold_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      I2 => if4_dead_fetch_hold_reg_0,
      O => if4_dead_fetch_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_227 is
  port (
    if3_piperun_masked_no3 : out STD_LOGIC;
    if4_ibus_access_i_reg : in STD_LOGIC;
    if3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_227 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_227;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_227 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if3_piperun_masked_no3\ : STD_LOGIC;
begin
  \^if3_piperun_masked_no3\ <= lopt;
  if3_piperun_masked_no3 <= \^if3_piperun_masked_no3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_229 is
  port (
    if3_piperun_masked_no2 : out STD_LOGIC;
    if3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_229 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_229;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_229 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^if3_piperun_masked_no2\ : STD_LOGIC;
begin
  \^if3_piperun_masked_no2\ <= lopt;
  if3_piperun_masked_no2 <= \^if3_piperun_masked_no2\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_23 is
  port (
    carry_2 : out STD_LOGIC;
    SRL16_Sel_2 : in STD_LOGIC;
    carry_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_23 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_23;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_23 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_2\ : STD_LOGIC;
begin
  \^carry_2\ <= lopt;
  carry_2 <= \^carry_2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_231 is
  port (
    if2_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_231 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_231;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_231 is
  signal \<const1>\ : STD_LOGIC;
  signal \^if2_piperun_masked_no1\ : STD_LOGIC;
begin
  \^if2_piperun_masked_no1\ <= lopt;
  if2_piperun_masked_no1 <= \^if2_piperun_masked_no1\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_233 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : out STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg\ : out STD_LOGIC;
    if3_dead_fetch_hold_reg : out STD_LOGIC;
    if2_piperun_masked_no2 : in STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg_0\ : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    if3_allow_iready : in STD_LOGIC;
    if2_ilmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if3_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if3_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_233 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_233;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_233 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal if3_dead_fetch_hold : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Use_ILMB.if2_ilmb_issued_i_1\ : label is "soft_lutpair198";
  attribute SOFT_HLUTNM of if3_dead_fetch_hold_i_2 : label is "soft_lutpair198";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Use_ILMB.if2_ilmb_issued_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"000E"
    )
        port map (
      I0 => if2_ilmb_issued,
      I1 => \Use_ILMB.if2_ilmb_issued_reg_0\,
      I2 => \^using_fpga.native_0\,
      I3 => sync_reset,
      O => \Use_ILMB.if2_ilmb_issued_reg\
    );
\Use_ILMB.if3_allow_iready_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \Use_ILMB.if2_ilmb_issued_reg_0\,
      I1 => \^using_fpga.native_0\,
      I2 => IWAIT,
      I3 => if3_allow_iready,
      O => if2_ibus_first_cycle_raw_reg
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
if3_dead_fetch_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFEACCEA"
    )
        port map (
      I0 => if3_dead_fetch_hold_reg_1,
      I1 => kill_fetch,
      I2 => if3_dead_fetch_hold_reg_2,
      I3 => \^using_fpga.native_0\,
      I4 => if3_dead_fetch_hold_reg_3,
      I5 => if3_dead_fetch_hold,
      O => if3_dead_fetch_hold_reg
    );
if3_dead_fetch_hold_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^using_fpga.native_0\,
      I2 => if3_dead_fetch_hold_reg_0,
      O => if3_dead_fetch_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_235 is
  port (
    if2_piperun_masked_no2 : out STD_LOGIC;
    if3_ibus_access_i_reg : in STD_LOGIC;
    if2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_235 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_235;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_235 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if2_piperun_masked_no2\ : STD_LOGIC;
begin
  \^if2_piperun_masked_no2\ <= lopt;
  if2_piperun_masked_no2 <= \^if2_piperun_masked_no2\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_237 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if2_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_3 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    if2_dead_fetch_hold_reg_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_237 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_237;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_237 is
  signal if2_dead_fetch_hold : STD_LOGIC;
  signal \^if2_raw_valid_reg\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  if2_raw_valid_reg <= \^if2_raw_valid_reg\;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => if2_dead_fetch_hold_reg_1,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^if2_raw_valid_reg\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => if2_dead_fetch_hold_reg_0
    );
if2_dead_fetch_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FEFEFECE"
    )
        port map (
      I0 => if2_dead_fetch_hold_reg_2,
      I1 => if2_dead_fetch_hold_reg_3,
      I2 => \^if2_raw_valid_reg\,
      I3 => kill_fetch_mmu,
      I4 => if2_dead_fetch_hold_reg_4,
      I5 => if2_dead_fetch_hold,
      O => if2_dead_fetch_hold_reg
    );
if2_dead_fetch_hold_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^if2_raw_valid_reg\,
      I2 => if2_dead_fetch_hold_reg_1,
      O => if2_dead_fetch_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_239 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if0_raw_valid_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_239 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_239;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_239 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^if2_raw_valid_reg\ : STD_LOGIC;
begin
  \^if2_raw_valid_reg\ <= lopt;
  if2_raw_valid_reg <= \^if2_raw_valid_reg\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_241 is
  port (
    ex_piperun_raw : out STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_241 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_241;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_241 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__103_n_0\ : STD_LOGIC;
  signal \^ex_piperun_raw\ : STD_LOGIC;
begin
  \^ex_piperun_raw\ <= lopt;
  ex_piperun_raw <= \^ex_piperun_raw\;
  lopt_1 <= \<const1>\;
  lopt_2 <= \Using_FPGA.Native_i_1__103_n_0\;
\Using_FPGA.Native_i_1__103\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => m0_dead_valid_hold,
      I2 => \Using_FPGA.Native_1\,
      O => \Using_FPGA.Native_i_1__103_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_243 is
  port (
    ex_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    \ex_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    wb_exception_from_m3_reg_rep : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_raw_valid_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \m0_PC_i_reg[0]\ : in STD_LOGIC;
    ex_piperun_masked_no6 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \m0_exception_raw_kind_reg[30]\ : in STD_LOGIC;
    m0_exception_raw_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    m0_exception_from_ex : in STD_LOGIC;
    in0 : in STD_LOGIC;
    of_clear_msr_bip_hold_reg : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_clear_msr_bip_hold_reg_0 : in STD_LOGIC;
    of_set_msr_ie_hold_reg : in STD_LOGIC;
    of_clear_msr_bip_hold_reg_1 : in STD_LOGIC;
    of_set_msr_ee_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    of_set_msr_ie : in STD_LOGIC;
    of_set_msr_ie_hold_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_reservation_reg : in STD_LOGIC;
    ex_reservation_reg_0 : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_msr_clear_bip : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC_VECTOR ( 13 downto 0 );
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    wb_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    ex_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_243 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_243;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_243 is
  signal \^ex_raw_valid_reg\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  ex_raw_valid_reg <= \^ex_raw_valid_reg\;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => ex_piperun_masked_no6,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \^ex_raw_valid_reg\,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \m0_PC_i_reg[0]\
    );
\Using_FPGA.Native_i_1__110\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2F202F2F2F202020"
    )
        port map (
      I0 => \Using_FPGA.Native_18\(1),
      I1 => wb_msr_clear_bip,
      I2 => \Using_FPGA.Native_15\,
      I3 => \Using_FPGA.Native_19\(3),
      I4 => \^ex_raw_valid_reg\,
      I5 => \Using_FPGA.Native_20\,
      O => \Using_FPGA.Native_1\
    );
\Using_FPGA.Native_i_1__111\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(5),
      I1 => \Using_FPGA.Native_17\,
      I2 => \Using_FPGA.Native_19\(8),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(5),
      O => \Using_FPGA.Native_2\
    );
\Using_FPGA.Native_i_1__112\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(4),
      I1 => \Using_FPGA.Native_17\,
      I2 => \Using_FPGA.Native_19\(7),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(4),
      O => \Using_FPGA.Native_3\
    );
\Using_FPGA.Native_i_1__113\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_21\,
      I1 => \Using_FPGA.Native_17\,
      I2 => \Using_FPGA.Native_19\(1),
      I3 => \^ex_raw_valid_reg\,
      I4 => \Using_FPGA.Native_22\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
\Using_FPGA.Native_i_1__114\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \Using_FPGA.Native_18\(0),
      I1 => \Using_FPGA.Native_17\,
      I2 => \Using_FPGA.Native_19\(2),
      I3 => \^ex_raw_valid_reg\,
      I4 => EX_CarryIn,
      O => \Using_FPGA.Native_4\
    );
\Using_FPGA.Native_i_1__115\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(10),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(13),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(10),
      O => D_1
    );
\Using_FPGA.Native_i_1__116\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(9),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(12),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(9),
      O => \Using_FPGA.Native_5\
    );
\Using_FPGA.Native_i_1__117\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(8),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(11),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(8),
      O => \Using_FPGA.Native_6\
    );
\Using_FPGA.Native_i_1__118\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(7),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(10),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(7),
      O => \Using_FPGA.Native_7\
    );
\Using_FPGA.Native_i_1__119\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(6),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(9),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(6),
      O => \Using_FPGA.Native_8\
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0E000E000EFF0E00"
    )
        port map (
      I0 => \Using_FPGA.Native_14\,
      I1 => \Using_FPGA.Native_13\,
      I2 => \m0_exception_raw_kind_reg[30]\,
      I3 => \^ex_raw_valid_reg\,
      I4 => m0_exception_from_ex,
      I5 => in0,
      O => D
    );
\Using_FPGA.Native_i_1__120\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(3),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(6),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(3),
      O => \Using_FPGA.Native_9\
    );
\Using_FPGA.Native_i_1__121\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFEFEFE0E0EFE0E0"
    )
        port map (
      I0 => \Using_FPGA.Native_23\,
      I1 => \Using_FPGA.Native_18\(2),
      I2 => \Using_FPGA.Native_17\,
      I3 => \^ex_raw_valid_reg\,
      I4 => \Using_FPGA.Native_24\,
      I5 => \Using_FPGA.Native_25\,
      O => WB_Div_Zero_Overflow_reg
    );
\Using_FPGA.Native_i_1__122\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(2),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(5),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(2),
      O => \Using_FPGA.Native_10\
    );
\Using_FPGA.Native_i_1__123\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(1),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(4),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(1),
      O => \Using_FPGA.Native_11\
    );
\Using_FPGA.Native_i_1__124\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => wb_MSR_i(0),
      I1 => \Using_FPGA.Native_15\,
      I2 => \Using_FPGA.Native_19\(0),
      I3 => \^ex_raw_valid_reg\,
      I4 => ex_MSR_i(0),
      O => \Using_FPGA.Native_12\
    );
\Using_FPGA.Native_i_1__20\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"20202F20"
    )
        port map (
      I0 => \Using_FPGA.Native_16\,
      I1 => \m0_exception_raw_kind_reg[30]\,
      I2 => \^ex_raw_valid_reg\,
      I3 => m0_is_div_instr_i,
      I4 => in0,
      O => D_0
    );
\Using_FPGA.Native_i_2__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => \^ex_raw_valid_reg\,
      I1 => ex_jump_hold,
      I2 => ex_jump,
      O => \Using_FPGA.Native_0\
    );
ex_dead_valid_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00004440"
    )
        port map (
      I0 => \^ex_raw_valid_reg\,
      I1 => \m0_PC_i_reg[0]\,
      I2 => \Using_FPGA.Native_17\,
      I3 => ex_dead_valid_hold,
      I4 => sync_reset,
      O => ex_raw_valid_reg_0
    );
ex_reservation_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000005444444"
    )
        port map (
      I0 => sync_reset,
      I1 => ex_reservation,
      I2 => ex_reservation_reg,
      I3 => ex_reservation_reg_0,
      I4 => \^ex_raw_valid_reg\,
      I5 => wb_exception_taken,
      O => \Use_Async_Reset.sync_reset_reg\
    );
\m0_exception_raw_kind[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000004FF0400"
    )
        port map (
      I0 => \Using_FPGA.Native_13\,
      I1 => \Using_FPGA.Native_14\,
      I2 => \m0_exception_raw_kind_reg[30]\,
      I3 => \^ex_raw_valid_reg\,
      I4 => m0_exception_raw_kind(0),
      I5 => sync_reset,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\
    );
of_clear_msr_bip_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000AAAA00000800"
    )
        port map (
      I0 => of_clear_msr_bip_hold_reg,
      I1 => ex_gpr_write_addr(0),
      I2 => of_clear_msr_bip_hold_reg_0,
      I3 => \^ex_raw_valid_reg\,
      I4 => of_set_msr_ie_hold_reg,
      I5 => of_clear_msr_bip_hold_reg_1,
      O => \ex_gpr_write_addr_reg[3]\
    );
of_set_msr_ee_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000AAAA00000800"
    )
        port map (
      I0 => of_clear_msr_bip_hold_reg,
      I1 => ex_gpr_write_addr(1),
      I2 => of_clear_msr_bip_hold_reg_0,
      I3 => \^ex_raw_valid_reg\,
      I4 => of_set_msr_ie_hold_reg,
      I5 => of_set_msr_ee_hold_reg,
      O => \ex_gpr_write_addr_reg[2]\
    );
of_set_msr_ie_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0011001100100000"
    )
        port map (
      I0 => \Using_FPGA.Native_15\,
      I1 => sync_reset,
      I2 => \^ex_raw_valid_reg\,
      I3 => of_set_msr_ie_hold_reg,
      I4 => of_set_msr_ie,
      I5 => of_set_msr_ie_hold_reg_0,
      O => wb_exception_from_m3_reg_rep
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_245 is
  port (
    ex_piperun_masked_no6 : out STD_LOGIC;
    ex_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_245 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_245;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_245 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_piperun_masked_no6\ : STD_LOGIC;
begin
  \^ex_piperun_masked_no6\ <= lopt;
  ex_piperun_masked_no6 <= \^ex_piperun_masked_no6\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_247 is
  port (
    ex_piperun_masked_no5 : out STD_LOGIC;
    ex_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_247 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_247;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_247 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_piperun_masked_no5\ : STD_LOGIC;
begin
  \^ex_piperun_masked_no5\ <= lopt;
  ex_piperun_masked_no5 <= \^ex_piperun_masked_no5\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_249 is
  port (
    ex_piperun_masked_no4 : out STD_LOGIC;
    ex_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_249 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_249;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_249 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_piperun_masked_no4\ : STD_LOGIC;
begin
  \^ex_piperun_masked_no4\ <= lopt;
  ex_piperun_masked_no4 <= \^ex_piperun_masked_no4\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_25 is
  port (
    carry_1 : out STD_LOGIC;
    SRL16_Sel_1 : in STD_LOGIC;
    carry_2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_25 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_25;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_25 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_1\ : STD_LOGIC;
begin
  \^carry_1\ <= lopt;
  carry_1 <= \^carry_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_251 is
  port (
    ex_piperun_masked_no3 : out STD_LOGIC;
    ex_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_251 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_251;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_251 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => ex_piperun_masked_no2,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => ex_piperun_masked_no3,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_253 is
  port (
    ex_piperun_masked_no2 : out STD_LOGIC;
    ex_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_253 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_253;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_253 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_piperun_masked_no2\ : STD_LOGIC;
begin
  \^ex_piperun_masked_no2\ <= lopt;
  ex_piperun_masked_no2 <= \^ex_piperun_masked_no2\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_255 is
  port (
    ex_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_255 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_255;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_255 is
  signal \<const0>\ : STD_LOGIC;
  signal \^ex_piperun_masked_no1\ : STD_LOGIC;
begin
  \^ex_piperun_masked_no1\ <= lopt;
  ex_piperun_masked_no1 <= \^ex_piperun_masked_no1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_257 is
  port (
    bp1_piperun_masked_no1 : out STD_LOGIC;
    \if0_PC_i_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_257 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_257;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_257 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__22_n_0\ : STD_LOGIC;
  signal \^bp1_piperun_masked_no1\ : STD_LOGIC;
begin
  \^bp1_piperun_masked_no1\ <= lopt;
  bp1_piperun_masked_no1 <= \^bp1_piperun_masked_no1\;
  lopt_1 <= \<const1>\;
  lopt_2 <= \Using_FPGA.Native_i_1__22_n_0\;
\Using_FPGA.Native_i_1__22\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \Using_FPGA.Native_1\,
      O => \Using_FPGA.Native_i_1__22_n_0\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_259 is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_259 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_259;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_259 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  E(0) <= \^e\(0);
  \^e\(0) <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_261 is
  port (
    bp0_piperun_masked_no1 : out STD_LOGIC;
    \bp1_PC_i_reg[0]\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_261 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_261;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_261 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  lopt <= \^lopt_1\;
  lopt_3 <= lopt_2;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => E(0),
      CO(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \^lopt_1\,
      CO(0) => bp0_piperun_masked_no1,
      CYINIT => '0',
      DI(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 2),
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 2) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 2),
      S(1) => lopt_3,
      S(0) => \bp1_PC_i_reg[0]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_263 is
  port (
    bp1_raw_valid_reg : out STD_LOGIC;
    bp1_dead_fetch_hold_bt : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    bp0_piperun_masked_no1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_dead_fetch_hold_reg_0 : in STD_LOGIC;
    bp1_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_263 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_263;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_263 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^bp1_dead_fetch_hold_bt\ : STD_LOGIC;
  signal \^bp1_raw_valid_reg\ : STD_LOGIC;
begin
  \^bp1_raw_valid_reg\ <= lopt;
  bp1_dead_fetch_hold_bt <= \^bp1_dead_fetch_hold_bt\;
  bp1_raw_valid_reg <= \^bp1_raw_valid_reg\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
bp1_dead_fetch_hold_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FFEAF0EA"
    )
        port map (
      I0 => bp1_dead_fetch_hold_reg_0,
      I1 => bp1_dead_fetch_hold_reg_1,
      I2 => kill_fetch_mmu,
      I3 => \^bp1_raw_valid_reg\,
      I4 => bp0_dead_fetch_hold,
      I5 => \^bp1_dead_fetch_hold_bt\,
      O => bp1_dead_fetch_hold_reg
    );
bp1_dead_fetch_hold_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => sync_reset,
      I1 => \^bp1_raw_valid_reg\,
      I2 => E(0),
      O => \^bp1_dead_fetch_hold_bt\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_27 is
  port (
    carry_0 : out STD_LOGIC;
    SRL16_Sel_0 : in STD_LOGIC;
    carry_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_27 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_27;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_27 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_0\ : STD_LOGIC;
begin
  \^carry_0\ <= lopt;
  carry_0 <= \^carry_0\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_29 is
  port (
    Hit : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    carry_0 : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\ : in STD_LOGIC;
    force_stop_i : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_29 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_29;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_29 is
  signal \^hit\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  Hit <= \^hit\;
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF5D"
    )
        port map (
      I0 => single_Step_N,
      I1 => \^hit\,
      I2 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\,
      I3 => force_stop_i,
      I4 => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\,
      O => single_Step_N_reg
    );
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_0,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \^hit\,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_305 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_305 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_305;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_305 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__105_n_0\ : STD_LOGIC;
  signal \^of_m3_stall_conflict\ : STD_LOGIC;
begin
  \^of_m3_stall_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__105_n_0\;
  of_m3_stall_conflict <= \^of_m3_stall_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__105\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => m3_complete_in_later_stage,
      I1 => m3_div_stall,
      O => \Using_FPGA.Native_i_1__105_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_307 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    A0_out : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_307 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_307;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_307 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m3_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m3_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m3_write_op_conflict <= \^of_read_m3_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_308 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_308 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_308;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_308 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_309 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_309 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_309;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_309 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m3_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_311 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    of_m2_no_stall_conflict : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_311 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_311;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_311 is
  signal \<const0>\ : STD_LOGIC;
  signal of_m2_stall_conflict : STD_LOGIC;
begin
  lopt_1 <= \<const0>\;
  of_m2_stall_conflict <= lopt;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__216\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFF45"
    )
        port map (
      I0 => of_m2_stall_conflict,
      I1 => of_m2_no_stall_conflict,
      I2 => of_m3_stall_conflict,
      I3 => of_m1_no_stall_conflict,
      I4 => And_OUT,
      I5 => of_m0_no_stall_conflict,
      O => m2_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_314 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    A1_out : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_314 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_314;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_314 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m2_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m2_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m2_write_op_conflict <= \^of_read_m2_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_316 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_316 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_316;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_316 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_317 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_317 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_317;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_317 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m2_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_319 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_319 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_319;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_319 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m1_stall_conflict\ : STD_LOGIC;
begin
  \^of_m1_stall_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m1_stall_conflict <= \^of_m1_stall_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_322 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    A2_out : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_322 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_322;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_322 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m1_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m1_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m1_write_op_conflict <= \^of_read_m1_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_324 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_324 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_324;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_324 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_325 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_325 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_325;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_325 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m1_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_327 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    of_op3_ex_stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_327 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_327;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_327 is
  signal \<const0>\ : STD_LOGIC;
  signal of_m0_stall_conflict : STD_LOGIC;
begin
  lopt_1 <= \<const0>\;
  of_m0_stall_conflict <= lopt;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__215\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31303131"
    )
        port map (
      I0 => of_m0_stall_conflict,
      I1 => of_op3_ex_stall,
      I2 => And_OUT,
      I3 => of_m0_no_stall_conflict,
      I4 => of_m1_stall_conflict,
      O => m0_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_330 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    A3_out : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_330 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_330;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_330 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m0_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m0_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m0_write_op_conflict <= \^of_read_m0_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_332 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_332 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_332;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_332 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_333 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_333 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_333;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_333 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m0_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_335 is
  port (
    of_op3_ex_stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_335 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_335;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_335 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_op3_ex_stall\ : STD_LOGIC;
begin
  \^of_op3_ex_stall\ <= lopt;
  lopt_1 <= \<const0>\;
  of_op3_ex_stall <= \^of_op3_ex_stall\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_338 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    A4_out : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_338 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_338;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_338 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_ex_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_ex_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_ex_write_op_conflict <= \^of_read_ex_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_340 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_340 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_340;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_340 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_341 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_341 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_341;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_341 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_ex_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_343 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    S_4 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_343 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_343;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_343 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_m3_use_conflict\ : STD_LOGIC;
begin
  \^of_m3_use_conflict\ <= lopt;
  lopt_1 <= \<const1>\;
  of_m3_use_conflict <= \^of_m3_use_conflict\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_345 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    OF_Use_Op_B : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_345 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_345;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_345 is
  signal \<const0>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_347 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_347 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_347;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_347 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \cur_data_i_reg[15]\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_349 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_349 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_349;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_349 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_m2_use_conflict\ : STD_LOGIC;
begin
  \^of_m2_use_conflict\ <= lopt;
  lopt_1 <= \<const1>\;
  of_m2_use_conflict <= \^of_m2_use_conflict\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_351 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_351 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_351;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_351 is
  signal \<const0>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_353 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_353 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_353;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_353 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \cur_data_i_reg[15]\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_355 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_355 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_355;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_355 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_m1_use_conflict\ : STD_LOGIC;
begin
  \^of_m1_use_conflict\ <= lopt;
  lopt_1 <= \<const1>\;
  of_m1_use_conflict <= \^of_m1_use_conflict\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_357 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_357 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_357;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_357 is
  signal \<const0>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_359 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_359 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_359;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_359 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \cur_data_i_reg[15]\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_361 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_361 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_361;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_361 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_m0_use_conflict\ : STD_LOGIC;
begin
  \^of_m0_use_conflict\ <= lopt;
  lopt_1 <= \<const1>\;
  of_m0_use_conflict <= \^of_m0_use_conflict\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_363 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_363 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_363;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_363 is
  signal \<const0>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_365 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_365 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_365;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_365 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \cur_data_i_reg[15]\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_367 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    part_c_and_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_367 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_367;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_367 is
  signal \<const1>\ : STD_LOGIC;
  signal \^of_ex_use_conflict\ : STD_LOGIC;
begin
  \^of_ex_use_conflict\ <= lopt;
  lopt_1 <= \<const1>\;
  of_ex_use_conflict <= \^of_ex_use_conflict\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_369 is
  port (
    part_c_and_b : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_369 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_369;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_369 is
  signal \<const0>\ : STD_LOGIC;
  signal \^part_c_and_b\ : STD_LOGIC;
begin
  \^part_c_and_b\ <= lopt;
  lopt_1 <= \<const0>\;
  part_c_and_b <= \^part_c_and_b\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_371 is
  port (
    part_c : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_371 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_371;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_371 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => part_c,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => Q(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_407 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_407 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_407;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_407 is
  signal \<const0>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__108_n_0\ : STD_LOGIC;
  signal \^of_m3_stall_conflict\ : STD_LOGIC;
begin
  \^of_m3_stall_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \Using_FPGA.Native_i_1__108_n_0\;
  of_m3_stall_conflict <= \^of_m3_stall_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__108\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => m3_complete_in_later_stage,
      I1 => m3_div_stall,
      O => \Using_FPGA.Native_i_1__108_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_409 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_409 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_409;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_409 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m3_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m3_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m3_write_op_conflict <= \^of_read_m3_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_411 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_411 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_411;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_411 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_412 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_412 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_412;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_412 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m3_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_414 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_414 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_414;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_414 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m2_stall_conflict\ : STD_LOGIC;
begin
  \^of_m2_stall_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m2_stall_conflict <= \^of_m2_stall_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_417 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_417 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_417;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_417 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m2_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m2_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m2_write_op_conflict <= \^of_read_m2_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_419 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_419 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_419;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_419 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_420 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_420 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_420;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_420 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m2_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_422 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_422 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_422;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_422 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m1_stall_conflict\ : STD_LOGIC;
begin
  \^of_m1_stall_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m1_stall_conflict <= \^of_m1_stall_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_425 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_425 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_425;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_425 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m1_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m1_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m1_write_op_conflict <= \^of_read_m1_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_427 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_427 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_427;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_427 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_428 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_428 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_428;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_428 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m1_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_43 is
  port (
    if4_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    if4_ready_tmp3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_43 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_43;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_43 is
  signal \<const1>\ : STD_LOGIC;
  signal \^if4_ready\ : STD_LOGIC;
begin
  \^if4_ready\ <= lopt;
  if4_ready <= \^if4_ready\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_430 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall4_in : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_430 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_430;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_430 is
  signal \<const0>\ : STD_LOGIC;
  signal of_m0_stall_conflict : STD_LOGIC;
begin
  lopt_1 <= \<const0>\;
  of_m0_stall_conflict <= lopt;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__213\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31303131"
    )
        port map (
      I0 => of_m0_stall_conflict,
      I1 => OF_Op_EX_Stall4_in,
      I2 => And_OUT,
      I3 => of_m0_no_stall_conflict,
      I4 => of_m1_stall_conflict,
      O => m0_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_433 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_433 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_433;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_433 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m0_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m0_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m0_write_op_conflict <= \^of_read_m0_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_435 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_435 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_435;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_435 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_436 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_436 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_436;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_436 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m0_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_438 is
  port (
    OF_Op_EX_Stall4_in : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_438 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_438;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_438 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_op_ex_stall4_in\ : STD_LOGIC;
begin
  OF_Op_EX_Stall4_in <= \^of_op_ex_stall4_in\;
  \^of_op_ex_stall4_in\ <= lopt;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_441 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_441 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_441;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_441 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_ex_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_ex_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_ex_write_op_conflict <= \^of_read_ex_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_443 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_443 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_443;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_443 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_444 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_444 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_444;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_444 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= lopt_5;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => carry_chain_1,
      CO(3) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_ex_addr_conflict,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3),
      S(2) => lopt_6,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_446 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_446 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_446;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_446 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m3_use_conflict\ : STD_LOGIC;
begin
  \^of_m3_use_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m3_use_conflict <= \^of_m3_use_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_448 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_448 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_448;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_448 is
  signal \<const1>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_45 is
  port (
    if4_ready_tmp2 : out STD_LOGIC;
    S : in STD_LOGIC;
    if4_ready_tmp1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_45 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_45;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_45 is
  signal \<const1>\ : STD_LOGIC;
  signal \^if4_ready_tmp2\ : STD_LOGIC;
begin
  \^if4_ready_tmp2\ <= lopt;
  if4_ready_tmp2 <= \^if4_ready_tmp2\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_450 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_450 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_450;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_450 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \Using_FPGA.Native_0\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_452 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_452 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_452;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_452 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m2_use_conflict\ : STD_LOGIC;
begin
  \^of_m2_use_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m2_use_conflict <= \^of_m2_use_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_454 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_454 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_454;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_454 is
  signal \<const1>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_456 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_456 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_456;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_456 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \Using_FPGA.Native_0\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_458 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_458 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_458;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_458 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m1_use_conflict\ : STD_LOGIC;
begin
  \^of_m1_use_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m1_use_conflict <= \^of_m1_use_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_460 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_460 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_460;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_460 is
  signal \<const1>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_462 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_462 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_462;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_462 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \Using_FPGA.Native_0\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_464 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_464 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_464;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_464 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m0_use_conflict\ : STD_LOGIC;
begin
  \^of_m0_use_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m0_use_conflict <= \^of_m0_use_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_466 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_466 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_466;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_466 is
  signal \<const1>\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
begin
  \^cur_data_i_reg[26]\ <= lopt;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_468 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_468 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_468;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_468 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => \Using_FPGA.Native_0\,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_47 is
  port (
    if4_ready_tmp1 : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_47 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_47;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_47 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => if4_ready_tmp1,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_470 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    part_c_or_not_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_470 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_470;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_470 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_ex_use_conflict\ : STD_LOGIC;
begin
  \^of_ex_use_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_ex_use_conflict <= \^of_ex_use_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_472 is
  port (
    part_c_or_not_b : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_472 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_472;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_472 is
  signal \<const1>\ : STD_LOGIC;
  signal \^part_c_or_not_b\ : STD_LOGIC;
begin
  \^part_c_or_not_b\ <= lopt;
  lopt_1 <= \<const1>\;
  part_c_or_not_b <= \^part_c_or_not_b\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_474 is
  port (
    part_c : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_474 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_474;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_474 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => part_c,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_48 is
  port (
    if4_ready_tmp3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    if4_ready_tmp2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_48 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_48;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_48 is
  signal \<const0>\ : STD_LOGIC;
  signal \^if4_ready_tmp3\ : STD_LOGIC;
begin
  \^if4_ready_tmp3\ <= lopt;
  if4_ready_tmp3 <= \^if4_ready_tmp3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_500 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_500 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_500;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_500 is
  signal \Using_FPGA.Native_i_1__107_n_0\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_read_m3_write_op_conflict,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => of_m3_stall_conflict,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => \Using_FPGA.Native_i_1__107_n_0\
    );
\Using_FPGA.Native_i_1__107\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => m3_complete_in_later_stage,
      I1 => m3_div_stall,
      O => \Using_FPGA.Native_i_1__107_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_502 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_502 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_502;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_502 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m3_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m3_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m3_write_op_conflict <= \^of_read_m3_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_504 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_504 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_504;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_504 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_505 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_505 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_505;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_505 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m3_addr_conflict\ : STD_LOGIC;
begin
  \^of_m3_addr_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m3_addr_conflict <= \^of_m3_addr_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_507 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_507 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_507;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_507 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_read_m2_write_op_conflict,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => of_m2_stall_conflict,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_510 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_510 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_510;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_510 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m2_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m2_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m2_write_op_conflict <= \^of_read_m2_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_512 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_512 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_512;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_512 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_513 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_513 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_513;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_513 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m2_addr_conflict\ : STD_LOGIC;
begin
  \^of_m2_addr_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m2_addr_conflict <= \^of_m2_addr_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_515 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_515 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_515;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_515 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_read_m1_write_op_conflict,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => of_m1_stall_conflict,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => m1_m2_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_518 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_518 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_518;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_518 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m1_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m1_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m1_write_op_conflict <= \^of_read_m1_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_52 is
  port (
    m3_databus_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    m3_ready_tmp : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_52 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_52;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_52 is
  signal \<const1>\ : STD_LOGIC;
  signal \^m3_databus_ready\ : STD_LOGIC;
begin
  \^m3_databus_ready\ <= lopt;
  lopt_1 <= \<const1>\;
  m3_databus_ready <= \^m3_databus_ready\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_520 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_520 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_520;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_520 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_521 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_521 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_521;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_521 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m1_addr_conflict\ : STD_LOGIC;
begin
  \^of_m1_addr_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m1_addr_conflict <= \^of_m1_addr_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_523 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_523 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_523;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_523 is
  signal of_m0_stall_conflict : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_read_m0_write_op_conflict,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => of_m0_stall_conflict,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => m0_complete_in_later_stage
    );
\Using_FPGA.Native_i_1__211\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"31303131"
    )
        port map (
      I0 => of_m0_stall_conflict,
      I1 => OF_Op_EX_Stall,
      I2 => And_OUT,
      I3 => of_m0_no_stall_conflict,
      I4 => of_m1_stall_conflict,
      O => m0_complete_in_later_stage_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_526 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_526 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_526;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_526 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_m0_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_m0_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_m0_write_op_conflict <= \^of_read_m0_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_528 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_528 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_528;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_528 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_529 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_529 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_529;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_529 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_m0_addr_conflict\ : STD_LOGIC;
begin
  \^of_m0_addr_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_m0_addr_conflict <= \^of_m0_addr_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_531 is
  port (
    OF_Op_EX_Stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_531 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_531;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_531 is
  signal \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => of_read_ex_write_op_conflict,
      CO(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED\(3 downto 1),
      CO(0) => OF_Op_EX_Stall,
      CYINIT => '0',
      DI(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED\(3 downto 1),
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3 downto 1) => \NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED\(3 downto 1),
      S(0) => ex_complete_in_later_stage
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_534 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_534 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_534;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_534 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_read_ex_write_op_conflict\ : STD_LOGIC;
begin
  \^of_read_ex_write_op_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_read_ex_write_op_conflict <= \^of_read_ex_write_op_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_536 is
  port (
    carry_chain_1 : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_536 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_536;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_536 is
  signal \<const0>\ : STD_LOGIC;
  signal \^carry_chain_1\ : STD_LOGIC;
begin
  \^carry_chain_1\ <= lopt;
  carry_chain_1 <= \^carry_chain_1\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_537 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    carry_chain_1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_537 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_537;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_537 is
  signal \<const0>\ : STD_LOGIC;
  signal \^of_ex_addr_conflict\ : STD_LOGIC;
begin
  \^of_ex_addr_conflict\ <= lopt;
  lopt_1 <= \<const0>\;
  of_ex_addr_conflict <= \^of_ex_addr_conflict\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_539 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_539 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_539;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_539 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m3_use_conflict,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_54 is
  port (
    m3_ready_tmp : out STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_54 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_54;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_54 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => m3_ready_tmp,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '1',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_541 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_541 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_541;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_541 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m2_use_conflict,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_543 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_543 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_543;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_543 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m1_use_conflict,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_545 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_545 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_545;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_545 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_m0_use_conflict,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_547 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_547 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_547;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_547 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => of_ex_use_conflict,
      CYINIT => '1',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_569 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    if2_ibus_access_raw0 : out STD_LOGIC;
    bp0_dead_fetch_hold_reg : out STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_0 : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp0_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_569 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_569;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_569 is
  signal \<const1>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of if2_ibus_access_raw_i_2 : label is "soft_lutpair137";
  attribute SOFT_HLUTNM of if2_ibus_first_cycle_raw_i_1 : label is "soft_lutpair137";
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const1>\;
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
bp0_dead_fetch_hold_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => bp0_dead_fetch_hold,
      I1 => \^using_fpga.native_0\,
      I2 => DI(0),
      I3 => bp0_dead_fetch_hold_reg_0,
      I4 => sync_reset,
      O => bp0_dead_fetch_hold_reg
    );
if2_ibus_access_raw_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => if2_ibus_first_cycle_raw_reg_0,
      I1 => if2_ibus_first_cycle_raw_reg,
      I2 => \^using_fpga.native_0\,
      O => if2_ibus_access_raw0
    );
if2_ibus_first_cycle_raw_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => \^using_fpga.native_0\,
      I1 => if2_ibus_first_cycle_raw_reg,
      I2 => if2_ibus_first_cycle_raw_reg_0,
      I3 => if2_ibus_first_cycle_raw_reg_1,
      I4 => sync_reset,
      O => bp1_dead_fetch_hold_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_571 is
  port (
    kill_fetch : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    if2_raw_valid_reg : out STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    if2_dead_fetch_hold_reg : in STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_571 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_571;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_571 is
  signal \<const1>\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_1__209_n_0\ : STD_LOGIC;
  signal \^kill_fetch\ : STD_LOGIC;
begin
  \^kill_fetch\ <= lopt;
  kill_fetch <= \^kill_fetch\;
  lopt_1 <= \<const1>\;
  lopt_2 <= \Using_FPGA.Native_i_1__209_n_0\;
\Using_FPGA.Native_i_1__209\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00FF00BF"
    )
        port map (
      I0 => ex_gpr_write_addr(0),
      I1 => \Using_FPGA.Native_0\,
      I2 => \Using_FPGA.Native_1\,
      I3 => \Using_FPGA.Native_2\,
      I4 => ex_dead_valid_hold,
      O => \Using_FPGA.Native_i_1__209_n_0\
    );
\Using_FPGA.Native_i_1__210\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"5545"
    )
        port map (
      I0 => \Using_FPGA.Native_3\,
      I1 => \Using_FPGA.Native_4\,
      I2 => \Using_FPGA.Native_5\,
      I3 => \^kill_fetch\,
      O => \Serial_Dbg_Intf.if_debug_ready_i_reg\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
if2_dead_fetch_hold_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^kill_fetch\,
      I1 => if2_dead_fetch_hold_reg,
      I2 => if2_dead_fetch_hold_reg_0,
      O => if2_raw_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_573 is
  port (
    jump_carry1 : out STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_573 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_573;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_573 is
  signal \^jump_carry1\ : STD_LOGIC;
begin
  \^jump_carry1\ <= lopt;
  jump_carry1 <= \^jump_carry1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_574 is
  port (
    jump_carry2 : out STD_LOGIC;
    jump_carry1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    force_Val2_N : in STD_LOGIC;
    force2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_574 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_574;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_574 is
  signal force_DI2 : STD_LOGIC;
  signal force_jump2 : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_8;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry1,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => jump_carry2,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => force_DI2,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_9,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => force_jump2
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => force2,
      O => force_jump2
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => force_Val2_N,
      O => force_DI2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_575 is
  port (
    jump_carry3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    jump_carry2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_575 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_575;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_575 is
  signal \<const0>\ : STD_LOGIC;
  signal \^jump_carry3\ : STD_LOGIC;
begin
  \^jump_carry3\ <= lopt;
  jump_carry3 <= \^jump_carry3\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_576 is
  port (
    ex_jump_wanted : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    jump_carry3 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    of_raw_valid : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_576 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_576;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_576 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^ex_jump_wanted\ : STD_LOGIC;
begin
  \^ex_jump_wanted\ <= lopt;
  ex_jump_wanted <= \^ex_jump_wanted\;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"DD5D"
    )
        port map (
      I0 => \^ex_jump_wanted\,
      I1 => \Using_FPGA.Native_0\,
      I2 => ex_branch_with_delayslot,
      I3 => of_raw_valid,
      O => ex_branch_with_delayslot_reg
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_577 is
  port (
    jump_carry5 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_jump_wanted : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_577 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_577;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_577 is
  signal \<const0>\ : STD_LOGIC;
  signal \^jump_carry5\ : STD_LOGIC;
begin
  \^jump_carry5\ <= lopt;
  jump_carry5 <= \^jump_carry5\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_578 is
  port (
    jump_carry8 : out STD_LOGIC;
    jump_carry5 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_578 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_578;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_578 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_8 <= lopt_7;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => jump_carry5,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => jump_carry8,
      CYINIT => '0',
      DI(3) => lopt_8,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_8,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_579 is
  port (
    ex_mbar_decode_reg : out STD_LOGIC;
    bp0_jump0 : out STD_LOGIC;
    Clear_Buffer : out STD_LOGIC;
    M0_Jump_Taken0 : out STD_LOGIC;
    ex_delayslot_Instr0 : out STD_LOGIC;
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    bp0_keep_jump_reg : out STD_LOGIC;
    \bp0_branch_target_reg[31]\ : in STD_LOGIC;
    jump_carry8 : in STD_LOGIC;
    bp0_keep_jump : in STD_LOGIC;
    wb_abort_div : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    keep_jump_taken_with_ds : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    keep_jump_taken_with_ds_reg_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    bp0_keep_jump_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_579 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_579;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_579 is
  signal \<const0>\ : STD_LOGIC;
  signal \^ex_mbar_decode_reg\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of M0_Jump_Taken_i_1 : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2\ : label is "soft_lutpair136";
  attribute SOFT_HLUTNM of bp0_jump_i_1 : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of bp0_keep_jump_i_1 : label is "soft_lutpair135";
  attribute SOFT_HLUTNM of ex_delayslot_Instr_i_1 : label is "soft_lutpair134";
  attribute SOFT_HLUTNM of keep_jump_taken_with_ds_i_1 : label is "soft_lutpair134";
begin
  \^ex_mbar_decode_reg\ <= lopt;
  ex_mbar_decode_reg <= \^ex_mbar_decode_reg\;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
M0_Jump_Taken_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_mbar_decode_reg\,
      I1 => ex_jump_hold,
      O => M0_Jump_Taken0
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Using_FPGA.Native_0\,
      I1 => \^ex_mbar_decode_reg\,
      O => Clear_Buffer
    );
\bp0_branch_target[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => \^ex_mbar_decode_reg\,
      I1 => Q(0),
      I2 => Q(2),
      I3 => wb_abort_div,
      I4 => Q(1),
      O => \wb_exception_raw_kind_reg[31]\(0)
    );
bp0_jump_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => bp0_keep_jump,
      I1 => \^ex_mbar_decode_reg\,
      I2 => wb_abort_div,
      O => bp0_jump0
    );
bp0_keep_jump_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000FE"
    )
        port map (
      I0 => bp0_keep_jump,
      I1 => wb_abort_div,
      I2 => \^ex_mbar_decode_reg\,
      I3 => bp0_keep_jump_reg_0,
      I4 => sync_reset,
      O => bp0_keep_jump_reg
    );
ex_delayslot_Instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => ex_branch_with_delayslot,
      I2 => \^ex_mbar_decode_reg\,
      O => ex_delayslot_Instr0
    );
keep_jump_taken_with_ds_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => keep_jump_taken_with_ds,
      I1 => \^ex_mbar_decode_reg\,
      I2 => ex_branch_with_delayslot,
      I3 => sync_reset,
      I4 => keep_jump_taken_with_ds_reg_0,
      O => keep_jump_taken_with_ds_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_584 is
  port (
    zero_CI_6 : out STD_LOGIC;
    EX_Op1_CMP_Equal : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_584 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_584;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_584 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_5 <= \^lopt_6\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_6\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_6,
      CYINIT => '1',
      DI(3) => \^lopt_2\,
      DI(2) => \^lopt_2\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_5\,
      S(1) => \^lopt_3\,
      S(0) => EX_Op1_CMP_Equal
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_585 is
  port (
    EX_Op1_Zero : out STD_LOGIC;
    div_iterations_early : out STD_LOGIC;
    div_busy_reg : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_1 : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    div_busy_reg_0 : in STD_LOGIC;
    div_busy_reg_1 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_585 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_585;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_585 is
  signal \^ex_op1_zero\ : STD_LOGIC;
begin
  EX_Op1_Zero <= \^ex_op1_zero\;
  \^ex_op1_zero\ <= lopt;
div_busy_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0074"
    )
        port map (
      I0 => \^ex_op1_zero\,
      I1 => ex_start_div,
      I2 => div_busy_reg_0,
      I3 => div_busy_reg_1,
      O => div_iterations_early
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_586 is
  port (
    zero_CI_1 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_2 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_586 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_586;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_586 is
  signal \^zero_ci_1\ : STD_LOGIC;
begin
  \^zero_ci_1\ <= lopt;
  zero_CI_1 <= \^zero_ci_1\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_587 is
  port (
    zero_CI_2 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_587 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_587;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_587 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_4\ <= lopt_3;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_2 <= \^lopt_3\;
  lopt_4 <= \^lopt_5\;
  lopt_7 <= lopt_6;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => zero_CI_3,
      CO(3) => \^lopt_5\,
      CO(2) => \^lopt_3\,
      CO(1) => \^lopt_1\,
      CO(0) => zero_CI_2,
      CYINIT => '0',
      DI(3) => \^lopt_6\,
      DI(2) => ex_op1_cmp_equal_n,
      DI(1) => ex_op1_cmp_equal_n,
      DI(0) => ex_op1_cmp_equal_n,
      O(3 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(3 downto 0),
      S(3) => lopt_7,
      S(2) => \^lopt_4\,
      S(1) => \^lopt_2\,
      S(0) => \Using_FPGA.Native_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_588 is
  port (
    zero_CI_3 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_4 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_588 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_588;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_588 is
  signal \^zero_ci_3\ : STD_LOGIC;
begin
  \^zero_ci_3\ <= lopt;
  zero_CI_3 <= \^zero_ci_3\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_589 is
  port (
    zero_CI_4 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_5 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_589 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_589;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_589 is
  signal \^zero_ci_4\ : STD_LOGIC;
begin
  \^zero_ci_4\ <= lopt;
  zero_CI_4 <= \^zero_ci_4\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_590 is
  port (
    zero_CI_5 : out STD_LOGIC;
    S : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    zero_CI_6 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_590 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_590;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_590 is
  signal \^zero_ci_5\ : STD_LOGIC;
begin
  \^zero_ci_5\ <= lopt;
  zero_CI_5 <= \^zero_ci_5\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_790 is
  port (
    ex_pre_alu_carry : out STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_790 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_790;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_790 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= lopt_10;
\Using_FPGA.Native_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => ex_pre_alu_carry,
      CYINIT => EX_CarryIn,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_10,
      O(2 downto 0) => \NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED\(2 downto 0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => '1'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_791 is
  port (
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    ex_pre_alu_carry : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_791 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_791;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_791 is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
begin
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \^using_fpga.native_0\ <= lopt;
  lopt_1 <= \<const0>\;
  lopt_2 <= \<const1>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_823 is
  port (
    CI : out STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    \m0_addr_3lsb_reg[2]\ : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_823 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_823;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_823 is
  signal \^ci\ : STD_LOGIC;
begin
  CI <= \^ci\;
  \^ci\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_916 is
  port (
    CI : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_916 : entity is "MB_MUXCY";
end microblaze_microblaze_0_0_MB_MUXCY_916;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_916 is
  signal \^ci\ : STD_LOGIC;
begin
  CI <= \^ci\;
  \^ci\ <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.D_Handle[0].D_Sel_reg\ : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  D(0) <= \^d\(0);
  \^d\(0) <= lopt;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_591 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[10]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[10]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_591 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_591;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_591 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_592 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[11]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[11]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_592 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_592;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_592 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[11]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[11]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_593 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[12]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[12]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_593 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_593;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_593 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_594 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[13]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[13]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_594 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_594;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_594 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_595 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[14]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[14]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_595 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_595;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_595 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_596 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[15]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[15]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_596 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_596;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_596 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[15]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[15]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_597 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[16]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[16]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_597 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_597;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_597 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_598 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[17]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[17]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_598 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_598;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_598 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_599 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[18]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[18]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_599 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_599;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_599 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_600 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[19]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[19]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_600 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_600;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_600 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[19]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[19]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_601 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[1]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[1]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_601 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_601;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_601 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_602 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[20]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[20]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_602 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_602;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_602 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_603 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[21]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[21]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_603 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_603;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_603 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_604 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[22]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[22]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_604 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_604;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_604 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_605 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[23]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[23]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_605 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_605;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_605 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[23]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_606 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[24]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[24]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_606 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_606;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_606 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_607 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[25]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[25]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_607 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_607;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_607 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_608 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[26]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[26]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_608 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_608;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_608 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_609 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[27]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[27]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_609 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_609;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_609 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[27]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[27]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_610 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[28]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[28]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_610 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_610;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_610 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_611 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[29]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[29]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_611 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_611;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_611 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_612 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[2]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[2]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_612 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_612;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_612 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_613 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[30]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[30]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_613 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_613;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_613 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_614 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_614 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_614;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_614 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => CI,
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_615 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[3]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[3]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_615 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_615;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_615 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_9;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_8 <= \^lopt_9\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[3]_0\,
      CO(3) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_9\,
      O(2) => \^lopt_8\,
      O(1) => \^lopt_7\,
      O(0) => O,
      S(3) => lopt_10,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[3]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_616 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[4]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[4]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_616 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_616;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_616 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_617 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[5]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[5]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_617 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_617;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_617 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_618 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[6]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[6]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_618 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_618;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_618 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_619 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[7]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[7]_0\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_619 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_619;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_619 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Using_FPGA.D_reg[7]_0\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => \Using_FPGA.D_reg[7]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_620 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[8]\ : in STD_LOGIC;
    \Using_FPGA.D_reg[8]_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_620 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_620;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_620 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_621 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    \Using_FPGA.D_reg[9]\ : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_621 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_621;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_621 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_622 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    m3_div_overflow_i_reg : out STD_LOGIC;
    negative_operands_reg : out STD_LOGIC;
    New_Q_Sel_31 : in STD_LOGIC;
    LO : in STD_LOGIC;
    m3_div_overflow_i_reg_0 : in STD_LOGIC;
    m3_div_overflow_i_reg_1 : in STD_LOGIC;
    m3_div_overflow_i_reg_2 : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m3_div_overflow_i_reg_3 : in STD_LOGIC;
    negative_operands : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m3_sel_div_res : in STD_LOGIC;
    m3_div_overflow_i_i_2_0 : in STD_LOGIC;
    lopt : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_622 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_622;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_622 is
  signal \^d\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal m3_div_overflow_i_i_3_n_0 : STD_LOGIC;
begin
  D(0) <= \^d\(0);
  \^d\(0) <= lopt;
floating_hold_div_overflow_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0008000800088888"
    )
        port map (
      I0 => \^d\(0),
      I1 => negative_operands,
      I2 => m3_sel_div_res,
      I3 => m2_is_div_instr,
      I4 => m2_piperun,
      I5 => m3_div_overflow_i_reg_3,
      O => negative_operands_reg
    );
m3_div_overflow_i_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAABAABBFFFBFFBB"
    )
        port map (
      I0 => m3_div_overflow_i_reg_0,
      I1 => m3_div_overflow_i_reg_1,
      I2 => m3_div_overflow_i_reg_2,
      I3 => m2_piperun,
      I4 => m3_div_overflow_i_reg_3,
      I5 => m3_div_overflow_i_i_3_n_0,
      O => m3_div_overflow_i_reg
    );
m3_div_overflow_i_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8880FFFF88800000"
    )
        port map (
      I0 => \^d\(0),
      I1 => negative_operands,
      I2 => m2_is_div_instr,
      I3 => m3_sel_div_res,
      I4 => m3_div_overflow_i_reg_2,
      I5 => m3_div_overflow_i_i_2_0,
      O => m3_div_overflow_i_i_3_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_624 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[10]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_624 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_624;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_624 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_626 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[11]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_626 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_626;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_626 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[11]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_628 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[12]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_628 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_628;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_628 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_630 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[13]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_630 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_630;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_630 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_632 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[14]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_632 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_632;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_632 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_634 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[15]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_634 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_634;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_634 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[15]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_636 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[16]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_636 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_636;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_636 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_638 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[17]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_638 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_638;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_638 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_640 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[18]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_640 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_640;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_640 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_642 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[19]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_642 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_642;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_642 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[19]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_644 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[1]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_644 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_644;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_644 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_646 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[20]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_646 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_646;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_646 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_648 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[21]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_648 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_648;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_648 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_650 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[22]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_650 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_650;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_650 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_652 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[23]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_652 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_652;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_652 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[23]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_654 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[24]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_654 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_654;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_654 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_656 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[25]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_656 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_656;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_656 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_658 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[26]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_658 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_658;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_658 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_660 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[27]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_660 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_660;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_660 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[27]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_662 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[28]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_662 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_662;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_662 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_664 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[29]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_664 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_664;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_664 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_666 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[2]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_666 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_666;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_666 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_668 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[30]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_668 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_668;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_668 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_670 is
  port (
    New_Q_Carry : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    make_result_neg : in STD_LOGIC;
    \Q_reg[31]\ : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    \Q_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_start_div : in STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_670 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_670;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_670 is
  signal \^new_q_carry\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  New_Q_Carry(0) <= \^new_q_carry\(0);
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => \^new_q_carry\(0),
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\Using_FPGA.Native_i_1__125\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8F888888"
    )
        port map (
      I0 => make_result_neg,
      I1 => \Q_reg[31]\,
      I2 => ex_div_unsigned,
      I3 => \Q_reg[31]_0\(0),
      I4 => ex_start_div,
      O => \^new_q_carry\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_672 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[3]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC;
    lopt_9 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_672 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_672;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_672 is
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_9;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_7 <= \^lopt_8\;
  lopt_8 <= \^lopt_9\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[3]\,
      CO(3) => \NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED\(3),
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \NLW_Using_FPGA.Native_I1_CARRY4_DI_UNCONNECTED\(3),
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => \^lopt_9\,
      O(2) => \^lopt_8\,
      O(1) => \^lopt_7\,
      O(0) => O,
      S(3) => lopt_10,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_674 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[4]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_674 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_674;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_674 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_676 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[5]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_676 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_676;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_676 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_678 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[6]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_678 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_678;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_678 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_680 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[7]\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_680 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_680;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_680 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => \Q_reg[7]\,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => LO,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => '0',
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => O,
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_682 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    \Q_reg[8]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_682 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_682;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_682 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_684 is
  port (
    LO : out STD_LOGIC;
    O : out STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_684 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_684;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_684 is
  signal \<const0>\ : STD_LOGIC;
  signal \^lo\ : STD_LOGIC;
  signal \^o\ : STD_LOGIC;
begin
  LO <= \^lo\;
  O <= \^o\;
  \^lo\ <= lopt;
  \^o\ <= lopt_2;
  lopt_1 <= \<const0>\;
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_854 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_854 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_854;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_854 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_856 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_856 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_856;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_856 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_858 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_858 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_858;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_858 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_860 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_860 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_860;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_860 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => ex_databus_addr(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_862 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_862 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_862;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_862 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_864 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_864 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_864;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_864 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_866 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_866 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_866;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_866 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_868 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_alu_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_868 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_868;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_868 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_alu_result\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_alu_result\(0) <= lopt_1;
  \^ex_carryout\ <= lopt;
  ex_alu_result(0) <= \^ex_alu_result\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_870 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_alu_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_870 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_870;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_870 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => ex_alu_result(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_872 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_872 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_872;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_872 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  signal \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 2 to 2 );
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= lopt_11;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_11,
      O(2) => \NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED\(2),
      O(1) => \^lopt_10\,
      O(0) => ex_databus_addr(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_874 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_874 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_874;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_874 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_876 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_876 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_876;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_876 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_878 is
  port (
    ex_sel_alu_reg : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_878 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_878;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_878 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[27]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => ex_sel_alu_res,
      O => ex_sel_alu_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_880 is
  port (
    ex_sel_alu_reg : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_880 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_880;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_880 is
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \^ex_databus_addr\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\m0_Ex_Result_i[26]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => ex_sel_alu_res,
      O => ex_sel_alu_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_882 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_882 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_882;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_882 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_884 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_884 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_884;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_884 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_886 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[23]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_886 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_886;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_886 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[23]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => ex_fwd(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_888 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[22]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_888 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_888;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_888 is
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \^ex_databus_addr\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\m0_Ex_Result_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[22]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => ex_fwd(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_890 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[21]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_890 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_890;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_890 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[21]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_892 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[20]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_892 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_892;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_892 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[20]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_894 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_894 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_894;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_894 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_896 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[19]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_896 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_896;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_896 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[19]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => ex_fwd(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_898 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[18]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_898 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_898;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_898 is
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => \^ex_databus_addr\(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
\m0_Ex_Result_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[18]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_900 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[17]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_900 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_900;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_900 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[17]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_902 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[16]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_902 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_902;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_902 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
\m0_Ex_Result_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA30"
    )
        port map (
      I0 => \^ex_databus_addr\(0),
      I1 => \m0_Ex_Result_i_reg[16]\,
      I2 => ex_enable_sext_shift,
      I3 => ex_sel_alu_res,
      O => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_904 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_904 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_904;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_904 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_906 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_906 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_906;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_906 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => ex_databus_addr(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_908 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_908 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_908;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_908 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_910 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_910 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_910;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_910 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_912 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_912 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_912;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_912 is
  signal \^ex_carryout\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  EX_CarryOut <= \^ex_carryout\;
  \^ex_carryout\ <= lopt;
  \^ex_databus_addr\(0) <= lopt_1;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_914 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_914 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_914;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_914 is
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_10\ : STD_LOGIC;
  signal \^lopt_11\ : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal \^lopt_9\ : STD_LOGIC;
  attribute OPT_MODIFIED : string;
  attribute OPT_MODIFIED of \Using_FPGA.Native_I1_CARRY4\ : label is "MLO ";
  attribute XILINX_LEGACY_PRIM : string;
  attribute XILINX_LEGACY_PRIM of \Using_FPGA.Native_I1_CARRY4\ : label is "(MUXCY,XORCY)";
  attribute XILINX_TRANSFORM_PINMAP : string;
  attribute XILINX_TRANSFORM_PINMAP of \Using_FPGA.Native_I1_CARRY4\ : label is "LO:O";
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native_I1_CARRY4\ : label is "PRIMITIVE";
begin
  \^lopt_2\ <= lopt_1;
  \^lopt_3\ <= lopt_2;
  \^lopt_5\ <= lopt_4;
  \^lopt_6\ <= lopt_5;
  \^lopt_8\ <= lopt_7;
  \^lopt_9\ <= lopt_8;
  lopt <= \^lopt_1\;
  lopt_10 <= \^lopt_11\;
  lopt_11 <= lopt_12;
  lopt_3 <= \^lopt_4\;
  lopt_6 <= \^lopt_7\;
  lopt_9 <= \^lopt_10\;
\Using_FPGA.Native_I1_CARRY4\: unisim.vcomponents.CARRY4
     port map (
      CI => LO,
      CO(3) => \^lopt_7\,
      CO(2) => \^lopt_4\,
      CO(1) => \^lopt_1\,
      CO(0) => EX_CarryOut,
      CYINIT => '0',
      DI(3) => \^lopt_8\,
      DI(2) => \^lopt_5\,
      DI(1) => \^lopt_2\,
      DI(0) => DI,
      O(3) => lopt_12,
      O(2) => \^lopt_11\,
      O(1) => \^lopt_10\,
      O(0) => ex_databus_addr(0),
      S(3) => \^lopt_9\,
      S(2) => \^lopt_6\,
      S(1) => \^lopt_3\,
      S(0) => S
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXCY_XORCY_915 is
  port (
    \EX_Op2_reg[0]\ : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC;
    DI : in STD_LOGIC;
    CI : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXCY_XORCY_915 : entity is "MB_MUXCY_XORCY";
end microblaze_microblaze_0_0_MB_MUXCY_XORCY_915;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXCY_XORCY_915 is
  signal \^ex_op2_reg[0]\ : STD_LOGIC;
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  \EX_Op2_reg[0]\ <= \^ex_op2_reg[0]\;
  \^ex_databus_addr\(0) <= lopt_1;
  \^ex_op2_reg[0]\ <= lopt;
  ex_databus_addr(0) <= \^ex_databus_addr\(0);
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_MUXF7 is
  port (
    sel_input_i : out STD_LOGIC;
    Use_Next_Data : out STD_LOGIC;
    sel_input_iii_0 : in STD_LOGIC;
    sel_input_delayslot : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_MUXF7 : entity is "MB_MUXF7";
end microblaze_microblaze_0_0_MB_MUXF7;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_MUXF7 is
  signal \^use_next_data\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
  Use_Next_Data <= \^use_next_data\;
\Using_FPGA.Native\: unisim.vcomponents.MUXF7
     port map (
      I0 => sel_input_iii_0,
      I1 => sel_input_delayslot,
      O => sel_input_i,
      S => \^use_next_data\
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_branch_with_delayslot,
      I1 => \Using_FPGA.Native_0\,
      O => \^use_next_data\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[1]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[1]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[1]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[1]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_685 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[21]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_685 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_685;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_685 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[21]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[21]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[21]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_686 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[23]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_686 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_686;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_686 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[23]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[23]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[23]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_687 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[25]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_687 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_687;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_687 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[25]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[25]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[25]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_688 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[27]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_688 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_688;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_688 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[27]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[27]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[27]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_689 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[29]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_689 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_689;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_689 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[29]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[29]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[29]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_690 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[31]_i_3\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_690 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_690;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_690 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[31]_i_3\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[31]_i_3\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[31]_i_3\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_691 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[3]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_691 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_691;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_691 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[3]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[3]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[3]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_692 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[5]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_692 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_692;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_692 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[5]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[5]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[5]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_693 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[7]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_693 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_693;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_693 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[7]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[7]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[7]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_694 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[9]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_694 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_694;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_694 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[9]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[9]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[9]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_695 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[11]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_695 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_695;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_695 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[11]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[11]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[11]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_696 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[13]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_696 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_696;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_696 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[13]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[13]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[13]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_697 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[15]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_697 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_697;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_697 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[15]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[15]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[15]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_698 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[17]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_698 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_698;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_698 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[17]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[17]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[17]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_RAM32M_699 is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[19]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_RAM32M_699 : entity is "MB_RAM32M";
end microblaze_microblaze_0_0_MB_RAM32M_699;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_RAM32M_699 is
  signal \Using_FPGA.Native_n_6\ : STD_LOGIC;
  signal \Using_FPGA.Native_n_7\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Using_FPGA.Native\ : label is "PRIMITIVE";
begin
\Using_FPGA.Native\: unisim.vcomponents.RAM32M
    generic map(
      INIT_A => X"0000000000000000",
      INIT_B => X"0000000000000000",
      INIT_C => X"0000000000000000",
      INIT_D => X"0000000000000000",
      IS_WCLK_INVERTED => '0'
    )
        port map (
      ADDRA(4 downto 0) => \EX_Op3[19]_i_2\(9 downto 5),
      ADDRB(4 downto 0) => \EX_Op3[19]_i_2\(4 downto 0),
      ADDRC(4 downto 0) => \EX_Op3[19]_i_2\(14 downto 10),
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      DIA(1 downto 0) => WB_Fwd(1 downto 0),
      DIB(1 downto 0) => WB_Fwd(1 downto 0),
      DIC(1 downto 0) => WB_Fwd(1 downto 0),
      DID(1 downto 0) => WB_Fwd(1 downto 0),
      DOA(1 downto 0) => GPR_Op1(1 downto 0),
      DOB(1 downto 0) => GPR_Op2(1 downto 0),
      DOC(1 downto 0) => GPR_Op3(1 downto 0),
      DOD(1) => \Using_FPGA.Native_n_6\,
      DOD(0) => \Using_FPGA.Native_n_7\,
      WCLK => Clk,
      WE => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRL16E is
  port (
    Q_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRL16E : entity is "MB_SRL16E";
end microblaze_microblaze_0_0_MB_SRL16E;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRL16E is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"001B",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized1\ is
  port (
    Dbg_TDO : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 7 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDO_0 : in STD_LOGIC;
    Dbg_TDO_1 : in STD_LOGIC;
    \TDO_Data_Reg__31\ : in STD_LOGIC;
    Data_Read_Reg_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Instr_Insert_Reg_En : in STD_LOGIC;
    Dbg_TDO_2 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Config_Reg_En : in STD_LOGIC;
    Dbg_TDO_INST_0_i_1_0 : in STD_LOGIC;
    Dbg_TDO_INST_0_i_1_1 : in STD_LOGIC;
    Q5_out : in STD_LOGIC;
    Q_0 : in STD_LOGIC;
    Q6_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized1\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized1\ is
  signal Dbg_TDO_INST_0_i_14_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_1_n_0 : STD_LOGIC;
  signal Q11_in : STD_LOGIC;
  signal \TDO_Config_Word__16\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_2/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCFCFCFCFF00AAAA"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_1_n_0,
      I1 => Dbg_TDO_0,
      I2 => Dbg_TDO_1,
      I3 => \TDO_Data_Reg__31\,
      I4 => Data_Read_Reg_En,
      I5 => Status_Reg_En,
      O => Dbg_TDO
    );
Dbg_TDO_INST_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAACCC000C0"
    )
        port map (
      I0 => \TDO_Config_Word__16\,
      I1 => Instr_Insert_Reg_En,
      I2 => Dbg_TDO_2(1),
      I3 => Q(0),
      I4 => Dbg_TDO_2(0),
      I5 => Config_Reg_En,
      O => Dbg_TDO_INST_0_i_1_n_0
    );
Dbg_TDO_INST_0_i_14: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CACAFFF0CACA0F00"
    )
        port map (
      I0 => Q11_in,
      I1 => Q5_out,
      I2 => Q(5),
      I3 => Q_0,
      I4 => Q(4),
      I5 => Q6_out,
      O => Dbg_TDO_INST_0_i_14_n_0
    );
Dbg_TDO_INST_0_i_7: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFE400E4"
    )
        port map (
      I0 => Q(6),
      I1 => Dbg_TDO_INST_0_i_14_n_0,
      I2 => Dbg_TDO_INST_0_i_1_0,
      I3 => Q(7),
      I4 => Dbg_TDO_INST_0_i_1_1,
      O => \TDO_Config_Word__16\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0278",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q11_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized11\ is
  port (
    Q1_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized11\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized11\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized11\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"2500",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized3\ is
  port (
    Q6_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized3\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized3\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q6_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized3_5\ is
  port (
    Q2_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized3_5\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized3_5\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized3_5\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"FFFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized5\ is
  port (
    Q5_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized5\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized5\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized5\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"3FFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q5_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized5_6\ is
  port (
    Q1_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized5_6\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized5_6\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized5_6\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"3FFF",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q1_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[4]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 6 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    tdo_config_word1_0 : in STD_LOGIC;
    Dbg_TDO_INST_0_i_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7\ is
  signal \Use_unisim.MB_SRL16E_I1_n_0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_16: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCAAF0F00000F0F0"
    )
        port map (
      I0 => \Use_unisim.MB_SRL16E_I1_n_0\,
      I1 => tdo_config_word1_0,
      I2 => Dbg_TDO_INST_0_i_7,
      I3 => Q(4),
      I4 => Q(6),
      I5 => Q(5),
      O => \Serial_Dbg_Intf.shift_count_reg[4]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => \Use_unisim.MB_SRL16E_I1_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_2\ is
  port (
    tdo_config_word1_0 : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_2\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_2\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_2\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => tdo_config_word1_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_3\ is
  port (
    Q4_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_3\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_3\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q4_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_4\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Q1_out : in STD_LOGIC;
    Q4_out : in STD_LOGIC;
    Q2_out : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_4\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_4\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_4\ is
  signal Q3_out : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CACAFFF0CACA0F00"
    )
        port map (
      I0 => Q3_out,
      I1 => Q1_out,
      I2 => Q(5),
      I3 => Q4_out,
      I4 => Q(4),
      I5 => Q2_out,
      O => \Serial_Dbg_Intf.shift_count_reg[5]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_7\ is
  port (
    Q0_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_7\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_7\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_7\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q0_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_8\ is
  port (
    \Serial_Dbg_Intf.shift_count_reg[5]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 5 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Q1_in : in STD_LOGIC;
    Q0_out : in STD_LOGIC;
    Q2_in : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_8\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_8\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized7_8\ is
  signal Q3_in : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses ";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 ";
begin
Dbg_TDO_INST_0_i_29: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CACAFFF0CACA0F00"
    )
        port map (
      I0 => Q3_in,
      I1 => Q1_in,
      I2 => Q(5),
      I3 => Q0_out,
      I4 => Q(4),
      I5 => Q2_in,
      O => \Serial_Dbg_Intf.shift_count_reg[5]\
    );
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q3_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_MB_SRL16E__parameterized9\ is
  port (
    Q2_in : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_MB_SRL16E__parameterized9\ : entity is "MB_SRL16E";
end \microblaze_microblaze_0_0_MB_SRL16E__parameterized9\;

architecture STRUCTURE of \microblaze_microblaze_0_0_MB_SRL16E__parameterized9\ is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16E_I1\ : label is "PRIMITIVE";
  attribute srl_name : string;
  attribute srl_name of \Use_unisim.MB_SRL16E_I1\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 ";
begin
\Use_unisim.MB_SRL16E_I1\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0020",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Q(0),
      A1 => Q(1),
      A2 => Q(2),
      A3 => Q(3),
      CE => '0',
      CLK => Dbg_Clk,
      D => '0',
      Q => Q2_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E is
  port (
    SRL16_Sel_7 : out STD_LOGIC;
    \which_pc__0\ : out STD_LOGIC;
    SRL16_MC15_7 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E is
  signal \Use_unisim.MB_SRL16CE_I1_i_2_n_0\ : STD_LOGIC;
  signal \Use_unisim.MB_SRL16CE_I1_n_1\ : STD_LOGIC;
  signal \^which_pc__0\ : STD_LOGIC;
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
  \which_pc__0\ <= \^which_pc__0\;
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \^which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_7,
      Q => SRL16_Sel_7,
      Q15 => \Use_unisim.MB_SRL16CE_I1_n_1\
    );
\Use_unisim.MB_SRL16CE_I1_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000100"
    )
        port map (
      I0 => Dbg_Reg_En(4),
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(3),
      I4 => Dbg_Reg_En(7),
      I5 => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\,
      O => \^which_pc__0\
    );
\Use_unisim.MB_SRL16CE_I1_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Dbg_Reg_En(0),
      I1 => Dbg_Reg_En(1),
      I2 => Dbg_Reg_En(2),
      O => \Use_unisim.MB_SRL16CE_I1_i_2_n_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_16 is
  port (
    SRL16_Sel_6 : out STD_LOGIC;
    SRL16_MC15_7 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_6 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_16 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_16;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_16 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_6,
      Q => SRL16_Sel_6,
      Q15 => SRL16_MC15_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_18 is
  port (
    SRL16_Sel_5 : out STD_LOGIC;
    SRL16_MC15_6 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_5 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_18 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_18;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_18 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_5,
      Q => SRL16_Sel_5,
      Q15 => SRL16_MC15_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_20 is
  port (
    SRL16_Sel_4 : out STD_LOGIC;
    SRL16_MC15_5 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_4 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_20 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_20;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_20 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_4,
      Q => SRL16_Sel_4,
      Q15 => SRL16_MC15_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_22 is
  port (
    SRL16_Sel_3 : out STD_LOGIC;
    SRL16_MC15_4 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_3 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_22 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_22;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_22 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_3,
      Q => SRL16_Sel_3,
      Q15 => SRL16_MC15_4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_24 is
  port (
    SRL16_Sel_2 : out STD_LOGIC;
    SRL16_MC15_3 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_2 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_24 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_24;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_24 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_2,
      Q => SRL16_Sel_2,
      Q15 => SRL16_MC15_3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_26 is
  port (
    SRL16_Sel_1 : out STD_LOGIC;
    SRL16_MC15_2 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    SRL16_MC15_1 : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_26 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_26;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_26 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => SRL16_MC15_1,
      Q => SRL16_Sel_1,
      Q15 => SRL16_MC15_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MB_SRLC16E_28 is
  port (
    SRL16_Sel_0 : out STD_LOGIC;
    SRL16_MC15_1 : out STD_LOGIC;
    \which_pc__0\ : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 3 downto 0 );
    Dbg_Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MB_SRLC16E_28 : entity is "MB_SRLC16E";
end microblaze_microblaze_0_0_MB_SRLC16E_28;

architecture STRUCTURE of microblaze_microblaze_0_0_MB_SRLC16E_28 is
  attribute box_type : string;
  attribute box_type of \Use_unisim.MB_SRL16CE_I1\ : label is "PRIMITIVE";
begin
\Use_unisim.MB_SRL16CE_I1\: unisim.vcomponents.SRLC16E
    generic map(
      INIT => X"0000",
      IS_CLK_INVERTED => '0'
    )
        port map (
      A0 => Address(0),
      A1 => Address(1),
      A2 => Address(2),
      A3 => Address(3),
      CE => \which_pc__0\,
      CLK => Dbg_Clk,
      D => Dbg_TDI,
      Q => SRL16_Sel_0,
      Q15 => SRL16_MC15_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MMU_ff is
  port (
    \m1_databus_addr_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \if4_addr_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    sync_reset : in STD_LOGIC;
    \m0_databus_addr_i_reg[0]_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 29 downto 0 );
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_piperun : in STD_LOGIC;
    \if3_addr_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 63 downto 0 );
    m3_piperun : in STD_LOGIC;
    if2_piperun : in STD_LOGIC;
    if3_piperun : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MMU_ff : entity is "MMU_ff";
end microblaze_microblaze_0_0_MMU_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_MMU_ff is
  signal if3_addr_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m0_databus_addr : STD_LOGIC_VECTOR ( 0 to 29 );
  signal m3_databus_addr_i : STD_LOGIC_VECTOR ( 0 to 31 );
begin
\WB_DataBus_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(0),
      Q => Q(31),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(10),
      Q => Q(21),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(11),
      Q => Q(20),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(12),
      Q => Q(19),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(13),
      Q => Q(18),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(14),
      Q => Q(17),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(15),
      Q => Q(16),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(16),
      Q => Q(15),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(17),
      Q => Q(14),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(18),
      Q => Q(13),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(19),
      Q => Q(12),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(1),
      Q => Q(30),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(20),
      Q => Q(11),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(21),
      Q => Q(10),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(22),
      Q => Q(9),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(23),
      Q => Q(8),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(24),
      Q => Q(7),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(25),
      Q => Q(6),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(26),
      Q => Q(5),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(27),
      Q => Q(4),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(28),
      Q => Q(3),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(29),
      Q => Q(2),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(2),
      Q => Q(29),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(30),
      Q => Q(1),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(31),
      Q => Q(0),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(3),
      Q => Q(28),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(4),
      Q => Q(27),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(5),
      Q => Q(26),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(6),
      Q => Q(25),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(7),
      Q => Q(24),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(8),
      Q => Q(23),
      R => sync_reset
    );
\WB_DataBus_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_databus_addr_i(9),
      Q => Q(22),
      R => sync_reset
    );
\if3_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(63),
      Q => if3_addr_i(0),
      R => sync_reset
    );
\if3_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(53),
      Q => if3_addr_i(10),
      R => sync_reset
    );
\if3_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(52),
      Q => if3_addr_i(11),
      R => sync_reset
    );
\if3_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(51),
      Q => if3_addr_i(12),
      R => sync_reset
    );
\if3_addr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(50),
      Q => if3_addr_i(13),
      R => sync_reset
    );
\if3_addr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(49),
      Q => if3_addr_i(14),
      R => sync_reset
    );
\if3_addr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(48),
      Q => if3_addr_i(15),
      R => sync_reset
    );
\if3_addr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(47),
      Q => if3_addr_i(16),
      R => sync_reset
    );
\if3_addr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(46),
      Q => if3_addr_i(17),
      R => sync_reset
    );
\if3_addr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(45),
      Q => if3_addr_i(18),
      R => sync_reset
    );
\if3_addr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(44),
      Q => if3_addr_i(19),
      R => sync_reset
    );
\if3_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(62),
      Q => if3_addr_i(1),
      R => sync_reset
    );
\if3_addr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(43),
      Q => if3_addr_i(20),
      R => sync_reset
    );
\if3_addr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(42),
      Q => if3_addr_i(21),
      R => sync_reset
    );
\if3_addr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(41),
      Q => if3_addr_i(22),
      R => sync_reset
    );
\if3_addr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(40),
      Q => if3_addr_i(23),
      R => sync_reset
    );
\if3_addr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(39),
      Q => if3_addr_i(24),
      R => sync_reset
    );
\if3_addr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(38),
      Q => if3_addr_i(25),
      R => sync_reset
    );
\if3_addr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(37),
      Q => if3_addr_i(26),
      R => sync_reset
    );
\if3_addr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(36),
      Q => if3_addr_i(27),
      R => sync_reset
    );
\if3_addr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(35),
      Q => if3_addr_i(28),
      R => sync_reset
    );
\if3_addr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(34),
      Q => if3_addr_i(29),
      R => sync_reset
    );
\if3_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(61),
      Q => if3_addr_i(2),
      R => sync_reset
    );
\if3_addr_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(33),
      Q => if3_addr_i(30),
      R => sync_reset
    );
\if3_addr_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(32),
      Q => if3_addr_i(31),
      R => sync_reset
    );
\if3_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(60),
      Q => if3_addr_i(3),
      R => sync_reset
    );
\if3_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(59),
      Q => if3_addr_i(4),
      R => sync_reset
    );
\if3_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(58),
      Q => if3_addr_i(5),
      R => sync_reset
    );
\if3_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(57),
      Q => if3_addr_i(6),
      R => sync_reset
    );
\if3_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(56),
      Q => if3_addr_i(7),
      R => sync_reset
    );
\if3_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(55),
      Q => if3_addr_i(8),
      R => sync_reset
    );
\if3_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if2_piperun,
      D => \if3_addr_i_reg[0]_0\(54),
      Q => if3_addr_i(9),
      R => sync_reset
    );
\if4_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(0),
      Q => \if4_addr_i_reg[0]_0\(31),
      R => sync_reset
    );
\if4_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(10),
      Q => \if4_addr_i_reg[0]_0\(21),
      R => sync_reset
    );
\if4_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(11),
      Q => \if4_addr_i_reg[0]_0\(20),
      R => sync_reset
    );
\if4_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(12),
      Q => \if4_addr_i_reg[0]_0\(19),
      R => sync_reset
    );
\if4_addr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(13),
      Q => \if4_addr_i_reg[0]_0\(18),
      R => sync_reset
    );
\if4_addr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(14),
      Q => \if4_addr_i_reg[0]_0\(17),
      R => sync_reset
    );
\if4_addr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(15),
      Q => \if4_addr_i_reg[0]_0\(16),
      R => sync_reset
    );
\if4_addr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(16),
      Q => \if4_addr_i_reg[0]_0\(15),
      R => sync_reset
    );
\if4_addr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(17),
      Q => \if4_addr_i_reg[0]_0\(14),
      R => sync_reset
    );
\if4_addr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(18),
      Q => \if4_addr_i_reg[0]_0\(13),
      R => sync_reset
    );
\if4_addr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(19),
      Q => \if4_addr_i_reg[0]_0\(12),
      R => sync_reset
    );
\if4_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(1),
      Q => \if4_addr_i_reg[0]_0\(30),
      R => sync_reset
    );
\if4_addr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(20),
      Q => \if4_addr_i_reg[0]_0\(11),
      R => sync_reset
    );
\if4_addr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(21),
      Q => \if4_addr_i_reg[0]_0\(10),
      R => sync_reset
    );
\if4_addr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(22),
      Q => \if4_addr_i_reg[0]_0\(9),
      R => sync_reset
    );
\if4_addr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(23),
      Q => \if4_addr_i_reg[0]_0\(8),
      R => sync_reset
    );
\if4_addr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(24),
      Q => \if4_addr_i_reg[0]_0\(7),
      R => sync_reset
    );
\if4_addr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(25),
      Q => \if4_addr_i_reg[0]_0\(6),
      R => sync_reset
    );
\if4_addr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(26),
      Q => \if4_addr_i_reg[0]_0\(5),
      R => sync_reset
    );
\if4_addr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(27),
      Q => \if4_addr_i_reg[0]_0\(4),
      R => sync_reset
    );
\if4_addr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(28),
      Q => \if4_addr_i_reg[0]_0\(3),
      R => sync_reset
    );
\if4_addr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(29),
      Q => \if4_addr_i_reg[0]_0\(2),
      R => sync_reset
    );
\if4_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(2),
      Q => \if4_addr_i_reg[0]_0\(29),
      R => sync_reset
    );
\if4_addr_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(30),
      Q => \if4_addr_i_reg[0]_0\(1),
      R => sync_reset
    );
\if4_addr_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(31),
      Q => \if4_addr_i_reg[0]_0\(0),
      R => sync_reset
    );
\if4_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(3),
      Q => \if4_addr_i_reg[0]_0\(28),
      R => sync_reset
    );
\if4_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(4),
      Q => \if4_addr_i_reg[0]_0\(27),
      R => sync_reset
    );
\if4_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(5),
      Q => \if4_addr_i_reg[0]_0\(26),
      R => sync_reset
    );
\if4_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(6),
      Q => \if4_addr_i_reg[0]_0\(25),
      R => sync_reset
    );
\if4_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(7),
      Q => \if4_addr_i_reg[0]_0\(24),
      R => sync_reset
    );
\if4_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(8),
      Q => \if4_addr_i_reg[0]_0\(23),
      R => sync_reset
    );
\if4_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => if3_piperun,
      D => if3_addr_i(9),
      Q => \if4_addr_i_reg[0]_0\(22),
      R => sync_reset
    );
\m0_databus_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(29),
      Q => m0_databus_addr(0),
      R => sync_reset
    );
\m0_databus_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(19),
      Q => m0_databus_addr(10),
      R => sync_reset
    );
\m0_databus_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(18),
      Q => m0_databus_addr(11),
      R => sync_reset
    );
\m0_databus_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(17),
      Q => m0_databus_addr(12),
      R => sync_reset
    );
\m0_databus_addr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(16),
      Q => m0_databus_addr(13),
      R => sync_reset
    );
\m0_databus_addr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(15),
      Q => m0_databus_addr(14),
      R => sync_reset
    );
\m0_databus_addr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(14),
      Q => m0_databus_addr(15),
      R => sync_reset
    );
\m0_databus_addr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(13),
      Q => m0_databus_addr(16),
      R => sync_reset
    );
\m0_databus_addr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(12),
      Q => m0_databus_addr(17),
      R => sync_reset
    );
\m0_databus_addr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(11),
      Q => m0_databus_addr(18),
      R => sync_reset
    );
\m0_databus_addr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(10),
      Q => m0_databus_addr(19),
      R => sync_reset
    );
\m0_databus_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(28),
      Q => m0_databus_addr(1),
      R => sync_reset
    );
\m0_databus_addr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(9),
      Q => m0_databus_addr(20),
      R => sync_reset
    );
\m0_databus_addr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(8),
      Q => m0_databus_addr(21),
      R => sync_reset
    );
\m0_databus_addr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(7),
      Q => m0_databus_addr(22),
      R => sync_reset
    );
\m0_databus_addr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(6),
      Q => m0_databus_addr(23),
      R => sync_reset
    );
\m0_databus_addr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(5),
      Q => m0_databus_addr(24),
      R => sync_reset
    );
\m0_databus_addr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(4),
      Q => m0_databus_addr(25),
      R => sync_reset
    );
\m0_databus_addr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(3),
      Q => m0_databus_addr(26),
      R => sync_reset
    );
\m0_databus_addr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(2),
      Q => m0_databus_addr(27),
      R => sync_reset
    );
\m0_databus_addr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(1),
      Q => m0_databus_addr(28),
      R => sync_reset
    );
\m0_databus_addr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(0),
      Q => m0_databus_addr(29),
      R => sync_reset
    );
\m0_databus_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(27),
      Q => m0_databus_addr(2),
      R => sync_reset
    );
\m0_databus_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(26),
      Q => m0_databus_addr(3),
      R => sync_reset
    );
\m0_databus_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(25),
      Q => m0_databus_addr(4),
      R => sync_reset
    );
\m0_databus_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(24),
      Q => m0_databus_addr(5),
      R => sync_reset
    );
\m0_databus_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(23),
      Q => m0_databus_addr(6),
      R => sync_reset
    );
\m0_databus_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(22),
      Q => m0_databus_addr(7),
      R => sync_reset
    );
\m0_databus_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(21),
      Q => m0_databus_addr(8),
      R => sync_reset
    );
\m0_databus_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_databus_addr_i_reg[0]_0\,
      D => D(20),
      Q => m0_databus_addr(9),
      R => sync_reset
    );
\m1_databus_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(0),
      Q => \m1_databus_addr_i_reg[0]_0\(29),
      R => sync_reset
    );
\m1_databus_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(10),
      Q => \m1_databus_addr_i_reg[0]_0\(19),
      R => sync_reset
    );
\m1_databus_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(11),
      Q => \m1_databus_addr_i_reg[0]_0\(18),
      R => sync_reset
    );
\m1_databus_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(12),
      Q => \m1_databus_addr_i_reg[0]_0\(17),
      R => sync_reset
    );
\m1_databus_addr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(13),
      Q => \m1_databus_addr_i_reg[0]_0\(16),
      R => sync_reset
    );
\m1_databus_addr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(14),
      Q => \m1_databus_addr_i_reg[0]_0\(15),
      R => sync_reset
    );
\m1_databus_addr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(15),
      Q => \m1_databus_addr_i_reg[0]_0\(14),
      R => sync_reset
    );
\m1_databus_addr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(16),
      Q => \m1_databus_addr_i_reg[0]_0\(13),
      R => sync_reset
    );
\m1_databus_addr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(17),
      Q => \m1_databus_addr_i_reg[0]_0\(12),
      R => sync_reset
    );
\m1_databus_addr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(18),
      Q => \m1_databus_addr_i_reg[0]_0\(11),
      R => sync_reset
    );
\m1_databus_addr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(19),
      Q => \m1_databus_addr_i_reg[0]_0\(10),
      R => sync_reset
    );
\m1_databus_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(1),
      Q => \m1_databus_addr_i_reg[0]_0\(28),
      R => sync_reset
    );
\m1_databus_addr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(20),
      Q => \m1_databus_addr_i_reg[0]_0\(9),
      R => sync_reset
    );
\m1_databus_addr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(21),
      Q => \m1_databus_addr_i_reg[0]_0\(8),
      R => sync_reset
    );
\m1_databus_addr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(22),
      Q => \m1_databus_addr_i_reg[0]_0\(7),
      R => sync_reset
    );
\m1_databus_addr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(23),
      Q => \m1_databus_addr_i_reg[0]_0\(6),
      R => sync_reset
    );
\m1_databus_addr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(24),
      Q => \m1_databus_addr_i_reg[0]_0\(5),
      R => sync_reset
    );
\m1_databus_addr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(25),
      Q => \m1_databus_addr_i_reg[0]_0\(4),
      R => sync_reset
    );
\m1_databus_addr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(26),
      Q => \m1_databus_addr_i_reg[0]_0\(3),
      R => sync_reset
    );
\m1_databus_addr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(27),
      Q => \m1_databus_addr_i_reg[0]_0\(2),
      R => sync_reset
    );
\m1_databus_addr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(28),
      Q => \m1_databus_addr_i_reg[0]_0\(1),
      R => sync_reset
    );
\m1_databus_addr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(29),
      Q => \m1_databus_addr_i_reg[0]_0\(0),
      R => sync_reset
    );
\m1_databus_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(2),
      Q => \m1_databus_addr_i_reg[0]_0\(27),
      R => sync_reset
    );
\m1_databus_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(3),
      Q => \m1_databus_addr_i_reg[0]_0\(26),
      R => sync_reset
    );
\m1_databus_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(4),
      Q => \m1_databus_addr_i_reg[0]_0\(25),
      R => sync_reset
    );
\m1_databus_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(5),
      Q => \m1_databus_addr_i_reg[0]_0\(24),
      R => sync_reset
    );
\m1_databus_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(6),
      Q => \m1_databus_addr_i_reg[0]_0\(23),
      R => sync_reset
    );
\m1_databus_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(7),
      Q => \m1_databus_addr_i_reg[0]_0\(22),
      R => sync_reset
    );
\m1_databus_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(8),
      Q => \m1_databus_addr_i_reg[0]_0\(21),
      R => sync_reset
    );
\m1_databus_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => m0_databus_addr(9),
      Q => \m1_databus_addr_i_reg[0]_0\(20),
      R => sync_reset
    );
\m3_databus_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(31),
      Q => m3_databus_addr_i(0),
      R => sync_reset
    );
\m3_databus_addr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(21),
      Q => m3_databus_addr_i(10),
      R => sync_reset
    );
\m3_databus_addr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(20),
      Q => m3_databus_addr_i(11),
      R => sync_reset
    );
\m3_databus_addr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(19),
      Q => m3_databus_addr_i(12),
      R => sync_reset
    );
\m3_databus_addr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(18),
      Q => m3_databus_addr_i(13),
      R => sync_reset
    );
\m3_databus_addr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(17),
      Q => m3_databus_addr_i(14),
      R => sync_reset
    );
\m3_databus_addr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(16),
      Q => m3_databus_addr_i(15),
      R => sync_reset
    );
\m3_databus_addr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(15),
      Q => m3_databus_addr_i(16),
      R => sync_reset
    );
\m3_databus_addr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(14),
      Q => m3_databus_addr_i(17),
      R => sync_reset
    );
\m3_databus_addr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(13),
      Q => m3_databus_addr_i(18),
      R => sync_reset
    );
\m3_databus_addr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(12),
      Q => m3_databus_addr_i(19),
      R => sync_reset
    );
\m3_databus_addr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(30),
      Q => m3_databus_addr_i(1),
      R => sync_reset
    );
\m3_databus_addr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(11),
      Q => m3_databus_addr_i(20),
      R => sync_reset
    );
\m3_databus_addr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(10),
      Q => m3_databus_addr_i(21),
      R => sync_reset
    );
\m3_databus_addr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(9),
      Q => m3_databus_addr_i(22),
      R => sync_reset
    );
\m3_databus_addr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(8),
      Q => m3_databus_addr_i(23),
      R => sync_reset
    );
\m3_databus_addr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(7),
      Q => m3_databus_addr_i(24),
      R => sync_reset
    );
\m3_databus_addr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(6),
      Q => m3_databus_addr_i(25),
      R => sync_reset
    );
\m3_databus_addr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(5),
      Q => m3_databus_addr_i(26),
      R => sync_reset
    );
\m3_databus_addr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(4),
      Q => m3_databus_addr_i(27),
      R => sync_reset
    );
\m3_databus_addr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(3),
      Q => m3_databus_addr_i(28),
      R => sync_reset
    );
\m3_databus_addr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(2),
      Q => m3_databus_addr_i(29),
      R => sync_reset
    );
\m3_databus_addr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(29),
      Q => m3_databus_addr_i(2),
      R => sync_reset
    );
\m3_databus_addr_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(1),
      Q => m3_databus_addr_i(30),
      R => sync_reset
    );
\m3_databus_addr_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(0),
      Q => m3_databus_addr_i(31),
      R => sync_reset
    );
\m3_databus_addr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(28),
      Q => m3_databus_addr_i(3),
      R => sync_reset
    );
\m3_databus_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(27),
      Q => m3_databus_addr_i(4),
      R => sync_reset
    );
\m3_databus_addr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(26),
      Q => m3_databus_addr_i(5),
      R => sync_reset
    );
\m3_databus_addr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(25),
      Q => m3_databus_addr_i(6),
      R => sync_reset
    );
\m3_databus_addr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(24),
      Q => m3_databus_addr_i(7),
      R => sync_reset
    );
\m3_databus_addr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(23),
      Q => m3_databus_addr_i(8),
      R => sync_reset
    );
\m3_databus_addr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => \if3_addr_i_reg[0]_0\(22),
      Q => m3_databus_addr_i(9),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_OneHot_Buffer__parameterized1\ is
  port (
    Q : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \cur_data_i_reg[1]_0\ : out STD_LOGIC;
    \cur_data_i_reg[0]_0\ : out STD_LOGIC;
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \cur_data_i_reg[6]_0\ : out STD_LOGIC;
    \cur_data_i_reg[6]_1\ : out STD_LOGIC;
    S_0 : out STD_LOGIC;
    S_1 : out STD_LOGIC;
    S_2 : out STD_LOGIC;
    S_3 : out STD_LOGIC;
    S_4 : out STD_LOGIC;
    S_5 : out STD_LOGIC;
    S_6 : out STD_LOGIC;
    S_7 : out STD_LOGIC;
    S_8 : out STD_LOGIC;
    S_9 : out STD_LOGIC;
    \cur_data_i_reg[8]_0\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \cur_data_i_reg[3]_0\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[0]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[2]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[5]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[8]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[9]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[12]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[13]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[14]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[16]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[18]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[21]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[25]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg : out STD_LOGIC;
    m2_m1_sel_res_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2[0]_i_6_0\ : out STD_LOGIC;
    \EX_Op2[0]_i_7_0\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[20]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[17]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[1]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[3]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[4]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[6]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[7]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[10]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[11]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[15]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_0 : out STD_LOGIC;
    \cur_data_i_reg[2]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \m2_M1_Result_i_reg[29]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Branch_CMP_Op1[29]_i_3_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_0\ : out STD_LOGIC;
    \cur_data_i_reg[10]_0\ : in STD_LOGIC;
    \cur_data_i_reg[0]_1\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \cur_data_i_reg[10]_1\ : in STD_LOGIC;
    \EX_Op2[16]_i_3\ : in STD_LOGIC;
    \EX_Op2[0]_i_6_1\ : in STD_LOGIC;
    \EX_Op2[0]_i_6_2\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_7_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op2[0]_i_7_1\ : in STD_LOGIC;
    m3_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_1\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_7_1\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op2[0]_i_7_2\ : in STD_LOGIC;
    m2_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_7_2\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_8_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op2[0]_i_7_3\ : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_2\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_8_1\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op2[0]_i_7_4\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_8_2\ : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op2[0]_i_7_5\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2[0]_i_6_3\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op2[0]_i_12_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_3\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    \EX_Op2_reg[0]_0\ : in STD_LOGIC;
    \EX_Op2_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[0]_2\ : in STD_LOGIC;
    \EX_Op2_reg[2]\ : in STD_LOGIC;
    \EX_Op2_reg[2]_0\ : in STD_LOGIC;
    \EX_Op2_reg[2]_1\ : in STD_LOGIC;
    \EX_Op2_reg[2]_2\ : in STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC;
    \EX_Op2_reg[5]_0\ : in STD_LOGIC;
    \EX_Op2_reg[5]_1\ : in STD_LOGIC;
    \EX_Op2_reg[5]_2\ : in STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC;
    \EX_Op2_reg[8]_0\ : in STD_LOGIC;
    \EX_Op2_reg[8]_1\ : in STD_LOGIC;
    \EX_Op2_reg[8]_2\ : in STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC;
    \EX_Op2_reg[9]_0\ : in STD_LOGIC;
    \EX_Op2_reg[9]_1\ : in STD_LOGIC;
    \EX_Op2_reg[9]_2\ : in STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC;
    \EX_Op2_reg[12]_0\ : in STD_LOGIC;
    \EX_Op2_reg[12]_1\ : in STD_LOGIC;
    \EX_Op2_reg[12]_2\ : in STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC;
    \EX_Op2_reg[13]_0\ : in STD_LOGIC;
    \EX_Op2_reg[13]_1\ : in STD_LOGIC;
    \EX_Op2_reg[13]_2\ : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[14]_0\ : in STD_LOGIC;
    \EX_Op2_reg[14]_1\ : in STD_LOGIC;
    \EX_Op2_reg[14]_2\ : in STD_LOGIC;
    wb_fwd : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \EX_Op2_reg[16]\ : in STD_LOGIC;
    \EX_Op2_reg[16]_0\ : in STD_LOGIC;
    \EX_Op2_reg[18]\ : in STD_LOGIC;
    \EX_Op2_reg[18]_0\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[21]_0\ : in STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC;
    \EX_Op2_reg[25]_0\ : in STD_LOGIC;
    \EX_Op2_reg[29]\ : in STD_LOGIC;
    \EX_Op2_reg[29]_0\ : in STD_LOGIC;
    \EX_Op2_reg[29]_1\ : in STD_LOGIC;
    \EX_Op2_reg[29]_2\ : in STD_LOGIC;
    \EX_Op2_reg[31]\ : in STD_LOGIC;
    \EX_Op2_reg[31]_0\ : in STD_LOGIC;
    \EX_Op2_reg[31]_1\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[20]_0\ : in STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC;
    \EX_Op2_reg[17]_0\ : in STD_LOGIC;
    \EX_Op2_reg[1]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_0\ : in STD_LOGIC;
    \EX_Op2_reg[1]_1\ : in STD_LOGIC;
    \EX_Op2_reg[1]_2\ : in STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC;
    \EX_Op2_reg[3]_0\ : in STD_LOGIC;
    \EX_Op2_reg[3]_1\ : in STD_LOGIC;
    \EX_Op2_reg[3]_2\ : in STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC;
    \EX_Op2_reg[4]_0\ : in STD_LOGIC;
    \EX_Op2_reg[4]_1\ : in STD_LOGIC;
    \EX_Op2_reg[4]_2\ : in STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC;
    \EX_Op2_reg[6]_0\ : in STD_LOGIC;
    \EX_Op2_reg[6]_1\ : in STD_LOGIC;
    \EX_Op2_reg[6]_2\ : in STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC;
    \EX_Op2_reg[7]_0\ : in STD_LOGIC;
    \EX_Op2_reg[7]_1\ : in STD_LOGIC;
    \EX_Op2_reg[7]_2\ : in STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC;
    \EX_Op2_reg[10]_0\ : in STD_LOGIC;
    \EX_Op2_reg[10]_1\ : in STD_LOGIC;
    \EX_Op2_reg[10]_2\ : in STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC;
    \EX_Op2_reg[11]_0\ : in STD_LOGIC;
    \EX_Op2_reg[11]_1\ : in STD_LOGIC;
    \EX_Op2_reg[11]_2\ : in STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC;
    \EX_Op2_reg[15]_0\ : in STD_LOGIC;
    \EX_Op2_reg[15]_1\ : in STD_LOGIC;
    \EX_Op2_reg[15]_2\ : in STD_LOGIC;
    \EX_Op2_reg[30]\ : in STD_LOGIC;
    \EX_Op2_reg[30]_0\ : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    \EX_Op2_reg[30]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]_2\ : in STD_LOGIC;
    \EX_Op2_reg[31]_3\ : in STD_LOGIC;
    \EX_Op2_reg[31]_4\ : in STD_LOGIC;
    \EX_Op2_reg[31]_5\ : in STD_LOGIC;
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    of_op1_sel_spr : in STD_LOGIC;
    \EX_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Branch_CMP_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]_1\ : in STD_LOGIC;
    \EX_Op1_reg[29]_1\ : in STD_LOGIC;
    \EX_Op1_reg[29]_2\ : in STD_LOGIC;
    \EX_Op1_reg[29]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]_4\ : in STD_LOGIC;
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Op1_reg[30]_1\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]\ : in STD_LOGIC;
    GPR_Op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Branch_CMP_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_1\ : in STD_LOGIC;
    ex_alu_result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[31]\ : in STD_LOGIC;
    \EX_Op1_reg[31]_0\ : in STD_LOGIC;
    \EX_Op1_reg[31]_1\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_2\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_3\ : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    addr : in STD_LOGIC_VECTOR ( 0 to 1 );
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_OneHot_Buffer__parameterized1\ : entity is "OneHot_Buffer";
end \microblaze_microblaze_0_0_OneHot_Buffer__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_OneHot_Buffer__parameterized1\ is
  signal \EX_Branch_CMP_Op1[29]_i_2_n_0\ : STD_LOGIC;
  signal \^ex_branch_cmp_op1[29]_i_3_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[29]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[29]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[29]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[29]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[29]_i_8_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_11_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_13_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_14_n_0\ : STD_LOGIC;
  signal \^ex_branch_cmp_op1[30]_i_3_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_8_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[30]_i_9_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[31]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op1[29]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op1[29]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op1[29]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_11_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_13_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_15_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_16_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_17_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_18_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_20_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_21_n_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_27_n_0\ : STD_LOGIC;
  signal \^ex_op2[0]_i_6_0\ : STD_LOGIC;
  signal \^ex_op2[0]_i_7_0\ : STD_LOGIC;
  signal \EX_Op2[0]_i_9_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_4_n_0\ : STD_LOGIC;
  signal \Op1_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op1_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op1_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op1_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op1_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op2_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op2_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op2_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op2_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op2_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \cur_data_i[0]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[10]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[2]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[3]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[4]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[5]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[6]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[7]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[8]_i_1_n_0\ : STD_LOGIC;
  signal \cur_data_i[9]_i_1_n_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[0]_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[1]_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]\ : STD_LOGIC;
  signal \^cur_data_i_reg[6]_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[6]_1\ : STD_LOGIC;
  signal \data_buffer_reg[3][0]_srl4_n_0\ : STD_LOGIC;
  signal of_op1_sel : STD_LOGIC_VECTOR ( 0 to 0 );
  signal of_predecode : STD_LOGIC_VECTOR ( 1 to 10 );
  signal p_2_in13_in : STD_LOGIC;
  signal p_2_in19_in : STD_LOGIC;
  signal p_2_in25_in : STD_LOGIC;
  signal p_2_in31_in : STD_LOGIC;
  signal p_2_in37_in : STD_LOGIC;
  signal p_2_in43_in : STD_LOGIC;
  signal p_2_in49_in : STD_LOGIC;
  signal p_2_in55_in : STD_LOGIC;
  signal p_2_in61_in : STD_LOGIC;
  signal p_2_in7_in : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[0]_i_3\ : label is "soft_lutpair196";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[29]_i_2\ : label is "soft_lutpair197";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[30]_i_3\ : label is "soft_lutpair194";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[30]_i_4\ : label is "soft_lutpair194";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[31]_i_2\ : label is "soft_lutpair197";
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_4\ : label is "soft_lutpair196";
  attribute SOFT_HLUTNM of \EX_Op1[30]_i_4\ : label is "soft_lutpair195";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_3\ : label is "soft_lutpair195";
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_3\ : label is "soft_lutpair193";
  attribute SOFT_HLUTNM of \EX_Op2[31]_i_3\ : label is "soft_lutpair193";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/PREDECODE_BUFFER_I1/data_buffer_reg[3][9]_srl4 ";
begin
  \EX_Branch_CMP_Op1[29]_i_3_0\ <= \^ex_branch_cmp_op1[29]_i_3_0\;
  \EX_Branch_CMP_Op1[30]_i_3_0\ <= \^ex_branch_cmp_op1[30]_i_3_0\;
  \EX_Op2[0]_i_6_0\ <= \^ex_op2[0]_i_6_0\;
  \EX_Op2[0]_i_7_0\ <= \^ex_op2[0]_i_7_0\;
  Q(1 downto 0) <= \^q\(1 downto 0);
  \cur_data_i_reg[0]_0\ <= \^cur_data_i_reg[0]_0\;
  \cur_data_i_reg[1]_0\ <= \^cur_data_i_reg[1]_0\;
  \cur_data_i_reg[26]\ <= \^cur_data_i_reg[26]\;
  \cur_data_i_reg[6]_0\ <= \^cur_data_i_reg[6]_0\;
  \cur_data_i_reg[6]_1\ <= \^cur_data_i_reg[6]_1\;
\EX_Branch_CMP_Op1[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => of_op1_sel(0),
      I1 => \^cur_data_i_reg[6]_1\,
      O => \^ex_branch_cmp_op1[30]_i_3_0\
    );
\EX_Branch_CMP_Op1[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => of_op1_sel(0),
      I1 => \^cur_data_i_reg[6]_1\,
      I2 => \^cur_data_i_reg[6]_0\,
      O => \^ex_branch_cmp_op1[29]_i_3_0\
    );
\EX_Branch_CMP_Op1[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBBABAAABAB"
    )
        port map (
      I0 => \EX_Op1_reg[29]_0\,
      I1 => \EX_Op1[29]_i_4_n_0\,
      I2 => \EX_Branch_CMP_Op1[29]_i_2_n_0\,
      I3 => \EX_Branch_CMP_Op1_reg[29]\(1),
      I4 => \^cur_data_i_reg[6]_0\,
      I5 => \EX_Op1[29]_i_6_n_0\,
      O => \m2_M1_Result_i_reg[29]\(2)
    );
\EX_Branch_CMP_Op1[29]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_0\(3),
      O => \Op1_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Branch_CMP_Op1[29]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_1\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(2),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(3),
      I4 => of_predecode(1),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_1\(4),
      O => \Op1_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Branch_CMP_Op1[29]_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_0\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_0\(3),
      O => \Op1_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Branch_CMP_Op1[29]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_1\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_1\(3),
      O => \Op1_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Branch_CMP_Op1[29]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => \^cur_data_i_reg[6]_1\,
      I1 => GPR_Op1(2),
      I2 => \^cur_data_i_reg[6]_0\,
      O => \EX_Branch_CMP_Op1[29]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAABFBB"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[29]_i_4_n_0\,
      I1 => \EX_Branch_CMP_Op1[29]_i_5_n_0\,
      I2 => \EX_Branch_CMP_Op1[29]_i_6_n_0\,
      I3 => \EX_Branch_CMP_Op1[29]_i_7_n_0\,
      I4 => \EX_Branch_CMP_Op1[29]_i_8_n_0\,
      O => \^cur_data_i_reg[6]_0\
    );
\EX_Branch_CMP_Op1[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op1_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => of_predecode(4),
      I2 => ex_gpr_write_addr(1),
      I3 => of_predecode(5),
      I4 => ex_gpr_write_addr(0),
      I5 => \EX_Op2[0]_i_7_5\,
      O => \EX_Branch_CMP_Op1[29]_i_4_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF6FF6FFFFFFFF"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(1),
      I1 => of_predecode(4),
      I2 => \EX_Branch_CMP_Op1[30]_i_8_0\(0),
      I3 => of_predecode(5),
      I4 => \EX_Op2[0]_i_7_3\,
      I5 => \Op1_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      O => \EX_Branch_CMP_Op1[29]_i_5_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op1_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_7_1\(1),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(0),
      I4 => of_predecode(5),
      I5 => \EX_Op2[0]_i_7_2\,
      O => \EX_Branch_CMP_Op1[29]_i_6_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op1_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_7_0\(1),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(0),
      I4 => of_predecode(5),
      I5 => \EX_Op2[0]_i_7_1\,
      O => \EX_Branch_CMP_Op1[29]_i_7_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op1_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_8_1\(1),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(0),
      I4 => of_predecode(5),
      I5 => \EX_Op2[0]_i_7_4\,
      O => \EX_Branch_CMP_Op1[29]_i_8_n_0\
    );
\EX_Branch_CMP_Op1[29]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => of_predecode(2),
      I1 => \Using_FPGA.Native\(0),
      I2 => \Using_FPGA.Native\(1),
      I3 => of_predecode(1),
      I4 => ex_gpr_write_addr(2),
      I5 => of_predecode(3),
      O => \Op1_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Branch_CMP_Op1[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E2FFE2FF22332200"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[30]\,
      I1 => \^cur_data_i_reg[6]_1\,
      I2 => wb_fwd(1),
      I3 => of_op1_sel(0),
      I4 => \EX_Branch_CMP_Op1[30]_i_5_n_0\,
      I5 => \EX_Op1[30]_i_6_n_0\,
      O => \m2_M1_Result_i_reg[29]\(1)
    );
\EX_Branch_CMP_Op1[30]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_0\(1),
      I1 => of_predecode(4),
      I2 => \EX_Branch_CMP_Op1[30]_i_7_0\(0),
      I3 => of_predecode(5),
      O => \EX_Branch_CMP_Op1[30]_i_11_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FF7FFFFFFFF7FF7"
    )
        port map (
      I0 => m2_gpr_write,
      I1 => \EX_Branch_CMP_Op1[30]_i_7_2\,
      I2 => of_predecode(5),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(0),
      I4 => of_predecode(4),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_1\(1),
      O => \EX_Branch_CMP_Op1[30]_i_12_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(1),
      I1 => of_predecode(4),
      I2 => \EX_Branch_CMP_Op1[30]_i_8_0\(0),
      I3 => of_predecode(5),
      O => \EX_Branch_CMP_Op1[30]_i_13_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FF7FFFFFFFF7FF7"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_2\,
      I1 => m0_gpr_write,
      I2 => of_predecode(5),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(0),
      I4 => of_predecode(4),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_1\(1),
      O => \EX_Branch_CMP_Op1[30]_i_14_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0455"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[29]_i_4_n_0\,
      I1 => \EX_Branch_CMP_Op1[30]_i_6_n_0\,
      I2 => \EX_Branch_CMP_Op1[30]_i_7_n_0\,
      I3 => \EX_Branch_CMP_Op1[30]_i_8_n_0\,
      O => \^cur_data_i_reg[6]_1\
    );
\EX_Branch_CMP_Op1[30]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E0"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_n_0\,
      I1 => \EX_Branch_CMP_Op1[30]_i_6_n_0\,
      I2 => \EX_Branch_CMP_Op1[30]_i_8_n_0\,
      I3 => \EX_Branch_CMP_Op1[29]_i_4_n_0\,
      O => of_op1_sel(0)
    );
\EX_Branch_CMP_Op1[30]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"E0EEFFFFE0EE0000"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1_reg[30]_1\,
      I1 => \EX_Branch_CMP_Op1_reg[30]_0\,
      I2 => ex_alu_result(1),
      I3 => \EX_Op1_reg[29]_4\,
      I4 => \^cur_data_i_reg[6]_0\,
      I5 => GPR_Op1(1),
      O => \EX_Branch_CMP_Op1[30]_i_5_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000009009"
    )
        port map (
      I0 => of_predecode(2),
      I1 => \EX_Op2[0]_i_6_3\(3),
      I2 => \EX_Op2[0]_i_6_3\(4),
      I3 => of_predecode(1),
      I4 => \EX_Branch_CMP_Op1[30]_i_9_n_0\,
      I5 => \EX_Branch_CMP_Op1[30]_i_3_3\,
      O => \EX_Branch_CMP_Op1[30]_i_6_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0800FFFF08000800"
    )
        port map (
      I0 => m3_gpr_write,
      I1 => \EX_Branch_CMP_Op1[30]_i_3_1\,
      I2 => \EX_Branch_CMP_Op1[30]_i_11_n_0\,
      I3 => \Op1_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I4 => \EX_Branch_CMP_Op1[30]_i_12_n_0\,
      I5 => \Op1_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      O => \EX_Branch_CMP_Op1[30]_i_7_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF7F0000FF7FFF7F"
    )
        port map (
      I0 => \Op1_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => m1_gpr_write,
      I2 => \EX_Branch_CMP_Op1[30]_i_3_2\,
      I3 => \EX_Branch_CMP_Op1[30]_i_13_n_0\,
      I4 => \EX_Branch_CMP_Op1[30]_i_14_n_0\,
      I5 => \Op1_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      O => \EX_Branch_CMP_Op1[30]_i_8_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \EX_Op2[0]_i_6_3\(0),
      I1 => of_predecode(5),
      I2 => of_predecode(4),
      I3 => \EX_Op2[0]_i_6_3\(1),
      I4 => of_predecode(3),
      I5 => \EX_Op2[0]_i_6_3\(2),
      O => \EX_Branch_CMP_Op1[30]_i_9_n_0\
    );
\EX_Branch_CMP_Op1[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF55551011"
    )
        port map (
      I0 => \EX_Op1[31]_i_3_n_0\,
      I1 => \EX_Branch_CMP_Op1[31]_i_2_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[29]\(0),
      I3 => \^cur_data_i_reg[6]_0\,
      I4 => \EX_Op1[31]_i_5_n_0\,
      I5 => \EX_Op1_reg[31]_0\,
      O => \m2_M1_Result_i_reg[29]\(0)
    );
\EX_Branch_CMP_Op1[31]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AB"
    )
        port map (
      I0 => \^cur_data_i_reg[6]_1\,
      I1 => GPR_Op1(0),
      I2 => \^cur_data_i_reg[6]_0\,
      O => \EX_Branch_CMP_Op1[31]_i_2_n_0\
    );
\EX_Op1[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB8BBB8BBB8B8"
    )
        port map (
      I0 => \EX_Op1_reg[29]\,
      I1 => of_op1_sel_spr,
      I2 => \EX_Op1_reg[29]_0\,
      I3 => \EX_Op1[29]_i_4_n_0\,
      I4 => \EX_Op1[29]_i_5_n_0\,
      I5 => \EX_Op1[29]_i_6_n_0\,
      O => \cur_data_i_reg[2]_0\(2)
    );
\EX_Op1[29]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[30]_i_3_0\,
      I1 => wb_fwd(2),
      I2 => of_op1_sel(0),
      O => \EX_Op1[29]_i_4_n_0\
    );
\EX_Op1[29]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF55FDFD"
    )
        port map (
      I0 => \^cur_data_i_reg[6]_0\,
      I1 => \EX_Op1_reg[29]_1\,
      I2 => \EX_Op1_reg[29]_2\,
      I3 => \EX_Op1_reg[29]_3\(0),
      I4 => \EX_Op1_reg[29]_4\,
      I5 => \EX_Branch_CMP_Op1[29]_i_2_n_0\,
      O => \EX_Op1[29]_i_5_n_0\
    );
\EX_Op1[29]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BABFAAAA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[29]_i_3_0\,
      I1 => \EX_Branch_CMP_Op1_reg[29]_0\,
      I2 => \^cur_data_i_reg[6]_0\,
      I3 => \EX_Branch_CMP_Op1_reg[29]_1\,
      I4 => \^cur_data_i_reg[6]_1\,
      O => \EX_Op1[29]_i_6_n_0\
    );
\EX_Op1[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB8BBB8BBB8B8"
    )
        port map (
      I0 => \EX_Op1_reg[30]_0\,
      I1 => of_op1_sel_spr,
      I2 => \EX_Op1_reg[30]_1\,
      I3 => \EX_Op1[30]_i_4_n_0\,
      I4 => \EX_Op1[30]_i_5_n_0\,
      I5 => \EX_Op1[30]_i_6_n_0\,
      O => \cur_data_i_reg[2]_0\(1)
    );
\EX_Op1[30]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[30]_i_3_0\,
      I1 => wb_fwd(1),
      I2 => of_op1_sel(0),
      O => \EX_Op1[30]_i_4_n_0\
    );
\EX_Op1[30]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000002E2E2E22"
    )
        port map (
      I0 => GPR_Op1(1),
      I1 => \^cur_data_i_reg[6]_0\,
      I2 => \EX_Op1_reg[30]\,
      I3 => \EX_Branch_CMP_Op1_reg[30]_0\,
      I4 => \EX_Branch_CMP_Op1_reg[30]_1\,
      I5 => \^cur_data_i_reg[6]_1\,
      O => \EX_Op1[30]_i_5_n_0\
    );
\EX_Op1[30]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BABFAAAA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[29]_i_3_0\,
      I1 => \EX_Branch_CMP_Op1_reg[30]_2\,
      I2 => \^cur_data_i_reg[6]_0\,
      I3 => \EX_Branch_CMP_Op1_reg[30]_3\,
      I4 => \^cur_data_i_reg[6]_1\,
      O => \EX_Op1[30]_i_6_n_0\
    );
\EX_Op1[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB8B8B8B88"
    )
        port map (
      I0 => \EX_Op1_reg[31]\,
      I1 => of_op1_sel_spr,
      I2 => \EX_Op1[31]_i_3_n_0\,
      I3 => \EX_Op1[31]_i_4_n_0\,
      I4 => \EX_Op1[31]_i_5_n_0\,
      I5 => \EX_Op1_reg[31]_0\,
      O => \cur_data_i_reg[2]_0\(0)
    );
\EX_Op1[31]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[30]_i_3_0\,
      I1 => wb_fwd(0),
      I2 => of_op1_sel(0),
      O => \EX_Op1[31]_i_3_n_0\
    );
\EX_Op1[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000D5DFD5D5"
    )
        port map (
      I0 => \^cur_data_i_reg[6]_0\,
      I1 => ex_alu_result(0),
      I2 => \EX_Op1_reg[29]_4\,
      I3 => \EX_Op1_reg[31]_1\,
      I4 => \EX_Op2_reg[31]_3\,
      I5 => \EX_Branch_CMP_Op1[31]_i_2_n_0\,
      O => \EX_Op1[31]_i_4_n_0\
    );
\EX_Op1[31]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BABFAAAA"
    )
        port map (
      I0 => \^ex_branch_cmp_op1[29]_i_3_0\,
      I1 => \EX_Op2_reg[31]_1\,
      I2 => \^cur_data_i_reg[6]_0\,
      I3 => \EX_Op2_reg[31]_0\,
      I4 => \^cur_data_i_reg[6]_1\,
      O => \EX_Op1[31]_i_5_n_0\
    );
\EX_Op2[0]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF6FF6FFFFFFFF"
    )
        port map (
      I0 => \^q\(0),
      I1 => ex_gpr_write_addr(1),
      I2 => of_predecode(10),
      I3 => ex_gpr_write_addr(0),
      I4 => \EX_Op2[0]_i_7_5\,
      I5 => \Op2_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      O => \EX_Op2[0]_i_11_n_0\
    );
\EX_Op2[0]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFFEFFFFEFFEEFFE"
    )
        port map (
      I0 => \EX_Op2[0]_i_20_n_0\,
      I1 => \EX_Op2[0]_i_21_n_0\,
      I2 => of_predecode(10),
      I3 => \EX_Op2[0]_i_6_3\(0),
      I4 => \EX_Op2[0]_i_6_3\(4),
      I5 => of_predecode(6),
      O => \EX_Op2[0]_i_12_n_0\
    );
\EX_Op2[0]_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \EX_Op2[0]_i_18_n_0\,
      I1 => \EX_Op2[0]_i_17_n_0\,
      O => \EX_Op2[0]_i_13_n_0\
    );
\EX_Op2[0]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op2_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_8_1\(1),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(0),
      I4 => of_predecode(10),
      I5 => \EX_Op2[0]_i_7_4\,
      O => \EX_Op2[0]_i_15_n_0\
    );
\EX_Op2[0]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op2_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_8_0\(1),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(0),
      I4 => of_predecode(10),
      I5 => \EX_Op2[0]_i_7_3\,
      O => \EX_Op2[0]_i_16_n_0\
    );
\EX_Op2[0]_i_17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op2_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_7_1\(1),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(0),
      I4 => of_predecode(10),
      I5 => \EX_Op2[0]_i_7_2\,
      O => \EX_Op2[0]_i_17_n_0\
    );
\EX_Op2[0]_i_18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op2_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Branch_CMP_Op1[30]_i_7_0\(1),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(0),
      I4 => of_predecode(10),
      I5 => \EX_Op2[0]_i_7_1\,
      O => \EX_Op2[0]_i_18_n_0\
    );
\EX_Op2[0]_i_19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => of_predecode(7),
      I1 => \Using_FPGA.Native\(0),
      I2 => \Using_FPGA.Native\(1),
      I3 => of_predecode(6),
      I4 => ex_gpr_write_addr(2),
      I5 => of_predecode(8),
      O => \Op2_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op2[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^cur_data_i_reg[26]\,
      I1 => \^cur_data_i_reg[0]_0\,
      O => \^ex_op2[0]_i_6_0\
    );
\EX_Op2[0]_i_20\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF22F2"
    )
        port map (
      I0 => \EX_Op2[0]_i_6_3\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(7),
      I3 => \EX_Op2[0]_i_6_3\(3),
      I4 => \EX_Op2[0]_i_12_0\,
      O => \EX_Op2[0]_i_20_n_0\
    );
\EX_Op2[0]_i_21\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF22F2"
    )
        port map (
      I0 => \^q\(0),
      I1 => \EX_Op2[0]_i_6_3\(1),
      I2 => \EX_Op2[0]_i_6_3\(3),
      I3 => of_predecode(7),
      I4 => \EX_Op2[0]_i_27_n_0\,
      O => \EX_Op2[0]_i_21_n_0\
    );
\EX_Op2[0]_i_22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_1\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(6),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(4),
      I4 => of_predecode(7),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_1\(3),
      O => \Op2_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op2[0]_i_23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(7),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(3),
      I4 => of_predecode(6),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_0\(4),
      O => \Op2_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op2[0]_i_24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_1\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(6),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(4),
      I4 => of_predecode(7),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_1\(3),
      O => \Op2_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op2[0]_i_25\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_0\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(7),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(3),
      I4 => of_predecode(6),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_0\(4),
      O => \Op2_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op2[0]_i_27\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => of_predecode(6),
      I1 => \EX_Op2[0]_i_6_3\(4),
      I2 => \EX_Op2[0]_i_6_3\(2),
      I3 => of_predecode(8),
      O => \EX_Op2[0]_i_27_n_0\
    );
\EX_Op2[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => \^cur_data_i_reg[26]\,
      I1 => \^cur_data_i_reg[0]_0\,
      I2 => \^cur_data_i_reg[1]_0\,
      O => \^ex_op2[0]_i_7_0\
    );
\EX_Op2[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[0]\,
      I1 => \EX_Op2_reg[0]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[0]_1\(0),
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[0]_2\,
      O => \m1_M0_Result_i_reg[0]\
    );
\EX_Op2[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0200020000000200"
    )
        port map (
      I0 => \EX_Op2[0]_i_9_n_0\,
      I1 => \EX_Op2[0]_i_6_2\,
      I2 => \EX_Op2[0]_i_6_1\,
      I3 => \EX_Op2[0]_i_11_n_0\,
      I4 => \EX_Op2[0]_i_12_n_0\,
      I5 => \EX_Op2[0]_i_13_n_0\,
      O => \^cur_data_i_reg[26]\
    );
\EX_Op2[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555700"
    )
        port map (
      I0 => \EX_Op2[0]_i_9_n_0\,
      I1 => \EX_Op2[0]_i_12_n_0\,
      I2 => \EX_Op2[0]_i_13_n_0\,
      I3 => \EX_Op2[0]_i_11_n_0\,
      I4 => \EX_Op2[0]_i_6_1\,
      I5 => \EX_Op2[0]_i_6_2\,
      O => \^cur_data_i_reg[0]_0\
    );
\EX_Op2[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1311131313111311"
    )
        port map (
      I0 => \EX_Op2[0]_i_11_n_0\,
      I1 => \EX_Op2[16]_i_3\,
      I2 => \EX_Op2[0]_i_15_n_0\,
      I3 => \EX_Op2[0]_i_16_n_0\,
      I4 => \EX_Op2[0]_i_17_n_0\,
      I5 => \EX_Op2[0]_i_18_n_0\,
      O => \^cur_data_i_reg[1]_0\
    );
\EX_Op2[0]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FCFD"
    )
        port map (
      I0 => \EX_Op2[0]_i_16_n_0\,
      I1 => \EX_Op2[0]_i_6_1\,
      I2 => \EX_Op2[0]_i_6_2\,
      I3 => \EX_Op2[0]_i_15_n_0\,
      O => \EX_Op2[0]_i_9_n_0\
    );
\EX_Op2[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[10]\,
      I1 => \EX_Op2_reg[10]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[10]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[10]_2\,
      O => \m1_M0_Result_i_reg[10]\
    );
\EX_Op2[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[11]\,
      I1 => \EX_Op2_reg[11]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[11]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[11]_2\,
      O => \m1_M0_Result_i_reg[11]\
    );
\EX_Op2[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[12]\,
      I1 => \EX_Op2_reg[12]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[12]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[12]_2\,
      O => \m1_M0_Result_i_reg[12]\
    );
\EX_Op2[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[13]\,
      I1 => \EX_Op2_reg[13]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[13]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[13]_2\,
      O => \m1_M0_Result_i_reg[13]\
    );
\EX_Op2[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[14]\,
      I1 => \EX_Op2_reg[14]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[14]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[14]_2\,
      O => \m1_M0_Result_i_reg[14]\
    );
\EX_Op2[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[15]\,
      I1 => \EX_Op2_reg[15]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[15]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[15]_2\,
      O => \m1_M0_Result_i_reg[15]\
    );
\EX_Op2[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(8),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[16]\,
      I5 => \EX_Op2_reg[16]_0\,
      O => \WB_Exception_Return_Addr_reg[16]\
    );
\EX_Op2[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(7),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[17]\,
      I5 => \EX_Op2_reg[17]_0\,
      O => \WB_Exception_Return_Addr_reg[17]\
    );
\EX_Op2[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(6),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[18]\,
      I5 => \EX_Op2_reg[18]_0\,
      O => \WB_Exception_Return_Addr_reg[18]\
    );
\EX_Op2[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"553355330F000FFF"
    )
        port map (
      I0 => \EX_Op2_reg[1]\,
      I1 => \EX_Op2_reg[1]_0\,
      I2 => \EX_Op2_reg[1]_1\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[1]_2\,
      I5 => \^cur_data_i_reg[0]_0\,
      O => \m1_M0_Result_i_reg[1]\
    );
\EX_Op2[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(5),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[20]\,
      I5 => \EX_Op2_reg[20]_0\,
      O => \WB_Exception_Return_Addr_reg[20]\
    );
\EX_Op2[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(4),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[21]\,
      I5 => \EX_Op2_reg[21]_0\,
      O => \WB_Exception_Return_Addr_reg[21]\
    );
\EX_Op2[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BFBB8F8BB0B88088"
    )
        port map (
      I0 => wb_fwd(3),
      I1 => \^cur_data_i_reg[26]\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[25]\,
      I5 => \EX_Op2_reg[25]_0\,
      O => \WB_Exception_Return_Addr_reg[25]\
    );
\EX_Op2[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88B8BBBB88B88888"
    )
        port map (
      I0 => \EX_Op2_reg[29]\,
      I1 => \^cur_data_i_reg[0]_0\,
      I2 => \EX_Op2_reg[29]_0\,
      I3 => \EX_Op2_reg[29]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[29]_2\,
      O => M1_Sel_Mul_Res_reg
    );
\EX_Op2[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[2]\,
      I1 => \EX_Op2_reg[2]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[2]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[2]_2\,
      O => \m1_M0_Result_i_reg[2]\
    );
\EX_Op2[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88B8BBBB88B88888"
    )
        port map (
      I0 => \EX_Op2_reg[30]\,
      I1 => \^cur_data_i_reg[0]_0\,
      I2 => \EX_Op2_reg[30]_0\,
      I3 => \EX_Op1_reg[30]\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[30]_1\,
      O => M1_Sel_Mul_Res_reg_0
    );
\EX_Op2[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB8BBB8BBB888"
    )
        port map (
      I0 => \EX_Op2_reg[31]\,
      I1 => \^ex_op2[0]_i_6_0\,
      I2 => wb_fwd(0),
      I3 => \^ex_op2[0]_i_7_0\,
      I4 => \EX_Op2[31]_i_3_n_0\,
      I5 => \EX_Op2[31]_i_4_n_0\,
      O => m2_m1_sel_res_reg(0)
    );
\EX_Op2[31]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^cur_data_i_reg[0]_0\,
      I1 => \EX_Op2_reg[31]_0\,
      I2 => \^cur_data_i_reg[1]_0\,
      I3 => \EX_Op2_reg[31]_1\,
      O => \EX_Op2[31]_i_3_n_0\
    );
\EX_Op2[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEEE22E2"
    )
        port map (
      I0 => \EX_Op2_reg[31]_2\,
      I1 => \^cur_data_i_reg[1]_0\,
      I2 => \EX_Op2_reg[31]_3\,
      I3 => \EX_Op2_reg[31]_4\,
      I4 => \EX_Op2_reg[31]_5\,
      I5 => \^cur_data_i_reg[0]_0\,
      O => \EX_Op2[31]_i_4_n_0\
    );
\EX_Op2[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[3]\,
      I1 => \EX_Op2_reg[3]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[3]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[3]_2\,
      O => \m1_M0_Result_i_reg[3]\
    );
\EX_Op2[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"553355330F000FFF"
    )
        port map (
      I0 => \EX_Op2_reg[4]\,
      I1 => \EX_Op2_reg[4]_0\,
      I2 => \EX_Op2_reg[4]_1\,
      I3 => \^cur_data_i_reg[1]_0\,
      I4 => \EX_Op2_reg[4]_2\,
      I5 => \^cur_data_i_reg[0]_0\,
      O => \m1_M0_Result_i_reg[4]\
    );
\EX_Op2[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[5]\,
      I1 => \EX_Op2_reg[5]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[5]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[5]_2\,
      O => \m1_M0_Result_i_reg[5]\
    );
\EX_Op2[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[6]\,
      I1 => \EX_Op2_reg[6]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[6]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[6]_2\,
      O => \m1_M0_Result_i_reg[6]\
    );
\EX_Op2[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[7]\,
      I1 => \EX_Op2_reg[7]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[7]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[7]_2\,
      O => \m1_M0_Result_i_reg[7]\
    );
\EX_Op2[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[8]\,
      I1 => \EX_Op2_reg[8]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[8]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[8]_2\,
      O => \m1_M0_Result_i_reg[8]\
    );
\EX_Op2[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \EX_Op2_reg[9]\,
      I1 => \EX_Op2_reg[9]_0\,
      I2 => \^cur_data_i_reg[0]_0\,
      I3 => \EX_Op2_reg[9]_1\,
      I4 => \^cur_data_i_reg[1]_0\,
      I5 => \EX_Op2_reg[9]_2\,
      O => \m1_M0_Result_i_reg[9]\
    );
\Using_FPGA.Native_i_1__42\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => ex_gpr_write_addr(0),
      I1 => of_predecode(5),
      I2 => ex_gpr_write_addr(1),
      I3 => of_predecode(4),
      O => S_0
    );
\Using_FPGA.Native_i_1__43\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(5),
      I1 => \EX_Branch_CMP_Op1[30]_i_8_1\(0),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(1),
      O => S_1
    );
\Using_FPGA.Native_i_1__44\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(5),
      I1 => \EX_Branch_CMP_Op1[30]_i_8_0\(0),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(1),
      O => S_2
    );
\Using_FPGA.Native_i_1__45\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(5),
      I1 => \EX_Branch_CMP_Op1[30]_i_7_1\(0),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(1),
      O => S_3
    );
\Using_FPGA.Native_i_1__46\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(5),
      I1 => \EX_Branch_CMP_Op1[30]_i_7_0\(0),
      I2 => of_predecode(4),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(1),
      O => S_4
    );
\Using_FPGA.Native_i_1__47\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => ex_gpr_write_addr(0),
      I1 => of_predecode(10),
      I2 => ex_gpr_write_addr(1),
      I3 => \^q\(0),
      O => S_5
    );
\Using_FPGA.Native_i_1__48\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(10),
      I1 => \EX_Branch_CMP_Op1[30]_i_8_1\(0),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(1),
      O => S_6
    );
\Using_FPGA.Native_i_1__49\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(10),
      I1 => \EX_Branch_CMP_Op1[30]_i_8_0\(0),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(1),
      O => S_7
    );
\Using_FPGA.Native_i_1__50\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(10),
      I1 => \EX_Branch_CMP_Op1[30]_i_7_1\(0),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(1),
      O => S_8
    );
\Using_FPGA.Native_i_1__51\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => of_predecode(10),
      I1 => \EX_Branch_CMP_Op1[30]_i_7_0\(0),
      I2 => \^q\(0),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(1),
      O => S_9
    );
\Using_FPGA.Native_i_1__64\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => of_predecode(2),
      I1 => \Using_FPGA.Native\(0),
      I2 => \Using_FPGA.Native\(1),
      I3 => of_predecode(1),
      I4 => ex_gpr_write_addr(2),
      I5 => of_predecode(3),
      O => \cur_data_i_reg[8]_0\
    );
\Using_FPGA.Native_i_1__66\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_1\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_1\(3),
      O => \m0_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__68\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_0\(3),
      O => \m1_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__70\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_1\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(2),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(3),
      I4 => of_predecode(1),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_1\(4),
      O => \m2_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__72\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_0\(2),
      I1 => of_predecode(3),
      I2 => of_predecode(1),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(4),
      I4 => of_predecode(2),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_0\(3),
      O => \m3_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__74\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => of_predecode(7),
      I1 => \Using_FPGA.Native\(0),
      I2 => \Using_FPGA.Native\(1),
      I3 => of_predecode(6),
      I4 => ex_gpr_write_addr(2),
      I5 => of_predecode(8),
      O => \cur_data_i_reg[3]_0\
    );
\Using_FPGA.Native_i_1__76\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_1\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(6),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_1\(4),
      I4 => of_predecode(7),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_1\(3),
      O => \m0_gpr_write_addr_reg[2]_0\
    );
\Using_FPGA.Native_i_1__78\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_8_0\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(7),
      I3 => \EX_Branch_CMP_Op1[30]_i_8_0\(3),
      I4 => of_predecode(6),
      I5 => \EX_Branch_CMP_Op1[30]_i_8_0\(4),
      O => \m1_gpr_write_addr_reg[2]_0\
    );
\Using_FPGA.Native_i_1__80\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_1\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(6),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_1\(4),
      I4 => of_predecode(7),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_1\(3),
      O => \m2_gpr_write_addr_reg[2]_0\
    );
\Using_FPGA.Native_i_1__82\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Branch_CMP_Op1[30]_i_7_0\(2),
      I1 => of_predecode(8),
      I2 => of_predecode(7),
      I3 => \EX_Branch_CMP_Op1[30]_i_7_0\(3),
      I4 => of_predecode(6),
      I5 => \EX_Branch_CMP_Op1[30]_i_7_0\(4),
      O => \m3_gpr_write_addr_reg[2]_0\
    );
\cur_data_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => \data_buffer_reg[3][0]_srl4_n_0\,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(0),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(10),
      O => \cur_data_i[0]_i_1_n_0\
    );
\cur_data_i[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in61_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(10),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => \^q\(1),
      O => \cur_data_i[10]_i_1_n_0\
    );
\cur_data_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in7_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(1),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => \^q\(0),
      O => \cur_data_i[1]_i_1_n_0\
    );
\cur_data_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in13_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(2),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(8),
      O => \cur_data_i[2]_i_1_n_0\
    );
\cur_data_i[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in19_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(3),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(7),
      O => \cur_data_i[3]_i_1_n_0\
    );
\cur_data_i[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in25_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(4),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(6),
      O => \cur_data_i[4]_i_1_n_0\
    );
\cur_data_i[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in31_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(5),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(5),
      O => \cur_data_i[5]_i_1_n_0\
    );
\cur_data_i[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in37_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(6),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(4),
      O => \cur_data_i[6]_i_1_n_0\
    );
\cur_data_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in43_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(7),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(3),
      O => \cur_data_i[7]_i_1_n_0\
    );
\cur_data_i[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in49_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(8),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(2),
      O => \cur_data_i[8]_i_1_n_0\
    );
\cur_data_i[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => \cur_data_i_reg[10]_0\,
      I1 => p_2_in55_in,
      I2 => \cur_data_i_reg[0]_1\,
      I3 => \in\(9),
      I4 => \cur_data_i_reg[10]_1\,
      I5 => of_predecode(1),
      O => \cur_data_i[9]_i_1_n_0\
    );
\cur_data_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[0]_i_1_n_0\,
      Q => of_predecode(10),
      R => sync_reset
    );
\cur_data_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[10]_i_1_n_0\,
      Q => \^q\(1),
      R => sync_reset
    );
\cur_data_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[1]_i_1_n_0\,
      Q => \^q\(0),
      R => sync_reset
    );
\cur_data_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[2]_i_1_n_0\,
      Q => of_predecode(8),
      R => sync_reset
    );
\cur_data_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[3]_i_1_n_0\,
      Q => of_predecode(7),
      R => sync_reset
    );
\cur_data_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[4]_i_1_n_0\,
      Q => of_predecode(6),
      R => sync_reset
    );
\cur_data_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[5]_i_1_n_0\,
      Q => of_predecode(5),
      R => sync_reset
    );
\cur_data_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[6]_i_1_n_0\,
      Q => of_predecode(4),
      R => sync_reset
    );
\cur_data_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[7]_i_1_n_0\,
      Q => of_predecode(3),
      R => sync_reset
    );
\cur_data_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[8]_i_1_n_0\,
      Q => of_predecode(2),
      R => sync_reset
    );
\cur_data_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \cur_data_i[9]_i_1_n_0\,
      Q => of_predecode(1),
      R => sync_reset
    );
\data_buffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(0),
      Q => \data_buffer_reg[3][0]_srl4_n_0\
    );
\data_buffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(10),
      Q => p_2_in61_in
    );
\data_buffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(1),
      Q => p_2_in7_in
    );
\data_buffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(2),
      Q => p_2_in13_in
    );
\data_buffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(3),
      Q => p_2_in19_in
    );
\data_buffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(4),
      Q => p_2_in25_in
    );
\data_buffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(5),
      Q => p_2_in31_in
    );
\data_buffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(6),
      Q => p_2_in37_in
    );
\data_buffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(7),
      Q => p_2_in43_in
    );
\data_buffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(8),
      Q => p_2_in49_in
    );
\data_buffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \in\(9),
      Q => p_2_in55_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_OneHot_Buffer__parameterized3\ is
  port (
    \cur_data_i_reg[31]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[2]_0\ : out STD_LOGIC;
    \cur_data_i_reg[1]_0\ : out STD_LOGIC;
    if4_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \cur_data_i_reg[31]_1\ : in STD_LOGIC;
    \cur_data_i_reg[31]_2\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[30]_0\ : in STD_LOGIC;
    of_op1_sel_spr_pc : in STD_LOGIC;
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    ex_set_msr_ie_instr : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    addr : in STD_LOGIC_VECTOR ( 0 to 1 );
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_OneHot_Buffer__parameterized3\ : entity is "OneHot_Buffer";
end \microblaze_microblaze_0_0_OneHot_Buffer__parameterized3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_OneHot_Buffer__parameterized3\ is
  signal \Data_Mux[0].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[10].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[11].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[12].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[13].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[14].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[1].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[2].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[3].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[4].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[5].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[6].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[7].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[8].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[9].new_data_cmb_reg\ : STD_LOGIC;
  signal \^cur_data_i_reg[31]_0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \data_buffer_reg[3][0]_srl4_n_0\ : STD_LOGIC;
  signal new_data_cmb : STD_LOGIC_VECTOR ( 31 downto 15 );
  signal p_2_in106_in : STD_LOGIC;
  signal p_2_in111_in : STD_LOGIC;
  signal p_2_in117_in : STD_LOGIC;
  signal p_2_in123_in : STD_LOGIC;
  signal p_2_in129_in : STD_LOGIC;
  signal p_2_in135_in : STD_LOGIC;
  signal p_2_in141_in : STD_LOGIC;
  signal p_2_in147_in : STD_LOGIC;
  signal p_2_in153_in : STD_LOGIC;
  signal p_2_in159_in : STD_LOGIC;
  signal p_2_in15_in : STD_LOGIC;
  signal p_2_in165_in : STD_LOGIC;
  signal p_2_in171_in : STD_LOGIC;
  signal p_2_in177_in : STD_LOGIC;
  signal p_2_in183_in : STD_LOGIC;
  signal p_2_in21_in : STD_LOGIC;
  signal p_2_in27_in : STD_LOGIC;
  signal p_2_in33_in : STD_LOGIC;
  signal p_2_in39_in : STD_LOGIC;
  signal p_2_in3_in : STD_LOGIC;
  signal p_2_in45_in : STD_LOGIC;
  signal p_2_in51_in : STD_LOGIC;
  signal p_2_in57_in : STD_LOGIC;
  signal p_2_in63_in : STD_LOGIC;
  signal p_2_in69_in : STD_LOGIC;
  signal p_2_in75_in : STD_LOGIC;
  signal p_2_in81_in : STD_LOGIC;
  signal p_2_in87_in : STD_LOGIC;
  signal p_2_in93_in : STD_LOGIC;
  signal p_2_in99_in : STD_LOGIC;
  signal p_2_in9_in : STD_LOGIC;
  attribute srl_bus_name : string;
  attribute srl_bus_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PC_MODULE_I1/PC_BUFFER_I1/data_buffer_reg[3][9]_srl4 ";
begin
  \cur_data_i_reg[31]_0\(31 downto 0) <= \^cur_data_i_reg[31]_0\(31 downto 0);
\EX_Op1[29]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^cur_data_i_reg[31]_0\(2),
      I1 => of_op1_sel_spr_pc,
      I2 => \EX_Op1_reg[29]\,
      O => \cur_data_i_reg[2]_0\
    );
\EX_Op1[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB8B8"
    )
        port map (
      I0 => \^cur_data_i_reg[31]_0\(1),
      I1 => of_op1_sel_spr_pc,
      I2 => \EX_Op1_reg[30]\(0),
      I3 => \EX_Op1_reg[30]_0\,
      I4 => ex_set_msr_ie_instr,
      O => \cur_data_i_reg[1]_0\
    );
\cur_data_i[0]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => \data_buffer_reg[3][0]_srl4_n_0\,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(0),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(0),
      O => \Data_Mux[0].new_data_cmb_reg\
    );
\cur_data_i[10]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in159_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(10),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(10),
      O => \Data_Mux[10].new_data_cmb_reg\
    );
\cur_data_i[11]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in165_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(11),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(11),
      O => \Data_Mux[11].new_data_cmb_reg\
    );
\cur_data_i[12]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in171_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(12),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(12),
      O => \Data_Mux[12].new_data_cmb_reg\
    );
\cur_data_i[13]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in177_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(13),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(13),
      O => \Data_Mux[13].new_data_cmb_reg\
    );
\cur_data_i[14]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in183_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(14),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(14),
      O => \Data_Mux[14].new_data_cmb_reg\
    );
\cur_data_i[15]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in3_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(15),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(15),
      O => new_data_cmb(15)
    );
\cur_data_i[16]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in9_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(16),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(16),
      O => new_data_cmb(16)
    );
\cur_data_i[17]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in15_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(17),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(17),
      O => new_data_cmb(17)
    );
\cur_data_i[18]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in21_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(18),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(18),
      O => new_data_cmb(18)
    );
\cur_data_i[19]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in27_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(19),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(19),
      O => new_data_cmb(19)
    );
\cur_data_i[1]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in106_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(1),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(1),
      O => \Data_Mux[1].new_data_cmb_reg\
    );
\cur_data_i[20]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in33_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(20),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(20),
      O => new_data_cmb(20)
    );
\cur_data_i[21]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in39_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(21),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(21),
      O => new_data_cmb(21)
    );
\cur_data_i[22]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in45_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(22),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(22),
      O => new_data_cmb(22)
    );
\cur_data_i[23]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in51_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(23),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(23),
      O => new_data_cmb(23)
    );
\cur_data_i[24]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in57_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(24),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(24),
      O => new_data_cmb(24)
    );
\cur_data_i[25]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in63_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(25),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(25),
      O => new_data_cmb(25)
    );
\cur_data_i[26]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in69_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(26),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(26),
      O => new_data_cmb(26)
    );
\cur_data_i[27]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in75_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(27),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(27),
      O => new_data_cmb(27)
    );
\cur_data_i[28]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in81_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(28),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(28),
      O => new_data_cmb(28)
    );
\cur_data_i[29]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in87_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(29),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(29),
      O => new_data_cmb(29)
    );
\cur_data_i[2]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in111_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(2),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(2),
      O => \Data_Mux[2].new_data_cmb_reg\
    );
\cur_data_i[30]_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in93_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(30),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(30),
      O => new_data_cmb(30)
    );
\cur_data_i[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in99_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(31),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(31),
      O => new_data_cmb(31)
    );
\cur_data_i[3]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in117_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(3),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(3),
      O => \Data_Mux[3].new_data_cmb_reg\
    );
\cur_data_i[4]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in123_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(4),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(4),
      O => \Data_Mux[4].new_data_cmb_reg\
    );
\cur_data_i[5]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in129_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(5),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(5),
      O => \Data_Mux[5].new_data_cmb_reg\
    );
\cur_data_i[6]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in135_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(6),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(6),
      O => \Data_Mux[6].new_data_cmb_reg\
    );
\cur_data_i[7]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in141_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(7),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(7),
      O => \Data_Mux[7].new_data_cmb_reg\
    );
\cur_data_i[8]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in147_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(8),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(8),
      O => \Data_Mux[8].new_data_cmb_reg\
    );
\cur_data_i[9]_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EF40EF4FEF40E040"
    )
        port map (
      I0 => if4_sel_input(0),
      I1 => p_2_in153_in,
      I2 => \cur_data_i_reg[31]_1\,
      I3 => \cur_data_i_reg[31]_2\(9),
      I4 => \cur_data_i_reg[30]_0\,
      I5 => \^cur_data_i_reg[31]_0\(9),
      O => \Data_Mux[9].new_data_cmb_reg\
    );
\cur_data_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[0].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(0),
      R => sync_reset
    );
\cur_data_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[10].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(10),
      R => sync_reset
    );
\cur_data_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[11].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(11),
      R => sync_reset
    );
\cur_data_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[12].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(12),
      R => sync_reset
    );
\cur_data_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[13].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(13),
      R => sync_reset
    );
\cur_data_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[14].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(14),
      R => sync_reset
    );
\cur_data_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(15),
      Q => \^cur_data_i_reg[31]_0\(15),
      R => sync_reset
    );
\cur_data_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(16),
      Q => \^cur_data_i_reg[31]_0\(16),
      R => sync_reset
    );
\cur_data_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(17),
      Q => \^cur_data_i_reg[31]_0\(17),
      R => sync_reset
    );
\cur_data_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(18),
      Q => \^cur_data_i_reg[31]_0\(18),
      R => sync_reset
    );
\cur_data_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(19),
      Q => \^cur_data_i_reg[31]_0\(19),
      R => sync_reset
    );
\cur_data_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[1].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(1),
      R => sync_reset
    );
\cur_data_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(20),
      Q => \^cur_data_i_reg[31]_0\(20),
      R => sync_reset
    );
\cur_data_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(21),
      Q => \^cur_data_i_reg[31]_0\(21),
      R => sync_reset
    );
\cur_data_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(22),
      Q => \^cur_data_i_reg[31]_0\(22),
      R => sync_reset
    );
\cur_data_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(23),
      Q => \^cur_data_i_reg[31]_0\(23),
      R => sync_reset
    );
\cur_data_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(24),
      Q => \^cur_data_i_reg[31]_0\(24),
      R => sync_reset
    );
\cur_data_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(25),
      Q => \^cur_data_i_reg[31]_0\(25),
      R => sync_reset
    );
\cur_data_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(26),
      Q => \^cur_data_i_reg[31]_0\(26),
      R => sync_reset
    );
\cur_data_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(27),
      Q => \^cur_data_i_reg[31]_0\(27),
      R => sync_reset
    );
\cur_data_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(28),
      Q => \^cur_data_i_reg[31]_0\(28),
      R => sync_reset
    );
\cur_data_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(29),
      Q => \^cur_data_i_reg[31]_0\(29),
      R => sync_reset
    );
\cur_data_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[2].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(2),
      R => sync_reset
    );
\cur_data_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(30),
      Q => \^cur_data_i_reg[31]_0\(30),
      R => sync_reset
    );
\cur_data_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(31),
      Q => \^cur_data_i_reg[31]_0\(31),
      R => sync_reset
    );
\cur_data_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[3].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(3),
      R => sync_reset
    );
\cur_data_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[4].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(4),
      R => sync_reset
    );
\cur_data_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[5].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(5),
      R => sync_reset
    );
\cur_data_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[6].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(6),
      R => sync_reset
    );
\cur_data_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[7].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(7),
      R => sync_reset
    );
\cur_data_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[8].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(8),
      R => sync_reset
    );
\cur_data_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[9].new_data_cmb_reg\,
      Q => \^cur_data_i_reg[31]_0\(9),
      R => sync_reset
    );
\data_buffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(0),
      Q => \data_buffer_reg[3][0]_srl4_n_0\
    );
\data_buffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(10),
      Q => p_2_in159_in
    );
\data_buffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(11),
      Q => p_2_in165_in
    );
\data_buffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(12),
      Q => p_2_in171_in
    );
\data_buffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(13),
      Q => p_2_in177_in
    );
\data_buffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(14),
      Q => p_2_in183_in
    );
\data_buffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(15),
      Q => p_2_in3_in
    );
\data_buffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(16),
      Q => p_2_in9_in
    );
\data_buffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(17),
      Q => p_2_in15_in
    );
\data_buffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(18),
      Q => p_2_in21_in
    );
\data_buffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(19),
      Q => p_2_in27_in
    );
\data_buffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(1),
      Q => p_2_in106_in
    );
\data_buffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(20),
      Q => p_2_in33_in
    );
\data_buffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(21),
      Q => p_2_in39_in
    );
\data_buffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(22),
      Q => p_2_in45_in
    );
\data_buffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(23),
      Q => p_2_in51_in
    );
\data_buffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(24),
      Q => p_2_in57_in
    );
\data_buffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(25),
      Q => p_2_in63_in
    );
\data_buffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(26),
      Q => p_2_in69_in
    );
\data_buffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(27),
      Q => p_2_in75_in
    );
\data_buffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(28),
      Q => p_2_in81_in
    );
\data_buffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(29),
      Q => p_2_in87_in
    );
\data_buffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(2),
      Q => p_2_in111_in
    );
\data_buffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(30),
      Q => p_2_in93_in
    );
\data_buffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(31),
      Q => p_2_in99_in
    );
\data_buffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(3),
      Q => p_2_in117_in
    );
\data_buffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(4),
      Q => p_2_in123_in
    );
\data_buffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(5),
      Q => p_2_in129_in
    );
\data_buffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(6),
      Q => p_2_in135_in
    );
\data_buffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(7),
      Q => p_2_in141_in
    );
\data_buffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(8),
      Q => p_2_in147_in
    );
\data_buffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => addr(1),
      A1 => addr(0),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => \cur_data_i_reg[31]_2\(9),
      Q => p_2_in153_in
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Operand_Select_ff is
  port (
    \EX_Op1_reg[10]_0\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op1_reg[9]_0\ : out STD_LOGIC;
    \EX_Op1_reg[1]_0\ : out STD_LOGIC;
    \EX_Op1_reg[8]_0\ : out STD_LOGIC;
    \EX_Op2_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    EX_Bit_Extract_reg : out STD_LOGIC_VECTOR ( 30 downto 0 );
    EX_Bit_Extract_reg_0 : out STD_LOGIC_VECTOR ( 12 downto 0 );
    \EX_Op2_reg[25]_0\ : out STD_LOGIC;
    \EX_Op2_reg[25]_1\ : out STD_LOGIC;
    \EX_Op2_reg[25]_2\ : out STD_LOGIC;
    ex_sel_alu_reg : out STD_LOGIC_VECTOR ( 6 downto 0 );
    \EX_Logic_Op_reg[0]\ : out STD_LOGIC;
    EX_CLZ_Instr_reg : out STD_LOGIC;
    \EX_Op1_reg[0]_0\ : out STD_LOGIC;
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[0]_1\ : out STD_LOGIC;
    \EX_Op1_reg[24]_0\ : out STD_LOGIC;
    \EX_Op1_reg[24]_1\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : out STD_LOGIC;
    \EX_Op1_reg[0]_2\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[16]_0\ : out STD_LOGIC;
    \EX_Logic_Op_reg[1]\ : out STD_LOGIC;
    I2 : out STD_LOGIC;
    I0 : out STD_LOGIC;
    S : out STD_LOGIC;
    \EX_Op1_reg[30]_0\ : out STD_LOGIC;
    \EX_Op1_reg[29]_0\ : out STD_LOGIC;
    \EX_Op1_reg[28]_0\ : out STD_LOGIC;
    \EX_Op1_reg[27]_0\ : out STD_LOGIC;
    \EX_Op1_reg[26]_0\ : out STD_LOGIC;
    \EX_Op1_reg[25]_0\ : out STD_LOGIC;
    \EX_Op1_reg[24]_2\ : out STD_LOGIC;
    \EX_Op1_reg[23]_0\ : out STD_LOGIC;
    \EX_Op1_reg[22]_0\ : out STD_LOGIC;
    \EX_Op1_reg[21]_0\ : out STD_LOGIC;
    \EX_Op1_reg[20]_0\ : out STD_LOGIC;
    \EX_Op1_reg[19]_0\ : out STD_LOGIC;
    \EX_Op1_reg[18]_0\ : out STD_LOGIC;
    \EX_Op1_reg[17]_0\ : out STD_LOGIC;
    \EX_Op1_reg[16]_1\ : out STD_LOGIC;
    \EX_Op1_reg[15]_0\ : out STD_LOGIC;
    \EX_Op1_reg[14]_0\ : out STD_LOGIC;
    \EX_Op1_reg[13]_0\ : out STD_LOGIC;
    \EX_Op1_reg[12]_0\ : out STD_LOGIC;
    \EX_Op1_reg[11]_0\ : out STD_LOGIC;
    \EX_Op1_reg[10]_1\ : out STD_LOGIC;
    \EX_Op1_reg[9]_1\ : out STD_LOGIC;
    \EX_Op1_reg[8]_1\ : out STD_LOGIC;
    \EX_Op1_reg[7]_0\ : out STD_LOGIC;
    \EX_Op1_reg[6]_0\ : out STD_LOGIC;
    \EX_Op1_reg[5]_0\ : out STD_LOGIC;
    \EX_Op1_reg[4]_0\ : out STD_LOGIC;
    \EX_Op1_reg[3]_0\ : out STD_LOGIC;
    \EX_Op1_reg[2]_0\ : out STD_LOGIC;
    CI : out STD_LOGIC;
    EX_Div_Unsigned_reg : out STD_LOGIC;
    \Using_FPGA.D_Handle[0].D_Sel_reg\ : out STD_LOGIC;
    ex_sel_alu_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[23]_1\ : out STD_LOGIC;
    \EX_Op1_reg[22]_1\ : out STD_LOGIC;
    \EX_Op1_reg[21]_1\ : out STD_LOGIC;
    \EX_Op1_reg[20]_1\ : out STD_LOGIC;
    \EX_Op1_reg[19]_1\ : out STD_LOGIC;
    \EX_Op1_reg[18]_1\ : out STD_LOGIC;
    \EX_Op1_reg[16]_2\ : out STD_LOGIC;
    in0 : out STD_LOGIC;
    \EX_Op1_reg[17]_1\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \EX_Op1_reg[24]_3\ : out STD_LOGIC;
    \EX_Op2_reg[29]_0\ : out STD_LOGIC;
    \EX_Op2_reg[30]_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_0\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[0]_0\ : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \imm_reg_reg[0]_0\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op3_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_clz_instr : in STD_LOGIC;
    ex_bit_insert : in STD_LOGIC;
    ex_bit_extract : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\ : in STD_LOGIC;
    ex_msrclr : in STD_LOGIC;
    ex_msrset : in STD_LOGIC;
    \Using_FPGA.Native_i_2__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_2__8_0\ : in STD_LOGIC;
    m3_div_zero_overflow_ex_hold : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    ex_databus_addr : in STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_sel_alu_res : in STD_LOGIC;
    \m0_Ex_Result_i_reg[29]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]\ : in STD_LOGIC;
    ex_alu_result : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_Ex_Result_i_reg[31]\ : in STD_LOGIC;
    ex_logic_op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \m0_Ex_Result_i_reg[26]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[26]_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[27]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[27]_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[28]\ : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    ex_alu_sel_logic : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[24]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    \m0_Ex_Result_i_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \out\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]\ : in STD_LOGIC;
    ex_void_bit : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[30]\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[27]\ : in STD_LOGIC;
    ex_left_shift_i : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]_0\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[30]_0\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]_1\ : in STD_LOGIC;
    ex_arith_shift : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \imm_reg_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \imm_reg_reg[0]_1\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    Clk : in STD_LOGIC;
    of_piperun : in STD_LOGIC;
    \EX_Op1_reg[0]_3\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op2_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Op3_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Branch_CMP_Op1_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Operand_Select_ff : entity is "Operand_Select_ff";
end microblaze_microblaze_0_0_Operand_Select_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Operand_Select_ff is
  signal \^ex_bit_extract_reg\ : STD_LOGIC_VECTOR ( 30 downto 0 );
  signal \^ex_logic_op_reg[0]\ : STD_LOGIC;
  signal \EX_Op1[29]_i_11_n_0\ : STD_LOGIC;
  signal \EX_Op1[29]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_10_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_11_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_13_n_0\ : STD_LOGIC;
  signal \EX_Op1[31]_i_14_n_0\ : STD_LOGIC;
  signal \^ex_op1_reg[0]_0\ : STD_LOGIC;
  signal \^ex_op1_reg[0]_1\ : STD_LOGIC;
  signal \^ex_op1_reg[10]_0\ : STD_LOGIC;
  signal \^ex_op1_reg[16]_0\ : STD_LOGIC;
  signal \^ex_op1_reg[1]_0\ : STD_LOGIC;
  signal \^ex_op1_reg[24]_0\ : STD_LOGIC;
  signal \^ex_op1_reg[9]_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_10_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_11_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_13_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_8_n_0\ : STD_LOGIC;
  signal \EX_Op2[29]_i_9_n_0\ : STD_LOGIC;
  signal \EX_Op2[30]_i_7_n_0\ : STD_LOGIC;
  signal \^ex_op2_reg[0]_0\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^ex_op2_reg[25]_0\ : STD_LOGIC;
  signal \^ex_op2_reg[25]_1\ : STD_LOGIC;
  signal \^ex_op2_reg[29]_0\ : STD_LOGIC;
  signal \^ex_pattern_cmp_sel_reg\ : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[0]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[10]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[12]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[13]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[14]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[15]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[1]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[2]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[4]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[6]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[8]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1[9]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_4_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[31]_i_2_n_0\ : STD_LOGIC;
  signal ex_branch_cmp_op1 : STD_LOGIC_VECTOR ( 30 to 31 );
  signal \m0_Ex_Result_i[26]_i_10_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_11_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_12_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_13_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_14_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_15_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_16_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_5_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_7_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_8_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[26]_i_9_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[28]_i_3_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[28]_i_4_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[28]_i_5_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[29]_i_3_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[29]_i_7_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[29]_i_8_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_10_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_11_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_5_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_8_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_9_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_10_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_11_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_3_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_5_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_6_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_7_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_8_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[31]_i_9_n_0\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_10\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_12\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_13\ : label is "soft_lutpair115";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_14\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_10\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_12\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_13\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \EX_Op2[31]_i_9\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[6]_i_2\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[0]_i_1\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[10]_i_1\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[11]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[12]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[13]_i_1\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[14]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[15]_i_2\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[16]_i_1\ : label is "soft_lutpair128";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[17]_i_1\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[18]_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[19]_i_1\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[1]_i_1\ : label is "soft_lutpair126";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[20]_i_1\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[21]_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[22]_i_1\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[23]_i_1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[24]_i_1\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[25]_i_1\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[26]_i_1\ : label is "soft_lutpair124";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[27]_i_1\ : label is "soft_lutpair119";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[28]_i_1\ : label is "soft_lutpair131";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[29]_i_1\ : label is "soft_lutpair125";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[2]_i_1\ : label is "soft_lutpair123";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[30]_i_1\ : label is "soft_lutpair121";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[3]_i_1\ : label is "soft_lutpair118";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3\ : label is "soft_lutpair109";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[4]_i_1\ : label is "soft_lutpair130";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[5]_i_1\ : label is "soft_lutpair111";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[6]_i_1\ : label is "soft_lutpair122";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[7]_i_1\ : label is "soft_lutpair120";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[8]_i_1\ : label is "soft_lutpair129";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask1[9]_i_1\ : label is "soft_lutpair127";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[31]_i_2\ : label is "soft_lutpair112";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__134\ : label is "soft_lutpair117";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[19]_i_2\ : label is "soft_lutpair110";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[26]_i_14\ : label is "soft_lutpair132";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[28]_i_4\ : label is "soft_lutpair113";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[29]_i_5\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[30]_i_8\ : label is "soft_lutpair108";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[30]_i_9\ : label is "soft_lutpair116";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[31]_i_5\ : label is "soft_lutpair114";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[31]_i_6\ : label is "soft_lutpair107";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[31]_i_9\ : label is "soft_lutpair132";
begin
  EX_Bit_Extract_reg(30 downto 0) <= \^ex_bit_extract_reg\(30 downto 0);
  \EX_Logic_Op_reg[0]\ <= \^ex_logic_op_reg[0]\;
  \EX_Op1_reg[0]_0\ <= \^ex_op1_reg[0]_0\;
  \EX_Op1_reg[0]_1\ <= \^ex_op1_reg[0]_1\;
  \EX_Op1_reg[10]_0\ <= \^ex_op1_reg[10]_0\;
  \EX_Op1_reg[16]_0\ <= \^ex_op1_reg[16]_0\;
  \EX_Op1_reg[1]_0\ <= \^ex_op1_reg[1]_0\;
  \EX_Op1_reg[24]_0\ <= \^ex_op1_reg[24]_0\;
  \EX_Op1_reg[9]_0\ <= \^ex_op1_reg[9]_0\;
  \EX_Op2_reg[0]_0\(31 downto 0) <= \^ex_op2_reg[0]_0\(31 downto 0);
  \EX_Op2_reg[25]_0\ <= \^ex_op2_reg[25]_0\;
  \EX_Op2_reg[25]_1\ <= \^ex_op2_reg[25]_1\;
  \EX_Op2_reg[29]_0\ <= \^ex_op2_reg[29]_0\;
  EX_Pattern_Cmp_Sel_reg <= \^ex_pattern_cmp_sel_reg\;
  Q(31 downto 0) <= \^q\(31 downto 0);
\EX_Branch_CMP_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(31),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(21),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(20),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(19),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(18),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(17),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(16),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(15),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(14),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(13),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(12),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(30),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(11),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(10),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(9),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(8),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(7),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(6),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(5),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(4),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(3),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(2),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(29),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(1),
      Q => ex_branch_cmp_op1(30),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(0),
      Q => ex_branch_cmp_op1(31),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(28),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(27),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(26),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(25),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(24),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(22),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(23),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Branch_CMP_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Branch_CMP_Op1_reg[0]_1\(22),
      Q => \EX_Branch_CMP_Op1_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op1[29]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF04F4"
    )
        port map (
      I0 => \EX_Op1[29]_i_11_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I2 => \^ex_op1_reg[16]_0\,
      I3 => \EX_Op1[29]_i_12_n_0\,
      I4 => \^ex_op1_reg[9]_0\,
      O => \EX_Op1_reg[24]_3\
    );
\EX_Op1[29]_i_11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^q\(7),
      I1 => \^q\(6),
      I2 => \^q\(5),
      I3 => \^q\(4),
      O => \EX_Op1[29]_i_11_n_0\
    );
\EX_Op1[29]_i_12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^q\(15),
      I1 => \^q\(14),
      I2 => \^q\(13),
      I3 => \^q\(12),
      O => \EX_Op1[29]_i_12_n_0\
    );
\EX_Op1[30]_i_11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"4F"
    )
        port map (
      I0 => \EX_Op1[30]_i_12_n_0\,
      I1 => \^ex_op1_reg[9]_0\,
      I2 => \^ex_op1_reg[1]_0\,
      O => \EX_Op1_reg[8]_0\
    );
\EX_Op1[30]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1111111111110001"
    )
        port map (
      I0 => \^q\(23),
      I1 => \^q\(22),
      I2 => \^q\(18),
      I3 => \^q\(19),
      I4 => \^q\(20),
      I5 => \^q\(21),
      O => \EX_Op1[30]_i_12_n_0\
    );
\EX_Op1[31]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8B8BB88BBBB"
    )
        port map (
      I0 => \EX_Op1[31]_i_12_n_0\,
      I1 => \^ex_op1_reg[9]_0\,
      I2 => \EX_Op1[31]_i_13_n_0\,
      I3 => \EX_Op1[31]_i_14_n_0\,
      I4 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I5 => \^ex_op1_reg[16]_0\,
      O => \EX_Op1[31]_i_10_n_0\
    );
\EX_Op1[31]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555511110010"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(28),
      I2 => \^q\(25),
      I3 => \^q\(26),
      I4 => \^q\(27),
      I5 => \^q\(29),
      O => \EX_Op1[31]_i_11_n_0\
    );
\EX_Op1[31]_i_12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^q\(23),
      I1 => \m0_Ex_Result_i[31]_i_7_n_0\,
      O => \EX_Op1[31]_i_12_n_0\
    );
\EX_Op1[31]_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^q\(15),
      I1 => \m0_Ex_Result_i[31]_i_10_n_0\,
      O => \EX_Op1[31]_i_13_n_0\
    );
\EX_Op1[31]_i_14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^q\(7),
      I1 => \m0_Ex_Result_i[31]_i_11_n_0\,
      O => \EX_Op1[31]_i_14_n_0\
    );
\EX_Op1[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF44470000"
    )
        port map (
      I0 => \EX_Op1[31]_i_10_n_0\,
      I1 => \^ex_op1_reg[1]_0\,
      I2 => \^q\(31),
      I3 => \EX_Op1[31]_i_11_n_0\,
      I4 => ex_clz_instr,
      I5 => \m0_Ex_Result_i_reg[31]\,
      O => \EX_Op1_reg[0]_2\
    );
\EX_Op1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(31),
      Q => \^q\(31),
      R => sync_reset
    );
\EX_Op1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(21),
      Q => \^q\(21),
      R => sync_reset
    );
\EX_Op1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(20),
      Q => \^q\(20),
      R => sync_reset
    );
\EX_Op1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(19),
      Q => \^q\(19),
      R => sync_reset
    );
\EX_Op1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(18),
      Q => \^q\(18),
      R => sync_reset
    );
\EX_Op1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(17),
      Q => \^q\(17),
      R => sync_reset
    );
\EX_Op1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(16),
      Q => \^q\(16),
      R => sync_reset
    );
\EX_Op1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(15),
      Q => \^q\(15),
      R => sync_reset
    );
\EX_Op1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(14),
      Q => \^q\(14),
      R => sync_reset
    );
\EX_Op1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(13),
      Q => \^q\(13),
      R => sync_reset
    );
\EX_Op1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(12),
      Q => \^q\(12),
      R => sync_reset
    );
\EX_Op1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(30),
      Q => \^q\(30),
      R => sync_reset
    );
\EX_Op1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(11),
      Q => \^q\(11),
      R => sync_reset
    );
\EX_Op1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(10),
      Q => \^q\(10),
      R => sync_reset
    );
\EX_Op1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(9),
      Q => \^q\(9),
      R => sync_reset
    );
\EX_Op1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(8),
      Q => \^q\(8),
      R => sync_reset
    );
\EX_Op1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(7),
      Q => \^q\(7),
      R => sync_reset
    );
\EX_Op1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(6),
      Q => \^q\(6),
      R => sync_reset
    );
\EX_Op1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(5),
      Q => \^q\(5),
      R => sync_reset
    );
\EX_Op1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(4),
      Q => \^q\(4),
      R => sync_reset
    );
\EX_Op1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(3),
      Q => \^q\(3),
      R => sync_reset
    );
\EX_Op1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(2),
      Q => \^q\(2),
      R => sync_reset
    );
\EX_Op1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(29),
      Q => \^q\(29),
      R => sync_reset
    );
\EX_Op1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(1),
      Q => \^q\(1),
      R => sync_reset
    );
\EX_Op1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(0),
      Q => \^q\(0),
      R => sync_reset
    );
\EX_Op1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(28),
      Q => \^q\(28),
      R => sync_reset
    );
\EX_Op1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(27),
      Q => \^q\(27),
      R => sync_reset
    );
\EX_Op1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(26),
      Q => \^q\(26),
      R => sync_reset
    );
\EX_Op1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(25),
      Q => \^q\(25),
      R => sync_reset
    );
\EX_Op1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(24),
      Q => \^q\(24),
      R => sync_reset
    );
\EX_Op1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(23),
      Q => \^q\(23),
      R => sync_reset
    );
\EX_Op1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op1_reg[0]_3\(22),
      Q => \^q\(22),
      R => sync_reset
    );
\EX_Op2[25]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4747774747777777"
    )
        port map (
      I0 => ex_databus_addr(2),
      I1 => ex_sel_alu_res,
      I2 => ex_enable_sext_shift,
      I3 => \m0_Ex_Result_i_reg[24]\,
      I4 => \^q\(7),
      I5 => \^q\(6),
      O => ex_sel_alu_reg_0
    );
\EX_Op2[29]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^q\(21),
      I1 => \^q\(20),
      I2 => \^q\(23),
      I3 => \^q\(22),
      O => \EX_Op2[29]_i_10_n_0\
    );
\EX_Op2[29]_i_11\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF04FF"
    )
        port map (
      I0 => \EX_Op2[29]_i_13_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_15_n_0\,
      I2 => \m0_Ex_Result_i[26]_i_16_n_0\,
      I3 => ex_pattern_cmp_sel,
      I4 => ex_logic_op(0),
      O => \EX_Op2[29]_i_11_n_0\
    );
\EX_Op2[29]_i_12\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(12),
      I1 => \^q\(13),
      O => \EX_Op2[29]_i_12_n_0\
    );
\EX_Op2[29]_i_13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op2_reg[0]_0\(31),
      I2 => \^ex_op2_reg[0]_0\(30),
      I3 => \^q\(30),
      O => \EX_Op2[29]_i_13_n_0\
    );
\EX_Op2[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF0000D0DF"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\,
      I1 => \EX_Op2[29]_i_7_n_0\,
      I2 => ex_clz_instr,
      I3 => \m0_Ex_Result_i_reg[29]\,
      I4 => ex_pattern_cmp_sel,
      I5 => \EX_Op2[29]_i_8_n_0\,
      O => EX_CLZ_Instr_reg
    );
\EX_Op2[29]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00AE000000AE00"
    )
        port map (
      I0 => \EX_Op2[29]_i_9_n_0\,
      I1 => \m0_Ex_Result_i[28]_i_3_n_0\,
      I2 => \EX_Op1[29]_i_11_n_0\,
      I3 => \^ex_op1_reg[1]_0\,
      I4 => \^ex_op1_reg[9]_0\,
      I5 => \EX_Op2[29]_i_10_n_0\,
      O => \EX_Op2[29]_i_7_n_0\
    );
\EX_Op2[29]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAAEFAF"
    )
        port map (
      I0 => ex_sel_alu_res,
      I1 => \^ex_op1_reg[9]_0\,
      I2 => ex_pattern_cmp_sel,
      I3 => \^ex_op1_reg[16]_0\,
      I4 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I5 => \EX_Op2[29]_i_11_n_0\,
      O => \EX_Op2[29]_i_8_n_0\
    );
\EX_Op2[29]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000FE00"
    )
        port map (
      I0 => \m0_Ex_Result_i[26]_i_13_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_12_n_0\,
      I2 => \m0_Ex_Result_i[28]_i_5_n_0\,
      I3 => \EX_Op2[29]_i_12_n_0\,
      I4 => \^q\(14),
      I5 => \^q\(15),
      O => \EX_Op2[29]_i_9_n_0\
    );
\EX_Op2[30]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00AE000000AE00"
    )
        port map (
      I0 => \EX_Op2[30]_i_7_n_0\,
      I1 => \m0_Ex_Result_i[28]_i_3_n_0\,
      I2 => \m0_Ex_Result_i[30]_i_10_n_0\,
      I3 => \^ex_op1_reg[1]_0\,
      I4 => \^ex_op1_reg[9]_0\,
      I5 => \EX_Op1[30]_i_12_n_0\,
      O => \EX_Op1_reg[24]_1\
    );
\EX_Op2[30]_i_7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00FE"
    )
        port map (
      I0 => \m0_Ex_Result_i[26]_i_13_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_12_n_0\,
      I2 => \m0_Ex_Result_i[28]_i_5_n_0\,
      I3 => \m0_Ex_Result_i[30]_i_11_n_0\,
      O => \EX_Op2[30]_i_7_n_0\
    );
\EX_Op2[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAAAA6A"
    )
        port map (
      I0 => ex_logic_op(1),
      I1 => \^ex_op1_reg[1]_0\,
      I2 => ex_pattern_cmp_sel,
      I3 => \^ex_op1_reg[16]_0\,
      I4 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I5 => \^ex_op1_reg[9]_0\,
      O => \EX_Logic_Op_reg[1]\
    );
\EX_Op2[31]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B0A0"
    )
        port map (
      I0 => \^ex_op1_reg[1]_0\,
      I1 => \^ex_op1_reg[16]_0\,
      I2 => ex_pattern_cmp_sel,
      I3 => \^ex_op1_reg[9]_0\,
      O => EX_Pattern_Cmp_Sel_reg_0
    );
\EX_Op2_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(31),
      Q => \^ex_op2_reg[0]_0\(31),
      R => sync_reset
    );
\EX_Op2_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(21),
      Q => \^ex_op2_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Op2_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(20),
      Q => \^ex_op2_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op2_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(19),
      Q => \^ex_op2_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Op2_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(18),
      Q => \^ex_op2_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Op2_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(17),
      Q => \^ex_op2_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Op2_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(16),
      Q => \^ex_op2_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Op2_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(15),
      Q => \^ex_op2_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Op2_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(14),
      Q => \^ex_op2_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Op2_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(13),
      Q => \^ex_op2_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Op2_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(12),
      Q => \^ex_op2_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Op2_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(30),
      Q => \^ex_op2_reg[0]_0\(30),
      R => sync_reset
    );
\EX_Op2_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(11),
      Q => \^ex_op2_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Op2_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(10),
      Q => \^ex_op2_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Op2_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(9),
      Q => \^ex_op2_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Op2_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(8),
      Q => \^ex_op2_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Op2_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(7),
      Q => \^ex_op2_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Op2_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(6),
      Q => \^ex_op2_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Op2_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(5),
      Q => \^ex_op2_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Op2_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(4),
      Q => \^ex_op2_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Op2_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(3),
      Q => \^ex_op2_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Op2_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(2),
      Q => \^ex_op2_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Op2_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(29),
      Q => \^ex_op2_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Op2_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(1),
      Q => \^ex_op2_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Op2_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(0),
      Q => \^ex_op2_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Op2_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(28),
      Q => \^ex_op2_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Op2_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(27),
      Q => \^ex_op2_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Op2_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(26),
      Q => \^ex_op2_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Op2_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(25),
      Q => \^ex_op2_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Op2_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(24),
      Q => \^ex_op2_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Op2_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(23),
      Q => \^ex_op2_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Op2_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op2_reg[0]_1\(22),
      Q => \^ex_op2_reg[0]_0\(22),
      R => sync_reset
    );
\EX_Op3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(31),
      Q => \EX_Op3_reg[0]_0\(31),
      R => sync_reset
    );
\EX_Op3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(21),
      Q => \EX_Op3_reg[0]_0\(21),
      R => sync_reset
    );
\EX_Op3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(20),
      Q => \EX_Op3_reg[0]_0\(20),
      R => sync_reset
    );
\EX_Op3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(19),
      Q => \EX_Op3_reg[0]_0\(19),
      R => sync_reset
    );
\EX_Op3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(18),
      Q => \EX_Op3_reg[0]_0\(18),
      R => sync_reset
    );
\EX_Op3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(17),
      Q => \EX_Op3_reg[0]_0\(17),
      R => sync_reset
    );
\EX_Op3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(16),
      Q => \EX_Op3_reg[0]_0\(16),
      R => sync_reset
    );
\EX_Op3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(15),
      Q => \EX_Op3_reg[0]_0\(15),
      R => sync_reset
    );
\EX_Op3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(14),
      Q => \EX_Op3_reg[0]_0\(14),
      R => sync_reset
    );
\EX_Op3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(13),
      Q => \EX_Op3_reg[0]_0\(13),
      R => sync_reset
    );
\EX_Op3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(12),
      Q => \EX_Op3_reg[0]_0\(12),
      R => sync_reset
    );
\EX_Op3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(30),
      Q => \EX_Op3_reg[0]_0\(30),
      R => sync_reset
    );
\EX_Op3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(11),
      Q => \EX_Op3_reg[0]_0\(11),
      R => sync_reset
    );
\EX_Op3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(10),
      Q => \EX_Op3_reg[0]_0\(10),
      R => sync_reset
    );
\EX_Op3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(9),
      Q => \EX_Op3_reg[0]_0\(9),
      R => sync_reset
    );
\EX_Op3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(8),
      Q => \EX_Op3_reg[0]_0\(8),
      R => sync_reset
    );
\EX_Op3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(7),
      Q => \EX_Op3_reg[0]_0\(7),
      R => sync_reset
    );
\EX_Op3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(6),
      Q => \EX_Op3_reg[0]_0\(6),
      R => sync_reset
    );
\EX_Op3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(5),
      Q => \EX_Op3_reg[0]_0\(5),
      R => sync_reset
    );
\EX_Op3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(4),
      Q => \EX_Op3_reg[0]_0\(4),
      R => sync_reset
    );
\EX_Op3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(3),
      Q => \EX_Op3_reg[0]_0\(3),
      R => sync_reset
    );
\EX_Op3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(2),
      Q => \EX_Op3_reg[0]_0\(2),
      R => sync_reset
    );
\EX_Op3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(29),
      Q => \EX_Op3_reg[0]_0\(29),
      R => sync_reset
    );
\EX_Op3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(1),
      Q => \EX_Op3_reg[0]_0\(1),
      R => sync_reset
    );
\EX_Op3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(0),
      Q => \EX_Op3_reg[0]_0\(0),
      R => sync_reset
    );
\EX_Op3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(28),
      Q => \EX_Op3_reg[0]_0\(28),
      R => sync_reset
    );
\EX_Op3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(27),
      Q => \EX_Op3_reg[0]_0\(27),
      R => sync_reset
    );
\EX_Op3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(26),
      Q => \EX_Op3_reg[0]_0\(26),
      R => sync_reset
    );
\EX_Op3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(25),
      Q => \EX_Op3_reg[0]_0\(25),
      R => sync_reset
    );
\EX_Op3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(24),
      Q => \EX_Op3_reg[0]_0\(24),
      R => sync_reset
    );
\EX_Op3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(23),
      Q => \EX_Op3_reg[0]_0\(23),
      R => sync_reset
    );
\EX_Op3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun,
      D => \EX_Op3_reg[0]_1\(22),
      Q => \EX_Op3_reg[0]_0\(22),
      R => sync_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFF0FF0F003A3F"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(3),
      I2 => ex_bit_insert,
      I3 => ex_bit_extract,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2_n_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\,
      O => EX_Bit_Extract_reg_0(8)
    );
\Use_HW_BS.Using_BitField.mem_mask0[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00007777F787F787"
    )
        port map (
      I0 => \^ex_op2_reg[25]_1\,
      I1 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\,
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(10),
      I4 => \^ex_op2_reg[0]_0\(4),
      I5 => ex_bit_insert,
      O => EX_Bit_Extract_reg_0(7)
    );
\Use_HW_BS.Using_BitField.mem_mask0[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3A3FF0FF0F000F00"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(3),
      I2 => ex_bit_insert,
      I3 => ex_bit_extract,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2_n_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\,
      O => EX_Bit_Extract_reg_0(6)
    );
\Use_HW_BS.Using_BitField.mem_mask0[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000DDDDFD2DFD2D"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\,
      I1 => \^ex_op2_reg[25]_0\,
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(10),
      I4 => \^ex_op2_reg[0]_0\(4),
      I5 => ex_bit_insert,
      O => EX_Bit_Extract_reg_0(5)
    );
\Use_HW_BS.Using_BitField.mem_mask0[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FDDFF55FF55FF55"
    )
        port map (
      I0 => ex_bit_extract,
      I1 => \^ex_op2_reg[0]_0\(10),
      I2 => \^ex_op2_reg[0]_0\(4),
      I3 => ex_bit_insert,
      I4 => \^ex_op2_reg[25]_1\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\,
      O => EX_Bit_Extract_reg_0(12)
    );
\Use_HW_BS.Using_BitField.mem_mask0[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCCCA0000000A000"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(6),
      I1 => \^ex_op2_reg[0]_0\(0),
      I2 => \^ex_op2_reg[0]_0\(7),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(1),
      O => \^ex_op2_reg[25]_1\
    );
\Use_HW_BS.Using_BitField.mem_mask0[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCCCA0000000A000"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(3),
      I2 => \^ex_op2_reg[0]_0\(8),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(2),
      O => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"333333113F3F3F1D"
    )
        port map (
      I0 => ex_bit_extract,
      I1 => ex_bit_insert,
      I2 => \^ex_op2_reg[0]_0\(3),
      I3 => \^ex_op2_reg[0]_0\(9),
      I4 => \^ex_op2_reg[0]_0\(10),
      I5 => \^ex_op2_reg[0]_0\(4),
      O => EX_Bit_Extract_reg_0(4)
    );
\Use_HW_BS.Using_BitField.mem_mask0[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"558FFF8F00F000F0"
    )
        port map (
      I0 => \^ex_op2_reg[25]_1\,
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => ex_bit_extract,
      I3 => ex_bit_insert,
      I4 => \^ex_op2_reg[0]_0\(2),
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\,
      O => EX_Bit_Extract_reg_0(3)
    );
\Use_HW_BS.Using_BitField.mem_mask0[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"005503030055FFFF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(4),
      I1 => \^ex_op2_reg[0]_0\(10),
      I2 => \^ex_op2_reg[0]_0\(9),
      I3 => \^ex_op2_reg[0]_0\(3),
      I4 => ex_bit_insert,
      I5 => ex_bit_extract,
      O => \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0BFBF3F30C0C0C0C"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(7),
      I1 => ex_bit_extract,
      I2 => ex_bit_insert,
      I3 => \^ex_op2_reg[0]_0\(1),
      I4 => \^ex_op2_reg[29]_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\,
      O => EX_Bit_Extract_reg_0(2)
    );
\Use_HW_BS.Using_BitField.mem_mask0[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F3F30BFB0C0C0C0C"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(8),
      I1 => ex_bit_extract,
      I2 => ex_bit_insert,
      I3 => \^ex_op2_reg[0]_0\(2),
      I4 => \^ex_op2_reg[25]_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\,
      O => EX_Bit_Extract_reg_0(1)
    );
\Use_HW_BS.Using_BitField.mem_mask0[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000FB444444FB44"
    )
        port map (
      I0 => \^ex_op2_reg[25]_1\,
      I1 => \Use_HW_BS.Using_BitField.mem_mask0[25]_i_2_n_0\,
      I2 => \^ex_op2_reg[0]_0\(8),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(2),
      O => EX_Bit_Extract_reg_0(0)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFF0FF3A3FF0FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(3),
      I2 => ex_bit_insert,
      I3 => ex_bit_extract,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2_n_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\,
      O => EX_Bit_Extract_reg_0(11)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCCCA0000000A000"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(7),
      I1 => \^ex_op2_reg[0]_0\(1),
      I2 => \^ex_op2_reg[0]_0\(8),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(2),
      O => \Use_HW_BS.Using_BitField.mem_mask0[2]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B4F4B0F0BFFFBFFF"
    )
        port map (
      I0 => \^ex_op2_reg[25]_0\,
      I1 => \Use_HW_BS.Using_BitField.mem_mask0[1]_i_3_n_0\,
      I2 => ex_bit_insert,
      I3 => \^ex_op2_reg[0]_0\(4),
      I4 => \^ex_op2_reg[0]_0\(10),
      I5 => ex_bit_extract,
      O => EX_Bit_Extract_reg_0(10)
    );
\Use_HW_BS.Using_BitField.mem_mask0[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000005FF333305FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(6),
      I1 => \^ex_op2_reg[0]_0\(0),
      I2 => \^ex_op2_reg[0]_0\(7),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(1),
      O => \^ex_op2_reg[25]_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[5]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(2),
      I1 => ex_bit_insert,
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(8),
      O => \^ex_op2_reg[29]_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[6]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B888"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(1),
      I1 => ex_bit_insert,
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(7),
      O => \EX_Op2_reg[30]_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0FDDFFDD0F55FF55"
    )
        port map (
      I0 => ex_bit_extract,
      I1 => \^ex_op2_reg[0]_0\(10),
      I2 => \^ex_op2_reg[0]_0\(4),
      I3 => ex_bit_insert,
      I4 => \^ex_op2_reg[0]_0\(3),
      I5 => \^ex_op2_reg[0]_0\(9),
      O => EX_Bit_Extract_reg_0(9)
    );
\Use_HW_BS.Using_BitField.mem_mask1[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[0]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(30)
    );
\Use_HW_BS.Using_BitField.mem_mask1[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0080010000FF01FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => ex_bit_insert,
      O => \Use_HW_BS.Using_BitField.mem_mask1[0]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[10]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[10]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(20)
    );
\Use_HW_BS.Using_BitField.mem_mask1[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000454455445140"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => ex_bit_extract,
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_insert,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[10]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(19)
    );
\Use_HW_BS.Using_BitField.mem_mask1[12]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[12]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(18)
    );
\Use_HW_BS.Using_BitField.mem_mask1[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000054155400"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(7),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[12]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[13]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[13]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(17)
    );
\Use_HW_BS.Using_BitField.mem_mask1[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000032C2"
    )
        port map (
      I0 => ex_bit_insert,
      I1 => \^ex_op2_reg[0]_0\(7),
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(6),
      I4 => \^ex_op2_reg[0]_0\(8),
      I5 => \^ex_op2_reg[0]_0\(9),
      O => \Use_HW_BS.Using_BitField.mem_mask1[13]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[14]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[14]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(16)
    );
\Use_HW_BS.Using_BitField.mem_mask1[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100000101000000"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => \^ex_op2_reg[0]_0\(7),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(6),
      I5 => ex_bit_insert,
      O => \Use_HW_BS.Using_BitField.mem_mask1[14]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00E0EE0E"
    )
        port map (
      I0 => ex_bit_extract,
      I1 => ex_bit_insert,
      I2 => \Use_HW_BS.Using_BitField.mem_mask1[15]_i_2_n_0\,
      I3 => \^ex_op2_reg[0]_0\(9),
      I4 => \^ex_op2_reg[0]_0\(10),
      O => \^ex_bit_extract_reg\(15)
    );
\Use_HW_BS.Using_BitField.mem_mask1[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(7),
      I1 => ex_bit_extract,
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[15]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[16]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[0]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(14)
    );
\Use_HW_BS.Using_BitField.mem_mask1[17]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[1]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(13)
    );
\Use_HW_BS.Using_BitField.mem_mask1[18]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[2]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(12)
    );
\Use_HW_BS.Using_BitField.mem_mask1[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\,
      O => \^ex_bit_extract_reg\(11)
    );
\Use_HW_BS.Using_BitField.mem_mask1[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[1]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(29)
    );
\Use_HW_BS.Using_BitField.mem_mask1[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8088010080FF01FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => ex_bit_insert,
      O => \Use_HW_BS.Using_BitField.mem_mask1[1]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[20]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[4]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(10)
    );
\Use_HW_BS.Using_BitField.mem_mask1[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA08"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\,
      I2 => \^ex_op2_reg[0]_0\(8),
      I3 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(9)
    );
\Use_HW_BS.Using_BitField.mem_mask1[22]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[6]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(8)
    );
\Use_HW_BS.Using_BitField.mem_mask1[23]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      I1 => \^ex_op2_reg[0]_0\(10),
      O => \^ex_bit_extract_reg\(7)
    );
\Use_HW_BS.Using_BitField.mem_mask1[24]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[8]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(6)
    );
\Use_HW_BS.Using_BitField.mem_mask1[25]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[9]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(5)
    );
\Use_HW_BS.Using_BitField.mem_mask1[26]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[10]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(4)
    );
\Use_HW_BS.Using_BitField.mem_mask1[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(3)
    );
\Use_HW_BS.Using_BitField.mem_mask1[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[12]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(2)
    );
\Use_HW_BS.Using_BitField.mem_mask1[29]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[13]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(1)
    );
\Use_HW_BS.Using_BitField.mem_mask1[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[2]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(28)
    );
\Use_HW_BS.Using_BitField.mem_mask1[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888018088FF01FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => ex_bit_insert,
      O => \Use_HW_BS.Using_BitField.mem_mask1[2]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[14]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(0)
    );
\Use_HW_BS.Using_BitField.mem_mask1[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\,
      O => \^ex_bit_extract_reg\(27)
    );
\Use_HW_BS.Using_BitField.mem_mask1[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000030FAFAFACA"
    )
        port map (
      I0 => ex_bit_insert,
      I1 => \^ex_op2_reg[0]_0\(7),
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(6),
      I4 => \^ex_op2_reg[0]_0\(8),
      I5 => \^ex_op2_reg[0]_0\(9),
      O => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[3]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0030FACA"
    )
        port map (
      I0 => ex_bit_insert,
      I1 => \^ex_op2_reg[0]_0\(6),
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(7),
      I4 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_3_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[4]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(26)
    );
\Use_HW_BS.Using_BitField.mem_mask1[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAFF018001FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(7),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => ex_bit_insert,
      I5 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[4]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFAE"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\,
      I2 => \^ex_op2_reg[0]_0\(8),
      I3 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(25)
    );
\Use_HW_BS.Using_BitField.mem_mask1[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[6]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(24)
    );
\Use_HW_BS.Using_BitField.mem_mask1[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAA89A8AAFF89FF"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => \^ex_op2_reg[0]_0\(8),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => ex_bit_insert,
      O => \Use_HW_BS.Using_BitField.mem_mask1[6]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[3]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(23)
    );
\Use_HW_BS.Using_BitField.mem_mask1[8]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[8]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(22)
    );
\Use_HW_BS.Using_BitField.mem_mask1[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5504554455445044"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => ex_bit_insert,
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => ex_bit_extract,
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[8]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask1[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_bit_extract_reg\(15),
      I1 => \Use_HW_BS.Using_BitField.mem_mask1[9]_i_2_n_0\,
      O => \^ex_bit_extract_reg\(21)
    );
\Use_HW_BS.Using_BitField.mem_mask1[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0050545454545404"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(9),
      I1 => ex_bit_insert,
      I2 => ex_bit_extract,
      I3 => \^ex_op2_reg[0]_0\(6),
      I4 => \^ex_op2_reg[0]_0\(7),
      I5 => \^ex_op2_reg[0]_0\(8),
      O => \Use_HW_BS.Using_BitField.mem_mask1[9]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BBB8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[0]\,
      I1 => \^ex_op2_reg[0]_0\(2),
      I2 => \Use_HW_BS.mem_mux3[0]_i_3_n_0\,
      I3 => \Use_HW_BS.mem_mux3[0]_i_4_n_0\,
      O => D(3)
    );
\Use_HW_BS.mem_mux3[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF0000B8B80000"
    )
        port map (
      I0 => \^q\(29),
      I1 => ex_left_shift_i,
      I2 => \^q\(2),
      I3 => \Use_HW_BS.mem_mux3_reg[0]_0\,
      I4 => \^ex_op2_reg[0]_0\(1),
      I5 => \^ex_op2_reg[0]_0\(0),
      O => \Use_HW_BS.mem_mux3[0]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000055550000CFC0"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[0]_1\,
      I1 => \^q\(31),
      I2 => ex_left_shift_i,
      I3 => \^q\(0),
      I4 => \^ex_op2_reg[0]_0\(1),
      I5 => \^ex_op2_reg[0]_0\(0),
      O => \Use_HW_BS.mem_mux3[0]_i_4_n_0\
    );
\Use_HW_BS.mem_mux3[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00F1FFFF00F10000"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(1),
      I1 => \^ex_op2_reg[0]_0\(0),
      I2 => ex_void_bit,
      I3 => \Use_HW_BS.mem_mux3_reg[30]\,
      I4 => \^ex_op2_reg[0]_0\(2),
      I5 => \Use_HW_BS.mem_mux3_reg[27]\,
      O => D(2)
    );
\Use_HW_BS.mem_mux3[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CC88CC8DCCD8CCDD"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(2),
      I1 => ex_void_bit,
      I2 => \^ex_op2_reg[0]_0\(0),
      I3 => \^ex_op2_reg[0]_0\(1),
      I4 => \Use_HW_BS.mem_mux3_reg[30]_0\,
      I5 => \Use_HW_BS.mem_mux3_reg[30]\,
      O => D(1)
    );
\Use_HW_BS.mem_mux3[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444F4000000F400"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(2),
      I1 => \Use_HW_BS.mem_mux3[31]_i_2_n_0\,
      I2 => ex_arith_shift,
      I3 => \^q\(31),
      I4 => ex_left_shift_i,
      I5 => \^q\(0),
      O => D(0)
    );
\Use_HW_BS.mem_mux3[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(1),
      I1 => \^ex_op2_reg[0]_0\(0),
      O => \Use_HW_BS.mem_mux3[31]_i_2_n_0\
    );
\Using_FPGA.Native_I1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(0),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => S
    );
\Using_FPGA.Native_I1_i_1__0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(1),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[30]_0\
    );
\Using_FPGA.Native_I1_i_1__1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(2),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[29]_0\
    );
\Using_FPGA.Native_I1_i_1__10\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(11),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[20]_0\
    );
\Using_FPGA.Native_I1_i_1__11\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(12),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[19]_0\
    );
\Using_FPGA.Native_I1_i_1__12\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(13),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[18]_0\
    );
\Using_FPGA.Native_I1_i_1__13\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(14),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[17]_0\
    );
\Using_FPGA.Native_I1_i_1__14\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(15),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[16]_1\
    );
\Using_FPGA.Native_I1_i_1__15\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(16),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[15]_0\
    );
\Using_FPGA.Native_I1_i_1__16\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(17),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[14]_0\
    );
\Using_FPGA.Native_I1_i_1__17\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(18),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[13]_0\
    );
\Using_FPGA.Native_I1_i_1__18\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(19),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[12]_0\
    );
\Using_FPGA.Native_I1_i_1__19\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(20),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[11]_0\
    );
\Using_FPGA.Native_I1_i_1__2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(3),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[28]_0\
    );
\Using_FPGA.Native_I1_i_1__20\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(21),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[10]_1\
    );
\Using_FPGA.Native_I1_i_1__21\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(22),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[9]_1\
    );
\Using_FPGA.Native_I1_i_1__22\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(23),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[8]_1\
    );
\Using_FPGA.Native_I1_i_1__23\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(24),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[7]_0\
    );
\Using_FPGA.Native_I1_i_1__24\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(25),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[6]_0\
    );
\Using_FPGA.Native_I1_i_1__25\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(26),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[5]_0\
    );
\Using_FPGA.Native_I1_i_1__26\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(27),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[4]_0\
    );
\Using_FPGA.Native_I1_i_1__27\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(28),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[3]_0\
    );
\Using_FPGA.Native_I1_i_1__28\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(29),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[2]_0\
    );
\Using_FPGA.Native_I1_i_1__29\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B4"
    )
        port map (
      I0 => ex_div_unsigned,
      I1 => \^q\(31),
      I2 => \^q\(30),
      O => EX_Div_Unsigned_reg
    );
\Using_FPGA.Native_I1_i_1__3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(4),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[27]_0\
    );
\Using_FPGA.Native_I1_i_1__4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(5),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[26]_0\
    );
\Using_FPGA.Native_I1_i_1__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(6),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[25]_0\
    );
\Using_FPGA.Native_I1_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(7),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[24]_2\
    );
\Using_FPGA.Native_I1_i_1__7\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(8),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[23]_0\
    );
\Using_FPGA.Native_I1_i_1__8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(9),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[22]_0\
    );
\Using_FPGA.Native_I1_i_1__9\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9A"
    )
        port map (
      I0 => \^q\(10),
      I1 => ex_div_unsigned,
      I2 => \^q\(31),
      O => \EX_Op1_reg[21]_0\
    );
\Using_FPGA.Native_I1_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^q\(31),
      I1 => ex_div_unsigned,
      O => CI
    );
\Using_FPGA.Native_I2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^q\(31),
      I1 => ex_div_unsigned,
      O => \Using_FPGA.D_Handle[0].D_Sel_reg\
    );
\Using_FPGA.Native_i_1__109\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ex_branch_cmp_op1(30),
      I1 => ex_branch_cmp_op1(31),
      O => \EX_Branch_CMP_Op1_reg[30]_0\
    );
\Using_FPGA.Native_i_1__134\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"9F"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(31),
      I1 => \^q\(31),
      I2 => ex_cmp_op,
      O => I2
    );
\Using_FPGA.Native_i_1__136\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(31),
      I1 => ex_alu_sel_logic,
      O => I0
    );
\Using_FPGA.Native_i_3__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F7A3F7A3F7A3F7A0"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(6),
      I1 => ex_msrclr,
      I2 => ex_msrset,
      I3 => \Using_FPGA.Native_i_2__8\,
      I4 => \Using_FPGA.Native_i_2__8_0\,
      I5 => m3_div_zero_overflow_ex_hold,
      O => \EX_Op2_reg[25]_2\
    );
\imm_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(15),
      Q => \imm_reg_reg[0]_0\(15),
      R => sync_reset
    );
\imm_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(5),
      Q => \imm_reg_reg[0]_0\(5),
      R => sync_reset
    );
\imm_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(4),
      Q => \imm_reg_reg[0]_0\(4),
      R => sync_reset
    );
\imm_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(3),
      Q => \imm_reg_reg[0]_0\(3),
      R => sync_reset
    );
\imm_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(2),
      Q => \imm_reg_reg[0]_0\(2),
      R => sync_reset
    );
\imm_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(1),
      Q => \imm_reg_reg[0]_0\(1),
      R => sync_reset
    );
\imm_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(0),
      Q => \imm_reg_reg[0]_0\(0),
      R => sync_reset
    );
\imm_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(14),
      Q => \imm_reg_reg[0]_0\(14),
      R => sync_reset
    );
\imm_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(13),
      Q => \imm_reg_reg[0]_0\(13),
      R => sync_reset
    );
\imm_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(12),
      Q => \imm_reg_reg[0]_0\(12),
      R => sync_reset
    );
\imm_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(11),
      Q => \imm_reg_reg[0]_0\(11),
      R => sync_reset
    );
\imm_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(10),
      Q => \imm_reg_reg[0]_0\(10),
      R => sync_reset
    );
\imm_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(9),
      Q => \imm_reg_reg[0]_0\(9),
      R => sync_reset
    );
\imm_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(8),
      Q => \imm_reg_reg[0]_0\(8),
      R => sync_reset
    );
\imm_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(7),
      Q => \imm_reg_reg[0]_0\(7),
      R => sync_reset
    );
\imm_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \imm_reg_reg[15]_0\(0),
      D => \imm_reg_reg[0]_1\(6),
      Q => \imm_reg_reg[0]_0\(6),
      R => sync_reset
    );
\m0_Ex_Result_i[16]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(15),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(16),
      I4 => \out\,
      O => \EX_Op1_reg[16]_2\
    );
\m0_Ex_Result_i[17]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1D441D77"
    )
        port map (
      I0 => \^q\(14),
      I1 => \m0_Ex_Result_i_reg[17]\(0),
      I2 => \^q\(15),
      I3 => \m0_Ex_Result_i_reg[17]\(1),
      I4 => \out\,
      O => \EX_Op1_reg[17]_1\
    );
\m0_Ex_Result_i[18]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(13),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(14),
      I4 => \out\,
      O => \EX_Op1_reg[18]_1\
    );
\m0_Ex_Result_i[19]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(12),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(13),
      I4 => \out\,
      O => \EX_Op1_reg[19]_1\
    );
\m0_Ex_Result_i[20]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(11),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(12),
      I4 => \out\,
      O => \EX_Op1_reg[20]_1\
    );
\m0_Ex_Result_i[21]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(10),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(11),
      I4 => \out\,
      O => \EX_Op1_reg[21]_1\
    );
\m0_Ex_Result_i[22]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(9),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(10),
      I4 => \out\,
      O => \EX_Op1_reg[22]_1\
    );
\m0_Ex_Result_i[23]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"14D417D7"
    )
        port map (
      I0 => \^q\(8),
      I1 => \m0_Ex_Result_i_reg[17]\(1),
      I2 => \m0_Ex_Result_i_reg[17]\(0),
      I3 => \^q\(9),
      I4 => \out\,
      O => \EX_Op1_reg[23]_1\
    );
\m0_Ex_Result_i[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8B8B8888888B888"
    )
        port map (
      I0 => ex_databus_addr(3),
      I1 => ex_sel_alu_res,
      I2 => ex_enable_sext_shift,
      I3 => \^q\(7),
      I4 => \m0_Ex_Result_i_reg[24]\,
      I5 => \^q\(8),
      O => ex_sel_alu_reg(6)
    );
\m0_Ex_Result_i[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFCA000000CA00"
    )
        port map (
      I0 => \^q\(6),
      I1 => \^q\(7),
      I2 => \m0_Ex_Result_i_reg[24]\,
      I3 => ex_enable_sext_shift,
      I4 => ex_sel_alu_res,
      I5 => ex_databus_addr(2),
      O => ex_sel_alu_reg(5)
    );
\m0_Ex_Result_i[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8888888A88888888"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[26]\,
      I1 => \m0_Ex_Result_i_reg[26]_0\,
      I2 => \^ex_op1_reg[9]_0\,
      I3 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I4 => \^ex_op1_reg[16]_0\,
      I5 => \m0_Ex_Result_i[26]_i_7_n_0\,
      O => ex_sel_alu_reg(4)
    );
\m0_Ex_Result_i[26]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(0),
      I1 => \^q\(0),
      I2 => \^q\(1),
      I3 => \^ex_op2_reg[0]_0\(1),
      I4 => \^q\(2),
      I5 => \^ex_op2_reg[0]_0\(2),
      O => \m0_Ex_Result_i[26]_i_10_n_0\
    );
\m0_Ex_Result_i[26]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(3),
      I1 => \^q\(3),
      I2 => \^q\(5),
      I3 => \^ex_op2_reg[0]_0\(5),
      I4 => \^q\(4),
      I5 => \^ex_op2_reg[0]_0\(4),
      O => \m0_Ex_Result_i[26]_i_11_n_0\
    );
\m0_Ex_Result_i[26]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(8),
      I1 => \^q\(8),
      I2 => \^q\(10),
      I3 => \^ex_op2_reg[0]_0\(10),
      I4 => \^q\(9),
      I5 => \^ex_op2_reg[0]_0\(9),
      O => \m0_Ex_Result_i[26]_i_12_n_0\
    );
\m0_Ex_Result_i[26]_i_13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(11),
      I1 => \^q\(11),
      I2 => \^q\(12),
      I3 => \^ex_op2_reg[0]_0\(12),
      I4 => \^q\(13),
      I5 => \^ex_op2_reg[0]_0\(13),
      O => \m0_Ex_Result_i[26]_i_13_n_0\
    );
\m0_Ex_Result_i[26]_i_14\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(31),
      I1 => \^q\(31),
      O => \m0_Ex_Result_i[26]_i_14_n_0\
    );
\m0_Ex_Result_i[26]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(27),
      I1 => \^q\(27),
      I2 => \^q\(29),
      I3 => \^ex_op2_reg[0]_0\(29),
      I4 => \^q\(28),
      I5 => \^ex_op2_reg[0]_0\(28),
      O => \m0_Ex_Result_i[26]_i_15_n_0\
    );
\m0_Ex_Result_i[26]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(24),
      I1 => \^q\(24),
      I2 => \^q\(25),
      I3 => \^ex_op2_reg[0]_0\(25),
      I4 => \^q\(26),
      I5 => \^ex_op2_reg[0]_0\(26),
      O => \m0_Ex_Result_i[26]_i_16_n_0\
    );
\m0_Ex_Result_i[26]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF6FF6"
    )
        port map (
      I0 => \^q\(22),
      I1 => \^ex_op2_reg[0]_0\(22),
      I2 => \^q\(23),
      I3 => \^ex_op2_reg[0]_0\(23),
      I4 => \m0_Ex_Result_i[26]_i_8_n_0\,
      I5 => \m0_Ex_Result_i[26]_i_9_n_0\,
      O => \^ex_op1_reg[9]_0\
    );
\m0_Ex_Result_i[26]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF6FF6"
    )
        port map (
      I0 => \^q\(6),
      I1 => \^ex_op2_reg[0]_0\(6),
      I2 => \^q\(7),
      I3 => \^ex_op2_reg[0]_0\(7),
      I4 => \m0_Ex_Result_i[26]_i_10_n_0\,
      I5 => \m0_Ex_Result_i[26]_i_11_n_0\,
      O => \m0_Ex_Result_i[26]_i_5_n_0\
    );
\m0_Ex_Result_i[26]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFF6FF6"
    )
        port map (
      I0 => \^q\(15),
      I1 => \^ex_op2_reg[0]_0\(15),
      I2 => \^q\(14),
      I3 => \^ex_op2_reg[0]_0\(14),
      I4 => \m0_Ex_Result_i[26]_i_12_n_0\,
      I5 => \m0_Ex_Result_i[26]_i_13_n_0\,
      O => \^ex_op1_reg[16]_0\
    );
\m0_Ex_Result_i[26]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000410000000000"
    )
        port map (
      I0 => \m0_Ex_Result_i[26]_i_14_n_0\,
      I1 => \^ex_op2_reg[0]_0\(30),
      I2 => \^q\(30),
      I3 => \m0_Ex_Result_i[26]_i_15_n_0\,
      I4 => \m0_Ex_Result_i[26]_i_16_n_0\,
      I5 => ex_clz_instr,
      O => \m0_Ex_Result_i[26]_i_7_n_0\
    );
\m0_Ex_Result_i[26]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(16),
      I1 => \^q\(16),
      I2 => \^q\(18),
      I3 => \^ex_op2_reg[0]_0\(18),
      I4 => \^q\(17),
      I5 => \^ex_op2_reg[0]_0\(17),
      O => \m0_Ex_Result_i[26]_i_8_n_0\
    );
\m0_Ex_Result_i[26]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(19),
      I1 => \^q\(19),
      I2 => \^q\(20),
      I3 => \^ex_op2_reg[0]_0\(20),
      I4 => \^q\(21),
      I5 => \^ex_op2_reg[0]_0\(21),
      O => \m0_Ex_Result_i[26]_i_9_n_0\
    );
\m0_Ex_Result_i[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"08080800AAAAAAAA"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[27]\,
      I1 => \m0_Ex_Result_i[26]_i_7_n_0\,
      I2 => \^ex_op1_reg[9]_0\,
      I3 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I4 => \^ex_op1_reg[16]_0\,
      I5 => \m0_Ex_Result_i_reg[27]_0\,
      O => ex_sel_alu_reg(3)
    );
\m0_Ex_Result_i[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000EEEAEEEA"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[28]\,
      I1 => \m0_Ex_Result_i[26]_i_7_n_0\,
      I2 => \m0_Ex_Result_i[28]_i_3_n_0\,
      I3 => \^ex_op1_reg[9]_0\,
      I4 => ex_databus_addr(1),
      I5 => ex_sel_alu_res,
      O => ex_sel_alu_reg(2)
    );
\m0_Ex_Result_i[28]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000000000FE"
    )
        port map (
      I0 => \m0_Ex_Result_i[26]_i_11_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_10_n_0\,
      I2 => \m0_Ex_Result_i[28]_i_4_n_0\,
      I3 => \m0_Ex_Result_i[26]_i_13_n_0\,
      I4 => \m0_Ex_Result_i[26]_i_12_n_0\,
      I5 => \m0_Ex_Result_i[28]_i_5_n_0\,
      O => \m0_Ex_Result_i[28]_i_3_n_0\
    );
\m0_Ex_Result_i[28]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(7),
      I1 => \^q\(7),
      I2 => \^ex_op2_reg[0]_0\(6),
      I3 => \^q\(6),
      O => \m0_Ex_Result_i[28]_i_4_n_0\
    );
\m0_Ex_Result_i[28]_i_5\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"6FF6"
    )
        port map (
      I0 => \^ex_op2_reg[0]_0\(14),
      I1 => \^q\(14),
      I2 => \^ex_op2_reg[0]_0\(15),
      I3 => \^q\(15),
      O => \m0_Ex_Result_i[28]_i_5_n_0\
    );
\m0_Ex_Result_i[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF00ABAB"
    )
        port map (
      I0 => \^ex_logic_op_reg[0]\,
      I1 => ex_pattern_cmp_sel,
      I2 => \m0_Ex_Result_i[29]_i_3_n_0\,
      I3 => ex_databus_addr(0),
      I4 => ex_sel_alu_res,
      O => ex_sel_alu_reg(1)
    );
\m0_Ex_Result_i[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0100000000000000"
    )
        port map (
      I0 => \^ex_op1_reg[1]_0\,
      I1 => ex_logic_op(0),
      I2 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I3 => \^ex_op1_reg[16]_0\,
      I4 => ex_pattern_cmp_sel,
      I5 => \^ex_op1_reg[9]_0\,
      O => \^ex_logic_op_reg[0]\
    );
\m0_Ex_Result_i[29]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"888AFFFF888A0000"
    )
        port map (
      I0 => \^ex_op1_reg[0]_0\,
      I1 => \^ex_op1_reg[10]_0\,
      I2 => \m0_Ex_Result_i[29]_i_7_n_0\,
      I3 => \m0_Ex_Result_i[29]_i_8_n_0\,
      I4 => ex_clz_instr,
      I5 => \m0_Ex_Result_i_reg[29]\,
      O => \m0_Ex_Result_i[29]_i_3_n_0\
    );
\m0_Ex_Result_i[29]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4004000000004004"
    )
        port map (
      I0 => \m0_Ex_Result_i[26]_i_16_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_15_n_0\,
      I2 => \^q\(30),
      I3 => \^ex_op2_reg[0]_0\(30),
      I4 => \^ex_op2_reg[0]_0\(31),
      I5 => \^q\(31),
      O => \^ex_op1_reg[1]_0\
    );
\m0_Ex_Result_i[29]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFE"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op1_reg[1]_0\,
      I2 => \^q\(30),
      I3 => \^q\(29),
      I4 => \^q\(28),
      O => \^ex_op1_reg[0]_0\
    );
\m0_Ex_Result_i[29]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFE0000FFFFFFFF"
    )
        port map (
      I0 => \^q\(21),
      I1 => \^q\(20),
      I2 => \^q\(23),
      I3 => \^q\(22),
      I4 => \^ex_op1_reg[9]_0\,
      I5 => \^ex_op1_reg[1]_0\,
      O => \^ex_op1_reg[10]_0\
    );
\m0_Ex_Result_i[29]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000004"
    )
        port map (
      I0 => \^ex_op1_reg[16]_0\,
      I1 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I2 => \^q\(4),
      I3 => \^q\(5),
      I4 => \^q\(6),
      I5 => \^q\(7),
      O => \m0_Ex_Result_i[29]_i_7_n_0\
    );
\m0_Ex_Result_i[29]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAABAAAAAAAA"
    )
        port map (
      I0 => \^ex_op1_reg[9]_0\,
      I1 => \^q\(15),
      I2 => \^q\(14),
      I3 => \^q\(13),
      I4 => \^q\(12),
      I5 => \^ex_op1_reg[16]_0\,
      O => \m0_Ex_Result_i[29]_i_8_n_0\
    );
\m0_Ex_Result_i[30]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEEEEEEFFFE"
    )
        port map (
      I0 => \^q\(7),
      I1 => \^q\(6),
      I2 => \^q\(2),
      I3 => \^q\(3),
      I4 => \^q\(4),
      I5 => \^q\(5),
      O => \m0_Ex_Result_i[30]_i_10_n_0\
    );
\m0_Ex_Result_i[30]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEEEEEEFFFE"
    )
        port map (
      I0 => \^q\(15),
      I1 => \^q\(14),
      I2 => \^q\(10),
      I3 => \^q\(11),
      I4 => \^q\(12),
      I5 => \^q\(13),
      O => \m0_Ex_Result_i[30]_i_11_n_0\
    );
\m0_Ex_Result_i[30]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8AAAFFFF8AAA0000"
    )
        port map (
      I0 => \^ex_op1_reg[0]_1\,
      I1 => \m0_Ex_Result_i[30]_i_5_n_0\,
      I2 => \^ex_op1_reg[1]_0\,
      I3 => \^ex_op1_reg[24]_0\,
      I4 => ex_clz_instr,
      I5 => \m0_Ex_Result_i_reg[30]\,
      O => EX_CLZ_Instr_reg_0
    );
\m0_Ex_Result_i[30]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFEFEFEFEFE"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^ex_op1_reg[1]_0\,
      I2 => \^q\(30),
      I3 => \^q\(26),
      I4 => \^q\(27),
      I5 => \m0_Ex_Result_i[30]_i_8_n_0\,
      O => \^ex_op1_reg[0]_1\
    );
\m0_Ex_Result_i[30]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAA8880"
    )
        port map (
      I0 => \^ex_op1_reg[9]_0\,
      I1 => \m0_Ex_Result_i[30]_i_9_n_0\,
      I2 => \^q\(19),
      I3 => \^q\(18),
      I4 => \^q\(22),
      I5 => \^q\(23),
      O => \m0_Ex_Result_i[30]_i_5_n_0\
    );
\m0_Ex_Result_i[30]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF04F4"
    )
        port map (
      I0 => \m0_Ex_Result_i[30]_i_10_n_0\,
      I1 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I2 => \^ex_op1_reg[16]_0\,
      I3 => \m0_Ex_Result_i[30]_i_11_n_0\,
      I4 => \^ex_op1_reg[9]_0\,
      O => \^ex_op1_reg[24]_0\
    );
\m0_Ex_Result_i[30]_i_8\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(29),
      O => \m0_Ex_Result_i[30]_i_8_n_0\
    );
\m0_Ex_Result_i[30]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(20),
      I1 => \^q\(21),
      O => \m0_Ex_Result_i[30]_i_9_n_0\
    );
\m0_Ex_Result_i[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8B8B8B8B888B8888"
    )
        port map (
      I0 => ex_alu_result(0),
      I1 => ex_sel_alu_res,
      I2 => \^ex_pattern_cmp_sel_reg\,
      I3 => \m0_Ex_Result_i[31]_i_3_n_0\,
      I4 => ex_clz_instr,
      I5 => \m0_Ex_Result_i_reg[31]\,
      O => ex_sel_alu_reg(0)
    );
\m0_Ex_Result_i[31]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555511110010"
    )
        port map (
      I0 => \^q\(14),
      I1 => \^q\(12),
      I2 => \^q\(9),
      I3 => \^q\(10),
      I4 => \^q\(11),
      I5 => \^q\(13),
      O => \m0_Ex_Result_i[31]_i_10_n_0\
    );
\m0_Ex_Result_i[31]_i_11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555511110010"
    )
        port map (
      I0 => \^q\(6),
      I1 => \^q\(4),
      I2 => \^q\(1),
      I3 => \^q\(2),
      I4 => \^q\(3),
      I5 => \^q\(5),
      O => \m0_Ex_Result_i[31]_i_11_n_0\
    );
\m0_Ex_Result_i[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C01000103010F010"
    )
        port map (
      I0 => \m0_Ex_Result_i[31]_i_5_n_0\,
      I1 => \^ex_op1_reg[1]_0\,
      I2 => ex_pattern_cmp_sel,
      I3 => ex_logic_op(0),
      I4 => \m0_Ex_Result_i[31]_i_6_n_0\,
      I5 => ex_logic_op(1),
      O => \^ex_pattern_cmp_sel_reg\
    );
\m0_Ex_Result_i[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EFE0FFFFEFE00000"
    )
        port map (
      I0 => \^q\(23),
      I1 => \m0_Ex_Result_i[31]_i_7_n_0\,
      I2 => \^ex_op1_reg[9]_0\,
      I3 => \m0_Ex_Result_i[31]_i_8_n_0\,
      I4 => \^ex_op1_reg[1]_0\,
      I5 => \m0_Ex_Result_i[31]_i_9_n_0\,
      O => \m0_Ex_Result_i[31]_i_3_n_0\
    );
\m0_Ex_Result_i[31]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^ex_op1_reg[9]_0\,
      I1 => ex_pattern_cmp_sel,
      I2 => \^ex_op1_reg[16]_0\,
      O => \m0_Ex_Result_i[31]_i_5_n_0\
    );
\m0_Ex_Result_i[31]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^ex_op1_reg[16]_0\,
      I1 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I2 => \^ex_op1_reg[9]_0\,
      O => \m0_Ex_Result_i[31]_i_6_n_0\
    );
\m0_Ex_Result_i[31]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555511110010"
    )
        port map (
      I0 => \^q\(22),
      I1 => \^q\(20),
      I2 => \^q\(17),
      I3 => \^q\(18),
      I4 => \^q\(19),
      I5 => \^q\(21),
      O => \m0_Ex_Result_i[31]_i_7_n_0\
    );
\m0_Ex_Result_i[31]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"EEEEEEEEFFF0FFFF"
    )
        port map (
      I0 => \^q\(15),
      I1 => \m0_Ex_Result_i[31]_i_10_n_0\,
      I2 => \^q\(7),
      I3 => \m0_Ex_Result_i[31]_i_11_n_0\,
      I4 => \m0_Ex_Result_i[26]_i_5_n_0\,
      I5 => \^ex_op1_reg[16]_0\,
      O => \m0_Ex_Result_i[31]_i_8_n_0\
    );
\m0_Ex_Result_i[31]_i_9\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^q\(31),
      I1 => \EX_Op1[31]_i_11_n_0\,
      O => \m0_Ex_Result_i[31]_i_9_n_0\
    );
sign_doublet_inferred_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0B08"
    )
        port map (
      I0 => \^q\(15),
      I1 => \m0_Ex_Result_i_reg[17]\(0),
      I2 => \m0_Ex_Result_i_reg[17]\(1),
      I3 => \^q\(7),
      O => in0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Read_Data_Mux_ff is
  port (
    wb_databus_read_data : out STD_LOGIC_VECTOR ( 15 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \trace_new_reg_value_i_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Read_Data_Mux_ff : entity is "Read_Data_Mux_ff";
end microblaze_microblaze_0_0_Read_Data_Mux_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Read_Data_Mux_ff is
begin
\trace_new_reg_value_i[0]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(15),
      I1 => \trace_new_reg_value_i_reg[0]\(15),
      O => wb_databus_read_data(15)
    );
\trace_new_reg_value_i[10]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(5),
      I1 => \trace_new_reg_value_i_reg[0]\(5),
      O => wb_databus_read_data(5)
    );
\trace_new_reg_value_i[11]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(4),
      I1 => \trace_new_reg_value_i_reg[0]\(4),
      O => wb_databus_read_data(4)
    );
\trace_new_reg_value_i[12]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(3),
      I1 => \trace_new_reg_value_i_reg[0]\(3),
      O => wb_databus_read_data(3)
    );
\trace_new_reg_value_i[13]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(2),
      I1 => \trace_new_reg_value_i_reg[0]\(2),
      O => wb_databus_read_data(2)
    );
\trace_new_reg_value_i[14]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(1),
      I1 => \trace_new_reg_value_i_reg[0]\(1),
      O => wb_databus_read_data(1)
    );
\trace_new_reg_value_i[15]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(0),
      I1 => \trace_new_reg_value_i_reg[0]\(0),
      O => wb_databus_read_data(0)
    );
\trace_new_reg_value_i[1]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(14),
      I1 => \trace_new_reg_value_i_reg[0]\(14),
      O => wb_databus_read_data(14)
    );
\trace_new_reg_value_i[2]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(13),
      I1 => \trace_new_reg_value_i_reg[0]\(13),
      O => wb_databus_read_data(13)
    );
\trace_new_reg_value_i[3]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(12),
      I1 => \trace_new_reg_value_i_reg[0]\(12),
      O => wb_databus_read_data(12)
    );
\trace_new_reg_value_i[4]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(11),
      I1 => \trace_new_reg_value_i_reg[0]\(11),
      O => wb_databus_read_data(11)
    );
\trace_new_reg_value_i[5]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(10),
      I1 => \trace_new_reg_value_i_reg[0]\(10),
      O => wb_databus_read_data(10)
    );
\trace_new_reg_value_i[6]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(9),
      I1 => \trace_new_reg_value_i_reg[0]\(9),
      O => wb_databus_read_data(9)
    );
\trace_new_reg_value_i[7]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(8),
      I1 => \trace_new_reg_value_i_reg[0]\(8),
      O => wb_databus_read_data(8)
    );
\trace_new_reg_value_i[8]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(7),
      I1 => \trace_new_reg_value_i_reg[0]\(7),
      O => wb_databus_read_data(7)
    );
\trace_new_reg_value_i[9]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => Q(6),
      I1 => \trace_new_reg_value_i_reg[0]\(6),
      O => wb_databus_read_data(6)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Shift_Logic_Module_gti is
  port (
    \out\ : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    in0 : in STD_LOGIC;
    \m0_Ex_Result_i_reg[0]\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Shift_Logic_Module_gti : entity is "Shift_Logic_Module_gti";
end microblaze_microblaze_0_0_Shift_Logic_Module_gti;

architecture STRUCTURE of microblaze_microblaze_0_0_Shift_Logic_Module_gti is
  signal sign_byte : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of sign_byte : signal is "true";
  signal sign_doublet : STD_LOGIC;
  attribute RTL_KEEP of sign_doublet : signal is "true";
begin
  \EX_Op1_reg[16]\ <= sign_doublet;
  \out\ <= sign_byte;
  sign_byte <= in0;
  sign_doublet <= \m0_Ex_Result_i_reg[0]\;
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_exception_registers_ff is
  port (
    WB_Exception_Return_Addr0 : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \wb_PC_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \wb_PC_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[22]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[18]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[14]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[10]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[6]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[2]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[0]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    sync_reset : in STD_LOGIC;
    \wb_PC_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    \WB_Exception_Return_Addr_reg[0]_1\ : in STD_LOGIC_VECTOR ( 30 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_exception_registers_ff : entity is "exception_registers_ff";
end microblaze_microblaze_0_0_exception_registers_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_exception_registers_ff is
  signal \WB_Exception_Return_Addr0_carry__0_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__0_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__0_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__0_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__1_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__1_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__1_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__1_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__3_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__3_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__3_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__3_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__4_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__4_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__4_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__4_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__5_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__5_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__5_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__5_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr0_carry__6_n_3\ : STD_LOGIC;
  signal WB_Exception_Return_Addr0_carry_n_0 : STD_LOGIC;
  signal WB_Exception_Return_Addr0_carry_n_1 : STD_LOGIC;
  signal WB_Exception_Return_Addr0_carry_n_2 : STD_LOGIC;
  signal WB_Exception_Return_Addr0_carry_n_3 : STD_LOGIC;
  signal \NLW_WB_Exception_Return_Addr0_carry__6_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_WB_Exception_Return_Addr0_carry__6_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
begin
WB_Exception_Return_Addr0_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => WB_Exception_Return_Addr0_carry_n_0,
      CO(2) => WB_Exception_Return_Addr0_carry_n_1,
      CO(1) => WB_Exception_Return_Addr0_carry_n_2,
      CO(0) => WB_Exception_Return_Addr0_carry_n_3,
      CYINIT => '0',
      DI(3 downto 2) => \wb_PC_i_reg[0]_1\(4 downto 3),
      DI(1) => DI(0),
      DI(0) => '0',
      O(3 downto 0) => WB_Exception_Return_Addr0(3 downto 0),
      S(3 downto 0) => S(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => WB_Exception_Return_Addr0_carry_n_0,
      CO(3) => \WB_Exception_Return_Addr0_carry__0_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__0_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__0_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__0_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(8 downto 5),
      O(3 downto 0) => WB_Exception_Return_Addr0(7 downto 4),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[22]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__0_n_0\,
      CO(3) => \WB_Exception_Return_Addr0_carry__1_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__1_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__1_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(12 downto 9),
      O(3 downto 0) => WB_Exception_Return_Addr0(11 downto 8),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[18]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__1_n_0\,
      CO(3) => \WB_Exception_Return_Addr0_carry__2_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__2_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__2_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(16 downto 13),
      O(3 downto 0) => WB_Exception_Return_Addr0(15 downto 12),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[14]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__3\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__2_n_0\,
      CO(3) => \WB_Exception_Return_Addr0_carry__3_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__3_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__3_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__3_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(20 downto 17),
      O(3 downto 0) => WB_Exception_Return_Addr0(19 downto 16),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[10]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__4\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__3_n_0\,
      CO(3) => \WB_Exception_Return_Addr0_carry__4_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__4_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__4_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__4_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(24 downto 21),
      O(3 downto 0) => WB_Exception_Return_Addr0(23 downto 20),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[6]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__5\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__4_n_0\,
      CO(3) => \WB_Exception_Return_Addr0_carry__5_n_0\,
      CO(2) => \WB_Exception_Return_Addr0_carry__5_n_1\,
      CO(1) => \WB_Exception_Return_Addr0_carry__5_n_2\,
      CO(0) => \WB_Exception_Return_Addr0_carry__5_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => \wb_PC_i_reg[0]_1\(28 downto 25),
      O(3 downto 0) => WB_Exception_Return_Addr0(27 downto 24),
      S(3 downto 0) => \WB_Exception_Return_Addr_reg[2]_0\(3 downto 0)
    );
\WB_Exception_Return_Addr0_carry__6\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr0_carry__5_n_0\,
      CO(3 downto 1) => \NLW_WB_Exception_Return_Addr0_carry__6_CO_UNCONNECTED\(3 downto 1),
      CO(0) => \WB_Exception_Return_Addr0_carry__6_n_3\,
      CYINIT => '0',
      DI(3 downto 1) => B"000",
      DI(0) => \wb_PC_i_reg[0]_1\(29),
      O(3 downto 2) => \NLW_WB_Exception_Return_Addr0_carry__6_O_UNCONNECTED\(3 downto 2),
      O(1 downto 0) => WB_Exception_Return_Addr0(29 downto 28),
      S(3 downto 2) => B"00",
      S(1 downto 0) => \WB_Exception_Return_Addr_reg[0]_0\(1 downto 0)
    );
\WB_Exception_Return_Addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(30),
      Q => Q(31),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(20),
      Q => Q(21),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(19),
      Q => Q(20),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(18),
      Q => Q(19),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(17),
      Q => Q(18),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(16),
      Q => Q(17),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(15),
      Q => Q(16),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(14),
      Q => Q(15),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(13),
      Q => Q(14),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(12),
      Q => Q(13),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(11),
      Q => Q(12),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(29),
      Q => Q(30),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(10),
      Q => Q(11),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(9),
      Q => Q(10),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(8),
      Q => Q(9),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(7),
      Q => Q(8),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(6),
      Q => Q(7),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(5),
      Q => Q(6),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(4),
      Q => Q(5),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(3),
      Q => Q(4),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(2),
      Q => Q(3),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(1),
      Q => Q(2),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(28),
      Q => Q(29),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(0),
      Q => Q(1),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_PC_i_reg[0]_1\(0),
      Q => Q(0),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(27),
      Q => Q(28),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(26),
      Q => Q(27),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(25),
      Q => Q(26),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(24),
      Q => Q(25),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(23),
      Q => Q(24),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(22),
      Q => Q(23),
      R => sync_reset
    );
\WB_Exception_Return_Addr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \WB_Exception_Return_Addr_reg[0]_1\(21),
      Q => Q(22),
      R => sync_reset
    );
\wb_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(31),
      Q => \wb_PC_i_reg[0]_0\(31),
      R => sync_reset
    );
\wb_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(21),
      Q => \wb_PC_i_reg[0]_0\(21),
      R => sync_reset
    );
\wb_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(20),
      Q => \wb_PC_i_reg[0]_0\(20),
      R => sync_reset
    );
\wb_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(19),
      Q => \wb_PC_i_reg[0]_0\(19),
      R => sync_reset
    );
\wb_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(18),
      Q => \wb_PC_i_reg[0]_0\(18),
      R => sync_reset
    );
\wb_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(17),
      Q => \wb_PC_i_reg[0]_0\(17),
      R => sync_reset
    );
\wb_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(16),
      Q => \wb_PC_i_reg[0]_0\(16),
      R => sync_reset
    );
\wb_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(15),
      Q => \wb_PC_i_reg[0]_0\(15),
      R => sync_reset
    );
\wb_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(14),
      Q => \wb_PC_i_reg[0]_0\(14),
      R => sync_reset
    );
\wb_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(13),
      Q => \wb_PC_i_reg[0]_0\(13),
      R => sync_reset
    );
\wb_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(12),
      Q => \wb_PC_i_reg[0]_0\(12),
      R => sync_reset
    );
\wb_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(30),
      Q => \wb_PC_i_reg[0]_0\(30),
      R => sync_reset
    );
\wb_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(11),
      Q => \wb_PC_i_reg[0]_0\(11),
      R => sync_reset
    );
\wb_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(10),
      Q => \wb_PC_i_reg[0]_0\(10),
      R => sync_reset
    );
\wb_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(9),
      Q => \wb_PC_i_reg[0]_0\(9),
      R => sync_reset
    );
\wb_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(8),
      Q => \wb_PC_i_reg[0]_0\(8),
      R => sync_reset
    );
\wb_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(7),
      Q => \wb_PC_i_reg[0]_0\(7),
      R => sync_reset
    );
\wb_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(6),
      Q => \wb_PC_i_reg[0]_0\(6),
      R => sync_reset
    );
\wb_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(5),
      Q => \wb_PC_i_reg[0]_0\(5),
      R => sync_reset
    );
\wb_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(4),
      Q => \wb_PC_i_reg[0]_0\(4),
      R => sync_reset
    );
\wb_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(3),
      Q => \wb_PC_i_reg[0]_0\(3),
      R => sync_reset
    );
\wb_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(2),
      Q => \wb_PC_i_reg[0]_0\(2),
      R => sync_reset
    );
\wb_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(29),
      Q => \wb_PC_i_reg[0]_0\(29),
      R => sync_reset
    );
\wb_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(1),
      Q => \wb_PC_i_reg[0]_0\(1),
      R => sync_reset
    );
\wb_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(0),
      Q => \wb_PC_i_reg[0]_0\(0),
      R => sync_reset
    );
\wb_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(28),
      Q => \wb_PC_i_reg[0]_0\(28),
      R => sync_reset
    );
\wb_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(27),
      Q => \wb_PC_i_reg[0]_0\(27),
      R => sync_reset
    );
\wb_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(26),
      Q => \wb_PC_i_reg[0]_0\(26),
      R => sync_reset
    );
\wb_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(25),
      Q => \wb_PC_i_reg[0]_0\(25),
      R => sync_reset
    );
\wb_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(24),
      Q => \wb_PC_i_reg[0]_0\(24),
      R => sync_reset
    );
\wb_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(23),
      Q => \wb_PC_i_reg[0]_0\(23),
      R => sync_reset
    );
\wb_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \wb_PC_i_reg[31]_0\(0),
      D => \wb_PC_i_reg[0]_1\(22),
      Q => \wb_PC_i_reg[0]_0\(22),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    reset_temp : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => reset_temp,
      Q => sync(1),
      R => '0'
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_0 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_0 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_0;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_0 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_1 is
  port (
    \out\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_1 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_1;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_1 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  \out\(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Wakeup(0),
      Q => sync(1),
      R => SR(0)
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => SR(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_30 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_97_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_30 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_30;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_30 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.normal_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_97_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => D(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_31 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_94_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_31 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_31;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_31 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.force_stop_cmd_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_94_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_32 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_91_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_32 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_32;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_32 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.start_single_cmd_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_91_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_33 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_89_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_33 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_33;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_33 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_MSR_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_89_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_34 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_86_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_34 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_34;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_34 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.read_register_PC_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_86_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_35 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Serial_Dbg_Intf.trig_in_1_reg\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_35 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_35;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_35 is
  signal \Serial_Dbg_Intf.trig_in_1_i_2_n_0\ : STD_LOGIC;
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.trig_in_1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2202"
    )
        port map (
      I0 => \Serial_Dbg_Intf.trig_in_1_i_2_n_0\,
      I1 => sync_reset,
      I2 => \Serial_Dbg_Intf.trig_in_1_reg\(0),
      I3 => Q(0),
      O => \Use_Async_Reset.sync_reset_reg\
    );
\Serial_Dbg_Intf.trig_in_1_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF22F2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(1),
      I2 => \Serial_Dbg_Intf.trig_in_1_reg\(1),
      I3 => Q(2),
      I4 => Dbg_Trig_In(0),
      O => \Serial_Dbg_Intf.trig_in_1_i_2_n_0\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_36 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_79_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_36 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_36;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_36 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.if_debug_ready_i_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => sync(2),
      I1 => Q(0),
      O => p_79_out
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_37 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    p_11_out : out STD_LOGIC;
    \Serial_Dbg_Intf.trig_ack_out_1_reg\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Serial_Dbg_Intf.continue_from_brk_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_37 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_37;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_37 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Serial_Dbg_Intf.continue_from_brk_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4F44"
    )
        port map (
      I0 => Q(0),
      I1 => sync(2),
      I2 => Q(1),
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg\(0),
      O => p_11_out
    );
\Serial_Dbg_Intf.trig_ack_out_1_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2302"
    )
        port map (
      I0 => Dbg_Trig_Ack_Out(0),
      I1 => sync_reset,
      I2 => Q(0),
      I3 => sync(2),
      O => \Serial_Dbg_Intf.trig_ack_out_1_reg\
    );
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_38 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_38 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_38;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_38 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_bit_39 is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_bit_39 : entity is "mb_sync_bit";
end microblaze_microblaze_0_0_mb_sync_bit_39;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_bit_39 is
  signal sync : STD_LOGIC_VECTOR ( 1 to 2 );
  attribute async_reg : string;
  attribute async_reg of sync : signal is "true";
  attribute ASYNC_REG_boolean : boolean;
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[1]\ : label is std.standard.true;
  attribute KEEP : string;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[1]\ : label is "yes";
  attribute ASYNC_REG_boolean of \Synchronize.use_sync_reset.sync_reg[2]\ : label is std.standard.true;
  attribute KEEP of \Synchronize.use_sync_reset.sync_reg[2]\ : label is "yes";
begin
  sample_synced(0) <= sync(2);
\Synchronize.use_sync_reset.sync_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      Q => sync(1),
      R => sync_reset
    );
\Synchronize.use_sync_reset.sync_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => sync(1),
      Q => sync(2),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    dbg_brki_hit : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    async_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => dbg_brki_hit,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_10\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    running_clock : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    async_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_10\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_10\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_10\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => running_clock,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_11\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Sleep : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    async_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_11\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_11\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_11\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => Sleep,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_12\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Single_Synchronize.use_async_reset.sync_reg_0\ : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    async_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_12\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_12\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_12\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => \Single_Synchronize.use_async_reset.sync_reg_0\,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_40\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    async_reset : out STD_LOGIC;
    Raw : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_40\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_40\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_40\ is
  signal \^async_reset\ : STD_LOGIC;
begin
  async_reset <= \^async_reset\;
\Single_Synchronize.use_async_reset.sync_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2230"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_En,
      I2 => Config_Reset,
      I3 => Scan_Reset_Sel,
      O => \^async_reset\
    );
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => \^async_reset\,
      D => Raw,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_9\ is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    Pause : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    async_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_9\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_9\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized2_9\ is
begin
\Single_Synchronize.use_async_reset.sync_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => async_reset,
      D => Pause,
      Q => D(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized4\ is
  port (
    \Serial_Dbg_Intf.force_stop_cmd_i_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    LOCKSTEP_Master_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Clk : in STD_LOGIC;
    dbg_continue_i_reg : in STD_LOGIC;
    dbg_continue_i_reg_0 : in STD_LOGIC;
    dbg_continue_i_reg_1 : in STD_LOGIC;
    dbg_continue_i_reg_2 : in STD_LOGIC;
    dbg_continue_i_reg_3 : in STD_LOGIC;
    start_single_cmd : in STD_LOGIC;
    if0_pause : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized4\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4\ is
  signal dbg_continue_i_i_2_n_0 : STD_LOGIC;
  signal dbg_wakeup_synced : STD_LOGIC;
begin
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => LOCKSTEP_Master_Out(1),
      Q => dbg_wakeup_synced,
      R => sync_reset
    );
dbg_continue_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FF00FF00FE00"
    )
        port map (
      I0 => dbg_continue_i_reg_2,
      I1 => dbg_continue_i_reg_3,
      I2 => start_single_cmd,
      I3 => if0_pause,
      I4 => dbg_continue_i_i_2_n_0,
      I5 => LOCKSTEP_Master_Out(0),
      O => \Serial_Dbg_Intf.force_stop_cmd_i_reg\
    );
dbg_continue_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => dbg_continue_i_reg,
      I1 => dbg_continue_i_reg_0,
      I2 => dbg_wakeup_synced,
      I3 => dbg_continue_i_reg_1,
      O => dbg_continue_i_i_2_n_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_13\ is
  port (
    trig_ack_in_0_synced : out STD_LOGIC;
    trig_in_0_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    mb_halted_1 : in STD_LOGIC;
    trig_ack_in_0_synced_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_13\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_13\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_13\ is
  signal \^trig_ack_in_0_synced\ : STD_LOGIC;
begin
  trig_ack_in_0_synced <= \^trig_ack_in_0_synced\;
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Ack_In(0),
      Q => \^trig_ack_in_0_synced\,
      R => sync_reset
    );
trig_in_0_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AE00AE000000AE"
    )
        port map (
      I0 => Dbg_Trig_In(0),
      I1 => D(0),
      I2 => mb_halted_1,
      I3 => sync_reset,
      I4 => \^trig_ack_in_0_synced\,
      I5 => trig_ack_in_0_synced_1,
      O => trig_in_0_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_14\ is
  port (
    trig_out_0_synced : out STD_LOGIC;
    \Performance_Debug_Control.trig_ack_out_0_reg\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    trig_out_0_synced_1 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_14\ : entity is "mb_sync_bit";
end \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_14\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_bit__parameterized4_14\ is
  signal \^trig_out_0_synced\ : STD_LOGIC;
begin
  trig_out_0_synced <= \^trig_out_0_synced\;
\Performance_Debug_Control.trig_ack_out_0_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2302"
    )
        port map (
      I0 => Dbg_Trig_Ack_Out(0),
      I1 => sync_reset,
      I2 => trig_out_0_synced_1,
      I3 => \^trig_out_0_synced\,
      O => \Performance_Debug_Control.trig_ack_out_0_reg\
    );
\Single_Synchronize.use_sync_reset.sync_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Dbg_Trig_Out(0),
      Q => \^trig_out_0_synced\,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[10]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[10]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_913
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[10]\(1 downto 0) => \m0_databus_addr_i_reg[10]\(1 downto 0),
      \m0_databus_addr_i_reg[10]_0\(0) => \m0_databus_addr_i_reg[10]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_914
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_824 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[11]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[11]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_824 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_824;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_824 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_911
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[11]\(1 downto 0) => \m0_databus_addr_i_reg[11]\(1 downto 0),
      \m0_databus_addr_i_reg[11]_0\(0) => \m0_databus_addr_i_reg[11]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_912
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_825 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[12]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[12]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_825 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_825;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_825 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_909
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[12]\(1 downto 0) => \m0_databus_addr_i_reg[12]\(1 downto 0),
      \m0_databus_addr_i_reg[12]_0\(0) => \m0_databus_addr_i_reg[12]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_910
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_826 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[13]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[13]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_826 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_826;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_826 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_907
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[13]\(1 downto 0) => \m0_databus_addr_i_reg[13]\(1 downto 0),
      \m0_databus_addr_i_reg[13]_0\(0) => \m0_databus_addr_i_reg[13]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_908
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_827 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[14]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[14]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_827 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_827;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_827 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_905
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[14]\(1 downto 0) => \m0_databus_addr_i_reg[14]\(1 downto 0),
      \m0_databus_addr_i_reg[14]_0\(0) => \m0_databus_addr_i_reg[14]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_906
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_828 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[15]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[15]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_828 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_828;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_828 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_903
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[15]\(1 downto 0) => \m0_databus_addr_i_reg[15]\(1 downto 0),
      \m0_databus_addr_i_reg[15]_0\(0) => \m0_databus_addr_i_reg[15]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_904
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_829 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[16]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[16]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[16]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_829 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_829;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_829 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_901
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[16]\(1 downto 0) => \m0_databus_addr_i_reg[16]\(1 downto 0),
      \m0_databus_addr_i_reg[16]_0\(0) => \m0_databus_addr_i_reg[16]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_902
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[16]\ => \m0_Ex_Result_i_reg[16]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_830 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[17]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[17]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_830 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_830;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_830 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_899
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[17]\(1 downto 0) => \m0_databus_addr_i_reg[17]\(1 downto 0),
      \m0_databus_addr_i_reg[17]_0\(0) => \m0_databus_addr_i_reg[17]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_900
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[17]\ => \m0_Ex_Result_i_reg[17]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_831 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[18]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[18]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[18]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_831 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_831;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_831 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_897
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[18]\(1 downto 0) => \m0_databus_addr_i_reg[18]\(1 downto 0),
      \m0_databus_addr_i_reg[18]_0\(0) => \m0_databus_addr_i_reg[18]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_898
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      \m0_Ex_Result_i_reg[18]\ => \m0_Ex_Result_i_reg[18]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_832 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[19]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[19]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[19]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_832 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_832;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_832 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_895
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[19]\(1 downto 0) => \m0_databus_addr_i_reg[19]\(1 downto 0),
      \m0_databus_addr_i_reg[19]_0\(0) => \m0_databus_addr_i_reg[19]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_896
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(0),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[19]\ => \m0_Ex_Result_i_reg[19]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_833 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_833 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_833;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_833 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_893
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[1]\(1 downto 0) => \m0_databus_addr_i_reg[1]\(1 downto 0),
      \m0_databus_addr_i_reg[1]_0\(0) => \m0_databus_addr_i_reg[1]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_894
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_834 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[20]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[20]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[20]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_834 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_834;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_834 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_891
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[20]\(1 downto 0) => \m0_databus_addr_i_reg[20]\(1 downto 0),
      \m0_databus_addr_i_reg[20]_0\(0) => \m0_databus_addr_i_reg[20]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_892
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[20]\ => \m0_Ex_Result_i_reg[20]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_835 is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[21]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[21]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[21]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_835 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_835;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_835 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_889
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[21]\(1 downto 0) => \m0_databus_addr_i_reg[21]\(1 downto 0),
      \m0_databus_addr_i_reg[21]_0\(0) => \m0_databus_addr_i_reg[21]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_890
     port map (
      D(0) => D(0),
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[21]\ => \m0_Ex_Result_i_reg[21]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_836 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[22]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[22]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_836 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_836;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_836 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_887
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[22]\(1 downto 0) => \m0_databus_addr_i_reg[22]\(1 downto 0),
      \m0_databus_addr_i_reg[22]_0\(0) => \m0_databus_addr_i_reg[22]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_888
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(0),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9,
      \m0_Ex_Result_i_reg[22]\ => \m0_Ex_Result_i_reg[22]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_837 is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    \m0_Ex_Result_i_reg[23]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[23]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[23]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_837 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_837;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_837 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_885
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[23]\(1 downto 0) => \m0_databus_addr_i_reg[23]\(1 downto 0),
      \m0_databus_addr_i_reg[23]_0\(0) => \m0_databus_addr_i_reg[23]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_886
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(0),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\,
      \m0_Ex_Result_i_reg[23]\ => \m0_Ex_Result_i_reg[23]\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_838 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[24]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[24]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_838 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_838;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_838 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_883
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[24]\(1 downto 0) => \m0_databus_addr_i_reg[24]\(1 downto 0),
      \m0_databus_addr_i_reg[24]_0\(0) => \m0_databus_addr_i_reg[24]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_884
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_839 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_839 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_839;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_839 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_881
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[25]\(1 downto 0) => \m0_databus_addr_i_reg[25]\(1 downto 0),
      \m0_databus_addr_i_reg[25]_0\(0) => \m0_databus_addr_i_reg[25]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_882
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_840 is
  port (
    ex_sel_alu_reg : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[26]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[26]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_840 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_840;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_840 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_879
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[26]\(1 downto 0) => \m0_databus_addr_i_reg[26]\(1 downto 0),
      \m0_databus_addr_i_reg[26]_0\(0) => \m0_databus_addr_i_reg[26]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_880
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_sel_alu_reg => ex_sel_alu_reg,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_841 is
  port (
    ex_sel_alu_reg : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CarryOut : out STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[27]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[27]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_841 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_841;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_841 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_877
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[27]\(1 downto 0) => \m0_databus_addr_i_reg[27]\(1 downto 0),
      \m0_databus_addr_i_reg[27]_0\(0) => \m0_databus_addr_i_reg[27]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_878
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      ex_sel_alu_reg => ex_sel_alu_reg,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_842 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[28]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[28]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_842 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_842;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_842 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_875
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[28]\(1 downto 0) => \m0_databus_addr_i_reg[28]\(1 downto 0),
      \m0_databus_addr_i_reg[28]_0\(0) => \m0_databus_addr_i_reg[28]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_876
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_843 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[29]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[29]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_843 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_843;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_843 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_873
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[29]\(1 downto 0) => \m0_databus_addr_i_reg[29]\(1 downto 0),
      \m0_databus_addr_i_reg[29]_0\(0) => \m0_databus_addr_i_reg[29]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_874
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_844 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_844 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_844;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_844 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_871
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[2]\(1 downto 0) => \m0_databus_addr_i_reg[2]\(1 downto 0),
      \m0_databus_addr_i_reg[2]_0\(0) => \m0_databus_addr_i_reg[2]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_872
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_845 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_alu_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_addr_3lsb_reg[1]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_addr_3lsb_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_845 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_845;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_845 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_869
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_addr_3lsb_reg[1]\(1 downto 0) => \m0_addr_3lsb_reg[1]\(1 downto 0),
      \m0_addr_3lsb_reg[1]_0\(0) => \m0_addr_3lsb_reg[1]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_870
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_alu_result(0) => ex_alu_result(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_846 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_alu_result : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_addr_3lsb_reg[2]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_addr_3lsb_reg[2]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_846 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_846;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_846 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_867
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_addr_3lsb_reg[2]\(1 downto 0) => \m0_addr_3lsb_reg[2]\(1 downto 0),
      \m0_addr_3lsb_reg[2]_0\(0) => \m0_addr_3lsb_reg[2]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_868
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      ex_alu_result(0) => ex_alu_result(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_847 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[3]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[3]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_847 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_847;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_847 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_865
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[3]\(1 downto 0) => \m0_databus_addr_i_reg[3]\(1 downto 0),
      \m0_databus_addr_i_reg[3]_0\(0) => \m0_databus_addr_i_reg[3]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_866
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_848 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[4]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[4]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_848 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_848;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_848 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_863
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[4]\(1 downto 0) => \m0_databus_addr_i_reg[4]\(1 downto 0),
      \m0_databus_addr_i_reg[4]_0\(0) => \m0_databus_addr_i_reg[4]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_864
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_849 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[5]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[5]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_849 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_849;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_849 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_861
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[5]\(1 downto 0) => \m0_databus_addr_i_reg[5]\(1 downto 0),
      \m0_databus_addr_i_reg[5]_0\(0) => \m0_databus_addr_i_reg[5]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_862
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_850 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[6]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[6]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC;
    lopt_9 : out STD_LOGIC;
    lopt_10 : out STD_LOGIC;
    lopt_11 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_850 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_850;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_850 is
  signal alu_AddSub : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_859
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[6]\(1 downto 0) => \m0_databus_addr_i_reg[6]\(1 downto 0),
      \m0_databus_addr_i_reg[6]_0\(0) => \m0_databus_addr_i_reg[6]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_860
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_10,
      lopt_11 => lopt_11,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_851 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[7]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[7]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_851 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_851;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_851 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_857
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[7]\(1 downto 0) => \m0_databus_addr_i_reg[7]\(1 downto 0),
      \m0_databus_addr_i_reg[7]_0\(0) => \m0_databus_addr_i_reg[7]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_858
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_852 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[8]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[8]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    LO : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_852 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_852;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_852 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2_855
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[8]\(1 downto 0) => \m0_databus_addr_i_reg[8]\(1 downto 0),
      \m0_databus_addr_i_reg[8]_0\(0) => \m0_databus_addr_i_reg[8]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_856
     port map (
      DI => op2_is_1,
      EX_CarryOut => EX_CarryOut,
      LO => LO,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU_Bit_853 is
  port (
    EX_CarryOut : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \m0_databus_addr_i_reg[9]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU_Bit_853 : entity is "ALU_Bit";
end microblaze_microblaze_0_0_ALU_Bit_853;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU_Bit_853 is
  signal alu_AddSub : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_1\ <= lopt_3;
  lopt_1 <= op2_is_1;
  lopt_2 <= alu_AddSub;
\Not_Last_Bit.I_ALU_LUT_V5\: entity work.microblaze_microblaze_0_0_MB_LUT6_2
     port map (
      DI => op2_is_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      S => alu_AddSub,
      ex_alu_sel_logic => ex_alu_sel_logic,
      \m0_databus_addr_i_reg[9]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[9]_0\(0) => \m0_databus_addr_i_reg[9]_0\(0)
    );
\Not_Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_854
     port map (
      DI => op2_is_1,
      EX_CarryIn => EX_CarryIn,
      EX_CarryOut => EX_CarryOut,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt,
      lopt_1 => \^lopt_1\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_ALU_Bit__parameterized2\ is
  port (
    \EX_Op2_reg[0]\ : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    S_1 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    LO : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_databus_addr_i_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    I2 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_ALU_Bit__parameterized2\ : entity is "ALU_Bit";
end \microblaze_microblaze_0_0_ALU_Bit__parameterized2\;

architecture STRUCTURE of \microblaze_microblaze_0_0_ALU_Bit__parameterized2\ is
  signal alu_AddSub : STD_LOGIC;
  signal alu_AddSub_1 : STD_LOGIC;
  signal invert_result : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal op2_is_1 : STD_LOGIC;
begin
  \^lopt_2\ <= lopt_4;
  lopt_2 <= op2_is_1;
  lopt_3 <= alu_AddSub;
\Last_Bit.I_ALU_LUT_2\: entity work.microblaze_microblaze_0_0_MB_LUT4
     port map (
      I2 => I2,
      Q(0) => Q(0),
      S => alu_AddSub,
      alu_AddSub_1 => alu_AddSub_1,
      \m0_databus_addr_i_reg[0]\(0) => \m0_databus_addr_i_reg[0]\(1)
    );
\Last_Bit.I_ALU_LUT_V5\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized8\
     port map (
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      \Using_FPGA.Native_0\(1 downto 0) => \m0_databus_addr_i_reg[0]\(1 downto 0),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      alu_AddSub_1 => alu_AddSub_1,
      ex_alu_sel_logic => ex_alu_sel_logic
    );
\Last_Bit.MULT_AND_I\: entity work.microblaze_microblaze_0_0_MB_MULT_AND
     port map (
      DI => op2_is_1,
      I0 => I0,
      \Using_FPGA.Native_I1\(0) => \m0_databus_addr_i_reg[0]\(1)
    );
\Last_Bit.MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_915
     port map (
      CI => invert_result,
      DI => op2_is_1,
      \EX_Op2_reg[0]\ => \EX_Op2_reg[0]\,
      S => alu_AddSub,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt_1,
      lopt_1 => \^lopt_2\
    );
\Last_Bit.Pre_MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_916
     port map (
      CI => invert_result,
      LO => LO,
      S_1 => S_1,
      ex_unsigned_op => ex_unsigned_op,
      lopt => lopt
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Barrel_Shifter_gti is
  port (
    m0_barrel_result : out STD_LOGIC_VECTOR ( 0 to 31 );
    sync_reset : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\ : in STD_LOGIC;
    ex_void_bit : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_left_shift_i : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Barrel_Shifter_gti : entity is "Barrel_Shifter_gti";
end microblaze_microblaze_0_0_Barrel_Shifter_gti;

architecture STRUCTURE of microblaze_microblaze_0_0_Barrel_Shifter_gti is
  signal I0 : STD_LOGIC;
  signal I00_out : STD_LOGIC;
  signal I010_out : STD_LOGIC;
  signal I011_out : STD_LOGIC;
  signal I012_out : STD_LOGIC;
  signal I013_out : STD_LOGIC;
  signal I014_out : STD_LOGIC;
  signal I015_out : STD_LOGIC;
  signal I016_out : STD_LOGIC;
  signal I017_out : STD_LOGIC;
  signal I018_out : STD_LOGIC;
  signal I019_out : STD_LOGIC;
  signal I01_out : STD_LOGIC;
  signal I020_out : STD_LOGIC;
  signal I021_out : STD_LOGIC;
  signal I022_out : STD_LOGIC;
  signal I023_out : STD_LOGIC;
  signal I024_out : STD_LOGIC;
  signal I025_out : STD_LOGIC;
  signal I026_out : STD_LOGIC;
  signal I027_out : STD_LOGIC;
  signal I028_out : STD_LOGIC;
  signal I029_out : STD_LOGIC;
  signal I02_out : STD_LOGIC;
  signal I03_out : STD_LOGIC;
  signal I04_out : STD_LOGIC;
  signal I05_out : STD_LOGIC;
  signal I06_out : STD_LOGIC;
  signal I07_out : STD_LOGIC;
  signal I08_out : STD_LOGIC;
  signal I09_out : STD_LOGIC;
  signal I1 : STD_LOGIC;
  signal I3 : STD_LOGIC;
  signal I4 : STD_LOGIC;
  signal I5 : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[31]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[9]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\ : STD_LOGIC;
  signal mask_reset : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of mask_reset : signal is std.standard.true;
  signal mem_left_shift : STD_LOGIC;
  signal mem_mux3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal mem_shift16_8 : STD_LOGIC_VECTOR ( 0 to 1 );
  signal mem_void_bit : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__0\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__1\ : label is "soft_lutpair2";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__10\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__11\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__12\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__13\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__14\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__2\ : label is "soft_lutpair3";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__3\ : label is "soft_lutpair4";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__4\ : label is "soft_lutpair5";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__5\ : label is "soft_lutpair6";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__6\ : label is "soft_lutpair7";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__7\ : label is "soft_lutpair0";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__8\ : label is "soft_lutpair1";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__9\ : label is "soft_lutpair2";
begin
  mask_reset <= sync_reset;
\Use_HW_BS.Using_BitField.Res_Bits[0].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22\
     port map (
      I0 => I0,
      I1 => I1,
      Q(0) => I3,
      m0_barrel_result(0) => m0_barrel_result(0),
      \m1_M0_Result_i_reg[0]\(0) => I4,
      \m1_M0_Result_i_reg[0]_0\(0) => I5,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[10].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_792\
     port map (
      I020_out => I020_out,
      I09_out => I09_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[10]\,
      m0_barrel_result(0) => m0_barrel_result(10),
      \m1_M0_Result_i_reg[10]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\,
      \m1_M0_Result_i_reg[10]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[11].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_793\
     port map (
      I010_out => I010_out,
      I019_out => I019_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[11]\,
      m0_barrel_result(0) => m0_barrel_result(11),
      \m1_M0_Result_i_reg[11]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\,
      \m1_M0_Result_i_reg[11]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[12].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_794\
     port map (
      I011_out => I011_out,
      I018_out => I018_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[12]\,
      m0_barrel_result(0) => m0_barrel_result(12),
      \m1_M0_Result_i_reg[12]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\,
      \m1_M0_Result_i_reg[12]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[13].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_795\
     port map (
      I012_out => I012_out,
      I017_out => I017_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[13]\,
      m0_barrel_result(0) => m0_barrel_result(13),
      \m1_M0_Result_i_reg[13]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\,
      \m1_M0_Result_i_reg[13]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[14].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_796\
     port map (
      I013_out => I013_out,
      I016_out => I016_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[14]\,
      m0_barrel_result(0) => m0_barrel_result(14),
      \m1_M0_Result_i_reg[14]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\,
      \m1_M0_Result_i_reg[14]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[15].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_797\
     port map (
      I014_out => I014_out,
      I015_out => I015_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[15]\,
      m0_barrel_result(0) => m0_barrel_result(15),
      \m1_M0_Result_i_reg[15]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\,
      \m1_M0_Result_i_reg[15]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[16].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_798\
     port map (
      I014_out => I014_out,
      I015_out => I015_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[16]\,
      m0_barrel_result(0) => m0_barrel_result(16),
      \m1_M0_Result_i_reg[16]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\,
      \m1_M0_Result_i_reg[16]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[17].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_799\
     port map (
      I013_out => I013_out,
      I016_out => I016_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[17]\,
      m0_barrel_result(0) => m0_barrel_result(17),
      \m1_M0_Result_i_reg[17]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\,
      \m1_M0_Result_i_reg[17]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[18].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_800\
     port map (
      I012_out => I012_out,
      I017_out => I017_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[18]\,
      m0_barrel_result(0) => m0_barrel_result(18),
      \m1_M0_Result_i_reg[18]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\,
      \m1_M0_Result_i_reg[18]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[19].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_801\
     port map (
      I011_out => I011_out,
      I018_out => I018_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[19]\,
      m0_barrel_result(0) => m0_barrel_result(19),
      \m1_M0_Result_i_reg[19]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\,
      \m1_M0_Result_i_reg[19]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[1].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_802\
     port map (
      I00_out => I00_out,
      I029_out => I029_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[1]\,
      m0_barrel_result(0) => m0_barrel_result(1),
      \m1_M0_Result_i_reg[1]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\,
      \m1_M0_Result_i_reg[1]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[20].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_803\
     port map (
      I010_out => I010_out,
      I019_out => I019_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[20]\,
      m0_barrel_result(0) => m0_barrel_result(20),
      \m1_M0_Result_i_reg[20]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\,
      \m1_M0_Result_i_reg[20]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[21].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_804\
     port map (
      I020_out => I020_out,
      I09_out => I09_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[21]\,
      m0_barrel_result(0) => m0_barrel_result(21),
      \m1_M0_Result_i_reg[21]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\,
      \m1_M0_Result_i_reg[21]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[22].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_805\
     port map (
      I021_out => I021_out,
      I08_out => I08_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[22]\,
      m0_barrel_result(0) => m0_barrel_result(22),
      \m1_M0_Result_i_reg[22]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\,
      \m1_M0_Result_i_reg[22]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[23].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_806\
     port map (
      I022_out => I022_out,
      I07_out => I07_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[23]\,
      m0_barrel_result(0) => m0_barrel_result(23),
      \m1_M0_Result_i_reg[23]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\,
      \m1_M0_Result_i_reg[23]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[24].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_807\
     port map (
      I023_out => I023_out,
      I06_out => I06_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[24]\,
      m0_barrel_result(0) => m0_barrel_result(24),
      \m1_M0_Result_i_reg[24]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\,
      \m1_M0_Result_i_reg[24]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[25].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_808\
     port map (
      I024_out => I024_out,
      I05_out => I05_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[25]\,
      m0_barrel_result(0) => m0_barrel_result(25),
      \m1_M0_Result_i_reg[25]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\,
      \m1_M0_Result_i_reg[25]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[26].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_809\
     port map (
      I025_out => I025_out,
      I04_out => I04_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[26]\,
      m0_barrel_result(0) => m0_barrel_result(26),
      \m1_M0_Result_i_reg[26]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\,
      \m1_M0_Result_i_reg[26]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[27].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_810\
     port map (
      I026_out => I026_out,
      I03_out => I03_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[27]\,
      m0_barrel_result(0) => m0_barrel_result(27),
      \m1_M0_Result_i_reg[27]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\,
      \m1_M0_Result_i_reg[27]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[28].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_811\
     port map (
      I027_out => I027_out,
      I02_out => I02_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[28]\,
      m0_barrel_result(0) => m0_barrel_result(28),
      \m1_M0_Result_i_reg[28]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\,
      \m1_M0_Result_i_reg[28]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[29].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_812\
     port map (
      I01_out => I01_out,
      I028_out => I028_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[29]\,
      m0_barrel_result(0) => m0_barrel_result(29),
      \m1_M0_Result_i_reg[29]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\,
      \m1_M0_Result_i_reg[29]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[2].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_813\
     port map (
      I01_out => I01_out,
      I028_out => I028_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[2]\,
      m0_barrel_result(0) => m0_barrel_result(2),
      \m1_M0_Result_i_reg[2]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\,
      \m1_M0_Result_i_reg[2]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[30].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_814\
     port map (
      I00_out => I00_out,
      I029_out => I029_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[30]\,
      m0_barrel_result(0) => m0_barrel_result(30),
      \m1_M0_Result_i_reg[30]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\,
      \m1_M0_Result_i_reg[30]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[31].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_815\
     port map (
      I0 => I0,
      I1 => I1,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[31]\,
      m0_barrel_result(0) => m0_barrel_result(31),
      \m1_M0_Result_i_reg[31]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[3].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_816\
     port map (
      I027_out => I027_out,
      I02_out => I02_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[3]\,
      m0_barrel_result(0) => m0_barrel_result(3),
      \m1_M0_Result_i_reg[3]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\,
      \m1_M0_Result_i_reg[3]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[4].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_817\
     port map (
      I026_out => I026_out,
      I03_out => I03_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[4]\,
      m0_barrel_result(0) => m0_barrel_result(4),
      \m1_M0_Result_i_reg[4]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\,
      \m1_M0_Result_i_reg[4]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[5].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_818\
     port map (
      I025_out => I025_out,
      I04_out => I04_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[5]\,
      m0_barrel_result(0) => m0_barrel_result(5),
      \m1_M0_Result_i_reg[5]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\,
      \m1_M0_Result_i_reg[5]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[6].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_819\
     port map (
      I024_out => I024_out,
      I05_out => I05_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[6]\,
      m0_barrel_result(0) => m0_barrel_result(6),
      \m1_M0_Result_i_reg[6]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\,
      \m1_M0_Result_i_reg[6]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[7].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_820\
     port map (
      I023_out => I023_out,
      I06_out => I06_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[7]\,
      m0_barrel_result(0) => m0_barrel_result(7),
      \m1_M0_Result_i_reg[7]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\,
      \m1_M0_Result_i_reg[7]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[8].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_821\
     port map (
      I022_out => I022_out,
      I07_out => I07_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[8]\,
      m0_barrel_result(0) => m0_barrel_result(8),
      \m1_M0_Result_i_reg[8]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\,
      \m1_M0_Result_i_reg[8]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.Res_Bits[9].MEM_Res_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized22_822\
     port map (
      I021_out => I021_out,
      I08_out => I08_out,
      Q(0) => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[9]\,
      m0_barrel_result(0) => m0_barrel_result(9),
      \m1_M0_Result_i_reg[9]\(0) => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\,
      \m1_M0_Result_i_reg[9]_0\(0) => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\,
      mem_left_shift => mem_left_shift
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(31),
      Q => I3,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[10]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[11]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[12]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[13]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[14]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[15]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[16]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[17]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[18]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[19]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(30),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[1]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[20]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[21]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[22]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[23]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[24]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[25]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[26]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[27]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[28]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[29]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[2]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[30]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[31]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[3]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[4]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[5]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[6]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[7]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[8]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_Rd_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.mem_Rd_reg_n_0_[9]\,
      R => '0'
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[0]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(31),
      Q => I4,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[10]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[10]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[11]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[11]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[12]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[12]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[13]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[13]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[14]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[14]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[15]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[15]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[16]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[16]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[17]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[17]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[18]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[18]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[19]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[19]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(30),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[1]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[20]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[20]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[21]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[21]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[22]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[22]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[23]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[23]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[24]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[24]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[25]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[25]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[26]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[26]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[27]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[27]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[28]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[28]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[29]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[29]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[2]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[30]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[30]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[31]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[31]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[3]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[4]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[4]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[5]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[5]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[6]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[6]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[7]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[7]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[8]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[8]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask0_reg[9]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.mem_mask0_reg_n_0_[9]\,
      S => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(30),
      Q => I5,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(20),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[10]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(19),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[11]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(18),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[12]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(17),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[13]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(16),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[14]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(15),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[15]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(14),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[16]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(13),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[17]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(12),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[18]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(11),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[19]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(29),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[1]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(10),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[20]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(9),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[21]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(8),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[22]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(7),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[23]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(6),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[24]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(5),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[25]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(4),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[26]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(3),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[27]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(2),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[28]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(1),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[29]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(28),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[2]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(0),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[30]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(27),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[3]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(26),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[4]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(25),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[5]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(24),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[6]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(23),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[7]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(22),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[8]\,
      R => mask_reset
    );
\Use_HW_BS.Using_BitField.mem_mask1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(21),
      Q => \Use_HW_BS.Using_BitField.mem_mask1_reg_n_0_[9]\,
      R => mask_reset
    );
\Use_HW_BS.mem_left_shift_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => ex_left_shift_i,
      Q => mem_left_shift,
      S => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(31),
      Q => mem_mux3(0),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(21),
      Q => mem_mux3(10),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(20),
      Q => mem_mux3(11),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(19),
      Q => mem_mux3(12),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(18),
      Q => mem_mux3(13),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(17),
      Q => mem_mux3(14),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(16),
      Q => mem_mux3(15),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(15),
      Q => mem_mux3(16),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(14),
      Q => mem_mux3(17),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(13),
      Q => mem_mux3(18),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(12),
      Q => mem_mux3(19),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(30),
      Q => mem_mux3(1),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(11),
      Q => mem_mux3(20),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(10),
      Q => mem_mux3(21),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(9),
      Q => mem_mux3(22),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(8),
      Q => mem_mux3(23),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(7),
      Q => mem_mux3(24),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(6),
      Q => mem_mux3(25),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(5),
      Q => mem_mux3(26),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(4),
      Q => mem_mux3(27),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(3),
      Q => mem_mux3(28),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(2),
      Q => mem_mux3(29),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(29),
      Q => mem_mux3(2),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(1),
      Q => mem_mux3(30),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(0),
      Q => mem_mux3(31),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(28),
      Q => mem_mux3(3),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(27),
      Q => mem_mux3(4),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(26),
      Q => mem_mux3(5),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(25),
      Q => mem_mux3(6),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(24),
      Q => mem_mux3(7),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(23),
      Q => mem_mux3(8),
      R => mask_reset
    );
\Use_HW_BS.mem_mux3_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => D(22),
      Q => mem_mux3(9),
      R => mask_reset
    );
\Use_HW_BS.mem_shift16_8_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => Q(1),
      Q => mem_shift16_8(0),
      R => mask_reset
    );
\Use_HW_BS.mem_shift16_8_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => Q(0),
      Q => mem_shift16_8(1),
      R => mask_reset
    );
\Use_HW_BS.mem_void_bit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\,
      D => ex_void_bit,
      Q => mem_void_bit,
      R => mask_reset
    );
\Using_FPGA.Native_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(8),
      I1 => mem_mux3(0),
      I2 => mem_mux3(24),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(16),
      O => I0
    );
\Using_FPGA.Native_i_1__0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(9),
      I1 => mem_mux3(1),
      I2 => mem_mux3(25),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(17),
      O => I00_out
    );
\Using_FPGA.Native_i_1__1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(10),
      I1 => mem_mux3(2),
      I2 => mem_mux3(26),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(18),
      O => I01_out
    );
\Using_FPGA.Native_i_1__10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(19),
      I1 => mem_mux3(11),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(27),
      O => I010_out
    );
\Using_FPGA.Native_i_1__11\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(20),
      I1 => mem_mux3(12),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(28),
      O => I011_out
    );
\Using_FPGA.Native_i_1__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(21),
      I1 => mem_mux3(13),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(29),
      O => I012_out
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(22),
      I1 => mem_mux3(14),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(30),
      O => I013_out
    );
\Using_FPGA.Native_i_1__14\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(23),
      I1 => mem_mux3(15),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(31),
      O => I014_out
    );
\Using_FPGA.Native_i_1__2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(11),
      I1 => mem_mux3(3),
      I2 => mem_mux3(27),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(19),
      O => I02_out
    );
\Using_FPGA.Native_i_1__3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(12),
      I1 => mem_mux3(4),
      I2 => mem_mux3(28),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(20),
      O => I03_out
    );
\Using_FPGA.Native_i_1__4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(13),
      I1 => mem_mux3(5),
      I2 => mem_mux3(29),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(21),
      O => I04_out
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(14),
      I1 => mem_mux3(6),
      I2 => mem_mux3(30),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(22),
      O => I05_out
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(15),
      I1 => mem_mux3(7),
      I2 => mem_mux3(31),
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(23),
      O => I06_out
    );
\Using_FPGA.Native_i_1__7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(16),
      I1 => mem_mux3(8),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(24),
      O => I07_out
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(17),
      I1 => mem_mux3(9),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(25),
      O => I08_out
    );
\Using_FPGA.Native_i_1__9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0FFAACCF000AACC"
    )
        port map (
      I0 => mem_mux3(18),
      I1 => mem_mux3(10),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      I5 => mem_mux3(26),
      O => I09_out
    );
\Using_FPGA.Native_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(24),
      I1 => mem_mux3(16),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I015_out
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(25),
      I1 => mem_mux3(17),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I016_out
    );
\Using_FPGA.Native_i_2__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(26),
      I1 => mem_mux3(18),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I017_out
    );
\Using_FPGA.Native_i_2__10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(27),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I026_out
    );
\Using_FPGA.Native_i_2__11\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(28),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I027_out
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(29),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I028_out
    );
\Using_FPGA.Native_i_2__13\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(30),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I029_out
    );
\Using_FPGA.Native_i_2__14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(31),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I1
    );
\Using_FPGA.Native_i_2__2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(27),
      I1 => mem_mux3(19),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I018_out
    );
\Using_FPGA.Native_i_2__3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(28),
      I1 => mem_mux3(20),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I019_out
    );
\Using_FPGA.Native_i_2__4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(29),
      I1 => mem_mux3(21),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I020_out
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(30),
      I1 => mem_mux3(22),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I021_out
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"F0F0AACC"
    )
        port map (
      I0 => mem_mux3(31),
      I1 => mem_mux3(23),
      I2 => mem_void_bit,
      I3 => mem_shift16_8(1),
      I4 => mem_shift16_8(0),
      O => I022_out
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(24),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I023_out
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(25),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I024_out
    );
\Using_FPGA.Native_i_2__9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CCCA"
    )
        port map (
      I0 => mem_mux3(26),
      I1 => mem_void_bit,
      I2 => mem_shift16_8(1),
      I3 => mem_shift16_8(0),
      O => I025_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Data_Flow_Logic_ff is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    m0_ex_sel_res_reg_0 : out STD_LOGIC;
    m1_m0_sel_res_reg_0 : out STD_LOGIC;
    m3_m2_sel_res_reg_0 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 27 downto 0 );
    WB_Fwd : out STD_LOGIC_VECTOR ( 0 to 31 );
    \m2_M1_Result_i_reg[29]_0\ : out STD_LOGIC;
    \m2_M1_Result_i_reg[30]_0\ : out STD_LOGIC;
    \m2_M1_Result_i_reg[31]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_Ex_Result_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    m2_m1_sel_res_reg_0 : out STD_LOGIC_VECTOR ( 30 downto 0 );
    m2_m1_sel_res_reg_1 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg : out STD_LOGIC;
    m2_m1_sel_res_reg_2 : out STD_LOGIC_VECTOR ( 30 downto 0 );
    \m1_M0_Result_i_reg[16]_0\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_0 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_1 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_2 : out STD_LOGIC;
    m2_m1_sel_res_reg_3 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_3 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_4 : out STD_LOGIC;
    \m1_M0_Result_i_reg[25]_0\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_5 : out STD_LOGIC;
    m2_m1_sel_res_reg_4 : out STD_LOGIC_VECTOR ( 28 downto 0 );
    m2_m1_sel_res_reg_5 : out STD_LOGIC;
    \m0_Ex_Result_i_reg[1]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[1]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[2]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[2]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[3]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[3]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[4]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[4]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[5]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[5]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[6]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[6]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[7]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[7]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[8]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[8]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[9]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[9]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[10]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[10]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[11]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[11]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[12]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[12]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[13]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[13]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[14]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[14]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[15]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[15]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[29]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[29]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[30]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[30]_0\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[31]_0\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[31]_0\ : out STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \m0_Ex_Result_i_reg[31]_1\ : in STD_LOGIC;
    m0_ex_sel_res_reg_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    m1_m0_sel_res0 : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    m2_m1_sel_res0 : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    wb_m3_sel_res0 : in STD_LOGIC;
    \data_rd_reg_reg[0]\ : in STD_LOGIC_VECTOR ( 27 downto 0 );
    \data_rd_reg_reg[31]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]_0\ : in STD_LOGIC;
    m1_mul_result : in STD_LOGIC_VECTOR ( 0 to 31 );
    m1_sel_mul_res : in STD_LOGIC;
    m0_barrel_result : in STD_LOGIC_VECTOR ( 0 to 31 );
    m0_sel_barrel_res : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m3_sel_div_res : in STD_LOGIC;
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op3_reg[30]_0\ : in STD_LOGIC;
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 2 );
    \m0_Ex_Result_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    GPR_Op3 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \EX_Op3_reg[29]\ : in STD_LOGIC;
    \EX_Op3_reg[29]_0\ : in STD_LOGIC;
    \EX_Op3[29]_i_2_0\ : in STD_LOGIC;
    \EX_Op3[29]_i_2_1\ : in STD_LOGIC;
    \EX_Op3_reg[30]_1\ : in STD_LOGIC;
    \EX_Op2_reg[1]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_0\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    \EX_Op2_reg[2]\ : in STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[16]\ : in STD_LOGIC;
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 2 );
    \EX_Op2_reg[18]\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[22]\ : in STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC;
    \EX_Op2_reg[28]\ : in STD_LOGIC;
    \EX_Op2_reg[29]\ : in STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[30]\ : in STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_1\ : in STD_LOGIC;
    \EX_Op2_reg[19]\ : in STD_LOGIC;
    \EX_Op2_reg[23]\ : in STD_LOGIC;
    \EX_Op2_reg[24]\ : in STD_LOGIC;
    \EX_Op2_reg[26]\ : in STD_LOGIC;
    \EX_Op2_reg[27]\ : in STD_LOGIC;
    of_op1_sel : in STD_LOGIC_VECTOR ( 1 downto 0 );
    GPR_Op1 : in STD_LOGIC_VECTOR ( 28 downto 0 );
    \trace_new_reg_value_i_reg[0]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_exception_taken : in STD_LOGIC;
    \trace_new_reg_value_i_reg[15]\ : in STD_LOGIC;
    wb_databus_read_data : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \trace_new_reg_value_i_reg[16]\ : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \trace_new_reg_value_i_reg[17]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[18]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[19]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[20]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[21]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[22]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[23]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[24]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[25]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[26]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[27]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[28]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[29]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[30]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[31]\ : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Data_Flow_Logic_ff : entity is "Data_Flow_Logic_ff";
end microblaze_microblaze_0_0_Data_Flow_Logic_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Data_Flow_Logic_ff is
  signal \EX_Branch_CMP_Op1[0]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[10]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[11]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[12]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[13]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[14]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[15]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[16]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[17]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[17]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[17]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[18]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[18]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[18]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[19]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[1]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[20]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[21]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[21]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[21]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[22]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[23]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[24]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[25]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[26]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[27]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[28]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[2]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[3]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[4]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[5]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[6]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[7]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[8]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Branch_CMP_Op1[9]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[19]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[22]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[23]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[24]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[26]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[27]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[27]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[27]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[28]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op2[28]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op2[28]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op3[10]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[11]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[12]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[13]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[14]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[15]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[16]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[17]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[18]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[19]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[1]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[20]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[20]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op3[20]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op3[21]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[22]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[23]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[24]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[25]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[26]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[27]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[28]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[29]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[29]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op3[2]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[3]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[4]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[5]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[6]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[7]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[8]_i_2_n_0\ : STD_LOGIC;
  signal \EX_Op3[9]_i_2_n_0\ : STD_LOGIC;
  signal \^wb_fwd\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ex_pre_alu_carry : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \^m0_ex_result_i_reg[0]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal m0_ex_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m0_ex_sel_res_reg_0\ : STD_LOGIC;
  signal m0_fwd : STD_LOGIC_VECTOR ( 1 to 31 );
  signal \m1_M0_Result_i[16]_i_1_n_0\ : STD_LOGIC;
  signal \m1_M0_Result_i[25]_i_1_n_0\ : STD_LOGIC;
  signal \^m1_m0_result_i_reg[0]_0\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \m1_M0_Result_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[10]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[11]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[13]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[15]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[16]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[17]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[18]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[27]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[31]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[4]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[5]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[6]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[7]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[8]\ : STD_LOGIC;
  signal \m1_M0_Result_i_reg_n_0_[9]\ : STD_LOGIC;
  signal m1_fwd : STD_LOGIC_VECTOR ( 1 to 31 );
  signal \^m1_m0_sel_res_reg_0\ : STD_LOGIC;
  signal \m2_M1_Result_i[16]_i_1_n_0\ : STD_LOGIC;
  signal \m2_M1_Result_i[25]_i_1_n_0\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[10]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[11]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[13]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[15]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[16]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[17]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[18]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[27]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[31]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[4]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[5]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[6]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[7]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[8]\ : STD_LOGIC;
  signal \m2_M1_Result_i_reg_n_0_[9]\ : STD_LOGIC;
  signal m2_fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m2_m1_sel_res : STD_LOGIC;
  signal m3_fwd : STD_LOGIC_VECTOR ( 16 to 25 );
  signal m3_m2_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m3_m2_sel_res0 : STD_LOGIC;
  signal \^m3_m2_sel_res_reg_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[0]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[10]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[11]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[12]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[13]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[14]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[15]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[17]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[18]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[19]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[1]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[20]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[21]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[22]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[23]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[24]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[26]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[27]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[28]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[29]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[2]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[30]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[31]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[3]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[4]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[5]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[6]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[7]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[8]_i_1_n_0\ : STD_LOGIC;
  signal \wb_Mem_Result_i[9]_i_1_n_0\ : STD_LOGIC;
  signal wb_mem_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_sel_mem_res_i : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[17]_i_3\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[17]_i_4\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[18]_i_3\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[18]_i_4\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[21]_i_3\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[21]_i_4\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \EX_Branch_CMP_Op1[30]_i_2\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_3\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_8\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \EX_Op1[29]_i_9\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \EX_Op1[30]_i_10\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \EX_Op1[30]_i_3\ : label is "soft_lutpair19";
  attribute SOFT_HLUTNM of \EX_Op1[30]_i_9\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_6\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_8\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_9\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \EX_Op2[10]_i_3\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \EX_Op2[10]_i_4\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \EX_Op2[11]_i_3\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \EX_Op2[11]_i_4\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \EX_Op2[12]_i_3\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \EX_Op2[12]_i_4\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \EX_Op2[13]_i_3\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \EX_Op2[13]_i_4\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \EX_Op2[14]_i_3\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \EX_Op2[14]_i_4\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \EX_Op2[15]_i_3\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \EX_Op2[15]_i_4\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \EX_Op2[19]_i_3\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \EX_Op2[19]_i_4\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \EX_Op2[1]_i_3\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \EX_Op2[1]_i_4\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \EX_Op2[22]_i_3\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \EX_Op2[22]_i_4\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \EX_Op2[23]_i_3\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \EX_Op2[23]_i_4\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \EX_Op2[24]_i_3\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \EX_Op2[24]_i_4\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \EX_Op2[26]_i_3\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \EX_Op2[26]_i_4\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \EX_Op2[27]_i_3\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \EX_Op2[27]_i_4\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \EX_Op2[28]_i_3\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \EX_Op2[28]_i_4\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \EX_Op2[2]_i_3\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \EX_Op2[2]_i_4\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \EX_Op2[3]_i_3\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \EX_Op2[3]_i_4\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \EX_Op2[4]_i_3\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \EX_Op2[4]_i_4\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \EX_Op2[5]_i_3\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \EX_Op2[5]_i_4\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \EX_Op2[6]_i_3\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \EX_Op2[6]_i_4\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \EX_Op2[7]_i_3\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \EX_Op2[7]_i_4\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \EX_Op2[8]_i_3\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \EX_Op2[8]_i_4\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \EX_Op2[9]_i_3\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \EX_Op2[9]_i_4\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \EX_Op3[20]_i_3\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \EX_Op3[20]_i_4\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[10]_i_1\ : label is "soft_lutpair37";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[11]_i_1\ : label is "soft_lutpair38";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[12]_i_1\ : label is "soft_lutpair39";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[13]_i_1\ : label is "soft_lutpair40";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[14]_i_1\ : label is "soft_lutpair41";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[15]_i_1\ : label is "soft_lutpair42";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[17]_i_1\ : label is "soft_lutpair43";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[18]_i_1\ : label is "soft_lutpair64";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[19]_i_1\ : label is "soft_lutpair46";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[1]_i_1\ : label is "soft_lutpair44";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[20]_i_1\ : label is "soft_lutpair47";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[21]_i_1\ : label is "soft_lutpair48";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[22]_i_1\ : label is "soft_lutpair49";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[23]_i_1\ : label is "soft_lutpair50";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[24]_i_1\ : label is "soft_lutpair51";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[26]_i_1\ : label is "soft_lutpair52";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[27]_i_1\ : label is "soft_lutpair53";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[28]_i_1\ : label is "soft_lutpair54";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[29]_i_1\ : label is "soft_lutpair55";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[2]_i_1\ : label is "soft_lutpair29";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[30]_i_1\ : label is "soft_lutpair56";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[31]_i_1\ : label is "soft_lutpair57";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[3]_i_1\ : label is "soft_lutpair30";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[4]_i_1\ : label is "soft_lutpair31";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[5]_i_1\ : label is "soft_lutpair32";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[6]_i_1\ : label is "soft_lutpair33";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[7]_i_1\ : label is "soft_lutpair34";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[8]_i_1\ : label is "soft_lutpair35";
  attribute SOFT_HLUTNM of \m1_M0_Result_i[9]_i_1\ : label is "soft_lutpair36";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[10]_i_1\ : label is "soft_lutpair45";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[11]_i_1\ : label is "soft_lutpair58";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[12]_i_1\ : label is "soft_lutpair59";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[13]_i_1\ : label is "soft_lutpair60";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[14]_i_1\ : label is "soft_lutpair61";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[15]_i_1\ : label is "soft_lutpair65";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[17]_i_1\ : label is "soft_lutpair66";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[18]_i_1\ : label is "soft_lutpair67";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[19]_i_1\ : label is "soft_lutpair68";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[1]_i_1\ : label is "soft_lutpair62";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[20]_i_1\ : label is "soft_lutpair69";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[21]_i_1\ : label is "soft_lutpair70";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[22]_i_1\ : label is "soft_lutpair71";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[23]_i_1\ : label is "soft_lutpair72";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[24]_i_1\ : label is "soft_lutpair73";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[26]_i_1\ : label is "soft_lutpair74";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[27]_i_1\ : label is "soft_lutpair75";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[28]_i_1\ : label is "soft_lutpair76";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[29]_i_1\ : label is "soft_lutpair77";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[2]_i_1\ : label is "soft_lutpair63";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[30]_i_1\ : label is "soft_lutpair78";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[31]_i_1\ : label is "soft_lutpair79";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[3]_i_1\ : label is "soft_lutpair24";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[4]_i_1\ : label is "soft_lutpair23";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[5]_i_1\ : label is "soft_lutpair26";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[6]_i_1\ : label is "soft_lutpair28";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[7]_i_1\ : label is "soft_lutpair27";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[8]_i_1\ : label is "soft_lutpair25";
  attribute SOFT_HLUTNM of \m2_M1_Result_i[9]_i_1\ : label is "soft_lutpair22";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[0]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[10]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[11]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[12]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[13]_i_1\ : label is "soft_lutpair89";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[14]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[15]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[16]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[17]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[18]_i_1\ : label is "soft_lutpair80";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[19]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[1]_i_1\ : label is "soft_lutpair81";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[20]_i_1\ : label is "soft_lutpair91";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[21]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[22]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[23]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[24]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[25]_i_1\ : label is "soft_lutpair90";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[26]_i_1\ : label is "soft_lutpair92";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[27]_i_1\ : label is "soft_lutpair93";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[28]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[29]_i_1\ : label is "soft_lutpair21";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[2]_i_1\ : label is "soft_lutpair82";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[30]_i_1\ : label is "soft_lutpair94";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[31]_i_1\ : label is "soft_lutpair20";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[3]_i_1\ : label is "soft_lutpair83";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[4]_i_1\ : label is "soft_lutpair84";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[5]_i_1\ : label is "soft_lutpair85";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[6]_i_1\ : label is "soft_lutpair86";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[7]_i_1\ : label is "soft_lutpair87";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[8]_i_1\ : label is "soft_lutpair88";
  attribute SOFT_HLUTNM of \m3_M2_Result_i[9]_i_1\ : label is "soft_lutpair89";
begin
  WB_Fwd(0 to 31) <= \^wb_fwd\(0 to 31);
  \^lopt_4\ <= lopt_1;
  \^lopt_5\ <= lopt_2;
  lopt <= \^lopt_3\;
  lopt_3 <= \^lopt_6\;
  lopt_6 <= lopt_9;
  lopt_7 <= lopt_4;
  lopt_8 <= lopt_5;
  \m0_Ex_Result_i_reg[0]_0\(0) <= \^m0_ex_result_i_reg[0]_0\(0);
  m0_ex_sel_res_reg_0 <= \^m0_ex_sel_res_reg_0\;
  \m1_M0_Result_i_reg[0]_0\(0) <= \^m1_m0_result_i_reg[0]_0\(0);
  m1_m0_sel_res_reg_0 <= \^m1_m0_sel_res_reg_0\;
  m3_m2_sel_res_reg_0 <= \^m3_m2_sel_res_reg_0\;
\EX_Branch_CMP_Op1[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(0),
      I1 => \wb_Mem_Result_i[0]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(0),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[0]_i_4_n_0\,
      O => m2_m1_sel_res_reg_4(28)
    );
\EX_Branch_CMP_Op1[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \^m1_m0_result_i_reg[0]_0\(0),
      I1 => \^m0_ex_result_i_reg[0]_0\(0),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(31),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(28),
      O => \EX_Branch_CMP_Op1[0]_i_4_n_0\
    );
\EX_Branch_CMP_Op1[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(10),
      I1 => \wb_Mem_Result_i[10]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(10),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[10]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(18)
    );
\EX_Branch_CMP_Op1[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(10),
      I1 => m0_fwd(10),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(21),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(18),
      O => \EX_Branch_CMP_Op1[10]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(11),
      I1 => \wb_Mem_Result_i[11]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(11),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[11]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(17)
    );
\EX_Branch_CMP_Op1[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(11),
      I1 => m0_fwd(11),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(20),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(17),
      O => \EX_Branch_CMP_Op1[11]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(12),
      I1 => \wb_Mem_Result_i[12]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(12),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[12]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(16)
    );
\EX_Branch_CMP_Op1[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(12),
      I1 => m0_fwd(12),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(19),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(16),
      O => \EX_Branch_CMP_Op1[12]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(13),
      I1 => \wb_Mem_Result_i[13]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(13),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[13]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(15)
    );
\EX_Branch_CMP_Op1[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(13),
      I1 => m0_fwd(13),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(18),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(15),
      O => \EX_Branch_CMP_Op1[13]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(14),
      I1 => \wb_Mem_Result_i[14]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(14),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[14]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(14)
    );
\EX_Branch_CMP_Op1[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(14),
      I1 => m0_fwd(14),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(17),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(14),
      O => \EX_Branch_CMP_Op1[14]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(15),
      I1 => \wb_Mem_Result_i[15]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(15),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[15]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(13)
    );
\EX_Branch_CMP_Op1[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(15),
      I1 => m0_fwd(15),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(16),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(13),
      O => \EX_Branch_CMP_Op1[15]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(16),
      I1 => m3_fwd(16),
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(16),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[16]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(12)
    );
\EX_Branch_CMP_Op1[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \m2_M1_Result_i[16]_i_1_n_0\,
      I1 => \m1_M0_Result_i[16]_i_1_n_0\,
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(15),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(12),
      O => \EX_Branch_CMP_Op1[16]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(17),
      I1 => \wb_Mem_Result_i[17]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(17),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[17]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(11)
    );
\EX_Branch_CMP_Op1[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(14),
      I1 => GPR_Op1(11),
      I2 => \EX_Branch_CMP_Op1[17]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Branch_CMP_Op1[17]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[17]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[17]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[17]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(17),
      I3 => m1_sel_mul_res,
      O => \EX_Branch_CMP_Op1[17]_i_3_n_0\
    );
\EX_Branch_CMP_Op1[17]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(17),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(17),
      I3 => m0_sel_barrel_res,
      O => \EX_Branch_CMP_Op1[17]_i_4_n_0\
    );
\EX_Branch_CMP_Op1[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(18),
      I1 => \wb_Mem_Result_i[18]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(18),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[18]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(10)
    );
\EX_Branch_CMP_Op1[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(13),
      I1 => GPR_Op1(10),
      I2 => \EX_Branch_CMP_Op1[18]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Branch_CMP_Op1[18]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[18]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[18]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[18]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(18),
      I3 => m1_sel_mul_res,
      O => \EX_Branch_CMP_Op1[18]_i_3_n_0\
    );
\EX_Branch_CMP_Op1[18]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(18),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(18),
      I3 => m0_sel_barrel_res,
      O => \EX_Branch_CMP_Op1[18]_i_4_n_0\
    );
\EX_Branch_CMP_Op1[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(19),
      I1 => \wb_Mem_Result_i[19]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(19),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[19]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(9)
    );
\EX_Branch_CMP_Op1[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[19]_i_3_n_0\,
      I1 => \EX_Op2[19]_i_4_n_0\,
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(12),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(9),
      O => \EX_Branch_CMP_Op1[19]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(1),
      I1 => \wb_Mem_Result_i[1]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(1),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[1]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(27)
    );
\EX_Branch_CMP_Op1[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(1),
      I1 => m0_fwd(1),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(30),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(27),
      O => \EX_Branch_CMP_Op1[1]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(20),
      I1 => \wb_Mem_Result_i[20]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(20),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[20]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(8)
    );
\EX_Branch_CMP_Op1[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(11),
      I1 => GPR_Op1(8),
      I2 => \EX_Op3[20]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Op3[20]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[20]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(21),
      I1 => \wb_Mem_Result_i[21]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(21),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[21]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(7)
    );
\EX_Branch_CMP_Op1[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(10),
      I1 => GPR_Op1(7),
      I2 => \EX_Branch_CMP_Op1[21]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Branch_CMP_Op1[21]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[21]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[21]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[21]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(21),
      I3 => m1_sel_mul_res,
      O => \EX_Branch_CMP_Op1[21]_i_3_n_0\
    );
\EX_Branch_CMP_Op1[21]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(21),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(21),
      I3 => m0_sel_barrel_res,
      O => \EX_Branch_CMP_Op1[21]_i_4_n_0\
    );
\EX_Branch_CMP_Op1[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(22),
      I1 => \wb_Mem_Result_i[22]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(22),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[22]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(6)
    );
\EX_Branch_CMP_Op1[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(9),
      I1 => GPR_Op1(6),
      I2 => \EX_Op2[22]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Op2[22]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[22]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(23),
      I1 => \wb_Mem_Result_i[23]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(23),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[23]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(5)
    );
\EX_Branch_CMP_Op1[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(8),
      I1 => GPR_Op1(5),
      I2 => \EX_Op2[23]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Op2[23]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[23]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(24),
      I1 => \wb_Mem_Result_i[24]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(24),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[24]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(4)
    );
\EX_Branch_CMP_Op1[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(24),
      I1 => m0_fwd(24),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(7),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(4),
      O => \EX_Branch_CMP_Op1[24]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(25),
      I1 => m3_fwd(25),
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(25),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[25]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(3)
    );
\EX_Branch_CMP_Op1[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \m2_M1_Result_i[25]_i_1_n_0\,
      I1 => \m1_M0_Result_i[25]_i_1_n_0\,
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(6),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(3),
      O => \EX_Branch_CMP_Op1[25]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(26),
      I1 => \wb_Mem_Result_i[26]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(26),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[26]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(2)
    );
\EX_Branch_CMP_Op1[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0CFCFC0C0"
    )
        port map (
      I0 => m1_fwd(26),
      I1 => m0_fwd(26),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(5),
      I4 => GPR_Op1(2),
      I5 => of_op1_sel(0),
      O => \EX_Branch_CMP_Op1[26]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(27),
      I1 => \wb_Mem_Result_i[27]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(27),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[27]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(1)
    );
\EX_Branch_CMP_Op1[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(4),
      I1 => GPR_Op1(1),
      I2 => \EX_Op2[27]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Op2[27]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[27]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(28),
      I1 => \wb_Mem_Result_i[28]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(28),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[28]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(0)
    );
\EX_Branch_CMP_Op1[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(3),
      I1 => GPR_Op1(0),
      I2 => \EX_Op2[28]_i_3_n_0\,
      I3 => of_op1_sel(0),
      I4 => \EX_Op2[28]_i_4_n_0\,
      I5 => of_op1_sel(1),
      O => \EX_Branch_CMP_Op1[28]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(2),
      I1 => \wb_Mem_Result_i[2]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(2),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[2]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(26)
    );
\EX_Branch_CMP_Op1[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(2),
      I1 => m0_fwd(2),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(29),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(26),
      O => \EX_Branch_CMP_Op1[2]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[30]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[30]\,
      I2 => \EX_Branch_CMP_Op1_reg[28]\,
      I3 => \wb_Mem_Result_i[30]_i_1_n_0\,
      O => m2_m1_sel_res_reg_5
    );
\EX_Branch_CMP_Op1[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(3),
      I1 => \wb_Mem_Result_i[3]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(3),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[3]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(25)
    );
\EX_Branch_CMP_Op1[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(3),
      I1 => m0_fwd(3),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(28),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(25),
      O => \EX_Branch_CMP_Op1[3]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(4),
      I1 => \wb_Mem_Result_i[4]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(4),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[4]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(24)
    );
\EX_Branch_CMP_Op1[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(4),
      I1 => m0_fwd(4),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(27),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(24),
      O => \EX_Branch_CMP_Op1[4]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(5),
      I1 => \wb_Mem_Result_i[5]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(5),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[5]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(23)
    );
\EX_Branch_CMP_Op1[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(5),
      I1 => m0_fwd(5),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(26),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(23),
      O => \EX_Branch_CMP_Op1[5]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(6),
      I1 => \wb_Mem_Result_i[6]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(6),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[6]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(22)
    );
\EX_Branch_CMP_Op1[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(6),
      I1 => m0_fwd(6),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(25),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(22),
      O => \EX_Branch_CMP_Op1[6]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(7),
      I1 => \wb_Mem_Result_i[7]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(7),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[7]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(21)
    );
\EX_Branch_CMP_Op1[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(7),
      I1 => m0_fwd(7),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(24),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(21),
      O => \EX_Branch_CMP_Op1[7]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(8),
      I1 => \wb_Mem_Result_i[8]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(8),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[8]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(20)
    );
\EX_Branch_CMP_Op1[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(8),
      I1 => m0_fwd(8),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(23),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(20),
      O => \EX_Branch_CMP_Op1[8]_i_2_n_0\
    );
\EX_Branch_CMP_Op1[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(9),
      I1 => \wb_Mem_Result_i[9]_i_1_n_0\,
      I2 => \EX_Branch_CMP_Op1_reg[28]_0\,
      I3 => \^wb_fwd\(9),
      I4 => \EX_Branch_CMP_Op1_reg[28]\,
      I5 => \EX_Branch_CMP_Op1[9]_i_2_n_0\,
      O => m2_m1_sel_res_reg_4(19)
    );
\EX_Branch_CMP_Op1[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(9),
      I1 => m0_fwd(9),
      I2 => of_op1_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(22),
      I4 => of_op1_sel(0),
      I5 => GPR_Op1(19),
      O => \EX_Branch_CMP_Op1[9]_i_2_n_0\
    );
\EX_Op1[29]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E2220000"
    )
        port map (
      I0 => \wb_Mem_Result_i[29]_i_1_n_0\,
      I1 => \EX_Branch_CMP_Op1_reg[28]\,
      I2 => \m2_M1_Result_i_reg_n_0_[29]\,
      I3 => m2_m1_sel_res,
      I4 => \EX_Branch_CMP_Op1_reg[28]_0\,
      O => \m2_M1_Result_i_reg[29]_0\
    );
\EX_Op1[29]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[29]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(29),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[29]_0\
    );
\EX_Op1[29]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(29),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(29),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[29]_0\
    );
\EX_Op1[30]_i_10\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(30),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(30),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[30]_0\
    );
\EX_Op1[30]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E2220000"
    )
        port map (
      I0 => \wb_Mem_Result_i[30]_i_1_n_0\,
      I1 => \EX_Branch_CMP_Op1_reg[28]\,
      I2 => \m2_M1_Result_i_reg_n_0_[30]\,
      I3 => m2_m1_sel_res,
      I4 => \EX_Branch_CMP_Op1_reg[28]_0\,
      O => \m2_M1_Result_i_reg[30]_0\
    );
\EX_Op1[30]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[30]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(30),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[30]_0\
    );
\EX_Op1[31]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"E2220000"
    )
        port map (
      I0 => \wb_Mem_Result_i[31]_i_1_n_0\,
      I1 => \EX_Branch_CMP_Op1_reg[28]\,
      I2 => \m2_M1_Result_i_reg_n_0_[31]\,
      I3 => m2_m1_sel_res,
      I4 => \EX_Branch_CMP_Op1_reg[28]_0\,
      O => \m2_M1_Result_i_reg[31]_0\
    );
\EX_Op1[31]_i_8\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[31]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(31),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[31]_0\
    );
\EX_Op1[31]_i_9\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(31),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(31),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[31]_0\
    );
\EX_Op2[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(0),
      I1 => \wb_Mem_Result_i[0]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(0),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2_reg[0]\,
      O => m2_m1_sel_res_reg_2(30)
    );
\EX_Op2[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(10),
      I1 => \wb_Mem_Result_i[10]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(10),
      I4 => \EX_Op2_reg[10]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(20)
    );
\EX_Op2[10]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[10]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(10),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[10]_0\
    );
\EX_Op2[10]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(10),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(10),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[10]_0\
    );
\EX_Op2[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(11),
      I1 => \wb_Mem_Result_i[11]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(11),
      I4 => \EX_Op2_reg[11]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(19)
    );
\EX_Op2[11]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[11]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(11),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[11]_0\
    );
\EX_Op2[11]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(11),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(11),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[11]_0\
    );
\EX_Op2[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(12),
      I1 => \wb_Mem_Result_i[12]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(12),
      I4 => \EX_Op2_reg[12]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(18)
    );
\EX_Op2[12]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[12]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(12),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[12]_0\
    );
\EX_Op2[12]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(12),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(12),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[12]_0\
    );
\EX_Op2[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(13),
      I1 => \wb_Mem_Result_i[13]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(13),
      I4 => \EX_Op2_reg[13]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(17)
    );
\EX_Op2[13]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[13]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(13),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[13]_0\
    );
\EX_Op2[13]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(13),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(13),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[13]_0\
    );
\EX_Op2[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(14),
      I1 => \wb_Mem_Result_i[14]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(14),
      I4 => \EX_Op2_reg[14]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(16)
    );
\EX_Op2[14]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[14]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(14),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[14]_0\
    );
\EX_Op2[14]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(14),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(14),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[14]_0\
    );
\EX_Op2[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(15),
      I1 => \wb_Mem_Result_i[15]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(15),
      I4 => \EX_Op2_reg[15]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(15)
    );
\EX_Op2[15]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[15]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(15),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[15]_0\
    );
\EX_Op2[15]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(15),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(15),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[15]_0\
    );
\EX_Op2[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[16]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => m3_fwd(16),
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[16]\,
      O => m2_m1_sel_res_reg_2(14)
    );
\EX_Op2[16]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[16]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(16),
      I3 => m1_sel_mul_res,
      I4 => of_op2_sel(2),
      I5 => \m1_M0_Result_i[16]_i_1_n_0\,
      O => \m1_M0_Result_i_reg[16]_0\
    );
\EX_Op2[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[17]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => \wb_Mem_Result_i[17]_i_1_n_0\,
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[17]\,
      O => m2_m1_sel_res_reg_2(13)
    );
\EX_Op2[17]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(17),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[17]\,
      I4 => of_op2_sel(2),
      I5 => m0_fwd(17),
      O => M1_Sel_Mul_Res_reg_3
    );
\EX_Op2[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[18]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => \wb_Mem_Result_i[18]_i_1_n_0\,
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[18]\,
      O => m2_m1_sel_res_reg_2(12)
    );
\EX_Op2[18]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(18),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[18]\,
      I4 => of_op2_sel(2),
      I5 => m0_fwd(18),
      O => M1_Sel_Mul_Res_reg_0
    );
\EX_Op2[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(19),
      I1 => \wb_Mem_Result_i[19]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(19),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[19]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(11)
    );
\EX_Op2[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[19]_i_3_n_0\,
      I1 => \EX_Op2[19]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(12),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[19]\,
      O => \EX_Op2[19]_i_2_n_0\
    );
\EX_Op2[19]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[19]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(19),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[19]_i_3_n_0\
    );
\EX_Op2[19]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(19),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(19),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[19]_i_4_n_0\
    );
\EX_Op2[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(1),
      I1 => \wb_Mem_Result_i[1]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(1),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2_reg[1]_1\,
      O => m2_m1_sel_res_reg_2(29)
    );
\EX_Op2[1]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[1]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(1),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[1]_0\
    );
\EX_Op2[1]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(1),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(1),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[1]_0\
    );
\EX_Op2[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[20]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => \wb_Mem_Result_i[20]_i_1_n_0\,
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[20]\,
      O => m2_m1_sel_res_reg_2(10)
    );
\EX_Op2[20]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F8880000F888FFFF"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(20),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[20]\,
      I4 => of_op2_sel(2),
      I5 => \EX_Op3[20]_i_4_n_0\,
      O => M1_Sel_Mul_Res_reg_4
    );
\EX_Op2[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[21]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => \wb_Mem_Result_i[21]_i_1_n_0\,
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[21]\,
      O => m2_m1_sel_res_reg_2(9)
    );
\EX_Op2[21]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(21),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[21]\,
      I4 => of_op2_sel(2),
      I5 => m0_fwd(21),
      O => M1_Sel_Mul_Res_reg_1
    );
\EX_Op2[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(22),
      I1 => \wb_Mem_Result_i[22]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(22),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[22]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(8)
    );
\EX_Op2[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[22]_i_3_n_0\,
      I1 => \EX_Op2[22]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(9),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[22]\,
      O => \EX_Op2[22]_i_2_n_0\
    );
\EX_Op2[22]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[22]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(22),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[22]_i_3_n_0\
    );
\EX_Op2[22]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(22),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(22),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[22]_i_4_n_0\
    );
\EX_Op2[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(23),
      I1 => \wb_Mem_Result_i[23]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(23),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[23]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(7)
    );
\EX_Op2[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[23]_i_3_n_0\,
      I1 => \EX_Op2[23]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(8),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[23]\,
      O => \EX_Op2[23]_i_2_n_0\
    );
\EX_Op2[23]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[23]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(23),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[23]_i_3_n_0\
    );
\EX_Op2[23]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(23),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(23),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[23]_i_4_n_0\
    );
\EX_Op2[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(24),
      I1 => \wb_Mem_Result_i[24]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(24),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[24]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(6)
    );
\EX_Op2[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[24]_i_3_n_0\,
      I1 => \EX_Op2[24]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(7),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[24]\,
      O => \EX_Op2[24]_i_2_n_0\
    );
\EX_Op2[24]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[24]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(24),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[24]_i_3_n_0\
    );
\EX_Op2[24]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(24),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(24),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[24]_i_4_n_0\
    );
\EX_Op2[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8F80FFFF8F800000"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[25]\,
      I2 => \EX_Op2_reg[1]_0\,
      I3 => m3_fwd(25),
      I4 => \EX_Op2_reg[1]\,
      I5 => \EX_Op2_reg[25]\,
      O => m2_m1_sel_res_reg_2(5)
    );
\EX_Op2[25]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[25]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(25),
      I3 => m1_sel_mul_res,
      I4 => of_op2_sel(2),
      I5 => \m1_M0_Result_i[25]_i_1_n_0\,
      O => \m1_M0_Result_i_reg[25]_0\
    );
\EX_Op2[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(26),
      I1 => \wb_Mem_Result_i[26]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(26),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[26]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(4)
    );
\EX_Op2[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[26]_i_3_n_0\,
      I1 => \EX_Op2[26]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(5),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[26]\,
      O => \EX_Op2[26]_i_2_n_0\
    );
\EX_Op2[26]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[26]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(26),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[26]_i_3_n_0\
    );
\EX_Op2[26]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(26),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(26),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[26]_i_4_n_0\
    );
\EX_Op2[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(27),
      I1 => \wb_Mem_Result_i[27]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(27),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[27]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(3)
    );
\EX_Op2[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[27]_i_3_n_0\,
      I1 => \EX_Op2[27]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(4),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[27]\,
      O => \EX_Op2[27]_i_2_n_0\
    );
\EX_Op2[27]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[27]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(27),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[27]_i_3_n_0\
    );
\EX_Op2[27]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(27),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(27),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[27]_i_4_n_0\
    );
\EX_Op2[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(28),
      I1 => \wb_Mem_Result_i[28]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(28),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2[28]_i_2_n_0\,
      O => m2_m1_sel_res_reg_2(2)
    );
\EX_Op2[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[28]_i_3_n_0\,
      I1 => \EX_Op2[28]_i_4_n_0\,
      I2 => of_op2_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(3),
      I4 => of_op2_sel(2),
      I5 => \EX_Op2_reg[28]\,
      O => \EX_Op2[28]_i_2_n_0\
    );
\EX_Op2[28]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[28]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(28),
      I3 => m1_sel_mul_res,
      O => \EX_Op2[28]_i_3_n_0\
    );
\EX_Op2[28]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(28),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(28),
      I3 => m0_sel_barrel_res,
      O => \EX_Op2[28]_i_4_n_0\
    );
\EX_Op2[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(29),
      I1 => \wb_Mem_Result_i[29]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(29),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2_reg[29]\,
      O => m2_m1_sel_res_reg_2(1)
    );
\EX_Op2[29]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(29),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[29]\,
      I4 => of_op2_sel(2),
      I5 => m0_fwd(29),
      O => M1_Sel_Mul_Res_reg_2
    );
\EX_Op2[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(2),
      I1 => \wb_Mem_Result_i[2]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(2),
      I4 => \EX_Op2_reg[2]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(28)
    );
\EX_Op2[2]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[2]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(2),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[2]_0\
    );
\EX_Op2[2]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(2),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(2),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[2]_0\
    );
\EX_Op2[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(30),
      I1 => \wb_Mem_Result_i[30]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(30),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2_reg[30]\,
      O => m2_m1_sel_res_reg_2(0)
    );
\EX_Op2[30]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F888FFFFF8880000"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(30),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[30]\,
      I4 => of_op2_sel(2),
      I5 => m0_fwd(30),
      O => M1_Sel_Mul_Res_reg_5
    );
\EX_Op2[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8FFF8F8F80008080"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[31]\,
      I2 => of_op2_sel(0),
      I3 => of_op2_sel(1),
      I4 => of_op2_sel(2),
      I5 => \wb_Mem_Result_i[31]_i_1_n_0\,
      O => m2_m1_sel_res_reg_3
    );
\EX_Op2[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(3),
      I1 => \wb_Mem_Result_i[3]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(3),
      I4 => \EX_Op2_reg[3]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(27)
    );
\EX_Op2[3]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[3]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(3),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[3]_0\
    );
\EX_Op2[3]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(3),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(3),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[3]_0\
    );
\EX_Op2[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(4),
      I1 => \wb_Mem_Result_i[4]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(4),
      I4 => \EX_Op2_reg[1]_0\,
      I5 => \EX_Op2_reg[4]\,
      O => m2_m1_sel_res_reg_2(26)
    );
\EX_Op2[4]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[4]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(4),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[4]_0\
    );
\EX_Op2[4]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(4),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(4),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[4]_0\
    );
\EX_Op2[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(5),
      I1 => \wb_Mem_Result_i[5]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(5),
      I4 => \EX_Op2_reg[5]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(25)
    );
\EX_Op2[5]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[5]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(5),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[5]_0\
    );
\EX_Op2[5]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(5),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(5),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[5]_0\
    );
\EX_Op2[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(6),
      I1 => \wb_Mem_Result_i[6]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(6),
      I4 => \EX_Op2_reg[6]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(24)
    );
\EX_Op2[6]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[6]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(6),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[6]_0\
    );
\EX_Op2[6]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(6),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(6),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[6]_0\
    );
\EX_Op2[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(7),
      I1 => \wb_Mem_Result_i[7]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(7),
      I4 => \EX_Op2_reg[7]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(23)
    );
\EX_Op2[7]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[7]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(7),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[7]_0\
    );
\EX_Op2[7]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(7),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(7),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[7]_0\
    );
\EX_Op2[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(8),
      I1 => \wb_Mem_Result_i[8]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(8),
      I4 => \EX_Op2_reg[8]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(22)
    );
\EX_Op2[8]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[8]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(8),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[8]_0\
    );
\EX_Op2[8]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(8),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(8),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[8]_0\
    );
\EX_Op2[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0C0C0CFCF"
    )
        port map (
      I0 => m2_fwd(9),
      I1 => \wb_Mem_Result_i[9]_i_1_n_0\,
      I2 => \EX_Op2_reg[1]\,
      I3 => \^wb_fwd\(9),
      I4 => \EX_Op2_reg[9]\,
      I5 => \EX_Op2_reg[1]_0\,
      O => m2_m1_sel_res_reg_2(21)
    );
\EX_Op2[9]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[9]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(9),
      I3 => m1_sel_mul_res,
      O => \m1_M0_Result_i_reg[9]_0\
    );
\EX_Op2[9]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(9),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(9),
      I3 => m0_sel_barrel_res,
      O => \m0_Ex_Result_i_reg[9]_0\
    );
\EX_Op3[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(0),
      I1 => \wb_Mem_Result_i[0]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(0),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[0]_i_4_n_0\,
      O => m2_m1_sel_res_reg_0(30)
    );
\EX_Op3[0]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \^m1_m0_result_i_reg[0]_0\(0),
      I1 => \^m0_ex_result_i_reg[0]_0\(0),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(31),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(29),
      O => \EX_Op3[0]_i_4_n_0\
    );
\EX_Op3[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(10),
      I1 => \wb_Mem_Result_i[10]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(10),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[10]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(20)
    );
\EX_Op3[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(10),
      I1 => m0_fwd(10),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(21),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(19),
      O => \EX_Op3[10]_i_2_n_0\
    );
\EX_Op3[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(11),
      I1 => \wb_Mem_Result_i[11]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(11),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[11]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(19)
    );
\EX_Op3[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(11),
      I1 => m0_fwd(11),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(20),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(18),
      O => \EX_Op3[11]_i_2_n_0\
    );
\EX_Op3[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(12),
      I1 => \wb_Mem_Result_i[12]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(12),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[12]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(18)
    );
\EX_Op3[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(12),
      I1 => m0_fwd(12),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(19),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(17),
      O => \EX_Op3[12]_i_2_n_0\
    );
\EX_Op3[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(13),
      I1 => \wb_Mem_Result_i[13]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(13),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[13]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(17)
    );
\EX_Op3[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(13),
      I1 => m0_fwd(13),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(18),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(16),
      O => \EX_Op3[13]_i_2_n_0\
    );
\EX_Op3[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(14),
      I1 => \wb_Mem_Result_i[14]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(14),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[14]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(16)
    );
\EX_Op3[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(14),
      I1 => m0_fwd(14),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(17),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(15),
      O => \EX_Op3[14]_i_2_n_0\
    );
\EX_Op3[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(15),
      I1 => \wb_Mem_Result_i[15]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(15),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[15]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(15)
    );
\EX_Op3[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(15),
      I1 => m0_fwd(15),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(16),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(14),
      O => \EX_Op3[15]_i_2_n_0\
    );
\EX_Op3[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(16),
      I1 => m3_fwd(16),
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(16),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[16]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(14)
    );
\EX_Op3[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \m2_M1_Result_i[16]_i_1_n_0\,
      I1 => \m1_M0_Result_i[16]_i_1_n_0\,
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(15),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(13),
      O => \EX_Op3[16]_i_2_n_0\
    );
\EX_Op3[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(17),
      I1 => \wb_Mem_Result_i[17]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(17),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[17]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(13)
    );
\EX_Op3[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(17),
      I1 => m0_fwd(17),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(14),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(12),
      O => \EX_Op3[17]_i_2_n_0\
    );
\EX_Op3[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(18),
      I1 => \wb_Mem_Result_i[18]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(18),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[18]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(12)
    );
\EX_Op3[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(18),
      I1 => m0_fwd(18),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(13),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(11),
      O => \EX_Op3[18]_i_2_n_0\
    );
\EX_Op3[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(19),
      I1 => \wb_Mem_Result_i[19]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(19),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[19]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(11)
    );
\EX_Op3[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(12),
      I1 => GPR_Op3(10),
      I2 => \EX_Op2[19]_i_3_n_0\,
      I3 => of_op3_sel(2),
      I4 => \EX_Op2[19]_i_4_n_0\,
      I5 => of_op3_sel(1),
      O => \EX_Op3[19]_i_2_n_0\
    );
\EX_Op3[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(1),
      I1 => \wb_Mem_Result_i[1]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(1),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[1]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(29)
    );
\EX_Op3[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(1),
      I1 => m0_fwd(1),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(30),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(28),
      O => \EX_Op3[1]_i_2_n_0\
    );
\EX_Op3[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(20),
      I1 => \wb_Mem_Result_i[20]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(20),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[20]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(10)
    );
\EX_Op3[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(11),
      I1 => GPR_Op3(9),
      I2 => \EX_Op3[20]_i_3_n_0\,
      I3 => of_op3_sel(2),
      I4 => \EX_Op3[20]_i_4_n_0\,
      I5 => of_op3_sel(1),
      O => \EX_Op3[20]_i_2_n_0\
    );
\EX_Op3[20]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[20]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(20),
      I3 => m1_sel_mul_res,
      O => \EX_Op3[20]_i_3_n_0\
    );
\EX_Op3[20]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0777"
    )
        port map (
      I0 => m0_ex_result(20),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(20),
      I3 => m0_sel_barrel_res,
      O => \EX_Op3[20]_i_4_n_0\
    );
\EX_Op3[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(21),
      I1 => \wb_Mem_Result_i[21]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(21),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[21]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(9)
    );
\EX_Op3[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(21),
      I1 => m0_fwd(21),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(10),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(8),
      O => \EX_Op3[21]_i_2_n_0\
    );
\EX_Op3[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(22),
      I1 => \wb_Mem_Result_i[22]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(22),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[22]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(8)
    );
\EX_Op3[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(9),
      I1 => GPR_Op3(7),
      I2 => \EX_Op2[22]_i_3_n_0\,
      I3 => of_op3_sel(2),
      I4 => \EX_Op2[22]_i_4_n_0\,
      I5 => of_op3_sel(1),
      O => \EX_Op3[22]_i_2_n_0\
    );
\EX_Op3[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(23),
      I1 => \wb_Mem_Result_i[23]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(23),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[23]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(7)
    );
\EX_Op3[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F503F3F5F503030"
    )
        port map (
      I0 => \EX_Op2[23]_i_3_n_0\,
      I1 => \EX_Op2[23]_i_4_n_0\,
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(8),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(6),
      O => \EX_Op3[23]_i_2_n_0\
    );
\EX_Op3[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(24),
      I1 => \wb_Mem_Result_i[24]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(24),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[24]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(6)
    );
\EX_Op3[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(24),
      I1 => m0_fwd(24),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(7),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(5),
      O => \EX_Op3[24]_i_2_n_0\
    );
\EX_Op3[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(25),
      I1 => m3_fwd(25),
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(25),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[25]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(5)
    );
\EX_Op3[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => \m2_M1_Result_i[25]_i_1_n_0\,
      I1 => \m1_M0_Result_i[25]_i_1_n_0\,
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(6),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(4),
      O => \EX_Op3[25]_i_2_n_0\
    );
\EX_Op3[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(26),
      I1 => \wb_Mem_Result_i[26]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(26),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[26]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(4)
    );
\EX_Op3[26]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0AFA0CFCFC0C0"
    )
        port map (
      I0 => m1_fwd(26),
      I1 => m0_fwd(26),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(5),
      I4 => GPR_Op3(3),
      I5 => of_op3_sel(2),
      O => \EX_Op3[26]_i_2_n_0\
    );
\EX_Op3[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(27),
      I1 => \wb_Mem_Result_i[27]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(27),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[27]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(3)
    );
\EX_Op3[27]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5F505F503F3F3030"
    )
        port map (
      I0 => \EX_Op2[27]_i_3_n_0\,
      I1 => \EX_Op2[27]_i_4_n_0\,
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(4),
      I4 => GPR_Op3(2),
      I5 => of_op3_sel(2),
      O => \EX_Op3[27]_i_2_n_0\
    );
\EX_Op3[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(28),
      I1 => \wb_Mem_Result_i[28]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(28),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[28]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(2)
    );
\EX_Op3[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0F000FFFAACCAACC"
    )
        port map (
      I0 => \m0_Ex_Result_i_reg[0]_1\(3),
      I1 => GPR_Op3(1),
      I2 => \EX_Op2[28]_i_3_n_0\,
      I3 => of_op3_sel(2),
      I4 => \EX_Op2[28]_i_4_n_0\,
      I5 => of_op3_sel(1),
      O => \EX_Op3[28]_i_2_n_0\
    );
\EX_Op3[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(29),
      I1 => \wb_Mem_Result_i[29]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(29),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[29]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(1)
    );
\EX_Op3[29]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88B888B8BBBB8888"
    )
        port map (
      I0 => \EX_Op3[29]_i_3_n_0\,
      I1 => of_op3_sel(1),
      I2 => \EX_Op3_reg[29]\,
      I3 => \EX_Op3_reg[29]_0\,
      I4 => GPR_Op3(0),
      I5 => of_op3_sel(2),
      O => \EX_Op3[29]_i_2_n_0\
    );
\EX_Op3[29]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ABA8"
    )
        port map (
      I0 => m1_fwd(29),
      I1 => \EX_Op3[29]_i_2_0\,
      I2 => \EX_Op3[29]_i_2_1\,
      I3 => m0_fwd(29),
      O => \EX_Op3[29]_i_3_n_0\
    );
\EX_Op3[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(2),
      I1 => \wb_Mem_Result_i[2]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(2),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[2]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(28)
    );
\EX_Op3[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(2),
      I1 => m0_fwd(2),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(29),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(27),
      O => \EX_Op3[2]_i_2_n_0\
    );
\EX_Op3[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(30),
      I1 => \wb_Mem_Result_i[30]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(30),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3_reg[30]_1\,
      O => m2_m1_sel_res_reg_0(0)
    );
\EX_Op3[30]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"ABA8"
    )
        port map (
      I0 => m1_fwd(30),
      I1 => \EX_Op3[29]_i_2_0\,
      I2 => \EX_Op3[29]_i_2_1\,
      I3 => m0_fwd(30),
      O => M1_Sel_Mul_Res_reg
    );
\EX_Op3[31]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8FFF8F8F80008080"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[31]\,
      I2 => of_op3_sel(0),
      I3 => of_op3_sel(1),
      I4 => of_op3_sel(2),
      I5 => \wb_Mem_Result_i[31]_i_1_n_0\,
      O => m2_m1_sel_res_reg_1
    );
\EX_Op3[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(3),
      I1 => \wb_Mem_Result_i[3]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(3),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[3]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(27)
    );
\EX_Op3[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(3),
      I1 => m0_fwd(3),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(28),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(26),
      O => \EX_Op3[3]_i_2_n_0\
    );
\EX_Op3[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(4),
      I1 => \wb_Mem_Result_i[4]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(4),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[4]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(26)
    );
\EX_Op3[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(4),
      I1 => m0_fwd(4),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(27),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(25),
      O => \EX_Op3[4]_i_2_n_0\
    );
\EX_Op3[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(5),
      I1 => \wb_Mem_Result_i[5]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(5),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[5]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(25)
    );
\EX_Op3[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(5),
      I1 => m0_fwd(5),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(26),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(24),
      O => \EX_Op3[5]_i_2_n_0\
    );
\EX_Op3[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(6),
      I1 => \wb_Mem_Result_i[6]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(6),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[6]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(24)
    );
\EX_Op3[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(6),
      I1 => m0_fwd(6),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(25),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(23),
      O => \EX_Op3[6]_i_2_n_0\
    );
\EX_Op3[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(7),
      I1 => \wb_Mem_Result_i[7]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(7),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[7]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(23)
    );
\EX_Op3[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(7),
      I1 => m0_fwd(7),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(24),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(22),
      O => \EX_Op3[7]_i_2_n_0\
    );
\EX_Op3[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(8),
      I1 => \wb_Mem_Result_i[8]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(8),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[8]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(22)
    );
\EX_Op3[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(8),
      I1 => m0_fwd(8),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(23),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(21),
      O => \EX_Op3[8]_i_2_n_0\
    );
\EX_Op3[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m2_fwd(9),
      I1 => \wb_Mem_Result_i[9]_i_1_n_0\,
      I2 => \EX_Op3_reg[30]\,
      I3 => \^wb_fwd\(9),
      I4 => \EX_Op3_reg[30]_0\,
      I5 => \EX_Op3[9]_i_2_n_0\,
      O => m2_m1_sel_res_reg_0(21)
    );
\EX_Op3[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFA0CFCFAFA0C0C0"
    )
        port map (
      I0 => m1_fwd(9),
      I1 => m0_fwd(9),
      I2 => of_op3_sel(1),
      I3 => \m0_Ex_Result_i_reg[0]_1\(22),
      I4 => of_op3_sel(2),
      I5 => GPR_Op3(20),
      O => \EX_Op3[9]_i_2_n_0\
    );
\Using_DAXI_ALU_Carry.Override_Ex_MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_790
     port map (
      EX_CarryIn => EX_CarryIn,
      ex_pre_alu_carry => ex_pre_alu_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      lopt_3 => \^lopt_3\,
      lopt_4 => \^lopt_4\,
      lopt_5 => \^lopt_5\,
      lopt_6 => \^lopt_6\,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      lopt_9 => lopt_9
    );
\Using_DAXI_ALU_Carry.Override_M3_MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_791
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_pre_alu_carry => ex_pre_alu_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\
    );
\data_rd_reg[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(0),
      I1 => \data_rd_reg_reg[0]\(27),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(27)
    );
\data_rd_reg[10]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(10),
      I1 => \data_rd_reg_reg[0]\(17),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(17)
    );
\data_rd_reg[11]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(11),
      I1 => \data_rd_reg_reg[0]\(16),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(16)
    );
\data_rd_reg[12]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(12),
      I1 => \data_rd_reg_reg[0]\(15),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(15)
    );
\data_rd_reg[13]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(13),
      I1 => \data_rd_reg_reg[0]\(14),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(14)
    );
\data_rd_reg[14]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(14),
      I1 => \data_rd_reg_reg[0]\(13),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(13)
    );
\data_rd_reg[15]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(15),
      I1 => \data_rd_reg_reg[0]\(12),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(12)
    );
\data_rd_reg[16]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(16),
      I1 => \data_rd_reg_reg[0]\(11),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(11)
    );
\data_rd_reg[17]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(17),
      I1 => \data_rd_reg_reg[0]\(10),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(10)
    );
\data_rd_reg[18]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(18),
      I1 => \data_rd_reg_reg[0]\(9),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(9)
    );
\data_rd_reg[19]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(19),
      I1 => \data_rd_reg_reg[0]\(8),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(8)
    );
\data_rd_reg[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(1),
      I1 => \data_rd_reg_reg[0]\(26),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(26)
    );
\data_rd_reg[20]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(20),
      I1 => \data_rd_reg_reg[0]\(7),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(7)
    );
\data_rd_reg[21]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(21),
      I1 => \data_rd_reg_reg[0]\(6),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(6)
    );
\data_rd_reg[22]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(22),
      I1 => \data_rd_reg_reg[0]\(5),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(5)
    );
\data_rd_reg[23]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(23),
      I1 => \data_rd_reg_reg[0]\(4),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(4)
    );
\data_rd_reg[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(24),
      I1 => \data_rd_reg_reg[0]\(3),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(3)
    );
\data_rd_reg[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(26),
      I1 => \data_rd_reg_reg[0]\(2),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(2)
    );
\data_rd_reg[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(27),
      I1 => \data_rd_reg_reg[0]\(1),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(1)
    );
\data_rd_reg[2]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(2),
      I1 => \data_rd_reg_reg[0]\(25),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(25)
    );
\data_rd_reg[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(31),
      I1 => \data_rd_reg_reg[0]\(0),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(0)
    );
\data_rd_reg[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(3),
      I1 => \data_rd_reg_reg[0]\(24),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(24)
    );
\data_rd_reg[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(4),
      I1 => \data_rd_reg_reg[0]\(23),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(23)
    );
\data_rd_reg[5]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(5),
      I1 => \data_rd_reg_reg[0]\(22),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(22)
    );
\data_rd_reg[6]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(6),
      I1 => \data_rd_reg_reg[0]\(21),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(21)
    );
\data_rd_reg[7]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(7),
      I1 => \data_rd_reg_reg[0]\(20),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(20)
    );
\data_rd_reg[8]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(8),
      I1 => \data_rd_reg_reg[0]\(19),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(19)
    );
\data_rd_reg[9]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A000ACCC"
    )
        port map (
      I0 => \^wb_fwd\(9),
      I1 => \data_rd_reg_reg[0]\(18),
      I2 => \data_rd_reg_reg[31]\,
      I3 => wb_gpr_wr_dbg,
      I4 => read_register_MSR_1,
      O => D(18)
    );
\m0_Ex_Result_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(31),
      Q => m0_ex_result(0),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(21),
      Q => m0_ex_result(10),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(20),
      Q => m0_ex_result(11),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(19),
      Q => m0_ex_result(12),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(18),
      Q => m0_ex_result(13),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(17),
      Q => m0_ex_result(14),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(16),
      Q => m0_ex_result(15),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(15),
      Q => m0_ex_result(16),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(14),
      Q => m0_ex_result(17),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(13),
      Q => m0_ex_result(18),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(12),
      Q => m0_ex_result(19),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(30),
      Q => m0_ex_result(1),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(11),
      Q => m0_ex_result(20),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(10),
      Q => m0_ex_result(21),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(9),
      Q => m0_ex_result(22),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(8),
      Q => m0_ex_result(23),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(7),
      Q => m0_ex_result(24),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(6),
      Q => m0_ex_result(25),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(5),
      Q => m0_ex_result(26),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(4),
      Q => m0_ex_result(27),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(3),
      Q => m0_ex_result(28),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(2),
      Q => m0_ex_result(29),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(29),
      Q => m0_ex_result(2),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(1),
      Q => m0_ex_result(30),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(0),
      Q => m0_ex_result(31),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(28),
      Q => m0_ex_result(3),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(27),
      Q => m0_ex_result(4),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(26),
      Q => m0_ex_result(5),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(25),
      Q => m0_ex_result(6),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(24),
      Q => m0_ex_result(7),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(23),
      Q => m0_ex_result(8),
      R => sync_reset
    );
\m0_Ex_Result_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => \m0_Ex_Result_i_reg[0]_1\(22),
      Q => m0_ex_result(9),
      R => sync_reset
    );
m0_ex_sel_res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_Ex_Result_i_reg[31]_1\,
      D => m0_ex_sel_res_reg_1,
      Q => \^m0_ex_sel_res_reg_0\,
      R => sync_reset
    );
\m1_M0_Result_i[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_ex_result(0),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(0),
      I3 => m0_sel_barrel_res,
      O => \^m0_ex_result_i_reg[0]_0\(0)
    );
\m1_M0_Result_i[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(10),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(10),
      O => m0_fwd(10)
    );
\m1_M0_Result_i[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(11),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(11),
      O => m0_fwd(11)
    );
\m1_M0_Result_i[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(12),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(12),
      O => m0_fwd(12)
    );
\m1_M0_Result_i[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(13),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(13),
      O => m0_fwd(13)
    );
\m1_M0_Result_i[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(14),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(14),
      O => m0_fwd(14)
    );
\m1_M0_Result_i[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(15),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(15),
      O => m0_fwd(15)
    );
\m1_M0_Result_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_ex_result(16),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(16),
      I3 => m0_sel_barrel_res,
      O => \m1_M0_Result_i[16]_i_1_n_0\
    );
\m1_M0_Result_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(17),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(17),
      O => m0_fwd(17)
    );
\m1_M0_Result_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(18),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(18),
      O => m0_fwd(18)
    );
\m1_M0_Result_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(19),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(19),
      O => m0_fwd(19)
    );
\m1_M0_Result_i[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(1),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(1),
      O => m0_fwd(1)
    );
\m1_M0_Result_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(20),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(20),
      O => m0_fwd(20)
    );
\m1_M0_Result_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(21),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(21),
      O => m0_fwd(21)
    );
\m1_M0_Result_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(22),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(22),
      O => m0_fwd(22)
    );
\m1_M0_Result_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(23),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(23),
      O => m0_fwd(23)
    );
\m1_M0_Result_i[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(24),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(24),
      O => m0_fwd(24)
    );
\m1_M0_Result_i[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_ex_result(25),
      I1 => \^m0_ex_sel_res_reg_0\,
      I2 => m0_barrel_result(25),
      I3 => m0_sel_barrel_res,
      O => \m1_M0_Result_i[25]_i_1_n_0\
    );
\m1_M0_Result_i[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(26),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(26),
      O => m0_fwd(26)
    );
\m1_M0_Result_i[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(27),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(27),
      O => m0_fwd(27)
    );
\m1_M0_Result_i[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(28),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(28),
      O => m0_fwd(28)
    );
\m1_M0_Result_i[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(29),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(29),
      O => m0_fwd(29)
    );
\m1_M0_Result_i[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(2),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(2),
      O => m0_fwd(2)
    );
\m1_M0_Result_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(30),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(30),
      O => m0_fwd(30)
    );
\m1_M0_Result_i[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(31),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(31),
      O => m0_fwd(31)
    );
\m1_M0_Result_i[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(3),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(3),
      O => m0_fwd(3)
    );
\m1_M0_Result_i[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(4),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(4),
      O => m0_fwd(4)
    );
\m1_M0_Result_i[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(5),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(5),
      O => m0_fwd(5)
    );
\m1_M0_Result_i[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(6),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(6),
      O => m0_fwd(6)
    );
\m1_M0_Result_i[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(7),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(7),
      O => m0_fwd(7)
    );
\m1_M0_Result_i[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(8),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(8),
      O => m0_fwd(8)
    );
\m1_M0_Result_i[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m0_sel_barrel_res,
      I1 => m0_barrel_result(9),
      I2 => \^m0_ex_sel_res_reg_0\,
      I3 => m0_ex_result(9),
      O => m0_fwd(9)
    );
\m1_M0_Result_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => \^m0_ex_result_i_reg[0]_0\(0),
      Q => \m1_M0_Result_i_reg_n_0_[0]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(10),
      Q => \m1_M0_Result_i_reg_n_0_[10]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(11),
      Q => \m1_M0_Result_i_reg_n_0_[11]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(12),
      Q => \m1_M0_Result_i_reg_n_0_[12]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(13),
      Q => \m1_M0_Result_i_reg_n_0_[13]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(14),
      Q => \m1_M0_Result_i_reg_n_0_[14]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(15),
      Q => \m1_M0_Result_i_reg_n_0_[15]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => \m1_M0_Result_i[16]_i_1_n_0\,
      Q => \m1_M0_Result_i_reg_n_0_[16]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(17),
      Q => \m1_M0_Result_i_reg_n_0_[17]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(18),
      Q => \m1_M0_Result_i_reg_n_0_[18]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(19),
      Q => \m1_M0_Result_i_reg_n_0_[19]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(1),
      Q => \m1_M0_Result_i_reg_n_0_[1]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(20),
      Q => \m1_M0_Result_i_reg_n_0_[20]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(21),
      Q => \m1_M0_Result_i_reg_n_0_[21]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(22),
      Q => \m1_M0_Result_i_reg_n_0_[22]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(23),
      Q => \m1_M0_Result_i_reg_n_0_[23]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(24),
      Q => \m1_M0_Result_i_reg_n_0_[24]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => \m1_M0_Result_i[25]_i_1_n_0\,
      Q => \m1_M0_Result_i_reg_n_0_[25]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(26),
      Q => \m1_M0_Result_i_reg_n_0_[26]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(27),
      Q => \m1_M0_Result_i_reg_n_0_[27]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(28),
      Q => \m1_M0_Result_i_reg_n_0_[28]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(29),
      Q => \m1_M0_Result_i_reg_n_0_[29]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(2),
      Q => \m1_M0_Result_i_reg_n_0_[2]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(30),
      Q => \m1_M0_Result_i_reg_n_0_[30]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(31),
      Q => \m1_M0_Result_i_reg_n_0_[31]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(3),
      Q => \m1_M0_Result_i_reg_n_0_[3]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(4),
      Q => \m1_M0_Result_i_reg_n_0_[4]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(5),
      Q => \m1_M0_Result_i_reg_n_0_[5]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(6),
      Q => \m1_M0_Result_i_reg_n_0_[6]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(7),
      Q => \m1_M0_Result_i_reg_n_0_[7]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(8),
      Q => \m1_M0_Result_i_reg_n_0_[8]\,
      R => sync_reset
    );
\m1_M0_Result_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_fwd(9),
      Q => \m1_M0_Result_i_reg_n_0_[9]\,
      R => sync_reset
    );
m1_m0_sel_res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m1_m0_sel_res0,
      Q => \^m1_m0_sel_res_reg_0\,
      R => sync_reset
    );
\m2_M1_Result_i[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[0]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(0),
      I3 => m1_sel_mul_res,
      O => \^m1_m0_result_i_reg[0]_0\(0)
    );
\m2_M1_Result_i[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(10),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[10]\,
      O => m1_fwd(10)
    );
\m2_M1_Result_i[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(11),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[11]\,
      O => m1_fwd(11)
    );
\m2_M1_Result_i[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(12),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[12]\,
      O => m1_fwd(12)
    );
\m2_M1_Result_i[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(13),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[13]\,
      O => m1_fwd(13)
    );
\m2_M1_Result_i[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(14),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[14]\,
      O => m1_fwd(14)
    );
\m2_M1_Result_i[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(15),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[15]\,
      O => m1_fwd(15)
    );
\m2_M1_Result_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[16]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(16),
      I3 => m1_sel_mul_res,
      O => \m2_M1_Result_i[16]_i_1_n_0\
    );
\m2_M1_Result_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(17),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[17]\,
      O => m1_fwd(17)
    );
\m2_M1_Result_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(18),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[18]\,
      O => m1_fwd(18)
    );
\m2_M1_Result_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(19),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[19]\,
      O => m1_fwd(19)
    );
\m2_M1_Result_i[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(1),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[1]\,
      O => m1_fwd(1)
    );
\m2_M1_Result_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(20),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[20]\,
      O => m1_fwd(20)
    );
\m2_M1_Result_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(21),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[21]\,
      O => m1_fwd(21)
    );
\m2_M1_Result_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(22),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[22]\,
      O => m1_fwd(22)
    );
\m2_M1_Result_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(23),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[23]\,
      O => m1_fwd(23)
    );
\m2_M1_Result_i[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(24),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[24]\,
      O => m1_fwd(24)
    );
\m2_M1_Result_i[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => \m1_M0_Result_i_reg_n_0_[25]\,
      I1 => \^m1_m0_sel_res_reg_0\,
      I2 => m1_mul_result(25),
      I3 => m1_sel_mul_res,
      O => \m2_M1_Result_i[25]_i_1_n_0\
    );
\m2_M1_Result_i[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(26),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[26]\,
      O => m1_fwd(26)
    );
\m2_M1_Result_i[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(27),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[27]\,
      O => m1_fwd(27)
    );
\m2_M1_Result_i[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(28),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[28]\,
      O => m1_fwd(28)
    );
\m2_M1_Result_i[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(29),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[29]\,
      O => m1_fwd(29)
    );
\m2_M1_Result_i[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(2),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[2]\,
      O => m1_fwd(2)
    );
\m2_M1_Result_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(30),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[30]\,
      O => m1_fwd(30)
    );
\m2_M1_Result_i[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(31),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[31]\,
      O => m1_fwd(31)
    );
\m2_M1_Result_i[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(3),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[3]\,
      O => m1_fwd(3)
    );
\m2_M1_Result_i[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(4),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[4]\,
      O => m1_fwd(4)
    );
\m2_M1_Result_i[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(5),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[5]\,
      O => m1_fwd(5)
    );
\m2_M1_Result_i[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(6),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[6]\,
      O => m1_fwd(6)
    );
\m2_M1_Result_i[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(7),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[7]\,
      O => m1_fwd(7)
    );
\m2_M1_Result_i[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(8),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[8]\,
      O => m1_fwd(8)
    );
\m2_M1_Result_i[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => m1_sel_mul_res,
      I1 => m1_mul_result(9),
      I2 => \^m1_m0_sel_res_reg_0\,
      I3 => \m1_M0_Result_i_reg_n_0_[9]\,
      O => m1_fwd(9)
    );
\m2_M1_Result_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \^m1_m0_result_i_reg[0]_0\(0),
      Q => \m2_M1_Result_i_reg_n_0_[0]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(10),
      Q => \m2_M1_Result_i_reg_n_0_[10]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(11),
      Q => \m2_M1_Result_i_reg_n_0_[11]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(12),
      Q => \m2_M1_Result_i_reg_n_0_[12]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(13),
      Q => \m2_M1_Result_i_reg_n_0_[13]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(14),
      Q => \m2_M1_Result_i_reg_n_0_[14]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(15),
      Q => \m2_M1_Result_i_reg_n_0_[15]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \m2_M1_Result_i[16]_i_1_n_0\,
      Q => \m2_M1_Result_i_reg_n_0_[16]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(17),
      Q => \m2_M1_Result_i_reg_n_0_[17]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(18),
      Q => \m2_M1_Result_i_reg_n_0_[18]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(19),
      Q => \m2_M1_Result_i_reg_n_0_[19]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(1),
      Q => \m2_M1_Result_i_reg_n_0_[1]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(20),
      Q => \m2_M1_Result_i_reg_n_0_[20]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(21),
      Q => \m2_M1_Result_i_reg_n_0_[21]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(22),
      Q => \m2_M1_Result_i_reg_n_0_[22]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(23),
      Q => \m2_M1_Result_i_reg_n_0_[23]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(24),
      Q => \m2_M1_Result_i_reg_n_0_[24]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => \m2_M1_Result_i[25]_i_1_n_0\,
      Q => \m2_M1_Result_i_reg_n_0_[25]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(26),
      Q => \m2_M1_Result_i_reg_n_0_[26]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(27),
      Q => \m2_M1_Result_i_reg_n_0_[27]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(28),
      Q => \m2_M1_Result_i_reg_n_0_[28]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(29),
      Q => \m2_M1_Result_i_reg_n_0_[29]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(2),
      Q => \m2_M1_Result_i_reg_n_0_[2]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(30),
      Q => \m2_M1_Result_i_reg_n_0_[30]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(31),
      Q => \m2_M1_Result_i_reg_n_0_[31]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(3),
      Q => \m2_M1_Result_i_reg_n_0_[3]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(4),
      Q => \m2_M1_Result_i_reg_n_0_[4]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(5),
      Q => \m2_M1_Result_i_reg_n_0_[5]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(6),
      Q => \m2_M1_Result_i_reg_n_0_[6]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(7),
      Q => \m2_M1_Result_i_reg_n_0_[7]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(8),
      Q => \m2_M1_Result_i_reg_n_0_[8]\,
      R => sync_reset
    );
\m2_M1_Result_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m1_fwd(9),
      Q => \m2_M1_Result_i_reg_n_0_[9]\,
      R => sync_reset
    );
m2_m1_sel_res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun,
      D => m2_m1_sel_res0,
      Q => m2_m1_sel_res,
      R => sync_reset
    );
\m3_M2_Result_i[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[0]\,
      O => m2_fwd(0)
    );
\m3_M2_Result_i[10]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[10]\,
      O => m2_fwd(10)
    );
\m3_M2_Result_i[11]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[11]\,
      O => m2_fwd(11)
    );
\m3_M2_Result_i[12]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[12]\,
      O => m2_fwd(12)
    );
\m3_M2_Result_i[13]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[13]\,
      O => m2_fwd(13)
    );
\m3_M2_Result_i[14]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[14]\,
      O => m2_fwd(14)
    );
\m3_M2_Result_i[15]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[15]\,
      O => m2_fwd(15)
    );
\m3_M2_Result_i[16]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[16]\,
      O => m2_fwd(16)
    );
\m3_M2_Result_i[17]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[17]\,
      O => m2_fwd(17)
    );
\m3_M2_Result_i[18]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[18]\,
      O => m2_fwd(18)
    );
\m3_M2_Result_i[19]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[19]\,
      O => m2_fwd(19)
    );
\m3_M2_Result_i[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[1]\,
      O => m2_fwd(1)
    );
\m3_M2_Result_i[20]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[20]\,
      O => m2_fwd(20)
    );
\m3_M2_Result_i[21]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[21]\,
      O => m2_fwd(21)
    );
\m3_M2_Result_i[22]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[22]\,
      O => m2_fwd(22)
    );
\m3_M2_Result_i[23]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[23]\,
      O => m2_fwd(23)
    );
\m3_M2_Result_i[24]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[24]\,
      O => m2_fwd(24)
    );
\m3_M2_Result_i[25]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[25]\,
      O => m2_fwd(25)
    );
\m3_M2_Result_i[26]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[26]\,
      O => m2_fwd(26)
    );
\m3_M2_Result_i[27]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[27]\,
      O => m2_fwd(27)
    );
\m3_M2_Result_i[28]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[28]\,
      O => m2_fwd(28)
    );
\m3_M2_Result_i[29]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[29]\,
      O => m2_fwd(29)
    );
\m3_M2_Result_i[2]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[2]\,
      O => m2_fwd(2)
    );
\m3_M2_Result_i[30]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[30]\,
      O => m2_fwd(30)
    );
\m3_M2_Result_i[31]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[31]\,
      O => m2_fwd(31)
    );
\m3_M2_Result_i[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[3]\,
      O => m2_fwd(3)
    );
\m3_M2_Result_i[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[4]\,
      O => m2_fwd(4)
    );
\m3_M2_Result_i[5]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[5]\,
      O => m2_fwd(5)
    );
\m3_M2_Result_i[6]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[6]\,
      O => m2_fwd(6)
    );
\m3_M2_Result_i[7]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[7]\,
      O => m2_fwd(7)
    );
\m3_M2_Result_i[8]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[8]\,
      O => m2_fwd(8)
    );
\m3_M2_Result_i[9]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => \m2_M1_Result_i_reg_n_0_[9]\,
      O => m2_fwd(9)
    );
\m3_M2_Result_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(0),
      Q => m3_m2_result(0),
      R => sync_reset
    );
\m3_M2_Result_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(10),
      Q => m3_m2_result(10),
      R => sync_reset
    );
\m3_M2_Result_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(11),
      Q => m3_m2_result(11),
      R => sync_reset
    );
\m3_M2_Result_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(12),
      Q => m3_m2_result(12),
      R => sync_reset
    );
\m3_M2_Result_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(13),
      Q => m3_m2_result(13),
      R => sync_reset
    );
\m3_M2_Result_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(14),
      Q => m3_m2_result(14),
      R => sync_reset
    );
\m3_M2_Result_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(15),
      Q => m3_m2_result(15),
      R => sync_reset
    );
\m3_M2_Result_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(16),
      Q => m3_m2_result(16),
      R => sync_reset
    );
\m3_M2_Result_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(17),
      Q => m3_m2_result(17),
      R => sync_reset
    );
\m3_M2_Result_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(18),
      Q => m3_m2_result(18),
      R => sync_reset
    );
\m3_M2_Result_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(19),
      Q => m3_m2_result(19),
      R => sync_reset
    );
\m3_M2_Result_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(1),
      Q => m3_m2_result(1),
      R => sync_reset
    );
\m3_M2_Result_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(20),
      Q => m3_m2_result(20),
      R => sync_reset
    );
\m3_M2_Result_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(21),
      Q => m3_m2_result(21),
      R => sync_reset
    );
\m3_M2_Result_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(22),
      Q => m3_m2_result(22),
      R => sync_reset
    );
\m3_M2_Result_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(23),
      Q => m3_m2_result(23),
      R => sync_reset
    );
\m3_M2_Result_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(24),
      Q => m3_m2_result(24),
      R => sync_reset
    );
\m3_M2_Result_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(25),
      Q => m3_m2_result(25),
      R => sync_reset
    );
\m3_M2_Result_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(26),
      Q => m3_m2_result(26),
      R => sync_reset
    );
\m3_M2_Result_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(27),
      Q => m3_m2_result(27),
      R => sync_reset
    );
\m3_M2_Result_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(28),
      Q => m3_m2_result(28),
      R => sync_reset
    );
\m3_M2_Result_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(29),
      Q => m3_m2_result(29),
      R => sync_reset
    );
\m3_M2_Result_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(2),
      Q => m3_m2_result(2),
      R => sync_reset
    );
\m3_M2_Result_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(30),
      Q => m3_m2_result(30),
      R => sync_reset
    );
\m3_M2_Result_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(31),
      Q => m3_m2_result(31),
      R => sync_reset
    );
\m3_M2_Result_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(3),
      Q => m3_m2_result(3),
      R => sync_reset
    );
\m3_M2_Result_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(4),
      Q => m3_m2_result(4),
      R => sync_reset
    );
\m3_M2_Result_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(5),
      Q => m3_m2_result(5),
      R => sync_reset
    );
\m3_M2_Result_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(6),
      Q => m3_m2_result(6),
      R => sync_reset
    );
\m3_M2_Result_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(7),
      Q => m3_m2_result(7),
      R => sync_reset
    );
\m3_M2_Result_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(8),
      Q => m3_m2_result(8),
      R => sync_reset
    );
\m3_M2_Result_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m2_fwd(9),
      Q => m3_m2_result(9),
      R => sync_reset
    );
m3_m2_sel_res_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m2_m1_sel_res,
      I1 => m2_is_div_instr,
      O => m3_m2_sel_res0
    );
m3_m2_sel_res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun,
      D => m3_m2_sel_res0,
      Q => \^m3_m2_sel_res_reg_0\,
      R => sync_reset
    );
\trace_new_reg_value_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(31),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(15),
      I4 => wb_mem_result(0),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(0)
    );
\trace_new_reg_value_i[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(21),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(5),
      I4 => wb_mem_result(10),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(10)
    );
\trace_new_reg_value_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000088F888F8"
    )
        port map (
      I0 => wb_mem_result(11),
      I1 => wb_sel_mem_res_i,
      I2 => wb_databus_read_data(4),
      I3 => \trace_new_reg_value_i_reg[15]\,
      I4 => \trace_new_reg_value_i_reg[0]\(20),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(11)
    );
\trace_new_reg_value_i[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(19),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(3),
      I4 => wb_mem_result(12),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(12)
    );
\trace_new_reg_value_i[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(18),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(2),
      I4 => wb_mem_result(13),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(13)
    );
\trace_new_reg_value_i[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(17),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(1),
      I4 => wb_mem_result(14),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(14)
    );
\trace_new_reg_value_i[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(16),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(0),
      I4 => wb_mem_result(15),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(15)
    );
\trace_new_reg_value_i[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(15),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[16]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(16),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(16)
    );
\trace_new_reg_value_i[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(14),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[17]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(17),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(17)
    );
\trace_new_reg_value_i[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(13),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[18]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(18),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(18)
    );
\trace_new_reg_value_i[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000888F888F"
    )
        port map (
      I0 => wb_mem_result(19),
      I1 => wb_sel_mem_res_i,
      I2 => wb_byte_access,
      I3 => \trace_new_reg_value_i_reg[19]\,
      I4 => \trace_new_reg_value_i_reg[0]\(12),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(19)
    );
\trace_new_reg_value_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(30),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(14),
      I4 => wb_mem_result(1),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(1)
    );
\trace_new_reg_value_i[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(11),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[20]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(20),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(20)
    );
\trace_new_reg_value_i[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(10),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[21]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(21),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(21)
    );
\trace_new_reg_value_i[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000888F888F"
    )
        port map (
      I0 => wb_mem_result(22),
      I1 => wb_sel_mem_res_i,
      I2 => wb_byte_access,
      I3 => \trace_new_reg_value_i_reg[22]\,
      I4 => \trace_new_reg_value_i_reg[0]\(9),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(22)
    );
\trace_new_reg_value_i[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB888B888B888B"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(8),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[23]\,
      I3 => wb_byte_access,
      I4 => wb_mem_result(23),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(23)
    );
\trace_new_reg_value_i[24]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(7),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(24),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[24]\,
      O => \^wb_fwd\(24)
    );
\trace_new_reg_value_i[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(6),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(25),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[25]\,
      O => \^wb_fwd\(25)
    );
\trace_new_reg_value_i[26]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(5),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(26),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[26]\,
      O => \^wb_fwd\(26)
    );
\trace_new_reg_value_i[27]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(4),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(27),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[27]\,
      O => \^wb_fwd\(27)
    );
\trace_new_reg_value_i[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(3),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(28),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[28]\,
      O => \^wb_fwd\(28)
    );
\trace_new_reg_value_i[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(2),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(29),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[29]\,
      O => \^wb_fwd\(29)
    );
\trace_new_reg_value_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(29),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(13),
      I4 => wb_mem_result(2),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(2)
    );
\trace_new_reg_value_i[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(1),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(30),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[30]\,
      O => \^wb_fwd\(30)
    );
\trace_new_reg_value_i[31]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BBBBB888"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(0),
      I1 => wb_exception_taken,
      I2 => wb_mem_result(31),
      I3 => wb_sel_mem_res_i,
      I4 => \trace_new_reg_value_i_reg[31]\,
      O => \^wb_fwd\(31)
    );
\trace_new_reg_value_i[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(28),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(12),
      I4 => wb_mem_result(3),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(3)
    );
\trace_new_reg_value_i[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(27),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(11),
      I4 => wb_mem_result(4),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(4)
    );
\trace_new_reg_value_i[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB8B888B888B88"
    )
        port map (
      I0 => \trace_new_reg_value_i_reg[0]\(26),
      I1 => wb_exception_taken,
      I2 => \trace_new_reg_value_i_reg[15]\,
      I3 => wb_databus_read_data(10),
      I4 => wb_mem_result(5),
      I5 => wb_sel_mem_res_i,
      O => \^wb_fwd\(5)
    );
\trace_new_reg_value_i[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000088F888F8"
    )
        port map (
      I0 => wb_mem_result(6),
      I1 => wb_sel_mem_res_i,
      I2 => wb_databus_read_data(9),
      I3 => \trace_new_reg_value_i_reg[15]\,
      I4 => \trace_new_reg_value_i_reg[0]\(25),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(6)
    );
\trace_new_reg_value_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000088F888F8"
    )
        port map (
      I0 => wb_mem_result(7),
      I1 => wb_sel_mem_res_i,
      I2 => wb_databus_read_data(8),
      I3 => \trace_new_reg_value_i_reg[15]\,
      I4 => \trace_new_reg_value_i_reg[0]\(24),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(7)
    );
\trace_new_reg_value_i[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000088F888F8"
    )
        port map (
      I0 => wb_mem_result(8),
      I1 => wb_sel_mem_res_i,
      I2 => wb_databus_read_data(7),
      I3 => \trace_new_reg_value_i_reg[15]\,
      I4 => \trace_new_reg_value_i_reg[0]\(23),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(8)
    );
\trace_new_reg_value_i[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000088F888F8"
    )
        port map (
      I0 => wb_mem_result(9),
      I1 => wb_sel_mem_res_i,
      I2 => wb_databus_read_data(6),
      I3 => \trace_new_reg_value_i_reg[15]\,
      I4 => \trace_new_reg_value_i_reg[0]\(22),
      I5 => wb_exception_taken,
      O => \^wb_fwd\(9)
    );
\wb_Mem_Result_i[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(31),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(0),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[0]_i_1_n_0\
    );
\wb_Mem_Result_i[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(21),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(10),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[10]_i_1_n_0\
    );
\wb_Mem_Result_i[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(20),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(11),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[11]_i_1_n_0\
    );
\wb_Mem_Result_i[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(19),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(12),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[12]_i_1_n_0\
    );
\wb_Mem_Result_i[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(18),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(13),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[13]_i_1_n_0\
    );
\wb_Mem_Result_i[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(17),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(14),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[14]_i_1_n_0\
    );
\wb_Mem_Result_i[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(16),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(15),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[15]_i_1_n_0\
    );
\wb_Mem_Result_i[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(15),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(16),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => m3_fwd(16)
    );
\wb_Mem_Result_i[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(14),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(17),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[17]_i_1_n_0\
    );
\wb_Mem_Result_i[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(13),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(18),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[18]_i_1_n_0\
    );
\wb_Mem_Result_i[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(12),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(19),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[19]_i_1_n_0\
    );
\wb_Mem_Result_i[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(30),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(1),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[1]_i_1_n_0\
    );
\wb_Mem_Result_i[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(11),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(20),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[20]_i_1_n_0\
    );
\wb_Mem_Result_i[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(10),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(21),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[21]_i_1_n_0\
    );
\wb_Mem_Result_i[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(9),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(22),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[22]_i_1_n_0\
    );
\wb_Mem_Result_i[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(8),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(23),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[23]_i_1_n_0\
    );
\wb_Mem_Result_i[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(7),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(24),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[24]_i_1_n_0\
    );
\wb_Mem_Result_i[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(6),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(25),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => m3_fwd(25)
    );
\wb_Mem_Result_i[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(5),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(26),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[26]_i_1_n_0\
    );
\wb_Mem_Result_i[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(4),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(27),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[27]_i_1_n_0\
    );
\wb_Mem_Result_i[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(3),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(28),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[28]_i_1_n_0\
    );
\wb_Mem_Result_i[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(2),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(29),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[29]_i_1_n_0\
    );
\wb_Mem_Result_i[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(29),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(2),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[2]_i_1_n_0\
    );
\wb_Mem_Result_i[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(1),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(30),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[30]_i_1_n_0\
    );
\wb_Mem_Result_i[31]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(0),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(31),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[31]_i_1_n_0\
    );
\wb_Mem_Result_i[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(28),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(3),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[3]_i_1_n_0\
    );
\wb_Mem_Result_i[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(27),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(4),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[4]_i_1_n_0\
    );
\wb_Mem_Result_i[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(26),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(5),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[5]_i_1_n_0\
    );
\wb_Mem_Result_i[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(25),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(6),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[6]_i_1_n_0\
    );
\wb_Mem_Result_i[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(24),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(7),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[7]_i_1_n_0\
    );
\wb_Mem_Result_i[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(23),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(8),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[8]_i_1_n_0\
    );
\wb_Mem_Result_i[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F888"
    )
        port map (
      I0 => Q(22),
      I1 => m3_sel_div_res,
      I2 => m3_m2_result(9),
      I3 => \^m3_m2_sel_res_reg_0\,
      O => \wb_Mem_Result_i[9]_i_1_n_0\
    );
\wb_Mem_Result_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[0]_i_1_n_0\,
      Q => wb_mem_result(0),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[10]_i_1_n_0\,
      Q => wb_mem_result(10),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[11]_i_1_n_0\,
      Q => wb_mem_result(11),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[12]_i_1_n_0\,
      Q => wb_mem_result(12),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[13]_i_1_n_0\,
      Q => wb_mem_result(13),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[14]_i_1_n_0\,
      Q => wb_mem_result(14),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[15]_i_1_n_0\,
      Q => wb_mem_result(15),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_fwd(16),
      Q => wb_mem_result(16),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[17]_i_1_n_0\,
      Q => wb_mem_result(17),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[18]_i_1_n_0\,
      Q => wb_mem_result(18),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[19]_i_1_n_0\,
      Q => wb_mem_result(19),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[1]_i_1_n_0\,
      Q => wb_mem_result(1),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[20]_i_1_n_0\,
      Q => wb_mem_result(20),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[21]_i_1_n_0\,
      Q => wb_mem_result(21),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[22]_i_1_n_0\,
      Q => wb_mem_result(22),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[23]_i_1_n_0\,
      Q => wb_mem_result(23),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[24]_i_1_n_0\,
      Q => wb_mem_result(24),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => m3_fwd(25),
      Q => wb_mem_result(25),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[26]_i_1_n_0\,
      Q => wb_mem_result(26),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[27]_i_1_n_0\,
      Q => wb_mem_result(27),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[28]_i_1_n_0\,
      Q => wb_mem_result(28),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[29]_i_1_n_0\,
      Q => wb_mem_result(29),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[2]_i_1_n_0\,
      Q => wb_mem_result(2),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[30]_i_1_n_0\,
      Q => wb_mem_result(30),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[31]_i_1_n_0\,
      Q => wb_mem_result(31),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[3]_i_1_n_0\,
      Q => wb_mem_result(3),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[4]_i_1_n_0\,
      Q => wb_mem_result(4),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[5]_i_1_n_0\,
      Q => wb_mem_result(5),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[6]_i_1_n_0\,
      Q => wb_mem_result(6),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[7]_i_1_n_0\,
      Q => wb_mem_result(7),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[8]_i_1_n_0\,
      Q => wb_mem_result(8),
      R => sync_reset
    );
\wb_Mem_Result_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => \wb_Mem_Result_i[9]_i_1_n_0\,
      Q => wb_mem_result(9),
      R => sync_reset
    );
wb_m3_sel_res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun,
      D => wb_m3_sel_res0,
      Q => wb_sel_mem_res_i,
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Div_Unit_ff is
  port (
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    DI : out STD_LOGIC_VECTOR ( 0 to 0 );
    O : out STD_LOGIC_VECTOR ( 0 to 0 );
    last_cycle_reg_0 : out STD_LOGIC;
    div_iterations_early_reg_0 : out STD_LOGIC;
    \floating_hold_div_by_zero__0\ : out STD_LOGIC;
    m3_div_by_zero : out STD_LOGIC;
    m3_div_stall_i_reg_0 : out STD_LOGIC;
    negative_operands : out STD_LOGIC;
    floating_hold_div_overflow_reg_0 : out STD_LOGIC;
    m3_div_overflow_i_reg_0 : out STD_LOGIC;
    make_result_neg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    m3_div_stall_i_reg_1 : out STD_LOGIC;
    m3_div_overflow_i_reg_1 : out STD_LOGIC;
    negative_operands_reg_0 : out STD_LOGIC;
    M3_Div_By_Zero_reg_0 : out STD_LOGIC;
    m3_last_cycle_reg_0 : out STD_LOGIC;
    \cnt_shifts_reg[0]_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.D_Handle[0].D_Sel_reg\ : in STD_LOGIC;
    \Q_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_start_div : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    div_iterations_early : in STD_LOGIC;
    floating_hold_div_by_zero_reg_0 : in STD_LOGIC;
    M3_Div_By_Zero_reg_1 : in STD_LOGIC;
    m3_div_stall_i_reg_2 : in STD_LOGIC;
    negative_operands_reg_1 : in STD_LOGIC;
    floating_hold_div_overflow_reg_1 : in STD_LOGIC;
    m3_div_overflow_i_reg_2 : in STD_LOGIC;
    next_sub_reg_0 : in STD_LOGIC;
    make_result_neg_reg_0 : in STD_LOGIC;
    WB_Div_Zero_Overflow_reg : in STD_LOGIC;
    m3_div_overflow_i_reg_3 : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m3_last_cycle_reg_1 : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m3_sel_div_res : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    S : in STD_LOGIC;
    CI : in STD_LOGIC;
    \Using_FPGA.D_reg[30]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[29]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[28]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[27]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[26]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[25]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[24]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[23]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[22]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[21]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[20]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[19]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[18]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[17]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[16]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[15]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[14]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[13]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[12]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[11]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[10]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[9]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[8]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[7]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[6]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[5]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[4]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[3]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[2]_0\ : in STD_LOGIC;
    \Using_FPGA.D_reg[1]_0\ : in STD_LOGIC;
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \R_reg[32]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Div_Unit_ff : entity is "Div_Unit_ff";
end microblaze_microblaze_0_0_Div_Unit_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Div_Unit_ff is
  signal D : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^di\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^e\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal LO : STD_LOGIC;
  signal New_Q_Carry : STD_LOGIC_VECTOR ( 32 to 32 );
  signal New_Q_Sel_0 : STD_LOGIC;
  signal New_Q_Sel_1 : STD_LOGIC;
  signal New_Q_Sel_10 : STD_LOGIC;
  signal New_Q_Sel_11 : STD_LOGIC;
  signal New_Q_Sel_12 : STD_LOGIC;
  signal New_Q_Sel_13 : STD_LOGIC;
  signal New_Q_Sel_14 : STD_LOGIC;
  signal New_Q_Sel_15 : STD_LOGIC;
  signal New_Q_Sel_16 : STD_LOGIC;
  signal New_Q_Sel_17 : STD_LOGIC;
  signal New_Q_Sel_18 : STD_LOGIC;
  signal New_Q_Sel_19 : STD_LOGIC;
  signal New_Q_Sel_2 : STD_LOGIC;
  signal New_Q_Sel_20 : STD_LOGIC;
  signal New_Q_Sel_21 : STD_LOGIC;
  signal New_Q_Sel_22 : STD_LOGIC;
  signal New_Q_Sel_23 : STD_LOGIC;
  signal New_Q_Sel_24 : STD_LOGIC;
  signal New_Q_Sel_25 : STD_LOGIC;
  signal New_Q_Sel_26 : STD_LOGIC;
  signal New_Q_Sel_27 : STD_LOGIC;
  signal New_Q_Sel_28 : STD_LOGIC;
  signal New_Q_Sel_29 : STD_LOGIC;
  signal New_Q_Sel_3 : STD_LOGIC;
  signal New_Q_Sel_30 : STD_LOGIC;
  signal New_Q_Sel_31 : STD_LOGIC;
  signal New_Q_Sel_4 : STD_LOGIC;
  signal New_Q_Sel_5 : STD_LOGIC;
  signal New_Q_Sel_6 : STD_LOGIC;
  signal New_Q_Sel_7 : STD_LOGIC;
  signal New_Q_Sel_8 : STD_LOGIC;
  signal New_Q_Sel_9 : STD_LOGIC;
  signal \^o\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal O33_out : STD_LOGIC;
  signal O34_out : STD_LOGIC;
  signal O35_out : STD_LOGIC;
  signal O36_out : STD_LOGIC;
  signal O37_out : STD_LOGIC;
  signal O38_out : STD_LOGIC;
  signal O39_out : STD_LOGIC;
  signal O40_out : STD_LOGIC;
  signal O41_out : STD_LOGIC;
  signal O42_out : STD_LOGIC;
  signal O43_out : STD_LOGIC;
  signal O44_out : STD_LOGIC;
  signal O45_out : STD_LOGIC;
  signal O46_out : STD_LOGIC;
  signal O47_out : STD_LOGIC;
  signal O48_out : STD_LOGIC;
  signal O49_out : STD_LOGIC;
  signal O50_out : STD_LOGIC;
  signal O51_out : STD_LOGIC;
  signal O52_out : STD_LOGIC;
  signal O53_out : STD_LOGIC;
  signal O54_out : STD_LOGIC;
  signal O55_out : STD_LOGIC;
  signal O56_out : STD_LOGIC;
  signal O57_out : STD_LOGIC;
  signal O58_out : STD_LOGIC;
  signal O59_out : STD_LOGIC;
  signal O60_out : STD_LOGIC;
  signal O61_out : STD_LOGIC;
  signal O62_out : STD_LOGIC;
  signal O_0 : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Q[32]_i_1_n_0\ : STD_LOGIC;
  signal Q_1 : STD_LOGIC_VECTOR ( 32 to 32 );
  signal R : STD_LOGIC_VECTOR ( 0 to 32 );
  signal \R1_carry__0_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__0_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__0_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__0_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__0_n_0\ : STD_LOGIC;
  signal \R1_carry__0_n_1\ : STD_LOGIC;
  signal \R1_carry__0_n_2\ : STD_LOGIC;
  signal \R1_carry__0_n_3\ : STD_LOGIC;
  signal \R1_carry__1_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__1_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__1_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__1_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__1_n_0\ : STD_LOGIC;
  signal \R1_carry__1_n_1\ : STD_LOGIC;
  signal \R1_carry__1_n_2\ : STD_LOGIC;
  signal \R1_carry__1_n_3\ : STD_LOGIC;
  signal \R1_carry__2_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__2_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__2_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__2_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__2_n_0\ : STD_LOGIC;
  signal \R1_carry__2_n_1\ : STD_LOGIC;
  signal \R1_carry__2_n_2\ : STD_LOGIC;
  signal \R1_carry__2_n_3\ : STD_LOGIC;
  signal \R1_carry__3_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__3_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__3_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__3_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__3_n_0\ : STD_LOGIC;
  signal \R1_carry__3_n_1\ : STD_LOGIC;
  signal \R1_carry__3_n_2\ : STD_LOGIC;
  signal \R1_carry__3_n_3\ : STD_LOGIC;
  signal \R1_carry__4_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__4_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__4_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__4_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__4_n_0\ : STD_LOGIC;
  signal \R1_carry__4_n_1\ : STD_LOGIC;
  signal \R1_carry__4_n_2\ : STD_LOGIC;
  signal \R1_carry__4_n_3\ : STD_LOGIC;
  signal \R1_carry__5_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__5_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__5_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__5_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__5_n_0\ : STD_LOGIC;
  signal \R1_carry__5_n_1\ : STD_LOGIC;
  signal \R1_carry__5_n_2\ : STD_LOGIC;
  signal \R1_carry__5_n_3\ : STD_LOGIC;
  signal \R1_carry__6_i_1_n_0\ : STD_LOGIC;
  signal \R1_carry__6_i_2_n_0\ : STD_LOGIC;
  signal \R1_carry__6_i_3_n_0\ : STD_LOGIC;
  signal \R1_carry__6_i_4_n_0\ : STD_LOGIC;
  signal \R1_carry__6_n_0\ : STD_LOGIC;
  signal \R1_carry__6_n_1\ : STD_LOGIC;
  signal \R1_carry__6_n_2\ : STD_LOGIC;
  signal \R1_carry__6_n_3\ : STD_LOGIC;
  signal \R1_carry__7_i_1_n_0\ : STD_LOGIC;
  signal R1_carry_i_1_n_0 : STD_LOGIC;
  signal R1_carry_i_2_n_0 : STD_LOGIC;
  signal R1_carry_i_3_n_0 : STD_LOGIC;
  signal R1_carry_i_4_n_0 : STD_LOGIC;
  signal R1_carry_n_0 : STD_LOGIC;
  signal R1_carry_n_1 : STD_LOGIC;
  signal R1_carry_n_2 : STD_LOGIC;
  signal R1_carry_n_3 : STD_LOGIC;
  signal \Using_FPGA.D_Handle[0].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[10].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[11].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[12].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[13].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[14].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[15].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[16].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[17].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[18].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[19].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[1].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[20].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[21].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[22].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[23].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[24].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[25].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[26].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[27].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[28].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[29].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[2].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[30].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[3].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[4].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[5].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[6].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[7].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[8].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[9].MUXCY_XOR_I_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_2\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_0\ : STD_LOGIC;
  signal \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_1\ : STD_LOGIC;
  signal \cnt_shifts_reg[1]_srl31_n_0\ : STD_LOGIC;
  signal div_iterations_early_i_1_n_0 : STD_LOGIC;
  signal \^div_iterations_early_reg_0\ : STD_LOGIC;
  signal floating_div_aborting : STD_LOGIC;
  signal floating_div_aborting_i_1_n_0 : STD_LOGIC;
  signal \^floating_hold_div_overflow_reg_0\ : STD_LOGIC;
  signal last_cycle_i_1_n_0 : STD_LOGIC;
  signal \^last_cycle_reg_0\ : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_102 : STD_LOGIC;
  signal lopt_103 : STD_LOGIC;
  signal lopt_104 : STD_LOGIC;
  signal lopt_105 : STD_LOGIC;
  signal lopt_106 : STD_LOGIC;
  signal lopt_107 : STD_LOGIC;
  signal lopt_108 : STD_LOGIC;
  signal lopt_109 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_110 : STD_LOGIC;
  signal lopt_111 : STD_LOGIC;
  signal lopt_112 : STD_LOGIC;
  signal lopt_113 : STD_LOGIC;
  signal lopt_114 : STD_LOGIC;
  signal lopt_115 : STD_LOGIC;
  signal lopt_116 : STD_LOGIC;
  signal lopt_117 : STD_LOGIC;
  signal lopt_118 : STD_LOGIC;
  signal lopt_119 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_120 : STD_LOGIC;
  signal lopt_121 : STD_LOGIC;
  signal lopt_122 : STD_LOGIC;
  signal lopt_123 : STD_LOGIC;
  signal lopt_124 : STD_LOGIC;
  signal lopt_125 : STD_LOGIC;
  signal lopt_126 : STD_LOGIC;
  signal lopt_127 : STD_LOGIC;
  signal lopt_128 : STD_LOGIC;
  signal lopt_129 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_130 : STD_LOGIC;
  signal lopt_131 : STD_LOGIC;
  signal lopt_132 : STD_LOGIC;
  signal lopt_133 : STD_LOGIC;
  signal lopt_134 : STD_LOGIC;
  signal lopt_135 : STD_LOGIC;
  signal lopt_136 : STD_LOGIC;
  signal lopt_137 : STD_LOGIC;
  signal lopt_138 : STD_LOGIC;
  signal lopt_139 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
  signal \^m3_div_by_zero\ : STD_LOGIC;
  signal \^m3_div_overflow_i_reg_0\ : STD_LOGIC;
  signal \^m3_div_stall_i_reg_0\ : STD_LOGIC;
  signal m3_last_cycle_i_1_n_0 : STD_LOGIC;
  signal \^m3_last_cycle_reg_0\ : STD_LOGIC;
  signal \^make_result_neg\ : STD_LOGIC;
  signal \^negative_operands\ : STD_LOGIC;
  signal p_0_in12_in : STD_LOGIC;
  signal p_0_in15_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC_VECTOR ( 32 downto 1 );
  signal \NLW_R1_carry__7_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \NLW_R1_carry__7_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal \NLW_cnt_shifts_reg[1]_srl31_Q31_UNCONNECTED\ : STD_LOGIC;
  attribute METHODOLOGY_DRC_VIOS : string;
  attribute METHODOLOGY_DRC_VIOS of R1_carry : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__0\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__1\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__2\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__3\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__4\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__5\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__6\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute METHODOLOGY_DRC_VIOS of \R1_carry__7\ : label is "{SYNTH-8 {cell *THIS*}}";
  attribute SHREG_EXTRACT : string;
  attribute SHREG_EXTRACT of \cnt_shifts_reg[0]\ : label is "yes";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \cnt_shifts_reg[1]_srl31\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DATA_FLOW_I1/Using_Div_Unit.Div_Unit_I1/cnt_shifts_reg ";
  attribute srl_name : string;
  attribute srl_name of \cnt_shifts_reg[1]_srl31\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DATA_FLOW_I1/Using_Div_Unit.Div_Unit_I1/cnt_shifts_reg[1]_srl31 ";
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of floating_div_aborting_i_1 : label is "soft_lutpair133";
  attribute SOFT_HLUTNM of last_cycle_i_1 : label is "soft_lutpair133";
begin
  DI(0) <= \^di\(0);
  E(0) <= \^e\(0);
  O(0) <= \^o\(0);
  Q(31 downto 0) <= \^q\(31 downto 0);
  div_iterations_early_reg_0 <= \^div_iterations_early_reg_0\;
  floating_hold_div_overflow_reg_0 <= \^floating_hold_div_overflow_reg_0\;
  last_cycle_reg_0 <= \^last_cycle_reg_0\;
  m3_div_by_zero <= \^m3_div_by_zero\;
  m3_div_overflow_i_reg_0 <= \^m3_div_overflow_i_reg_0\;
  m3_div_stall_i_reg_0 <= \^m3_div_stall_i_reg_0\;
  m3_last_cycle_reg_0 <= \^m3_last_cycle_reg_0\;
  make_result_neg <= \^make_result_neg\;
  negative_operands <= \^negative_operands\;
M3_Div_By_Zero_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M3_Div_By_Zero_reg_1,
      Q => \^m3_div_by_zero\,
      R => '0'
    );
\Q[32]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^e\(0),
      I1 => \^o\(0),
      O => \Q[32]_i_1_n_0\
    );
\Q_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => p_0_in12_in,
      Q => \^q\(31),
      R => SR(0)
    );
\Q_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(21),
      R => SR(0)
    );
\Q_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(20),
      R => SR(0)
    );
\Q_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(19),
      R => SR(0)
    );
\Q_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(18),
      R => SR(0)
    );
\Q_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(17),
      R => SR(0)
    );
\Q_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(16),
      R => SR(0)
    );
\Q_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(15),
      R => SR(0)
    );
\Q_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(14),
      R => SR(0)
    );
\Q_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(13),
      R => SR(0)
    );
\Q_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(12),
      R => SR(0)
    );
\Q_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(30),
      R => SR(0)
    );
\Q_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(11),
      R => SR(0)
    );
\Q_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(10),
      R => SR(0)
    );
\Q_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(9),
      R => SR(0)
    );
\Q_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(8),
      R => SR(0)
    );
\Q_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(7),
      R => SR(0)
    );
\Q_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(6),
      R => SR(0)
    );
\Q_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(5),
      R => SR(0)
    );
\Q_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(4),
      R => SR(0)
    );
\Q_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(3),
      R => SR(0)
    );
\Q_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(2),
      R => SR(0)
    );
\Q_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(29),
      R => SR(0)
    );
\Q_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(1),
      R => SR(0)
    );
\Q_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_2\,
      Q => \^q\(0),
      R => SR(0)
    );
\Q_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Q[32]_i_1_n_0\,
      Q => Q_1(32),
      R => SR(0)
    );
\Q_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(28),
      R => SR(0)
    );
\Q_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(27),
      R => SR(0)
    );
\Q_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(26),
      R => SR(0)
    );
\Q_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(25),
      R => SR(0)
    );
\Q_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(24),
      R => SR(0)
    );
\Q_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(23),
      R => SR(0)
    );
\Q_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_1\,
      Q => \^q\(22),
      R => SR(0)
    );
R1_carry: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => R1_carry_n_0,
      CO(2) => R1_carry_n_1,
      CO(1) => R1_carry_n_2,
      CO(0) => R1_carry_n_3,
      CYINIT => R(32),
      DI(3) => R(29),
      DI(2) => R(30),
      DI(1) => R(31),
      DI(0) => \^di\(0),
      O(3 downto 0) => p_2_in(4 downto 1),
      S(3) => R1_carry_i_1_n_0,
      S(2) => R1_carry_i_2_n_0,
      S(1) => R1_carry_i_3_n_0,
      S(0) => R1_carry_i_4_n_0
    );
\R1_carry__0\: unisim.vcomponents.CARRY4
     port map (
      CI => R1_carry_n_0,
      CO(3) => \R1_carry__0_n_0\,
      CO(2) => \R1_carry__0_n_1\,
      CO(1) => \R1_carry__0_n_2\,
      CO(0) => \R1_carry__0_n_3\,
      CYINIT => '0',
      DI(3) => R(25),
      DI(2) => R(26),
      DI(1) => R(27),
      DI(0) => R(28),
      O(3 downto 0) => p_2_in(8 downto 5),
      S(3) => \R1_carry__0_i_1_n_0\,
      S(2) => \R1_carry__0_i_2_n_0\,
      S(1) => \R1_carry__0_i_3_n_0\,
      S(0) => \R1_carry__0_i_4_n_0\
    );
\R1_carry__0_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(24),
      I1 => \^di\(0),
      I2 => R(25),
      O => \R1_carry__0_i_1_n_0\
    );
\R1_carry__0_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(25),
      I1 => \^di\(0),
      I2 => R(26),
      O => \R1_carry__0_i_2_n_0\
    );
\R1_carry__0_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(26),
      I1 => \^di\(0),
      I2 => R(27),
      O => \R1_carry__0_i_3_n_0\
    );
\R1_carry__0_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(27),
      I1 => \^di\(0),
      I2 => R(28),
      O => \R1_carry__0_i_4_n_0\
    );
\R1_carry__1\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__0_n_0\,
      CO(3) => \R1_carry__1_n_0\,
      CO(2) => \R1_carry__1_n_1\,
      CO(1) => \R1_carry__1_n_2\,
      CO(0) => \R1_carry__1_n_3\,
      CYINIT => '0',
      DI(3) => R(21),
      DI(2) => R(22),
      DI(1) => R(23),
      DI(0) => R(24),
      O(3 downto 0) => p_2_in(12 downto 9),
      S(3) => \R1_carry__1_i_1_n_0\,
      S(2) => \R1_carry__1_i_2_n_0\,
      S(1) => \R1_carry__1_i_3_n_0\,
      S(0) => \R1_carry__1_i_4_n_0\
    );
\R1_carry__1_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(20),
      I1 => \^di\(0),
      I2 => R(21),
      O => \R1_carry__1_i_1_n_0\
    );
\R1_carry__1_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(21),
      I1 => \^di\(0),
      I2 => R(22),
      O => \R1_carry__1_i_2_n_0\
    );
\R1_carry__1_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(22),
      I1 => \^di\(0),
      I2 => R(23),
      O => \R1_carry__1_i_3_n_0\
    );
\R1_carry__1_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(23),
      I1 => \^di\(0),
      I2 => R(24),
      O => \R1_carry__1_i_4_n_0\
    );
\R1_carry__2\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__1_n_0\,
      CO(3) => \R1_carry__2_n_0\,
      CO(2) => \R1_carry__2_n_1\,
      CO(1) => \R1_carry__2_n_2\,
      CO(0) => \R1_carry__2_n_3\,
      CYINIT => '0',
      DI(3) => R(17),
      DI(2) => R(18),
      DI(1) => R(19),
      DI(0) => R(20),
      O(3 downto 0) => p_2_in(16 downto 13),
      S(3) => \R1_carry__2_i_1_n_0\,
      S(2) => \R1_carry__2_i_2_n_0\,
      S(1) => \R1_carry__2_i_3_n_0\,
      S(0) => \R1_carry__2_i_4_n_0\
    );
\R1_carry__2_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(16),
      I1 => \^di\(0),
      I2 => R(17),
      O => \R1_carry__2_i_1_n_0\
    );
\R1_carry__2_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(17),
      I1 => \^di\(0),
      I2 => R(18),
      O => \R1_carry__2_i_2_n_0\
    );
\R1_carry__2_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(18),
      I1 => \^di\(0),
      I2 => R(19),
      O => \R1_carry__2_i_3_n_0\
    );
\R1_carry__2_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(19),
      I1 => \^di\(0),
      I2 => R(20),
      O => \R1_carry__2_i_4_n_0\
    );
\R1_carry__3\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__2_n_0\,
      CO(3) => \R1_carry__3_n_0\,
      CO(2) => \R1_carry__3_n_1\,
      CO(1) => \R1_carry__3_n_2\,
      CO(0) => \R1_carry__3_n_3\,
      CYINIT => '0',
      DI(3) => R(13),
      DI(2) => R(14),
      DI(1) => R(15),
      DI(0) => R(16),
      O(3 downto 0) => p_2_in(20 downto 17),
      S(3) => \R1_carry__3_i_1_n_0\,
      S(2) => \R1_carry__3_i_2_n_0\,
      S(1) => \R1_carry__3_i_3_n_0\,
      S(0) => \R1_carry__3_i_4_n_0\
    );
\R1_carry__3_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(12),
      I1 => \^di\(0),
      I2 => R(13),
      O => \R1_carry__3_i_1_n_0\
    );
\R1_carry__3_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(13),
      I1 => \^di\(0),
      I2 => R(14),
      O => \R1_carry__3_i_2_n_0\
    );
\R1_carry__3_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(14),
      I1 => \^di\(0),
      I2 => R(15),
      O => \R1_carry__3_i_3_n_0\
    );
\R1_carry__3_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(15),
      I1 => \^di\(0),
      I2 => R(16),
      O => \R1_carry__3_i_4_n_0\
    );
\R1_carry__4\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__3_n_0\,
      CO(3) => \R1_carry__4_n_0\,
      CO(2) => \R1_carry__4_n_1\,
      CO(1) => \R1_carry__4_n_2\,
      CO(0) => \R1_carry__4_n_3\,
      CYINIT => '0',
      DI(3) => R(9),
      DI(2) => R(10),
      DI(1) => R(11),
      DI(0) => R(12),
      O(3 downto 0) => p_2_in(24 downto 21),
      S(3) => \R1_carry__4_i_1_n_0\,
      S(2) => \R1_carry__4_i_2_n_0\,
      S(1) => \R1_carry__4_i_3_n_0\,
      S(0) => \R1_carry__4_i_4_n_0\
    );
\R1_carry__4_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(8),
      I1 => \^di\(0),
      I2 => R(9),
      O => \R1_carry__4_i_1_n_0\
    );
\R1_carry__4_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(9),
      I1 => \^di\(0),
      I2 => R(10),
      O => \R1_carry__4_i_2_n_0\
    );
\R1_carry__4_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(10),
      I1 => \^di\(0),
      I2 => R(11),
      O => \R1_carry__4_i_3_n_0\
    );
\R1_carry__4_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(11),
      I1 => \^di\(0),
      I2 => R(12),
      O => \R1_carry__4_i_4_n_0\
    );
\R1_carry__5\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__4_n_0\,
      CO(3) => \R1_carry__5_n_0\,
      CO(2) => \R1_carry__5_n_1\,
      CO(1) => \R1_carry__5_n_2\,
      CO(0) => \R1_carry__5_n_3\,
      CYINIT => '0',
      DI(3) => R(5),
      DI(2) => R(6),
      DI(1) => R(7),
      DI(0) => R(8),
      O(3 downto 0) => p_2_in(28 downto 25),
      S(3) => \R1_carry__5_i_1_n_0\,
      S(2) => \R1_carry__5_i_2_n_0\,
      S(1) => \R1_carry__5_i_3_n_0\,
      S(0) => \R1_carry__5_i_4_n_0\
    );
\R1_carry__5_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(4),
      I1 => \^di\(0),
      I2 => R(5),
      O => \R1_carry__5_i_1_n_0\
    );
\R1_carry__5_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(5),
      I1 => \^di\(0),
      I2 => R(6),
      O => \R1_carry__5_i_2_n_0\
    );
\R1_carry__5_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(6),
      I1 => \^di\(0),
      I2 => R(7),
      O => \R1_carry__5_i_3_n_0\
    );
\R1_carry__5_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(7),
      I1 => \^di\(0),
      I2 => R(8),
      O => \R1_carry__5_i_4_n_0\
    );
\R1_carry__6\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__5_n_0\,
      CO(3) => \R1_carry__6_n_0\,
      CO(2) => \R1_carry__6_n_1\,
      CO(1) => \R1_carry__6_n_2\,
      CO(0) => \R1_carry__6_n_3\,
      CYINIT => '0',
      DI(3) => R(1),
      DI(2) => R(2),
      DI(1) => R(3),
      DI(0) => R(4),
      O(3 downto 0) => p_2_in(32 downto 29),
      S(3) => \R1_carry__6_i_1_n_0\,
      S(2) => \R1_carry__6_i_2_n_0\,
      S(1) => \R1_carry__6_i_3_n_0\,
      S(0) => \R1_carry__6_i_4_n_0\
    );
\R1_carry__6_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(0),
      I1 => \^di\(0),
      I2 => R(1),
      O => \R1_carry__6_i_1_n_0\
    );
\R1_carry__6_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(1),
      I1 => \^di\(0),
      I2 => R(2),
      O => \R1_carry__6_i_2_n_0\
    );
\R1_carry__6_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(2),
      I1 => \^di\(0),
      I2 => R(3),
      O => \R1_carry__6_i_3_n_0\
    );
\R1_carry__6_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(3),
      I1 => \^di\(0),
      I2 => R(4),
      O => \R1_carry__6_i_4_n_0\
    );
\R1_carry__7\: unisim.vcomponents.CARRY4
     port map (
      CI => \R1_carry__6_n_0\,
      CO(3 downto 0) => \NLW_R1_carry__7_CO_UNCONNECTED\(3 downto 0),
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 1) => \NLW_R1_carry__7_O_UNCONNECTED\(3 downto 1),
      O(0) => \^o\(0),
      S(3 downto 1) => B"000",
      S(0) => \R1_carry__7_i_1_n_0\
    );
\R1_carry__7_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"6"
    )
        port map (
      I0 => \^di\(0),
      I1 => R(0),
      O => \R1_carry__7_i_1_n_0\
    );
R1_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(28),
      I1 => \^di\(0),
      I2 => R(29),
      O => R1_carry_i_1_n_0
    );
R1_carry_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(29),
      I1 => \^di\(0),
      I2 => R(30),
      O => R1_carry_i_2_n_0
    );
R1_carry_i_3: unisim.vcomponents.LUT3
    generic map(
      INIT => X"96"
    )
        port map (
      I0 => D(30),
      I1 => \^di\(0),
      I2 => R(31),
      O => R1_carry_i_3_n_0
    );
R1_carry_i_4: unisim.vcomponents.LUT1
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => D(31),
      O => R1_carry_i_4_n_0
    );
\R_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(32),
      Q => R(0),
      R => ex_start_div
    );
\R_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(22),
      Q => R(10),
      R => ex_start_div
    );
\R_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(21),
      Q => R(11),
      R => ex_start_div
    );
\R_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(20),
      Q => R(12),
      R => ex_start_div
    );
\R_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(19),
      Q => R(13),
      R => ex_start_div
    );
\R_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(18),
      Q => R(14),
      R => ex_start_div
    );
\R_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(17),
      Q => R(15),
      R => ex_start_div
    );
\R_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(16),
      Q => R(16),
      R => ex_start_div
    );
\R_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(15),
      Q => R(17),
      R => ex_start_div
    );
\R_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(14),
      Q => R(18),
      R => ex_start_div
    );
\R_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(13),
      Q => R(19),
      R => ex_start_div
    );
\R_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(31),
      Q => R(1),
      R => ex_start_div
    );
\R_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(12),
      Q => R(20),
      R => ex_start_div
    );
\R_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(11),
      Q => R(21),
      R => ex_start_div
    );
\R_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(10),
      Q => R(22),
      R => ex_start_div
    );
\R_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(9),
      Q => R(23),
      R => ex_start_div
    );
\R_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(8),
      Q => R(24),
      R => ex_start_div
    );
\R_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(7),
      Q => R(25),
      R => ex_start_div
    );
\R_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(6),
      Q => R(26),
      R => ex_start_div
    );
\R_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(5),
      Q => R(27),
      R => ex_start_div
    );
\R_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(4),
      Q => R(28),
      R => ex_start_div
    );
\R_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(3),
      Q => R(29),
      R => ex_start_div
    );
\R_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(30),
      Q => R(2),
      R => ex_start_div
    );
\R_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(2),
      Q => R(30),
      R => ex_start_div
    );
\R_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(1),
      Q => R(31),
      R => ex_start_div
    );
\R_reg[32]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \R_reg[32]_0\(0),
      D => p_0_in12_in,
      Q => R(32),
      R => '0'
    );
\R_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(29),
      Q => R(3),
      R => ex_start_div
    );
\R_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(28),
      Q => R(4),
      R => ex_start_div
    );
\R_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(27),
      Q => R(5),
      R => ex_start_div
    );
\R_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(26),
      Q => R(6),
      R => ex_start_div
    );
\R_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(25),
      Q => R(7),
      R => ex_start_div
    );
\R_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(24),
      Q => R(8),
      R => ex_start_div
    );
\R_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => \^e\(0),
      D => p_2_in(23),
      Q => R(9),
      R => ex_start_div
    );
\Using_FPGA.D_Handle[0].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY
     port map (
      D(0) => \Using_FPGA.D_Handle[0].MUXCY_XOR_I_n_0\,
      LO => \Using_FPGA.D_Handle[1].MUXCY_XOR_I_n_0\,
      \Using_FPGA.D_Handle[0].D_Sel_reg\ => \Using_FPGA.D_Handle[0].D_Sel_reg\,
      lopt => lopt_69
    );
\Using_FPGA.D_Handle[10].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_591
     port map (
      LO => \Using_FPGA.D_Handle[10].MUXCY_XOR_I_n_0\,
      O => O42_out,
      \Using_FPGA.D_reg[10]\ => \Using_FPGA.D_reg[10]_0\,
      \Using_FPGA.D_reg[10]_0\ => \Using_FPGA.D_Handle[11].MUXCY_XOR_I_n_0\,
      lopt => lopt_45,
      lopt_1 => lopt_46,
      lopt_2 => lopt_51
    );
\Using_FPGA.D_Handle[11].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_592
     port map (
      LO => \Using_FPGA.D_Handle[11].MUXCY_XOR_I_n_0\,
      O => O43_out,
      \Using_FPGA.D_reg[11]\ => \Using_FPGA.D_reg[11]_0\,
      \Using_FPGA.D_reg[11]_0\ => \Using_FPGA.D_Handle[12].MUXCY_XOR_I_n_0\,
      lopt => lopt_45,
      lopt_1 => lopt_46,
      lopt_10 => lopt_52,
      lopt_11 => lopt_53,
      lopt_2 => \Using_FPGA.D_reg[10]_0\,
      lopt_3 => lopt_47,
      lopt_4 => lopt_48,
      lopt_5 => \Using_FPGA.D_reg[9]_0\,
      lopt_6 => lopt_49,
      lopt_7 => lopt_50,
      lopt_8 => \Using_FPGA.D_reg[8]_0\,
      lopt_9 => lopt_51
    );
\Using_FPGA.D_Handle[12].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_593
     port map (
      LO => \Using_FPGA.D_Handle[12].MUXCY_XOR_I_n_0\,
      O => O44_out,
      \Using_FPGA.D_reg[12]\ => \Using_FPGA.D_reg[12]_0\,
      \Using_FPGA.D_reg[12]_0\ => \Using_FPGA.D_Handle[13].MUXCY_XOR_I_n_0\,
      lopt => lopt_40,
      lopt_1 => lopt_41,
      lopt_2 => lopt_44
    );
\Using_FPGA.D_Handle[13].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_594
     port map (
      LO => \Using_FPGA.D_Handle[13].MUXCY_XOR_I_n_0\,
      O => O45_out,
      \Using_FPGA.D_reg[13]\ => \Using_FPGA.D_reg[13]_0\,
      \Using_FPGA.D_reg[13]_0\ => \Using_FPGA.D_Handle[14].MUXCY_XOR_I_n_0\,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      lopt_2 => lopt_43
    );
\Using_FPGA.D_Handle[14].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_595
     port map (
      LO => \Using_FPGA.D_Handle[14].MUXCY_XOR_I_n_0\,
      O => O46_out,
      \Using_FPGA.D_reg[14]\ => \Using_FPGA.D_reg[14]_0\,
      \Using_FPGA.D_reg[14]_0\ => \Using_FPGA.D_Handle[15].MUXCY_XOR_I_n_0\,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_2 => lopt_42
    );
\Using_FPGA.D_Handle[15].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_596
     port map (
      LO => \Using_FPGA.D_Handle[15].MUXCY_XOR_I_n_0\,
      O => O47_out,
      \Using_FPGA.D_reg[15]\ => \Using_FPGA.D_reg[15]_0\,
      \Using_FPGA.D_reg[15]_0\ => \Using_FPGA.D_Handle[16].MUXCY_XOR_I_n_0\,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      lopt_10 => lopt_43,
      lopt_11 => lopt_44,
      lopt_2 => \Using_FPGA.D_reg[14]_0\,
      lopt_3 => lopt_38,
      lopt_4 => lopt_39,
      lopt_5 => \Using_FPGA.D_reg[13]_0\,
      lopt_6 => lopt_40,
      lopt_7 => lopt_41,
      lopt_8 => \Using_FPGA.D_reg[12]_0\,
      lopt_9 => lopt_42
    );
\Using_FPGA.D_Handle[16].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_597
     port map (
      LO => \Using_FPGA.D_Handle[16].MUXCY_XOR_I_n_0\,
      O => O48_out,
      \Using_FPGA.D_reg[16]\ => \Using_FPGA.D_reg[16]_0\,
      \Using_FPGA.D_reg[16]_0\ => \Using_FPGA.D_Handle[17].MUXCY_XOR_I_n_0\,
      lopt => lopt_31,
      lopt_1 => lopt_32,
      lopt_2 => lopt_35
    );
\Using_FPGA.D_Handle[17].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_598
     port map (
      LO => \Using_FPGA.D_Handle[17].MUXCY_XOR_I_n_0\,
      O => O49_out,
      \Using_FPGA.D_reg[17]\ => \Using_FPGA.D_reg[17]_0\,
      \Using_FPGA.D_reg[17]_0\ => \Using_FPGA.D_Handle[18].MUXCY_XOR_I_n_0\,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_34
    );
\Using_FPGA.D_Handle[18].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_599
     port map (
      LO => \Using_FPGA.D_Handle[18].MUXCY_XOR_I_n_0\,
      O => O50_out,
      \Using_FPGA.D_reg[18]\ => \Using_FPGA.D_reg[18]_0\,
      \Using_FPGA.D_reg[18]_0\ => \Using_FPGA.D_Handle[19].MUXCY_XOR_I_n_0\,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_2 => lopt_33
    );
\Using_FPGA.D_Handle[19].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_600
     port map (
      LO => \Using_FPGA.D_Handle[19].MUXCY_XOR_I_n_0\,
      O => O51_out,
      \Using_FPGA.D_reg[19]\ => \Using_FPGA.D_reg[19]_0\,
      \Using_FPGA.D_reg[19]_0\ => \Using_FPGA.D_Handle[20].MUXCY_XOR_I_n_0\,
      lopt => lopt_27,
      lopt_1 => lopt_28,
      lopt_10 => lopt_34,
      lopt_11 => lopt_35,
      lopt_2 => \Using_FPGA.D_reg[18]_0\,
      lopt_3 => lopt_29,
      lopt_4 => lopt_30,
      lopt_5 => \Using_FPGA.D_reg[17]_0\,
      lopt_6 => lopt_31,
      lopt_7 => lopt_32,
      lopt_8 => \Using_FPGA.D_reg[16]_0\,
      lopt_9 => lopt_33
    );
\Using_FPGA.D_Handle[1].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_601
     port map (
      LO => \Using_FPGA.D_Handle[1].MUXCY_XOR_I_n_0\,
      O => O33_out,
      \Using_FPGA.D_reg[1]\ => \Using_FPGA.D_reg[1]_0\,
      \Using_FPGA.D_reg[1]_0\ => \Using_FPGA.D_Handle[2].MUXCY_XOR_I_n_0\,
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_2 => lopt_68
    );
\Using_FPGA.D_Handle[20].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_602
     port map (
      LO => \Using_FPGA.D_Handle[20].MUXCY_XOR_I_n_0\,
      O => O52_out,
      \Using_FPGA.D_reg[20]\ => \Using_FPGA.D_reg[20]_0\,
      \Using_FPGA.D_reg[20]_0\ => \Using_FPGA.D_Handle[21].MUXCY_XOR_I_n_0\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      lopt_2 => lopt_26
    );
\Using_FPGA.D_Handle[21].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_603
     port map (
      LO => \Using_FPGA.D_Handle[21].MUXCY_XOR_I_n_0\,
      O => O53_out,
      \Using_FPGA.D_reg[21]\ => \Using_FPGA.D_reg[21]_0\,
      \Using_FPGA.D_reg[21]_0\ => \Using_FPGA.D_Handle[22].MUXCY_XOR_I_n_0\,
      lopt => lopt_20,
      lopt_1 => lopt_21,
      lopt_2 => lopt_25
    );
\Using_FPGA.D_Handle[22].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_604
     port map (
      LO => \Using_FPGA.D_Handle[22].MUXCY_XOR_I_n_0\,
      O => O54_out,
      \Using_FPGA.D_reg[22]\ => \Using_FPGA.D_reg[22]_0\,
      \Using_FPGA.D_reg[22]_0\ => \Using_FPGA.D_Handle[23].MUXCY_XOR_I_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_24
    );
\Using_FPGA.D_Handle[23].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_605
     port map (
      LO => \Using_FPGA.D_Handle[23].MUXCY_XOR_I_n_0\,
      O => O55_out,
      \Using_FPGA.D_reg[23]\ => \Using_FPGA.D_reg[23]_0\,
      \Using_FPGA.D_reg[23]_0\ => \Using_FPGA.D_Handle[24].MUXCY_XOR_I_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_10 => lopt_25,
      lopt_11 => lopt_26,
      lopt_2 => \Using_FPGA.D_reg[22]_0\,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => \Using_FPGA.D_reg[21]_0\,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => \Using_FPGA.D_reg[20]_0\,
      lopt_9 => lopt_24
    );
\Using_FPGA.D_Handle[24].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_606
     port map (
      LO => \Using_FPGA.D_Handle[24].MUXCY_XOR_I_n_0\,
      O => O56_out,
      \Using_FPGA.D_reg[24]\ => \Using_FPGA.D_reg[24]_0\,
      \Using_FPGA.D_reg[24]_0\ => \Using_FPGA.D_Handle[25].MUXCY_XOR_I_n_0\,
      lopt => lopt_13,
      lopt_1 => lopt_14,
      lopt_2 => lopt_17
    );
\Using_FPGA.D_Handle[25].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_607
     port map (
      LO => \Using_FPGA.D_Handle[25].MUXCY_XOR_I_n_0\,
      O => O57_out,
      \Using_FPGA.D_reg[25]\ => \Using_FPGA.D_reg[25]_0\,
      \Using_FPGA.D_reg[25]_0\ => \Using_FPGA.D_Handle[26].MUXCY_XOR_I_n_0\,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_16
    );
\Using_FPGA.D_Handle[26].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_608
     port map (
      LO => \Using_FPGA.D_Handle[26].MUXCY_XOR_I_n_0\,
      O => O58_out,
      \Using_FPGA.D_reg[26]\ => \Using_FPGA.D_reg[26]_0\,
      \Using_FPGA.D_reg[26]_0\ => \Using_FPGA.D_Handle[27].MUXCY_XOR_I_n_0\,
      lopt => lopt_9,
      lopt_1 => lopt_10,
      lopt_2 => lopt_15
    );
\Using_FPGA.D_Handle[27].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_609
     port map (
      LO => \Using_FPGA.D_Handle[27].MUXCY_XOR_I_n_0\,
      O => O59_out,
      \Using_FPGA.D_reg[27]\ => \Using_FPGA.D_reg[27]_0\,
      \Using_FPGA.D_reg[27]_0\ => \Using_FPGA.D_Handle[28].MUXCY_XOR_I_n_0\,
      lopt => lopt_9,
      lopt_1 => lopt_10,
      lopt_10 => lopt_16,
      lopt_11 => lopt_17,
      lopt_2 => \Using_FPGA.D_reg[26]_0\,
      lopt_3 => lopt_11,
      lopt_4 => lopt_12,
      lopt_5 => \Using_FPGA.D_reg[25]_0\,
      lopt_6 => lopt_13,
      lopt_7 => lopt_14,
      lopt_8 => \Using_FPGA.D_reg[24]_0\,
      lopt_9 => lopt_15
    );
\Using_FPGA.D_Handle[28].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_610
     port map (
      LO => \Using_FPGA.D_Handle[28].MUXCY_XOR_I_n_0\,
      O => O60_out,
      \Using_FPGA.D_reg[28]\ => \Using_FPGA.D_reg[28]_0\,
      \Using_FPGA.D_reg[28]_0\ => \Using_FPGA.D_Handle[29].MUXCY_XOR_I_n_0\,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      lopt_2 => lopt_8
    );
\Using_FPGA.D_Handle[29].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_611
     port map (
      LO => \Using_FPGA.D_Handle[29].MUXCY_XOR_I_n_0\,
      O => O61_out,
      \Using_FPGA.D_reg[29]\ => \Using_FPGA.D_reg[29]_0\,
      \Using_FPGA.D_reg[29]_0\ => \Using_FPGA.D_Handle[30].MUXCY_XOR_I_n_0\,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_7
    );
\Using_FPGA.D_Handle[2].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_612
     port map (
      LO => \Using_FPGA.D_Handle[2].MUXCY_XOR_I_n_0\,
      O => O34_out,
      \Using_FPGA.D_reg[2]\ => \Using_FPGA.D_reg[2]_0\,
      \Using_FPGA.D_reg[2]_0\ => \Using_FPGA.D_Handle[3].MUXCY_XOR_I_n_0\,
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => lopt_67
    );
\Using_FPGA.D_Handle[30].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_613
     port map (
      LO => \Using_FPGA.D_Handle[30].MUXCY_XOR_I_n_0\,
      O => O62_out,
      \Using_FPGA.D_reg[30]\ => \Using_FPGA.D_reg[30]_0\,
      \Using_FPGA.D_reg[30]_0\ => LO,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_6
    );
\Using_FPGA.D_Handle[31].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_614
     port map (
      CI => CI,
      LO => LO,
      O => O_0,
      S => S,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_10 => lopt_7,
      lopt_11 => lopt_8,
      lopt_2 => \Using_FPGA.D_reg[30]_0\,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.D_reg[29]_0\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \Using_FPGA.D_reg[28]_0\,
      lopt_9 => lopt_6
    );
\Using_FPGA.D_Handle[3].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_615
     port map (
      LO => \Using_FPGA.D_Handle[3].MUXCY_XOR_I_n_0\,
      O => O35_out,
      \Using_FPGA.D_reg[3]\ => \Using_FPGA.D_reg[3]_0\,
      \Using_FPGA.D_reg[3]_0\ => \Using_FPGA.D_Handle[4].MUXCY_XOR_I_n_0\,
      lopt => lopt_63,
      lopt_1 => lopt_64,
      lopt_2 => \Using_FPGA.D_reg[2]_0\,
      lopt_3 => lopt_65,
      lopt_4 => lopt_66,
      lopt_5 => \Using_FPGA.D_reg[1]_0\,
      lopt_6 => lopt_67,
      lopt_7 => lopt_68,
      lopt_8 => lopt_69,
      lopt_9 => \Using_FPGA.D_Handle[0].D_Sel_reg\
    );
\Using_FPGA.D_Handle[4].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_616
     port map (
      LO => \Using_FPGA.D_Handle[4].MUXCY_XOR_I_n_0\,
      O => O36_out,
      \Using_FPGA.D_reg[4]\ => \Using_FPGA.D_reg[4]_0\,
      \Using_FPGA.D_reg[4]_0\ => \Using_FPGA.D_Handle[5].MUXCY_XOR_I_n_0\,
      lopt => lopt_58,
      lopt_1 => lopt_59,
      lopt_2 => lopt_62
    );
\Using_FPGA.D_Handle[5].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_617
     port map (
      LO => \Using_FPGA.D_Handle[5].MUXCY_XOR_I_n_0\,
      O => O37_out,
      \Using_FPGA.D_reg[5]\ => \Using_FPGA.D_reg[5]_0\,
      \Using_FPGA.D_reg[5]_0\ => \Using_FPGA.D_Handle[6].MUXCY_XOR_I_n_0\,
      lopt => lopt_56,
      lopt_1 => lopt_57,
      lopt_2 => lopt_61
    );
\Using_FPGA.D_Handle[6].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_618
     port map (
      LO => \Using_FPGA.D_Handle[6].MUXCY_XOR_I_n_0\,
      O => O38_out,
      \Using_FPGA.D_reg[6]\ => \Using_FPGA.D_reg[6]_0\,
      \Using_FPGA.D_reg[6]_0\ => \Using_FPGA.D_Handle[7].MUXCY_XOR_I_n_0\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_60
    );
\Using_FPGA.D_Handle[7].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_619
     port map (
      LO => \Using_FPGA.D_Handle[7].MUXCY_XOR_I_n_0\,
      O => O39_out,
      \Using_FPGA.D_reg[7]\ => \Using_FPGA.D_reg[7]_0\,
      \Using_FPGA.D_reg[7]_0\ => \Using_FPGA.D_Handle[8].MUXCY_XOR_I_n_0\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_10 => lopt_61,
      lopt_11 => lopt_62,
      lopt_2 => \Using_FPGA.D_reg[6]_0\,
      lopt_3 => lopt_56,
      lopt_4 => lopt_57,
      lopt_5 => \Using_FPGA.D_reg[5]_0\,
      lopt_6 => lopt_58,
      lopt_7 => lopt_59,
      lopt_8 => \Using_FPGA.D_reg[4]_0\,
      lopt_9 => lopt_60
    );
\Using_FPGA.D_Handle[8].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_620
     port map (
      LO => \Using_FPGA.D_Handle[8].MUXCY_XOR_I_n_0\,
      O => O40_out,
      \Using_FPGA.D_reg[8]\ => \Using_FPGA.D_reg[8]_0\,
      \Using_FPGA.D_reg[8]_0\ => \Using_FPGA.D_Handle[9].MUXCY_XOR_I_n_0\,
      lopt => lopt_49,
      lopt_1 => lopt_50,
      lopt_2 => lopt_53
    );
\Using_FPGA.D_Handle[9].MUXCY_XOR_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_621
     port map (
      CI => \Using_FPGA.D_Handle[10].MUXCY_XOR_I_n_0\,
      LO => \Using_FPGA.D_Handle[9].MUXCY_XOR_I_n_0\,
      O => O41_out,
      \Using_FPGA.D_reg[9]\ => \Using_FPGA.D_reg[9]_0\,
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_52
    );
\Using_FPGA.D_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => \Using_FPGA.D_Handle[0].MUXCY_XOR_I_n_0\,
      Q => D(0),
      R => '0'
    );
\Using_FPGA.D_reg[10]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O42_out,
      Q => D(10),
      R => '0'
    );
\Using_FPGA.D_reg[11]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O43_out,
      Q => D(11),
      R => '0'
    );
\Using_FPGA.D_reg[12]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O44_out,
      Q => D(12),
      R => '0'
    );
\Using_FPGA.D_reg[13]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O45_out,
      Q => D(13),
      R => '0'
    );
\Using_FPGA.D_reg[14]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O46_out,
      Q => D(14),
      R => '0'
    );
\Using_FPGA.D_reg[15]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O47_out,
      Q => D(15),
      R => '0'
    );
\Using_FPGA.D_reg[16]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O48_out,
      Q => D(16),
      R => '0'
    );
\Using_FPGA.D_reg[17]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O49_out,
      Q => D(17),
      R => '0'
    );
\Using_FPGA.D_reg[18]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O50_out,
      Q => D(18),
      R => '0'
    );
\Using_FPGA.D_reg[19]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O51_out,
      Q => D(19),
      R => '0'
    );
\Using_FPGA.D_reg[1]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O33_out,
      Q => D(1),
      R => '0'
    );
\Using_FPGA.D_reg[20]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O52_out,
      Q => D(20),
      R => '0'
    );
\Using_FPGA.D_reg[21]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O53_out,
      Q => D(21),
      R => '0'
    );
\Using_FPGA.D_reg[22]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O54_out,
      Q => D(22),
      R => '0'
    );
\Using_FPGA.D_reg[23]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O55_out,
      Q => D(23),
      R => '0'
    );
\Using_FPGA.D_reg[24]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O56_out,
      Q => D(24),
      R => '0'
    );
\Using_FPGA.D_reg[25]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O57_out,
      Q => D(25),
      R => '0'
    );
\Using_FPGA.D_reg[26]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O58_out,
      Q => D(26),
      R => '0'
    );
\Using_FPGA.D_reg[27]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O59_out,
      Q => D(27),
      R => '0'
    );
\Using_FPGA.D_reg[28]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O60_out,
      Q => D(28),
      R => '0'
    );
\Using_FPGA.D_reg[29]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O61_out,
      Q => D(29),
      R => '0'
    );
\Using_FPGA.D_reg[2]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O34_out,
      Q => D(2),
      R => '0'
    );
\Using_FPGA.D_reg[30]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O62_out,
      Q => D(30),
      R => '0'
    );
\Using_FPGA.D_reg[31]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O_0,
      Q => D(31),
      R => '0'
    );
\Using_FPGA.D_reg[3]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O35_out,
      Q => D(3),
      R => '0'
    );
\Using_FPGA.D_reg[4]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O36_out,
      Q => D(4),
      R => '0'
    );
\Using_FPGA.D_reg[5]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O37_out,
      Q => D(5),
      R => '0'
    );
\Using_FPGA.D_reg[6]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O38_out,
      Q => D(6),
      R => '0'
    );
\Using_FPGA.D_reg[7]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O39_out,
      Q => D(7),
      R => '0'
    );
\Using_FPGA.D_reg[8]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O40_out,
      Q => D(8),
      R => '0'
    );
\Using_FPGA.D_reg[9]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => ex_start_div,
      D => O41_out,
      Q => D(9),
      R => '0'
    );
\Using_FPGA.Native_i_1__106\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^m3_div_stall_i_reg_0\,
      O => m3_div_stall_i_reg_1
    );
\Using_FPGA.Native_i_2__12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FEFFFE00"
    )
        port map (
      I0 => \^m3_div_by_zero\,
      I1 => \Using_FPGA.Native\,
      I2 => \^m3_div_overflow_i_reg_0\,
      I3 => m3_piperun,
      I4 => \Using_FPGA.Native_0\,
      I5 => WB_Div_Zero_Overflow_reg,
      O => M3_Div_By_Zero_reg_0
    );
\Using_FPGA.New_Q_Handle[0].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      New_Q_Sel_31 => New_Q_Sel_31,
      Q(0) => \^q\(30),
      \R_reg[32]\(0) => \Q_reg[31]_0\(31),
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[0].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_622
     port map (
      D(0) => p_0_in12_in,
      LO => \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_0\,
      New_Q_Sel_31 => New_Q_Sel_31,
      lopt => lopt_139,
      m2_is_div_instr => m2_is_div_instr,
      m2_piperun => m2_piperun,
      m3_div_overflow_i_i_2_0 => \^floating_hold_div_overflow_reg_0\,
      m3_div_overflow_i_reg => m3_div_overflow_i_reg_1,
      m3_div_overflow_i_reg_0 => m3_div_overflow_i_reg_3,
      m3_div_overflow_i_reg_1 => \^m3_div_overflow_i_reg_0\,
      m3_div_overflow_i_reg_2 => \^last_cycle_reg_0\,
      m3_div_overflow_i_reg_3 => \^m3_div_stall_i_reg_0\,
      m3_sel_div_res => m3_sel_div_res,
      negative_operands => \^negative_operands\,
      negative_operands_reg => negative_operands_reg_0
    );
\Using_FPGA.New_Q_Handle[10].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_623\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(20),
      \Q_reg[10]\(0) => \Q_reg[31]_0\(21),
      S => New_Q_Sel_21,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_624
     port map (
      LO => \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[10]\ => \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_21,
      lopt => lopt_115,
      lopt_1 => lopt_116,
      lopt_2 => lopt_121
    );
\Using_FPGA.New_Q_Handle[11].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_625\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(19),
      \Q_reg[11]\(0) => \Q_reg[31]_0\(20),
      S => New_Q_Sel_20,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_626
     port map (
      LO => \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[11].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[11]\ => \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_20,
      lopt => lopt_115,
      lopt_1 => lopt_116,
      lopt_10 => lopt_122,
      lopt_11 => lopt_123,
      lopt_2 => New_Q_Sel_21,
      lopt_3 => lopt_117,
      lopt_4 => lopt_118,
      lopt_5 => New_Q_Sel_22,
      lopt_6 => lopt_119,
      lopt_7 => lopt_120,
      lopt_8 => New_Q_Sel_23,
      lopt_9 => lopt_121
    );
\Using_FPGA.New_Q_Handle[12].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_627\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(18),
      \Q_reg[12]\(0) => \Q_reg[31]_0\(19),
      S => New_Q_Sel_19,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_628
     port map (
      LO => \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[12].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[12]\ => \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_19,
      lopt => lopt_110,
      lopt_1 => lopt_111,
      lopt_2 => lopt_114
    );
\Using_FPGA.New_Q_Handle[13].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_629\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(17),
      \Q_reg[13]\(0) => \Q_reg[31]_0\(18),
      S => New_Q_Sel_18,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_630
     port map (
      LO => \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[13].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[13]\ => \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_18,
      lopt => lopt_108,
      lopt_1 => lopt_109,
      lopt_2 => lopt_113
    );
\Using_FPGA.New_Q_Handle[14].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_631\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(16),
      \Q_reg[14]\(0) => \Q_reg[31]_0\(17),
      S => New_Q_Sel_17,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_632
     port map (
      LO => \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[14].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[14]\ => \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_17,
      lopt => lopt_106,
      lopt_1 => lopt_107,
      lopt_2 => lopt_112
    );
\Using_FPGA.New_Q_Handle[15].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_633\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(15),
      \Q_reg[15]\(0) => \Q_reg[31]_0\(16),
      S => New_Q_Sel_16,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_634
     port map (
      LO => \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[15].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[15]\ => \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_16,
      lopt => lopt_106,
      lopt_1 => lopt_107,
      lopt_10 => lopt_113,
      lopt_11 => lopt_114,
      lopt_2 => New_Q_Sel_17,
      lopt_3 => lopt_108,
      lopt_4 => lopt_109,
      lopt_5 => New_Q_Sel_18,
      lopt_6 => lopt_110,
      lopt_7 => lopt_111,
      lopt_8 => New_Q_Sel_19,
      lopt_9 => lopt_112
    );
\Using_FPGA.New_Q_Handle[16].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_635\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(14),
      \Q_reg[16]\(0) => \Q_reg[31]_0\(15),
      S => New_Q_Sel_15,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_636
     port map (
      LO => \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[16].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[16]\ => \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_15,
      lopt => lopt_101,
      lopt_1 => lopt_102,
      lopt_2 => lopt_105
    );
\Using_FPGA.New_Q_Handle[17].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_637\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(13),
      \Q_reg[17]\(0) => \Q_reg[31]_0\(14),
      S => New_Q_Sel_14,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_638
     port map (
      LO => \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[17].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[17]\ => \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_14,
      lopt => lopt_99,
      lopt_1 => lopt_100,
      lopt_2 => lopt_104
    );
\Using_FPGA.New_Q_Handle[18].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_639\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(12),
      \Q_reg[18]\(0) => \Q_reg[31]_0\(13),
      S => New_Q_Sel_13,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_640
     port map (
      LO => \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[18].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[18]\ => \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_13,
      lopt => lopt_97,
      lopt_1 => lopt_98,
      lopt_2 => lopt_103
    );
\Using_FPGA.New_Q_Handle[19].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_641\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(11),
      \Q_reg[19]\(0) => \Q_reg[31]_0\(12),
      S => New_Q_Sel_12,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_642
     port map (
      LO => \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[19].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[19]\ => \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_12,
      lopt => lopt_97,
      lopt_1 => lopt_98,
      lopt_10 => lopt_104,
      lopt_11 => lopt_105,
      lopt_2 => New_Q_Sel_13,
      lopt_3 => lopt_99,
      lopt_4 => lopt_100,
      lopt_5 => New_Q_Sel_14,
      lopt_6 => lopt_101,
      lopt_7 => lopt_102,
      lopt_8 => New_Q_Sel_15,
      lopt_9 => lopt_103
    );
\Using_FPGA.New_Q_Handle[1].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_643\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(29),
      \Q_reg[1]\(0) => \Q_reg[31]_0\(30),
      S => New_Q_Sel_30,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_644
     port map (
      LO => \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[1].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[1]\ => \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_30,
      lopt => lopt_135,
      lopt_1 => lopt_136,
      lopt_2 => lopt_138
    );
\Using_FPGA.New_Q_Handle[20].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_645\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(10),
      \Q_reg[20]\(0) => \Q_reg[31]_0\(11),
      S => New_Q_Sel_11,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_646
     port map (
      LO => \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[20].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[20]\ => \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_11,
      lopt => lopt_92,
      lopt_1 => lopt_93,
      lopt_2 => lopt_96
    );
\Using_FPGA.New_Q_Handle[21].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_647\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(9),
      \Q_reg[21]\(0) => \Q_reg[31]_0\(10),
      S => New_Q_Sel_10,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_648
     port map (
      LO => \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[21].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[21]\ => \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_10,
      lopt => lopt_90,
      lopt_1 => lopt_91,
      lopt_2 => lopt_95
    );
\Using_FPGA.New_Q_Handle[22].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_649\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(8),
      \Q_reg[22]\(0) => \Q_reg[31]_0\(9),
      S => New_Q_Sel_9,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_650
     port map (
      LO => \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[22].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[22]\ => \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_9,
      lopt => lopt_88,
      lopt_1 => lopt_89,
      lopt_2 => lopt_94
    );
\Using_FPGA.New_Q_Handle[23].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_651\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(7),
      \Q_reg[23]\(0) => \Q_reg[31]_0\(8),
      S => New_Q_Sel_8,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_652
     port map (
      LO => \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[23].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[23]\ => \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_8,
      lopt => lopt_88,
      lopt_1 => lopt_89,
      lopt_10 => lopt_95,
      lopt_11 => lopt_96,
      lopt_2 => New_Q_Sel_9,
      lopt_3 => lopt_90,
      lopt_4 => lopt_91,
      lopt_5 => New_Q_Sel_10,
      lopt_6 => lopt_92,
      lopt_7 => lopt_93,
      lopt_8 => New_Q_Sel_11,
      lopt_9 => lopt_94
    );
\Using_FPGA.New_Q_Handle[24].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_653\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(6),
      \Q_reg[24]\(0) => \Q_reg[31]_0\(7),
      S => New_Q_Sel_7,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_654
     port map (
      LO => \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[24].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[24]\ => \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_7,
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_87
    );
\Using_FPGA.New_Q_Handle[25].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_655\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(5),
      \Q_reg[25]\(0) => \Q_reg[31]_0\(6),
      S => New_Q_Sel_6,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_656
     port map (
      LO => \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[25].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[25]\ => \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_6,
      lopt => lopt_81,
      lopt_1 => lopt_82,
      lopt_2 => lopt_86
    );
\Using_FPGA.New_Q_Handle[26].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_657\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(4),
      \Q_reg[26]\(0) => \Q_reg[31]_0\(5),
      S => New_Q_Sel_5,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_658
     port map (
      LO => \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[26].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[26]\ => \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_5,
      lopt => lopt_79,
      lopt_1 => lopt_80,
      lopt_2 => lopt_85
    );
\Using_FPGA.New_Q_Handle[27].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_659\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(3),
      \Q_reg[27]\(0) => \Q_reg[31]_0\(4),
      S => New_Q_Sel_4,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_660
     port map (
      LO => \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[27].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[27]\ => \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_4,
      lopt => lopt_79,
      lopt_1 => lopt_80,
      lopt_10 => lopt_86,
      lopt_11 => lopt_87,
      lopt_2 => New_Q_Sel_5,
      lopt_3 => lopt_81,
      lopt_4 => lopt_82,
      lopt_5 => New_Q_Sel_6,
      lopt_6 => lopt_83,
      lopt_7 => lopt_84,
      lopt_8 => New_Q_Sel_7,
      lopt_9 => lopt_85
    );
\Using_FPGA.New_Q_Handle[28].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_661\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(2),
      \Q_reg[28]\(0) => \Q_reg[31]_0\(3),
      S => New_Q_Sel_3,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_662
     port map (
      LO => \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[28].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[28]\ => \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_3,
      lopt => lopt_74,
      lopt_1 => lopt_75,
      lopt_2 => lopt_78
    );
\Using_FPGA.New_Q_Handle[29].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_663\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(1),
      \Q_reg[29]\(0) => \Q_reg[31]_0\(2),
      S => New_Q_Sel_2,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_664
     port map (
      LO => \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[29].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[29]\ => \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_2,
      lopt => lopt_72,
      lopt_1 => lopt_73,
      lopt_2 => lopt_77
    );
\Using_FPGA.New_Q_Handle[2].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_665\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(28),
      \Q_reg[2]\(0) => \Q_reg[31]_0\(29),
      S => New_Q_Sel_29,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_666
     port map (
      LO => \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[2].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[2]\ => \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_29,
      lopt => lopt_133,
      lopt_1 => lopt_134,
      lopt_2 => lopt_137
    );
\Using_FPGA.New_Q_Handle[30].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_667\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(0),
      \Q_reg[30]\(0) => \Q_reg[31]_0\(1),
      S => New_Q_Sel_1,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_668
     port map (
      LO => \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[30].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[30]\ => \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_1\,
      S => New_Q_Sel_1,
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_2 => lopt_76
    );
\Using_FPGA.New_Q_Handle[31].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_669\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => Q_1(32),
      \Q_reg[31]\(0) => \Q_reg[31]_0\(0),
      S => New_Q_Sel_0,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_670
     port map (
      LO => \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_1\,
      New_Q_Carry(0) => New_Q_Carry(32),
      O => \Using_FPGA.New_Q_Handle[31].New_Q_MUXCY_XORCY_n_2\,
      \Q_reg[31]\ => \^last_cycle_reg_0\,
      \Q_reg[31]_0\(0) => \Q_reg[31]_0\(31),
      S => New_Q_Sel_0,
      ex_div_unsigned => ex_div_unsigned,
      ex_start_div => ex_start_div,
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_10 => lopt_77,
      lopt_11 => lopt_78,
      lopt_2 => New_Q_Sel_1,
      lopt_3 => lopt_72,
      lopt_4 => lopt_73,
      lopt_5 => New_Q_Sel_2,
      lopt_6 => lopt_74,
      lopt_7 => lopt_75,
      lopt_8 => New_Q_Sel_3,
      lopt_9 => lopt_76,
      make_result_neg => \^make_result_neg\
    );
\Using_FPGA.New_Q_Handle[3].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_671\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(27),
      \Q_reg[3]\(0) => \Q_reg[31]_0\(28),
      S => New_Q_Sel_28,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_672
     port map (
      LO => \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[3].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[3]\ => \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_28,
      lopt => lopt_133,
      lopt_1 => lopt_134,
      lopt_2 => New_Q_Sel_29,
      lopt_3 => lopt_135,
      lopt_4 => lopt_136,
      lopt_5 => New_Q_Sel_30,
      lopt_6 => lopt_137,
      lopt_7 => lopt_138,
      lopt_8 => lopt_139,
      lopt_9 => New_Q_Sel_31
    );
\Using_FPGA.New_Q_Handle[4].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_673\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(26),
      \Q_reg[4]\(0) => \Q_reg[31]_0\(27),
      S => New_Q_Sel_27,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_674
     port map (
      LO => \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[4].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[4]\ => \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_27,
      lopt => lopt_128,
      lopt_1 => lopt_129,
      lopt_2 => lopt_132
    );
\Using_FPGA.New_Q_Handle[5].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_675\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(25),
      \Q_reg[5]\(0) => \Q_reg[31]_0\(26),
      S => New_Q_Sel_26,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_676
     port map (
      LO => \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[5].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[5]\ => \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_26,
      lopt => lopt_126,
      lopt_1 => lopt_127,
      lopt_2 => lopt_131
    );
\Using_FPGA.New_Q_Handle[6].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_677\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(24),
      \Q_reg[6]\(0) => \Q_reg[31]_0\(25),
      S => New_Q_Sel_25,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_678
     port map (
      LO => \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[6].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[6]\ => \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_25,
      lopt => lopt_124,
      lopt_1 => lopt_125,
      lopt_2 => lopt_130
    );
\Using_FPGA.New_Q_Handle[7].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_679\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(23),
      \Q_reg[7]\(0) => \Q_reg[31]_0\(24),
      S => New_Q_Sel_24,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_680
     port map (
      LO => \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[7].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[7]\ => \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_24,
      lopt => lopt_124,
      lopt_1 => lopt_125,
      lopt_10 => lopt_131,
      lopt_11 => lopt_132,
      lopt_2 => New_Q_Sel_25,
      lopt_3 => lopt_126,
      lopt_4 => lopt_127,
      lopt_5 => New_Q_Sel_26,
      lopt_6 => lopt_128,
      lopt_7 => lopt_129,
      lopt_8 => New_Q_Sel_27,
      lopt_9 => lopt_130
    );
\Using_FPGA.New_Q_Handle[8].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_681\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(22),
      \Q_reg[8]\(0) => \Q_reg[31]_0\(23),
      S => New_Q_Sel_23,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_682
     port map (
      LO => \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[8].New_Q_MUXCY_XORCY_n_1\,
      \Q_reg[8]\ => \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_0\,
      S => New_Q_Sel_23,
      lopt => lopt_119,
      lopt_1 => lopt_120,
      lopt_2 => lopt_123
    );
\Using_FPGA.New_Q_Handle[9].New_Q_LUT4\: entity work.\microblaze_microblaze_0_0_MB_LUT4__parameterized1_683\
     port map (
      New_Q_Carry(0) => New_Q_Carry(32),
      Q(0) => \^q\(21),
      \Q_reg[9]\(0) => \Q_reg[31]_0\(22),
      S => New_Q_Sel_22,
      ex_start_div => ex_start_div
    );
\Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_XORCY_684
     port map (
      CI => \Using_FPGA.New_Q_Handle[10].New_Q_MUXCY_XORCY_n_0\,
      LO => \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_0\,
      O => \Using_FPGA.New_Q_Handle[9].New_Q_MUXCY_XORCY_n_1\,
      S => New_Q_Sel_22,
      lopt => lopt_117,
      lopt_1 => lopt_118,
      lopt_2 => lopt_122
    );
WB_Div_Zero_Overflow_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => WB_Div_Zero_Overflow_reg,
      I1 => \^m3_div_overflow_i_reg_0\,
      I2 => \^m3_div_by_zero\,
      O => \wb_exception_from_m3_reg_rep__0\
    );
\cnt_shifts_reg[0]\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => \cnt_shifts_reg[1]_srl31_n_0\,
      Q => p_0_in15_in,
      R => '0'
    );
\cnt_shifts_reg[1]_srl31\: unisim.vcomponents.SRLC32E
    generic map(
      INIT => X"00000000"
    )
        port map (
      A(4 downto 0) => B"11110",
      CE => '1',
      CLK => Clk,
      D => \cnt_shifts_reg[0]_0\,
      Q => \cnt_shifts_reg[1]_srl31_n_0\,
      Q31 => \NLW_cnt_shifts_reg[1]_srl31_Q31_UNCONNECTED\
    );
div_busy_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => div_iterations_early,
      Q => \^e\(0),
      R => sync_reset
    );
div_iterations_early_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000454"
    )
        port map (
      I0 => m3_last_cycle_reg_1,
      I1 => \^div_iterations_early_reg_0\,
      I2 => ex_start_div,
      I3 => EX_Op1_Zero,
      I4 => last_cycle_i_1_n_0,
      I5 => sync_reset,
      O => div_iterations_early_i_1_n_0
    );
div_iterations_early_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => div_iterations_early_i_1_n_0,
      Q => \^div_iterations_early_reg_0\,
      R => '0'
    );
floating_div_aborting_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00EA"
    )
        port map (
      I0 => floating_div_aborting,
      I1 => \^div_iterations_early_reg_0\,
      I2 => m3_last_cycle_reg_1,
      I3 => p_0_in15_in,
      O => floating_div_aborting_i_1_n_0
    );
floating_div_aborting_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => floating_div_aborting_i_1_n_0,
      Q => floating_div_aborting,
      R => sync_reset
    );
floating_hold_div_by_zero_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => floating_hold_div_by_zero_reg_0,
      Q => \floating_hold_div_by_zero__0\,
      R => '0'
    );
floating_hold_div_overflow_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => floating_hold_div_overflow_reg_1,
      Q => \^floating_hold_div_overflow_reg_0\,
      R => '0'
    );
last_cycle_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0004"
    )
        port map (
      I0 => floating_div_aborting,
      I1 => p_0_in15_in,
      I2 => m3_last_cycle_reg_1,
      I3 => ex_start_div,
      O => last_cycle_i_1_n_0
    );
last_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => last_cycle_i_1_n_0,
      Q => \^last_cycle_reg_0\,
      R => sync_reset
    );
m3_div_overflow_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_div_overflow_i_reg_2,
      Q => \^m3_div_overflow_i_reg_0\,
      R => '0'
    );
m3_div_stall_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_div_stall_i_reg_2,
      Q => \^m3_div_stall_i_reg_0\,
      R => sync_reset
    );
m3_last_cycle_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000FE"
    )
        port map (
      I0 => \^m3_last_cycle_reg_0\,
      I1 => m3_last_cycle_reg_1,
      I2 => \^last_cycle_reg_0\,
      I3 => sync_reset,
      I4 => ex_start_div,
      O => m3_last_cycle_i_1_n_0
    );
m3_last_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_last_cycle_i_1_n_0,
      Q => \^m3_last_cycle_reg_0\,
      R => '0'
    );
make_result_neg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => make_result_neg_reg_0,
      Q => \^make_result_neg\,
      R => sync_reset
    );
negative_operands_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => negative_operands_reg_1,
      Q => \^negative_operands\,
      R => sync_reset
    );
next_sub_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => next_sub_reg_0,
      Q => \^di\(0),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Jump_Logic_ff is
  port (
    ex_jump : out STD_LOGIC;
    EX_Op1_CMP_Equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    m0_jump_taken : out STD_LOGIC;
    bp0_jump0 : out STD_LOGIC;
    Clear_Buffer : out STD_LOGIC;
    ex_branch_with_delayslot_reg : out STD_LOGIC;
    ex_delayslot_Instr0 : out STD_LOGIC;
    keep_jump_taken_with_ds_reg : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    bp0_keep_jump_reg : out STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \bp0_branch_target_reg[31]\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    use_Reg_Neg_S_reg_0 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    ex_op1_cmp_eq : in STD_LOGIC;
    ex_op1_cmp_eq_n7_out : in STD_LOGIC;
    force_Val2_N_reg_0 : in STD_LOGIC;
    ex_op1_cmp_eq1 : in STD_LOGIC;
    use_Reg_Neg_DI1_out : in STD_LOGIC;
    force_Val10_out : in STD_LOGIC;
    use_Reg_Neg_S3_out : in STD_LOGIC;
    force12_out : in STD_LOGIC;
    bp0_keep_jump : in STD_LOGIC;
    wb_abort_div : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    of_raw_valid : in STD_LOGIC;
    keep_jump_taken_with_ds : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    bp0_keep_jump_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Jump_Logic_ff : entity is "Jump_Logic_ff";
end microblaze_microblaze_0_0_Jump_Logic_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Jump_Logic_ff is
  signal DI : STD_LOGIC;
  signal EX_Jump_Delay_DFF_n_1 : STD_LOGIC;
  signal M0_Jump_Taken0 : STD_LOGIC;
  signal S : STD_LOGIC;
  signal ex_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of ex_PipeRun_for_ce : signal is std.standard.true;
  signal \^ex_jump\ : STD_LOGIC;
  signal ex_jump_hold : STD_LOGIC;
  signal ex_jump_wanted : STD_LOGIC;
  signal force1_reg_n_0 : STD_LOGIC;
  signal force2 : STD_LOGIC;
  signal force_Val1_reg_n_0 : STD_LOGIC;
  signal force_Val2_N : STD_LOGIC;
  signal jump_carry1 : STD_LOGIC;
  signal jump_carry2 : STD_LOGIC;
  signal jump_carry3 : STD_LOGIC;
  signal jump_carry5 : STD_LOGIC;
  signal jump_carry8 : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal use_Reg_Neg_DI_reg_n_0 : STD_LOGIC;
  signal use_Reg_Neg_S_reg_n_0 : STD_LOGIC;
begin
  ex_PipeRun_for_ce <= E(0);
  ex_jump <= \^ex_jump\;
  lopt_1 <= DI;
  lopt_11 <= lopt_4;
  lopt_12 <= lopt_5;
  lopt_14 <= lopt_7;
  lopt_2 <= S;
  lopt_3 <= lopt_10;
  lopt_6 <= lopt_13;
  of_PipeRun_for_ce <= use_Reg_Neg_S_reg_0;
  reset_bool_for_rst <= sync_reset;
EX_Jump_Delay_DFF: entity work.microblaze_microblaze_0_0_MB_FDR_572
     port map (
      Clk => Clk,
      E(0) => ex_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => EX_Jump_Delay_DFF_n_1,
      \Using_FPGA.Native_1\ => \^ex_jump\,
      \Using_FPGA.Native_2\ => of_PipeRun_for_ce,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_jump_hold => ex_jump_hold,
      of_raw_valid => of_raw_valid,
      sync_reset => reset_bool_for_rst
    );
M0_Jump_Taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => M0_Jump_Taken0,
      Q => m0_jump_taken,
      R => reset_bool_for_rst
    );
MUXCY_JUMP_CARRY: entity work.microblaze_microblaze_0_0_MB_MUXCY_573
     port map (
      DI => DI,
      EX_Op1_Zero => EX_Op1_Zero,
      S => S,
      jump_carry1 => jump_carry1,
      lopt => lopt
    );
MUXCY_JUMP_CARRY2: entity work.microblaze_microblaze_0_0_MB_MUXCY_574
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      force2 => force2,
      force_Val2_N => force_Val2_N,
      jump_carry1 => jump_carry1,
      jump_carry2 => jump_carry2,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\,
      lopt_2 => \Using_FPGA.Native\,
      lopt_3 => \^lopt_3\,
      lopt_4 => \^lopt_4\,
      lopt_5 => \^lopt_5\,
      lopt_6 => \^lopt_6\,
      lopt_7 => \^lopt_7\,
      lopt_8 => EX_Jump_Delay_DFF_n_1
    );
MUXCY_JUMP_CARRY3: entity work.microblaze_microblaze_0_0_MB_MUXCY_575
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      jump_carry2 => jump_carry2,
      jump_carry3 => jump_carry3,
      lopt => \^lopt_1\,
      lopt_1 => \^lopt_2\
    );
MUXCY_JUMP_CARRY4: entity work.microblaze_microblaze_0_0_MB_MUXCY_576
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => ex_branch_with_delayslot_reg,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry3 => jump_carry3,
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\,
      of_raw_valid => of_raw_valid
    );
MUXCY_JUMP_CARRY5: entity work.microblaze_microblaze_0_0_MB_MUXCY_577
     port map (
      \Using_FPGA.Native_0\ => EX_Jump_Delay_DFF_n_1,
      ex_jump_wanted => ex_jump_wanted,
      jump_carry5 => jump_carry5,
      lopt => \^lopt_6\,
      lopt_1 => \^lopt_7\
    );
MUXCY_JUMP_CARRY8: entity work.microblaze_microblaze_0_0_MB_MUXCY_578
     port map (
      jump_carry5 => jump_carry5,
      jump_carry8 => jump_carry8,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => \bp0_branch_target_reg[31]\,
      lopt_3 => lopt_10,
      lopt_4 => lopt_11,
      lopt_5 => lopt_12,
      lopt_6 => lopt_13,
      lopt_7 => lopt_14
    );
MUXCY_JUMP_CARRY9: entity work.microblaze_microblaze_0_0_MB_MUXCY_579
     port map (
      Clear_Buffer => Clear_Buffer,
      M0_Jump_Taken0 => M0_Jump_Taken0,
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \bp0_branch_target_reg[31]\ => \bp0_branch_target_reg[31]\,
      bp0_jump0 => bp0_jump0,
      bp0_keep_jump => bp0_keep_jump,
      bp0_keep_jump_reg => bp0_keep_jump_reg,
      bp0_keep_jump_reg_0 => bp0_keep_jump_reg_0,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_jump_hold => ex_jump_hold,
      ex_mbar_decode_reg => \^ex_jump\,
      jump_carry8 => jump_carry8,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => keep_jump_taken_with_ds_reg,
      keep_jump_taken_with_ds_reg_0 => of_PipeRun_for_ce,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      sync_reset => reset_bool_for_rst,
      wb_abort_div => wb_abort_div,
      \wb_exception_raw_kind_reg[31]\(0) => \wb_exception_raw_kind_reg[31]\(0)
    );
ex_op1_cmp_eq_n_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq_n7_out,
      Q => ex_op1_cmp_equal_n,
      R => reset_bool_for_rst
    );
ex_op1_cmp_eq_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq,
      Q => EX_Op1_CMP_Equal,
      S => reset_bool_for_rst
    );
force1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force12_out,
      Q => force1_reg_n_0,
      R => reset_bool_for_rst
    );
force2_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_op1_cmp_eq1,
      Q => force2,
      R => reset_bool_for_rst
    );
force_DI1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A6"
    )
        port map (
      I0 => force_Val1_reg_n_0,
      I1 => use_Reg_Neg_DI_reg_n_0,
      I2 => \Using_FPGA.Native_3\(0),
      O => DI
    );
force_Val1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force_Val10_out,
      Q => force_Val1_reg_n_0,
      R => reset_bool_for_rst
    );
force_Val2_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => force_Val2_N_reg_0,
      Q => force_Val2_N,
      S => reset_bool_for_rst
    );
force_jump1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"A6"
    )
        port map (
      I0 => force1_reg_n_0,
      I1 => use_Reg_Neg_S_reg_n_0,
      I2 => \Using_FPGA.Native_3\(0),
      O => S
    );
use_Reg_Neg_DI_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_DI1_out,
      Q => use_Reg_Neg_DI_reg_n_0,
      R => reset_bool_for_rst
    );
use_Reg_Neg_S_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => use_Reg_Neg_S3_out,
      Q => use_Reg_Neg_S_reg_n_0,
      R => reset_bool_for_rst
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MSR_Reg_ff is
  port (
    ex_MSR_i : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    EX_CarryIn : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    m3_msr : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    \Using_FPGA.Native_17\ : out STD_LOGIC;
    wb_msr : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_18\ : out STD_LOGIC;
    \Using_FPGA.Native_19\ : out STD_LOGIC;
    \Using_FPGA.Native_20\ : out STD_LOGIC;
    \of_MSR_i_reg[22]_0\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \of_MSR_i_reg[25]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    D : out STD_LOGIC_VECTOR ( 3 downto 0 );
    sync_reset : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    \Using_FPGA.Native_35\ : in STD_LOGIC;
    \Using_FPGA.Native_36\ : in STD_LOGIC;
    \Using_FPGA.Native_37\ : in STD_LOGIC;
    \Using_FPGA.Native_38\ : in STD_LOGIC;
    \Using_FPGA.Native_39\ : in STD_LOGIC;
    \Using_FPGA.Native_40\ : in STD_LOGIC;
    \Using_FPGA.Native_41\ : in STD_LOGIC;
    \Using_FPGA.Native_42\ : in STD_LOGIC;
    \Using_FPGA.Native_43\ : in STD_LOGIC;
    \Using_FPGA.Native_44\ : in STD_LOGIC;
    \of_MSR_i_reg[22]_1\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \of_MSR_i_reg[17]_0\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    read_register_MSR_1 : in STD_LOGIC;
    \data_rd_reg_reg[25]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    wb_gpr_wr_dbg : in STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_45\ : in STD_LOGIC;
    wb_div_zero_overflow : in STD_LOGIC;
    wb_msr_clear_bip : in STD_LOGIC;
    \Using_FPGA.Native_46\ : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    of_piperun : in STD_LOGIC;
    \of_MSR_i_reg[25]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MSR_Reg_ff : entity is "MSR_Reg_ff";
end microblaze_microblaze_0_0_MSR_Reg_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_MSR_Reg_ff is
  signal \^ex_carryin\ : STD_LOGIC;
  signal \Gen_M0_Bit_DFF[28].Using_Low.m0_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M0_Bit_DFF[29].Using_Low.m0_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M1_Bit_DFF[28].Using_Low.m1_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M1_Bit_DFF[29].Using_Low.m1_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M2_Bit_DFF[28].Using_Low.m2_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M2_Bit_DFF[29].Using_Low.m2_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_M3_Bit_DFF[25].Using_Low.m3_msr_FF_n_1\ : STD_LOGIC;
  signal \Gen_M3_Bit_DFF[29].Using_Low.m3_msr_FF_n_0\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_6\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_2\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_3\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_4\ : STD_LOGIC;
  signal \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_5\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_9\ : STD_LOGIC;
  signal \^ex_msr_i\ : STD_LOGIC_VECTOR ( 10 downto 0 );
  signal m0_MSR_i : STD_LOGIC_VECTOR ( 17 to 31 );
  signal m1_MSR_i : STD_LOGIC_VECTOR ( 17 to 31 );
  signal m2_MSR_i : STD_LOGIC_VECTOR ( 17 to 31 );
  signal m3_MSR_i : STD_LOGIC_VECTOR ( 17 to 31 );
  signal of_MSR_cmb : STD_LOGIC_VECTOR ( 17 to 31 );
  signal of_MSR_cmb_pipemove : STD_LOGIC_VECTOR ( 31 downto 17 );
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of of_MSR_cmb_pipemove : signal is "true";
  signal of_MSR_cmb_pipestall : STD_LOGIC_VECTOR ( 31 downto 17 );
  attribute RTL_KEEP of of_MSR_cmb_pipestall : signal is "true";
  signal \^of_msr_i_reg[22]_0\ : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal \^wb_msr\ : STD_LOGIC_VECTOR ( 3 downto 0 );
begin
  EX_CarryIn <= \^ex_carryin\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_9\ <= \^using_fpga.native_9\;
  ex_MSR_i(10 downto 0) <= \^ex_msr_i\(10 downto 0);
  of_MSR_cmb_pipemove(31) <= \of_MSR_i_reg[17]_0\(0);
  of_MSR_cmb_pipemove(30) <= \of_MSR_i_reg[17]_0\(1);
  of_MSR_cmb_pipemove(29) <= \of_MSR_i_reg[17]_0\(2);
  of_MSR_cmb_pipemove(28) <= \of_MSR_i_reg[17]_0\(3);
  of_MSR_cmb_pipemove(27) <= \of_MSR_i_reg[17]_0\(4);
  of_MSR_cmb_pipemove(26) <= \of_MSR_i_reg[17]_0\(5);
  of_MSR_cmb_pipemove(25) <= \of_MSR_i_reg[17]_0\(6);
  of_MSR_cmb_pipemove(24) <= \of_MSR_i_reg[17]_0\(7);
  of_MSR_cmb_pipemove(23) <= \of_MSR_i_reg[17]_0\(8);
  of_MSR_cmb_pipemove(22) <= \of_MSR_i_reg[17]_0\(9);
  of_MSR_cmb_pipemove(21) <= \of_MSR_i_reg[17]_0\(10);
  of_MSR_cmb_pipemove(20) <= \of_MSR_i_reg[17]_0\(11);
  of_MSR_cmb_pipemove(19) <= \of_MSR_i_reg[17]_0\(12);
  of_MSR_cmb_pipemove(18) <= \of_MSR_i_reg[17]_0\(13);
  of_MSR_cmb_pipemove(17) <= \of_MSR_i_reg[17]_0\(14);
  of_MSR_cmb_pipestall(30) <= \of_MSR_i_reg[22]_1\(0);
  of_MSR_cmb_pipestall(28) <= \of_MSR_i_reg[22]_1\(1);
  of_MSR_cmb_pipestall(23) <= \of_MSR_i_reg[22]_1\(2);
  of_MSR_cmb_pipestall(22) <= \of_MSR_i_reg[22]_1\(3);
  \of_MSR_i_reg[22]_0\(4 downto 3) <= \^of_msr_i_reg[22]_0\(4 downto 3);
  \of_MSR_i_reg[22]_0\(2) <= of_MSR_cmb_pipestall(25);
  \of_MSR_i_reg[22]_0\(1 downto 0) <= \^of_msr_i_reg[22]_0\(1 downto 0);
  \of_MSR_i_reg[25]_0\(1) <= of_MSR_cmb_pipestall(25);
  \of_MSR_i_reg[25]_0\(0) <= of_MSR_cmb_pipestall(30);
  \wb_exception_from_m3_reg_rep__0\(1) <= of_MSR_cmb_pipemove(25);
  \wb_exception_from_m3_reg_rep__0\(0) <= of_MSR_cmb_pipemove(30);
  wb_msr(3 downto 0) <= \^wb_msr\(3 downto 0);
\Gen_Ex_Bit_DFF[17].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_700
     port map (
      Clk => Clk,
      D_2 => D_2,
      ex_MSR_i(0) => \^ex_msr_i\(10),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[18].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_701
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_21\,
      ex_MSR_i(0) => \^ex_msr_i\(9),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[19].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_702
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_22\,
      ex_MSR_i(0) => \^ex_msr_i\(8),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[20].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_703
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_23\,
      ex_MSR_i(0) => \^ex_msr_i\(7),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[21].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_704
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_24\,
      ex_MSR_i(0) => \^ex_msr_i\(6),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[22].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_705
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_25\,
      ex_MSR_i(0) => \^ex_msr_i\(5),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[23].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_706
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_26\,
      ex_MSR_i(0) => \^ex_msr_i\(4),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[24].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_707
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_27\,
      ex_MSR_i(0) => \^ex_msr_i\(3),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[25].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_708
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_28\,
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[26].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_709
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_29\,
      ex_MSR_i(0) => \^ex_msr_i\(2),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[27].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_710
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_30\,
      ex_MSR_i(0) => \^ex_msr_i\(1),
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[28].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_711
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_31\,
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[29].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_712
     port map (
      Clk => Clk,
      EX_CarryIn => \^ex_carryin\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_32\,
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[30].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_713
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_33\,
      sync_reset => sync_reset
    );
\Gen_Ex_Bit_DFF[31].Using_Low.ex_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_714
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_34\,
      ex_MSR_i(0) => \^ex_msr_i\(0),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[17].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_715
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(17),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[18].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_716
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(18),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[19].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_717
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(19),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[20].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_718
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(20),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[21].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_719
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(21),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[22].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_720
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(22),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[23].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_721
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(23),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[24].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_722
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(24),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[25].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_723
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_35\,
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[26].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_724
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(26),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[27].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_725
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(27),
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[28].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_726
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M0_Bit_DFF[28].Using_Low.m0_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_4\,
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[29].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_727
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M0_Bit_DFF[29].Using_Low.m0_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_4\,
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[30].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_728
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_36\,
      sync_reset => sync_reset
    );
\Gen_M0_Bit_DFF[31].Using_Low.m0_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_729
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_3\,
      m0_MSR_i(0) => m0_MSR_i(31),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[17].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_730
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(17),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[18].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_731
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(18),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[19].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_732
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(19),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[20].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_733
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(20),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[21].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_734
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(21),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[22].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_735
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(22),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[23].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_736
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(23),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[24].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_737
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(24),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[25].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_738
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_37\,
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[26].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_739
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(26),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[27].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_740
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(27),
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[28].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_741
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M1_Bit_DFF[28].Using_Low.m1_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_3\,
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[29].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_742
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M1_Bit_DFF[29].Using_Low.m1_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_5\,
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[30].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_743
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_38\,
      sync_reset => sync_reset
    );
\Gen_M1_Bit_DFF[31].Using_Low.m1_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_744
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_4\,
      m1_MSR_i(0) => m1_MSR_i(31),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[17].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_745
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(17),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[18].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_746
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(18),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[19].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_747
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(19),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[20].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_748
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(20),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[21].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_749
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(21),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[22].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_750
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(22),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[23].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_751
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(23),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[24].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_752
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(24),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[25].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_753
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_39\,
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[26].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_754
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(26),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[27].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_755
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(27),
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[28].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_756
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M2_Bit_DFF[28].Using_Low.m2_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_2\,
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[29].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_757
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M2_Bit_DFF[29].Using_Low.m2_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_6\,
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[30].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_758
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_40\,
      sync_reset => sync_reset
    );
\Gen_M2_Bit_DFF[31].Using_Low.m2_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_759
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_5\,
      m2_MSR_i(0) => m2_MSR_i(31),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[17].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_760
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(17),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[18].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_761
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(18),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[19].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_762
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(19),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[20].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_763
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(20),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[21].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_764
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(21),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[22].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_765
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(22),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[23].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_766
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(23),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[24].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_767
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(24),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[25].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_768
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_1\ => \Gen_M3_Bit_DFF[25].Using_Low.m3_msr_FF_n_1\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_41\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_45\,
      sync_reset => sync_reset,
      wb_div_zero_overflow => wb_div_zero_overflow,
      wb_msr(0) => \^wb_msr\(3)
    );
\Gen_M3_Bit_DFF[26].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_769
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(26),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[27].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_770
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(27),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[28].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_771
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_5\,
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[29].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_772
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_M3_Bit_DFF[29].Using_Low.m3_msr_FF_n_0\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_3\,
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[30].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_773
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_42\,
      m3_msr(0) => m3_msr(0),
      sync_reset => sync_reset
    );
\Gen_M3_Bit_DFF[31].Using_Low.m3_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_774
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_2\,
      m3_MSR_i(0) => m3_MSR_i(31),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_775
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(17),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[17].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(10),
      m0_MSR_i(0) => m0_MSR_i(17),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(17),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(17),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(17),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[17]\(0) => of_MSR_cmb_pipestall(17),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(17),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_776
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(18),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[18].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(9),
      m0_MSR_i(0) => m0_MSR_i(18),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(18),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(18),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(18),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[18]\(0) => of_MSR_cmb_pipestall(18),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(18),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_777
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(19),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[19].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(8),
      m0_MSR_i(0) => m0_MSR_i(19),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(19),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(19),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(19),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[19]\(0) => of_MSR_cmb_pipestall(19),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(19),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_778
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(20),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[20].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(7),
      m0_MSR_i(0) => m0_MSR_i(20),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(20),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(20),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(20),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[20]\(0) => of_MSR_cmb_pipestall(20),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(20),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_779
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(21),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[21].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(6),
      m0_MSR_i(0) => m0_MSR_i(21),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(21),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(21),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(21),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[21]\(0) => of_MSR_cmb_pipestall(21),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(21),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_780
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(22),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[22].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_45\,
      ex_MSR_i(0) => \^ex_msr_i\(5),
      m0_MSR_i(0) => m0_MSR_i(22),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(22),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(22),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(22),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[22]\(0) => of_MSR_cmb_pipestall(22),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(22),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_781
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(23),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[23].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_45\,
      ex_MSR_i(0) => \^ex_msr_i\(4),
      m0_MSR_i(0) => m0_MSR_i(23),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(23),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(23),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(23),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[23]\(0) => of_MSR_cmb_pipestall(23),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(23),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_782
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(24),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[24].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(3),
      m0_MSR_i(0) => m0_MSR_i(24),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(24),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(24),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(24),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[24]\(0) => of_MSR_cmb_pipestall(24),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(24),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[25].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_783
     port map (
      Clk => Clk,
      D(0) => D(3),
      \Using_FPGA.Native_0\ => \Gen_M3_Bit_DFF[25].Using_Low.m3_msr_FF_n_1\,
      WB_Fwd(0) => WB_Fwd(3),
      \data_rd_reg_reg[25]\(0) => \data_rd_reg_reg[25]\(3),
      \data_rd_reg_reg[25]_0\ => \data_rd_reg_reg[30]\,
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_msr(0) => \^wb_msr\(3)
    );
\Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_784
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(26),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[26].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(2),
      m0_MSR_i(0) => m0_MSR_i(26),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(26),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(26),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(26),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[26]\(0) => of_MSR_cmb_pipestall(26),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(26),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_785
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(27),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[27].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(1),
      m0_MSR_i(0) => m0_MSR_i(27),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(27),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(27),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(27),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[27]\(0) => of_MSR_cmb_pipestall(27),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(27),
      sync_reset => sync_reset
    );
\Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_786
     port map (
      Clk => Clk,
      D(0) => D(2),
      \Using_FPGA.Native_0\ => \^wb_msr\(2),
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_10\ => \Gen_M0_Bit_DFF[28].Using_Low.m0_msr_FF_n_0\,
      \Using_FPGA.Native_11\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_12\ => \^using_fpga.native_9\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[28].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\(0) => of_MSR_cmb(28),
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_43\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_46\,
      \Using_FPGA.Native_8\ => \Gen_M1_Bit_DFF[28].Using_Low.m1_msr_FF_n_0\,
      \Using_FPGA.Native_9\ => \Gen_M2_Bit_DFF[28].Using_Low.m2_msr_FF_n_0\,
      WB_Fwd(0) => WB_Fwd(2),
      \data_rd_reg_reg[28]\(0) => \data_rd_reg_reg[25]\(2),
      \data_rd_reg_reg[28]_0\ => \data_rd_reg_reg[30]\,
      m0_piperun => m0_piperun,
      m1_piperun => m1_piperun,
      m2_piperun => m2_piperun,
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[28]\ => \Using_FPGA.Native_45\,
      \of_MSR_i_reg[28]_0\(0) => of_MSR_cmb_pipestall(28),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(28),
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_msr_clear_bip => wb_msr_clear_bip
    );
\Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_787
     port map (
      Clk => Clk,
      D(0) => D(1),
      EX_CarryIn => \^ex_carryin\,
      \Using_FPGA.Native_0\ => \^wb_msr\(1),
      \Using_FPGA.Native_1\(0) => of_MSR_cmb(29),
      \Using_FPGA.Native_10\ => \Gen_M1_Bit_DFF[29].Using_Low.m1_msr_FF_n_0\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Gen_WB_Bit_DFF[29].Using_Low.wb_msr_FF_n_6\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_45\,
      \Using_FPGA.Native_7\ => \Gen_M3_Bit_DFF[29].Using_Low.m3_msr_FF_n_0\,
      \Using_FPGA.Native_8\ => \Gen_M2_Bit_DFF[29].Using_Low.m2_msr_FF_n_0\,
      \Using_FPGA.Native_9\ => \Gen_M0_Bit_DFF[29].Using_Low.m0_msr_FF_n_0\,
      WB_Fwd(0) => WB_Fwd(1),
      \data_rd_reg_reg[29]\(0) => \data_rd_reg_reg[25]\(1),
      \data_rd_reg_reg[29]_0\ => \data_rd_reg_reg[30]\,
      m0_piperun => m0_piperun,
      m1_piperun => m1_piperun,
      m2_piperun => m2_piperun,
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[29]\(0) => of_MSR_cmb_pipestall(29),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(29),
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
\Gen_WB_Bit_DFF[30].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_788
     port map (
      Clk => Clk,
      D(0) => D(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_44\,
      WB_Fwd(0) => WB_Fwd(0),
      \data_rd_reg_reg[30]\(0) => \data_rd_reg_reg[25]\(0),
      \data_rd_reg_reg[30]_0\ => \data_rd_reg_reg[30]\,
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_msr(0) => \^wb_msr\(0)
    );
\Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF\: entity work.microblaze_microblaze_0_0_MB_FDR_789
     port map (
      Clk => Clk,
      D(0) => of_MSR_cmb(31),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_1\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_2\,
      \Using_FPGA.Native_2\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_3\,
      \Using_FPGA.Native_3\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_4\,
      \Using_FPGA.Native_4\ => \Gen_WB_Bit_DFF[31].Using_Low.wb_msr_FF_n_5\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_46\,
      ex_MSR_i(0) => \^ex_msr_i\(0),
      m0_MSR_i(0) => m0_MSR_i(31),
      m0_piperun => m0_piperun,
      m1_MSR_i(0) => m1_MSR_i(31),
      m1_piperun => m1_piperun,
      m2_MSR_i(0) => m2_MSR_i(31),
      m2_piperun => m2_piperun,
      m3_MSR_i(0) => m3_MSR_i(31),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[31]\(0) => of_MSR_cmb_pipestall(31),
      of_piperun => of_piperun,
      \out\(0) => of_MSR_cmb_pipemove(31),
      sync_reset => sync_reset
    );
\of_MSR_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(17),
      Q => of_MSR_cmb_pipestall(17),
      R => sync_reset
    );
\of_MSR_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(18),
      Q => of_MSR_cmb_pipestall(18),
      R => sync_reset
    );
\of_MSR_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(19),
      Q => of_MSR_cmb_pipestall(19),
      R => sync_reset
    );
\of_MSR_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(20),
      Q => of_MSR_cmb_pipestall(20),
      R => sync_reset
    );
\of_MSR_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(21),
      Q => of_MSR_cmb_pipestall(21),
      R => sync_reset
    );
\of_MSR_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(22),
      Q => \^of_msr_i_reg[22]_0\(4),
      R => sync_reset
    );
\of_MSR_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(23),
      Q => \^of_msr_i_reg[22]_0\(3),
      R => sync_reset
    );
\of_MSR_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(24),
      Q => of_MSR_cmb_pipestall(24),
      R => sync_reset
    );
\of_MSR_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \of_MSR_i_reg[25]_1\(1),
      Q => of_MSR_cmb_pipestall(25),
      R => sync_reset
    );
\of_MSR_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(26),
      Q => of_MSR_cmb_pipestall(26),
      R => sync_reset
    );
\of_MSR_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(27),
      Q => of_MSR_cmb_pipestall(27),
      R => sync_reset
    );
\of_MSR_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(28),
      Q => \^of_msr_i_reg[22]_0\(1),
      R => sync_reset
    );
\of_MSR_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(29),
      Q => of_MSR_cmb_pipestall(29),
      R => sync_reset
    );
\of_MSR_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \of_MSR_i_reg[25]_1\(0),
      Q => \^of_msr_i_reg[22]_0\(0),
      R => sync_reset
    );
\of_MSR_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_MSR_cmb(31),
      Q => of_MSR_cmb_pipestall(31),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_OneHot_Buffer is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    of_raw_valid : out STD_LOGIC;
    addr : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[26]_0\ : out STD_LOGIC;
    \cur_data_i_reg[27]_0\ : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_jump_nodelay_reg_0 : out STD_LOGIC;
    \cur_data_i_reg[26]_1\ : out STD_LOGIC;
    \cur_data_i_reg[26]_2\ : out STD_LOGIC;
    \cur_data_i_reg[28]_0\ : out STD_LOGIC;
    ex_jump_nodelay_reg_1 : out STD_LOGIC;
    \cur_data_i_reg[10]_0\ : out STD_LOGIC;
    \cur_data_i_reg[28]_1\ : out STD_LOGIC;
    \cur_data_i_reg[26]_3\ : out STD_LOGIC;
    \cur_data_i_reg[26]_4\ : out STD_LOGIC;
    \cur_data_i_reg[26]_5\ : out STD_LOGIC;
    \cur_data_i_reg[26]_6\ : out STD_LOGIC;
    \cur_data_i_reg[26]_7\ : out STD_LOGIC;
    of_ex_complete_in_later_stage : out STD_LOGIC;
    of_m0_complete_in_later_stage : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    of_op3_sel : out STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel_spr : out STD_LOGIC;
    of_m1_complete_in_later_stage : out STD_LOGIC;
    \cur_data_i_reg[27]_1\ : out STD_LOGIC;
    ex_move_to_MSR_instr35_out : out STD_LOGIC;
    in0 : out STD_LOGIC;
    \cur_data_i_reg[18]_0\ : out STD_LOGIC;
    \cur_data_i_reg[28]_2\ : out STD_LOGIC;
    ex_MSR_set_decode : out STD_LOGIC;
    ex_MSR_clear_decode : out STD_LOGIC;
    ex_branch_with_delayslot0 : out STD_LOGIC;
    ex_jump_nodelay0 : out STD_LOGIC;
    ex_atomic_instruction_pair0 : out STD_LOGIC;
    \cur_data_i_reg[31]_0\ : out STD_LOGIC;
    of_doublet_access : out STD_LOGIC;
    EX_Pattern_Cmp_Sel7_out : out STD_LOGIC;
    \cur_data_i_reg[7]_0\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    force12_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    ex_op1_cmp_eq1 : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    ex_op1_cmp_eq_n7_out : out STD_LOGIC;
    \cur_data_i_reg[5]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_shift_carry0 : out STD_LOGIC;
    \cur_data_i_reg[5]_1\ : out STD_LOGIC;
    ex_databus_read_i0 : out STD_LOGIC;
    ex_databus_exclusive_i0 : out STD_LOGIC;
    p_104_in : out STD_LOGIC;
    S : out STD_LOGIC;
    m3_is_div_instr_i_reg : out STD_LOGIC;
    of_is_div_instr : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    of_byte_access : out STD_LOGIC;
    \cur_data_i_reg[31]_1\ : out STD_LOGIC;
    ex_mbar_is_sleep0 : out STD_LOGIC;
    EX_CMP_Op12_out : out STD_LOGIC;
    EX_Unsigned_Op11_out : out STD_LOGIC;
    ex_load_alu_carry2_out : out STD_LOGIC;
    EX_Use_Carry10_out : out STD_LOGIC;
    EX_Bit_Extract0 : out STD_LOGIC;
    of_is_bsifi : out STD_LOGIC;
    OF_Use_Op_B : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    S_10 : out STD_LOGIC;
    S_11 : out STD_LOGIC;
    S_12 : out STD_LOGIC;
    S_13 : out STD_LOGIC;
    S_14 : out STD_LOGIC;
    \cur_data_i_reg[30]_0\ : out STD_LOGIC;
    \cur_data_i_reg[29]_0\ : out STD_LOGIC;
    \cur_data_i_reg[28]_3\ : out STD_LOGIC;
    \cur_data_i_reg[28]_4\ : out STD_LOGIC;
    \cur_data_i_reg[28]_5\ : out STD_LOGIC;
    \cur_data_i_reg[28]_6\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \cur_data_i_reg[26]_8\ : out STD_LOGIC;
    \cur_data_i_reg[31]_2\ : out STD_LOGIC;
    \cur_data_i_reg[26]_9\ : out STD_LOGIC;
    \cur_data_i_reg[31]_3\ : out STD_LOGIC;
    \cur_data_i_reg[26]_10\ : out STD_LOGIC;
    \cur_data_i_reg[31]_4\ : out STD_LOGIC;
    \cur_data_i_reg[26]_11\ : out STD_LOGIC;
    \cur_data_i_reg[31]_5\ : out STD_LOGIC;
    EX_CLZ_Instr_reg : out STD_LOGIC;
    m2_m1_sel_res_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_6_0\ : out STD_LOGIC;
    \EX_Op3[0]_i_7_0\ : out STD_LOGIC;
    \cur_data_i_reg[6]_0\ : out STD_LOGIC;
    \cur_data_i_reg[15]_0\ : out STD_LOGIC;
    \cur_data_i_reg[14]_0\ : out STD_LOGIC;
    \cur_data_i_reg[13]_0\ : out STD_LOGIC;
    \cur_data_i_reg[11]_0\ : out STD_LOGIC;
    \cur_data_i_reg[10]_1\ : out STD_LOGIC;
    \cur_data_i_reg[31]_6\ : out STD_LOGIC_VECTOR ( 28 downto 0 );
    \cur_data_i_reg[0]_0\ : out STD_LOGIC;
    \cur_data_i_reg[15]_1\ : out STD_LOGIC;
    \imm_reg_reg[2]\ : out STD_LOGIC;
    \imm_reg_reg[3]\ : out STD_LOGIC;
    \imm_reg_reg[4]\ : out STD_LOGIC;
    \imm_reg_reg[5]\ : out STD_LOGIC;
    \imm_reg_reg[6]\ : out STD_LOGIC;
    \imm_reg_reg[7]\ : out STD_LOGIC;
    \imm_reg_reg[8]\ : out STD_LOGIC;
    \imm_reg_reg[9]\ : out STD_LOGIC;
    \imm_reg_reg[10]\ : out STD_LOGIC;
    \imm_reg_reg[11]\ : out STD_LOGIC;
    \imm_reg_reg[12]\ : out STD_LOGIC;
    \imm_reg_reg[13]\ : out STD_LOGIC;
    \imm_reg_reg[14]\ : out STD_LOGIC;
    \imm_reg_reg[15]\ : out STD_LOGIC;
    \imm_reg_reg[0]\ : out STD_LOGIC;
    \cur_data_i_reg[0]_1\ : out STD_LOGIC;
    \cur_data_i_reg[1]_0\ : out STD_LOGIC;
    \cur_data_i_reg[2]_0\ : out STD_LOGIC;
    \cur_data_i_reg[3]_0\ : out STD_LOGIC;
    \cur_data_i_reg[4]_0\ : out STD_LOGIC;
    \cur_data_i_reg[5]_2\ : out STD_LOGIC;
    \cur_data_i_reg[7]_1\ : out STD_LOGIC;
    \cur_data_i_reg[8]_0\ : out STD_LOGIC;
    \cur_data_i_reg[9]_0\ : out STD_LOGIC;
    \cur_data_i_reg[12]_0\ : out STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_brki_hit_reg_0\ : in STD_LOGIC;
    ex_jump_nodelay : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    if4_data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \cur_data_i_reg[0]_2\ : in STD_LOGIC;
    \EX_Op3[0]_i_4\ : in STD_LOGIC;
    \EX_Op3[0]_i_18_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_1\ : in STD_LOGIC;
    \EX_Op3[0]_i_17_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_2\ : in STD_LOGIC;
    \EX_Op3[0]_i_16_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_3\ : in STD_LOGIC;
    \EX_Op3[0]_i_15_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_4\ : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \EX_Op3[29]_i_3\ : in STD_LOGIC;
    ex_databus_access_i_reg : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \EX_Op3[0]_i_7_5\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    if0_pause : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \EX_Op3[0]_i_12_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_6_1\ : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \Using_FPGA.Native_12\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op3_reg[30]_0\ : in STD_LOGIC;
    \EX_Op3_reg[30]_1\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3_reg[31]\ : in STD_LOGIC;
    wb_fwd : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3_reg[31]_0\ : in STD_LOGIC;
    \EX_Op3_reg[31]_1\ : in STD_LOGIC;
    \EX_Op3_reg[31]_2\ : in STD_LOGIC;
    \EX_Op3_reg[31]_3\ : in STD_LOGIC;
    \EX_Op3_reg[31]_4\ : in STD_LOGIC;
    \EX_Op2[25]_i_2\ : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2[21]_i_2\ : in STD_LOGIC;
    \EX_Op2[16]_i_2\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \EX_Op1_reg[0]_0\ : in STD_LOGIC;
    \EX_Op1_reg[0]_1\ : in STD_LOGIC_VECTOR ( 28 downto 0 );
    ex_set_msr_ee_instr : in STD_LOGIC;
    \EX_Op1_reg[23]\ : in STD_LOGIC;
    \EX_Op1_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_read_imm_reg : in STD_LOGIC;
    \EX_Op2[0]_i_4\ : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_OneHot_Buffer : entity is "OneHot_Buffer";
end microblaze_microblaze_0_0_OneHot_Buffer;

architecture STRUCTURE of microblaze_microblaze_0_0_OneHot_Buffer is
  signal \Data_Mux[0].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[10].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[11].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[12].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[13].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[14].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[1].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[2].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[3].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[4].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[5].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[6].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[7].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[8].new_data_cmb_reg\ : STD_LOGIC;
  signal \Data_Mux[9].new_data_cmb_reg\ : STD_LOGIC;
  signal \EX_ALU_Op[0]_i_2_n_0\ : STD_LOGIC;
  signal EX_Bit_Insert_i_2_n_0 : STD_LOGIC;
  signal \EX_Op3[0]_i_10_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_12_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_13_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_15_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_16_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_17_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_18_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_20_n_0\ : STD_LOGIC;
  signal \^ex_op3[0]_i_6_0\ : STD_LOGIC;
  signal \^ex_op3[0]_i_7_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_8_n_0\ : STD_LOGIC;
  signal \EX_Op3[0]_i_9_n_0\ : STD_LOGIC;
  signal \EX_Op3[31]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op3[31]_i_4_n_0\ : STD_LOGIC;
  signal \Op3_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op3_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op3_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op3_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Op3_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_brki_hit_i_2_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_brki_hit_i_3_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_brki_hit_i_4_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_brki_hit_i_5_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.ex_brki_hit_i_6_n_0\ : STD_LOGIC;
  signal Prefetch_Almost_Full : STD_LOGIC;
  signal Prefetch_Early_Full : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal Use_Next_Data : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_0\ : STD_LOGIC;
  signal \^using_fpga.native_2\ : STD_LOGIC;
  signal \^using_fpga.native_3\ : STD_LOGIC;
  signal \^addr\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^cur_data_i_reg[18]_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]_0\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]_1\ : STD_LOGIC;
  signal \^cur_data_i_reg[26]_2\ : STD_LOGIC;
  signal \^cur_data_i_reg[27]_1\ : STD_LOGIC;
  signal cur_valid_cmb : STD_LOGIC;
  signal \data_buffer_reg[3][0]_srl4_n_0\ : STD_LOGIC;
  signal ex_MSR_clear_decode_i_2_n_0 : STD_LOGIC;
  signal ex_atomic_instruction_pair_i_2_n_0 : STD_LOGIC;
  signal ex_complete_in_later_stage_i_2_n_0 : STD_LOGIC;
  signal ex_databus_exclusive_i_i_2_n_0 : STD_LOGIC;
  signal ex_move_to_MSR_instr_i_2_n_0 : STD_LOGIC;
  signal ex_op1_cmp_eq_i_2_n_0 : STD_LOGIC;
  signal new_data_cmb : STD_LOGIC_VECTOR ( 31 downto 15 );
  signal of_gpr_write_dbg_inferred_i_2_n_0 : STD_LOGIC;
  signal of_gpr_write_dbg_inferred_i_3_n_0 : STD_LOGIC;
  signal of_gpr_write_dbg_inferred_i_5_n_0 : STD_LOGIC;
  signal \^of_is_div_instr\ : STD_LOGIC;
  signal \^of_op1_sel_spr\ : STD_LOGIC;
  signal \^of_op3_sel\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal p_1_in105_in : STD_LOGIC;
  signal p_1_in110_in : STD_LOGIC;
  signal p_1_in116_in : STD_LOGIC;
  signal p_1_in122_in : STD_LOGIC;
  signal p_1_in128_in : STD_LOGIC;
  signal p_1_in134_in : STD_LOGIC;
  signal p_1_in140_in : STD_LOGIC;
  signal p_1_in146_in : STD_LOGIC;
  signal p_1_in14_in : STD_LOGIC;
  signal p_1_in152_in : STD_LOGIC;
  signal p_1_in158_in : STD_LOGIC;
  signal p_1_in164_in : STD_LOGIC;
  signal p_1_in170_in : STD_LOGIC;
  signal p_1_in176_in : STD_LOGIC;
  signal p_1_in182_in : STD_LOGIC;
  signal p_1_in20_in : STD_LOGIC;
  signal p_1_in26_in : STD_LOGIC;
  signal p_1_in2_in : STD_LOGIC;
  signal p_1_in32_in : STD_LOGIC;
  signal p_1_in38_in : STD_LOGIC;
  signal p_1_in44_in : STD_LOGIC;
  signal p_1_in50_in : STD_LOGIC;
  signal p_1_in56_in : STD_LOGIC;
  signal p_1_in62_in : STD_LOGIC;
  signal p_1_in68_in : STD_LOGIC;
  signal p_1_in74_in : STD_LOGIC;
  signal p_1_in80_in : STD_LOGIC;
  signal p_1_in86_in : STD_LOGIC;
  signal p_1_in8_in : STD_LOGIC;
  signal p_1_in92_in : STD_LOGIC;
  signal p_1_in98_in : STD_LOGIC;
  signal sel_input_delayslot : STD_LOGIC;
  signal sel_input_depth : STD_LOGIC;
  signal sel_input_i : STD_LOGIC;
  signal sel_input_iii_0 : STD_LOGIC;
  signal sel_input_iii_1 : STD_LOGIC;
  signal sel_input_iii_2 : STD_LOGIC;
  signal sel_input_iii_3 : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[3]\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \EX_ALU_Op[0]_i_2\ : label is "soft_lutpair165";
  attribute SOFT_HLUTNM of EX_ALU_Sel_Logic_i_1 : label is "soft_lutpair192";
  attribute SOFT_HLUTNM of EX_Bit_Extract_i_1 : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of EX_Bit_Insert_i_1 : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of EX_Bit_Insert_i_2 : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of EX_CLZ_Instr_i_1 : label is "soft_lutpair178";
  attribute SOFT_HLUTNM of EX_CMP_Op_i_1 : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of EX_Enable_ALU_i_1 : label is "soft_lutpair165";
  attribute SOFT_HLUTNM of EX_Enable_Sext_Shift_i_1 : label is "soft_lutpair178";
  attribute SOFT_HLUTNM of \EX_Op1[18]_i_1\ : label is "soft_lutpair179";
  attribute SOFT_HLUTNM of \EX_Op1[31]_i_2\ : label is "soft_lutpair179";
  attribute SOFT_HLUTNM of \EX_Op2[0]_i_14\ : label is "soft_lutpair171";
  attribute SOFT_HLUTNM of \EX_Op2[19]_i_5\ : label is "soft_lutpair186";
  attribute SOFT_HLUTNM of \EX_Op2[22]_i_5\ : label is "soft_lutpair188";
  attribute SOFT_HLUTNM of \EX_Op2[23]_i_5\ : label is "soft_lutpair185";
  attribute SOFT_HLUTNM of \EX_Op2[24]_i_5\ : label is "soft_lutpair186";
  attribute SOFT_HLUTNM of \EX_Op2[26]_i_5\ : label is "soft_lutpair191";
  attribute SOFT_HLUTNM of \EX_Op2[27]_i_5\ : label is "soft_lutpair185";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_6\ : label is "soft_lutpair184";
  attribute SOFT_HLUTNM of \EX_Op2[30]_i_5\ : label is "soft_lutpair188";
  attribute SOFT_HLUTNM of \EX_Op2[31]_i_5\ : label is "soft_lutpair184";
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_3\ : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of \EX_Op3[0]_i_8\ : label is "soft_lutpair167";
  attribute SOFT_HLUTNM of \EX_Op3[29]_i_4\ : label is "soft_lutpair167";
  attribute SOFT_HLUTNM of \EX_Op3[31]_i_4\ : label is "soft_lutpair180";
  attribute SOFT_HLUTNM of EX_Pattern_Cmp_Sel_i_1 : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of \EX_Sext_Op[0]_i_1\ : label is "soft_lutpair177";
  attribute SOFT_HLUTNM of \EX_Sext_Op[1]_i_1\ : label is "soft_lutpair177";
  attribute SOFT_HLUTNM of EX_Unsigned_Op_i_1 : label is "soft_lutpair183";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__0\ : label is "soft_lutpair168";
  attribute SOFT_HLUTNM of \Using_Mul_Instr.ex_not_mul_op_i_i_1\ : label is "soft_lutpair168";
  attribute srl_bus_name : string;
  attribute srl_bus_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name : string;
  attribute srl_name of \data_buffer_reg[3][0]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][0]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][10]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][10]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][11]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][11]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][12]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][12]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][13]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][13]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][14]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][14]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][15]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][15]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][16]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][16]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][17]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][17]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][18]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][18]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][19]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][19]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][1]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][1]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][20]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][20]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][21]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][21]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][22]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][22]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][23]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][23]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][24]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][24]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][25]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][25]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][26]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][26]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][27]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][27]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][28]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][28]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][29]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][29]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][2]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][2]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][30]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][30]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][31]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][31]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][3]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][3]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][4]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][4]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][5]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][5]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][6]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][6]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][7]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][7]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][8]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][8]_srl4 ";
  attribute srl_bus_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3] ";
  attribute srl_name of \data_buffer_reg[3][9]_srl4\ : label is "U0/\MicroBlaze_Core_I/Frequency.Core/DECODE_I1/PREFETCH_BUFFER_I1/INSTR_BUFFER_I1/data_buffer_reg[3][9]_srl4 ";
  attribute SOFT_HLUTNM of ex_Is_BS_Instr_i_i_1 : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of ex_MSR_clear_decode_i_2 : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of ex_branch_with_delayslot_i_1 : label is "soft_lutpair190";
  attribute SOFT_HLUTNM of ex_byte_access_i_i_1 : label is "soft_lutpair174";
  attribute SOFT_HLUTNM of ex_databus_access_i_i_1 : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of ex_databus_exclusive_i_i_2 : label is "soft_lutpair175";
  attribute SOFT_HLUTNM of ex_databus_read_i_i_1 : label is "soft_lutpair166";
  attribute SOFT_HLUTNM of ex_databus_write_i_i_1 : label is "soft_lutpair166";
  attribute SOFT_HLUTNM of ex_doublet_access_i_i_1 : label is "soft_lutpair173";
  attribute SOFT_HLUTNM of ex_jump_nodelay_i_1 : label is "soft_lutpair190";
  attribute SOFT_HLUTNM of ex_load_alu_carry_i_1 : label is "soft_lutpair192";
  attribute SOFT_HLUTNM of ex_load_shift_carry_i_1 : label is "soft_lutpair191";
  attribute SOFT_HLUTNM of ex_m0_complete_in_later_stage_i_1 : label is "soft_lutpair176";
  attribute SOFT_HLUTNM of ex_m3_complete_in_later_stage_i_1 : label is "soft_lutpair189";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_i_1 : label is "soft_lutpair181";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_i_2 : label is "soft_lutpair172";
  attribute SOFT_HLUTNM of ex_op1_cmp_eq_n_i_1 : label is "soft_lutpair182";
  attribute SOFT_HLUTNM of ex_sel_alu_i_1 : label is "soft_lutpair170";
  attribute SOFT_HLUTNM of force1_i_1 : label is "soft_lutpair187";
  attribute SOFT_HLUTNM of force2_i_1 : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of force_Val1_i_1 : label is "soft_lutpair187";
  attribute SOFT_HLUTNM of of_gpr_write_dbg_inferred_i_3 : label is "soft_lutpair169";
  attribute SOFT_HLUTNM of of_gpr_write_dbg_inferred_i_5 : label is "soft_lutpair189";
  attribute SOFT_HLUTNM of use_Reg_Neg_DI_i_1 : label is "soft_lutpair182";
  attribute SOFT_HLUTNM of use_Reg_Neg_S_i_1 : label is "soft_lutpair181";
begin
  \EX_Op3[0]_i_6_0\ <= \^ex_op3[0]_i_6_0\;
  \EX_Op3[0]_i_7_0\ <= \^ex_op3[0]_i_7_0\;
  Q(31 downto 0) <= \^q\(31 downto 0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_0\ <= \^using_fpga.native_0\;
  \Using_FPGA.Native_2\ <= \^using_fpga.native_2\;
  \Using_FPGA.Native_3\ <= \^using_fpga.native_3\;
  addr(1 downto 0) <= \^addr\(1 downto 0);
  \cur_data_i_reg[18]_0\ <= \^cur_data_i_reg[18]_0\;
  \cur_data_i_reg[26]_0\ <= \^cur_data_i_reg[26]_0\;
  \cur_data_i_reg[26]_1\ <= \^cur_data_i_reg[26]_1\;
  \cur_data_i_reg[26]_2\ <= \^cur_data_i_reg[26]_2\;
  \cur_data_i_reg[27]_1\ <= \^cur_data_i_reg[27]_1\;
  of_is_div_instr <= \^of_is_div_instr\;
  of_op1_sel_spr <= \^of_op1_sel_spr\;
  of_op3_sel(0) <= \^of_op3_sel\(0);
  \wb_gpr_write_addr_reg[3]\ <= \^wb_gpr_write_addr_reg[3]\;
\EX_ALU_Op[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"DDDF0000DDDFDDDF"
    )
        port map (
      I0 => \EX_ALU_Op[0]_i_2_n_0\,
      I1 => \^q\(27),
      I2 => \^q\(30),
      I3 => \^q\(31),
      I4 => of_gpr_write_dbg_inferred_i_3_n_0,
      I5 => \^q\(19),
      O => D(1)
    );
\EX_ALU_Op[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00007707"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      I2 => \^q\(10),
      I3 => \^q\(29),
      I4 => \^q\(28),
      O => \EX_ALU_Op[0]_i_2_n_0\
    );
\EX_ALU_Op[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF444F44444444"
    )
        port map (
      I0 => of_gpr_write_dbg_inferred_i_3_n_0,
      I1 => \^q\(19),
      I2 => \^q\(30),
      I3 => \^q\(31),
      I4 => \EX_ALU_Op[0]_i_2_n_0\,
      I5 => \^q\(26),
      O => D(0)
    );
EX_ALU_Sel_Logic_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"14"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      O => \cur_data_i_reg[28]_1\
    );
EX_Bit_Extract_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => \^q\(14),
      I1 => \^q\(26),
      I2 => \^q\(29),
      I3 => \^q\(27),
      I4 => EX_Bit_Insert_i_2_n_0,
      O => EX_Bit_Extract0
    );
EX_Bit_Insert_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => \^q\(15),
      I1 => \^q\(26),
      I2 => \^q\(29),
      I3 => \^q\(27),
      I4 => EX_Bit_Insert_i_2_n_0,
      O => of_is_bsifi
    );
EX_Bit_Insert_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => EX_Bit_Insert_i_2_n_0
    );
EX_CLZ_Instr_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8000"
    )
        port map (
      I0 => \^cur_data_i_reg[26]_2\,
      I1 => \^q\(5),
      I2 => \^q\(6),
      I3 => \^q\(7),
      O => \cur_data_i_reg[5]_1\
    );
EX_CMP_Op_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(31),
      I2 => \^q\(30),
      I3 => \^q\(29),
      O => EX_CMP_Op12_out
    );
EX_Enable_ALU_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF9F"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      I2 => \^q\(10),
      I3 => \^q\(29),
      I4 => \^q\(28),
      O => \cur_data_i_reg[30]_0\
    );
EX_Enable_Sext_Shift_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"15555555"
    )
        port map (
      I0 => ex_MSR_clear_decode_i_2_n_0,
      I1 => \^q\(7),
      I2 => \^q\(6),
      I3 => \^q\(5),
      I4 => \^cur_data_i_reg[26]_2\,
      O => \cur_data_i_reg[7]_0\
    );
\EX_Op1[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op1_reg[0]\(29),
      I1 => \^cur_data_i_reg[27]_1\,
      I2 => \EX_Op1_reg[0]_0\,
      I3 => \^of_op1_sel_spr\,
      I4 => \EX_Op1_reg[0]_1\(28),
      O => \cur_data_i_reg[31]_6\(28)
    );
\EX_Op1[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4444444444444F44"
    )
        port map (
      I0 => ex_MSR_clear_decode_i_2_n_0,
      I1 => \^q\(27),
      I2 => \^q\(0),
      I3 => \^q\(15),
      I4 => \^q\(14),
      I5 => ex_move_to_MSR_instr_i_2_n_0,
      O => \^cur_data_i_reg[27]_1\
    );
\EX_Op1[0]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"50505150"
    )
        port map (
      I0 => ex_MSR_clear_decode_i_2_n_0,
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(26),
      I4 => \^q\(14),
      O => \^of_op1_sel_spr\
    );
\EX_Op1[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(19),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(18),
      O => \cur_data_i_reg[31]_6\(18)
    );
\EX_Op1[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(18),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(17),
      O => \cur_data_i_reg[31]_6\(17)
    );
\EX_Op1[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(17),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(16),
      O => \cur_data_i_reg[31]_6\(16)
    );
\EX_Op1[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(16),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(15),
      O => \cur_data_i_reg[31]_6\(15)
    );
\EX_Op1[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(15),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(14),
      O => \cur_data_i_reg[31]_6\(14)
    );
\EX_Op1[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(14),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(13),
      O => \cur_data_i_reg[31]_6\(13)
    );
\EX_Op1[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(13),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(12),
      O => \cur_data_i_reg[31]_6\(12)
    );
\EX_Op1[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(12),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(11),
      O => \cur_data_i_reg[31]_6\(11)
    );
\EX_Op1[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(11),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(10),
      O => \cur_data_i_reg[31]_6\(10)
    );
\EX_Op1[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(10),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(9),
      O => \cur_data_i_reg[31]_6\(9)
    );
\EX_Op1[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(28),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(27),
      O => \cur_data_i_reg[31]_6\(27)
    );
\EX_Op1[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(9),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(8),
      O => \cur_data_i_reg[31]_6\(8)
    );
\EX_Op1[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(8),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(7),
      O => \cur_data_i_reg[31]_6\(7)
    );
\EX_Op1[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(7),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(6),
      O => \cur_data_i_reg[31]_6\(6)
    );
\EX_Op1[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88B8FFFF88B80000"
    )
        port map (
      I0 => \EX_Op1_reg[0]\(6),
      I1 => \^cur_data_i_reg[27]_1\,
      I2 => ex_set_msr_ee_instr,
      I3 => \EX_Op1_reg[23]\,
      I4 => \^of_op1_sel_spr\,
      I5 => \EX_Op1_reg[0]_1\(5),
      O => \cur_data_i_reg[31]_6\(5)
    );
\EX_Op1[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(5),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(4),
      O => \cur_data_i_reg[31]_6\(4)
    );
\EX_Op1[25]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op1_reg[0]\(4),
      I1 => \^cur_data_i_reg[27]_1\,
      I2 => \EX_Op1_reg[25]\(0),
      I3 => \^of_op1_sel_spr\,
      I4 => \EX_Op1_reg[0]_1\(3),
      O => \cur_data_i_reg[31]_6\(3)
    );
\EX_Op1[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(3),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(2),
      O => \cur_data_i_reg[31]_6\(2)
    );
\EX_Op1[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(2),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(1),
      O => \cur_data_i_reg[31]_6\(1)
    );
\EX_Op1[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op1_reg[0]\(1),
      I1 => \^cur_data_i_reg[27]_1\,
      I2 => of_msr(0),
      I3 => \^of_op1_sel_spr\,
      I4 => \EX_Op1_reg[0]_1\(0),
      O => \cur_data_i_reg[31]_6\(0)
    );
\EX_Op1[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(27),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(26),
      O => \cur_data_i_reg[31]_6\(26)
    );
\EX_Op1[31]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(0),
      O => \cur_data_i_reg[0]_0\
    );
\EX_Op1[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(26),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(25),
      O => \cur_data_i_reg[31]_6\(25)
    );
\EX_Op1[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(25),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(24),
      O => \cur_data_i_reg[31]_6\(24)
    );
\EX_Op1[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(24),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(23),
      O => \cur_data_i_reg[31]_6\(23)
    );
\EX_Op1[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(23),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(22),
      O => \cur_data_i_reg[31]_6\(22)
    );
\EX_Op1[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(22),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(21),
      O => \cur_data_i_reg[31]_6\(21)
    );
\EX_Op1[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(21),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(20),
      O => \cur_data_i_reg[31]_6\(20)
    );
\EX_Op1[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"8F80"
    )
        port map (
      I0 => \^cur_data_i_reg[27]_1\,
      I1 => \EX_Op1_reg[0]\(20),
      I2 => \^of_op1_sel_spr\,
      I3 => \EX_Op1_reg[0]_1\(19),
      O => \cur_data_i_reg[31]_6\(19)
    );
\EX_Op2[0]_i_10\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0F0F2F0F0F0F0F0"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(29),
      I3 => \^q\(31),
      I4 => \^q\(30),
      I5 => \^q\(28),
      O => \^cur_data_i_reg[26]_0\
    );
\EX_Op2[0]_i_14\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAAAEAA"
    )
        port map (
      I0 => \^q\(29),
      I1 => \^q\(31),
      I2 => \^q\(30),
      I3 => \^q\(28),
      I4 => \^q\(27),
      O => \cur_data_i_reg[29]_0\
    );
\EX_Op2[0]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8FFB800"
    )
        port map (
      I0 => \EX_Op2[0]_i_4\(15),
      I1 => of_read_imm_reg,
      I2 => \^q\(15),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(0),
      O => \imm_reg_reg[0]\
    );
\EX_Op2[10]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(10),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(5),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[10]\
    );
\EX_Op2[11]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(11),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(4),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[11]\
    );
\EX_Op2[12]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(12),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(3),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[12]\
    );
\EX_Op2[13]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(13),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(2),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[13]\
    );
\EX_Op2[14]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(14),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(1),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[14]\
    );
\EX_Op2[15]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(15),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(0),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[15]\
    );
\EX_Op2[16]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \EX_Op2[16]_i_2\(4),
      I1 => \EX_Op2[21]_i_2\,
      I2 => \^q\(15),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(16),
      O => \cur_data_i_reg[15]_0\
    );
\EX_Op2[17]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \EX_Op2[16]_i_2\(3),
      I1 => \EX_Op2[21]_i_2\,
      I2 => \^q\(14),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(17),
      O => \cur_data_i_reg[14]_0\
    );
\EX_Op2[18]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \EX_Op2[16]_i_2\(2),
      I1 => \EX_Op2[21]_i_2\,
      I2 => \^q\(13),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(18),
      O => \cur_data_i_reg[13]_0\
    );
\EX_Op2[19]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(12),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(19),
      O => \cur_data_i_reg[12]_0\
    );
\EX_Op2[1]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0355CF55"
    )
        port map (
      I0 => GPR_Op2(1),
      I1 => of_read_imm_reg,
      I2 => \^q\(15),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => \EX_Op2[0]_i_4\(14),
      O => \cur_data_i_reg[15]_1\
    );
\EX_Op2[20]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \EX_Op2[16]_i_2\(1),
      I1 => \EX_Op2[21]_i_2\,
      I2 => \^q\(11),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(20),
      O => \cur_data_i_reg[11]_0\
    );
\EX_Op2[21]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"B8BBB888"
    )
        port map (
      I0 => \EX_Op2[16]_i_2\(0),
      I1 => \EX_Op2[21]_i_2\,
      I2 => \^q\(10),
      I3 => \^cur_data_i_reg[26]_0\,
      I4 => GPR_Op2(21),
      O => \cur_data_i_reg[10]_1\
    );
\EX_Op2[22]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(22),
      O => \cur_data_i_reg[9]_0\
    );
\EX_Op2[23]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(8),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(23),
      O => \cur_data_i_reg[8]_0\
    );
\EX_Op2[24]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"AC"
    )
        port map (
      I0 => \^q\(7),
      I1 => GPR_Op2(24),
      I2 => \^cur_data_i_reg[26]_0\,
      O => \cur_data_i_reg[7]_1\
    );
\EX_Op2[25]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5555CFC0"
    )
        port map (
      I0 => \EX_Op2[25]_i_2\,
      I1 => \^q\(6),
      I2 => \^cur_data_i_reg[26]_0\,
      I3 => GPR_Op2(25),
      I4 => \EX_Op2[21]_i_2\,
      O => \cur_data_i_reg[6]_0\
    );
\EX_Op2[26]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(26),
      O => \cur_data_i_reg[5]_2\
    );
\EX_Op2[27]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(27),
      O => \cur_data_i_reg[4]_0\
    );
\EX_Op2[28]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(28),
      O => \cur_data_i_reg[3]_0\
    );
\EX_Op2[29]_i_6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(2),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(29),
      O => \cur_data_i_reg[2]_0\
    );
\EX_Op2[2]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(2),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(13),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[2]\
    );
\EX_Op2[30]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(30),
      O => \cur_data_i_reg[1]_0\
    );
\EX_Op2[31]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^cur_data_i_reg[26]_0\,
      I2 => GPR_Op2(31),
      O => \cur_data_i_reg[0]_1\
    );
\EX_Op2[3]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(3),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(12),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[3]\
    );
\EX_Op2[4]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(4),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(11),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[4]\
    );
\EX_Op2[5]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(5),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(10),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[5]\
    );
\EX_Op2[6]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(6),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(9),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[6]\
    );
\EX_Op2[7]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(7),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(8),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[7]\
    );
\EX_Op2[8]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(8),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(7),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[8]\
    );
\EX_Op2[9]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0C3F5555"
    )
        port map (
      I0 => GPR_Op2(9),
      I1 => of_read_imm_reg,
      I2 => \EX_Op2[0]_i_4\(6),
      I3 => \^q\(15),
      I4 => \^cur_data_i_reg[26]_0\,
      O => \imm_reg_reg[9]\
    );
\EX_Op3[0]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"6FF6FFFF"
    )
        port map (
      I0 => \^q\(22),
      I1 => ex_gpr_write_addr(1),
      I2 => ex_gpr_write_addr(0),
      I3 => \^q\(21),
      I4 => \Op3_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      O => \EX_Op3[0]_i_10_n_0\
    );
\EX_Op3[0]_i_12\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFF6FFFFFFFFFFF6"
    )
        port map (
      I0 => \EX_Op3[0]_i_12_0\(1),
      I1 => \^q\(22),
      I2 => \EX_Op3[0]_i_20_n_0\,
      I3 => \EX_Op3[0]_i_6_1\,
      I4 => \EX_Op3[0]_i_12_0\(3),
      I5 => \^q\(24),
      O => \EX_Op3[0]_i_12_n_0\
    );
\EX_Op3[0]_i_13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \EX_Op3[0]_i_18_n_0\,
      I1 => \EX_Op3[0]_i_17_n_0\,
      O => \EX_Op3[0]_i_13_n_0\
    );
\EX_Op3[0]_i_14\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_gpr_write,
      I1 => \EX_Op3[29]_i_3\,
      I2 => \EX_Op3[0]_i_10_n_0\,
      I3 => \EX_Op3[0]_i_9_n_0\,
      O => \^using_fpga.native_3\
    );
\EX_Op3[0]_i_15\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op3_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Op3[0]_i_15_0\(1),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_15_0\(0),
      I4 => \^q\(21),
      I5 => \EX_Op3[0]_i_7_4\,
      O => \EX_Op3[0]_i_15_n_0\
    );
\EX_Op3[0]_i_16\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op3_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Op3[0]_i_16_0\(1),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_16_0\(0),
      I4 => \^q\(21),
      I5 => \EX_Op3[0]_i_7_3\,
      O => \EX_Op3[0]_i_16_n_0\
    );
\EX_Op3[0]_i_17\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op3_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Op3[0]_i_17_0\(1),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_17_0\(0),
      I4 => \^q\(21),
      I5 => \EX_Op3[0]_i_7_2\,
      O => \EX_Op3[0]_i_17_n_0\
    );
\EX_Op3[0]_i_18\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000082000082"
    )
        port map (
      I0 => \Op3_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\,
      I1 => \EX_Op3[0]_i_18_0\(1),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_18_0\(0),
      I4 => \^q\(21),
      I5 => \EX_Op3[0]_i_7_1\,
      O => \EX_Op3[0]_i_18_n_0\
    );
\EX_Op3[0]_i_19\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => ex_gpr_write_addr(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \Using_FPGA.Native_12\(1),
      I4 => \^q\(24),
      I5 => \Using_FPGA.Native_12\(0),
      O => \Op3_Conflict_Stall/OF_EX_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op3[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^of_op3_sel\(0),
      I1 => \^wb_gpr_write_addr_reg[3]\,
      O => \^ex_op3[0]_i_6_0\
    );
\EX_Op3[0]_i_20\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"6FF6FFFFFFFF6FF6"
    )
        port map (
      I0 => \EX_Op3[0]_i_12_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_12_0\(4),
      I4 => \^q\(21),
      I5 => \EX_Op3[0]_i_12_0\(0),
      O => \EX_Op3[0]_i_20_n_0\
    );
\EX_Op3[0]_i_21\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_15_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_15_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_15_0\(3),
      O => \Op3_Conflict_Stall/OF_M0_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op3[0]_i_22\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_16_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_16_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_16_0\(3),
      O => \Op3_Conflict_Stall/OF_M1_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op3[0]_i_23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_17_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_17_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_17_0\(3),
      O => \Op3_Conflict_Stall/OF_M2_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op3[0]_i_24\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_18_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(24),
      I3 => \EX_Op3[0]_i_18_0\(3),
      I4 => \^q\(25),
      I5 => \EX_Op3[0]_i_18_0\(4),
      O => \Op3_Conflict_Stall/OF_M3_Cmp/comparator_i1/Comp_Carry_Chain[1].carry_sel_reg\
    );
\EX_Op3[0]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"8A"
    )
        port map (
      I0 => \^of_op3_sel\(0),
      I1 => \^wb_gpr_write_addr_reg[3]\,
      I2 => \^using_fpga.native_2\,
      O => \^ex_op3[0]_i_7_0\
    );
\EX_Op3[0]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2220222000002220"
    )
        port map (
      I0 => \EX_Op3[0]_i_8_n_0\,
      I1 => \EX_Op3[0]_i_9_n_0\,
      I2 => \EX_Op3[0]_i_10_n_0\,
      I3 => \EX_Op3[0]_i_4\,
      I4 => \EX_Op3[0]_i_12_n_0\,
      I5 => \EX_Op3[0]_i_13_n_0\,
      O => \^of_op3_sel\(0)
    );
\EX_Op3[0]_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5557555755575500"
    )
        port map (
      I0 => \EX_Op3[0]_i_8_n_0\,
      I1 => \EX_Op3[0]_i_13_n_0\,
      I2 => \EX_Op3[0]_i_12_n_0\,
      I3 => \EX_Op3[0]_i_9_n_0\,
      I4 => \EX_Op3[0]_i_10_n_0\,
      I5 => \EX_Op3[0]_i_4\,
      O => \^wb_gpr_write_addr_reg[3]\
    );
\EX_Op3[0]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"ABAAABABABAAABAA"
    )
        port map (
      I0 => \^using_fpga.native_3\,
      I1 => \EX_Op3[0]_i_9_n_0\,
      I2 => \EX_Op3[0]_i_15_n_0\,
      I3 => \EX_Op3[0]_i_16_n_0\,
      I4 => \EX_Op3[0]_i_17_n_0\,
      I5 => \EX_Op3[0]_i_18_n_0\,
      O => \^using_fpga.native_2\
    );
\EX_Op3[0]_i_8\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"CD"
    )
        port map (
      I0 => \EX_Op3[0]_i_16_n_0\,
      I1 => \EX_Op3[0]_i_9_n_0\,
      I2 => \EX_Op3[0]_i_15_n_0\,
      O => \EX_Op3[0]_i_8_n_0\
    );
\EX_Op3[0]_i_9\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5455555555555555"
    )
        port map (
      I0 => \EX_Op3[0]_i_7_5\(0),
      I1 => EX_Bit_Insert_i_2_n_0,
      I2 => \^q\(27),
      I3 => \^q\(29),
      I4 => \^q\(26),
      I5 => \^q\(15),
      O => \EX_Op3[0]_i_9_n_0\
    );
\EX_Op3[29]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000F2"
    )
        port map (
      I0 => \EX_Op3[0]_i_18_n_0\,
      I1 => \EX_Op3[0]_i_17_n_0\,
      I2 => \EX_Op3[0]_i_16_n_0\,
      I3 => \EX_Op3[0]_i_15_n_0\,
      I4 => \EX_Op3[0]_i_9_n_0\,
      O => \m3_gpr_write_addr_reg[3]\
    );
\EX_Op3[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"88B888B8BBBB8888"
    )
        port map (
      I0 => \EX_Op3_reg[30]\,
      I1 => \^wb_gpr_write_addr_reg[3]\,
      I2 => \EX_Op3_reg[30]_0\,
      I3 => \EX_Op3_reg[30]_1\,
      I4 => GPR_Op3(1),
      I5 => \^using_fpga.native_2\,
      O => EX_CLZ_Instr_reg
    );
\EX_Op3[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B8BBB8BBB8BBB888"
    )
        port map (
      I0 => \EX_Op3_reg[31]\,
      I1 => \^ex_op3[0]_i_6_0\,
      I2 => wb_fwd(0),
      I3 => \^ex_op3[0]_i_7_0\,
      I4 => \EX_Op3[31]_i_3_n_0\,
      I5 => \EX_Op3[31]_i_4_n_0\,
      O => m2_m1_sel_res_reg(0)
    );
\EX_Op3[31]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000EEEE22E2"
    )
        port map (
      I0 => GPR_Op3(0),
      I1 => \^using_fpga.native_2\,
      I2 => \EX_Op3_reg[31]_2\,
      I3 => \EX_Op3_reg[31]_3\,
      I4 => \EX_Op3_reg[31]_4\,
      I5 => \^wb_gpr_write_addr_reg[3]\,
      O => \EX_Op3[31]_i_3_n_0\
    );
\EX_Op3[31]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[3]\,
      I1 => \EX_Op3_reg[31]_0\,
      I2 => \^using_fpga.native_2\,
      I3 => \EX_Op3_reg[31]_1\,
      O => \EX_Op3[31]_i_4_n_0\
    );
EX_Pattern_Cmp_Sel_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000040"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      I2 => \^q\(10),
      I3 => \^q\(29),
      I4 => \^q\(28),
      O => EX_Pattern_Cmp_Sel7_out
    );
\EX_Sext_Op[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F7FF"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(6),
      I2 => \^q\(7),
      I3 => \^cur_data_i_reg[26]_2\,
      O => \cur_data_i_reg[5]_0\(1)
    );
\EX_Sext_Op[1]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAAA8AAA"
    )
        port map (
      I0 => \^cur_data_i_reg[26]_2\,
      I1 => \^q\(7),
      I2 => \^q\(6),
      I3 => \^q\(5),
      I4 => \^q\(0),
      O => \cur_data_i_reg[5]_0\(0)
    );
EX_Unsigned_Op_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0002"
    )
        port map (
      I0 => \^q\(1),
      I1 => \^q\(31),
      I2 => \^q\(30),
      I3 => \^q\(29),
      O => EX_Unsigned_Op11_out
    );
EX_Use_Carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \^q\(27),
      I1 => \^q\(30),
      I2 => \^q\(31),
      O => EX_Use_Carry10_out
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[1].Gen_Sel_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_264
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^addr\(1),
      sel_input_iii_3 => sel_input_iii_3,
      sync_reset => sync_reset
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[1].Mux_Select_LUT6\: entity work.microblaze_microblaze_0_0_MB_LUT6
     port map (
      Clear_Buffer => Clear_Buffer,
      Prefetch_Almost_Full => Prefetch_Almost_Full,
      \Using_FPGA.Native_0\ => \^addr\(1),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_iii_3 => sel_input_iii_3
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[2].Gen_Sel_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_265
     port map (
      Clk => Clk,
      Prefetch_Almost_Full => Prefetch_Almost_Full,
      Prefetch_Early_Full => Prefetch_Early_Full,
      \Using_FPGA.Native_0\ => \^addr\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_2\ => \^addr\(1),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_11\,
      if0_pause => if0_pause,
      sel_input_iii_2 => sel_input_iii_2,
      sync_reset => sync_reset
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[2].Mux_Select_LUT6\: entity work.microblaze_microblaze_0_0_MB_LUT6_266
     port map (
      Clear_Buffer => Clear_Buffer,
      Prefetch_Almost_Full => Prefetch_Almost_Full,
      Prefetch_Early_Full => Prefetch_Early_Full,
      \Using_FPGA.Native_0\ => \^addr\(1),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_iii_2 => sel_input_iii_2
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[3].Gen_Sel_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_267
     port map (
      Clk => Clk,
      Prefetch_Early_Full => Prefetch_Early_Full,
      sel_input_iii_1 => sel_input_iii_1,
      sync_reset => sync_reset
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[3].Mux_Select_LUT6\: entity work.microblaze_microblaze_0_0_MB_LUT6_268
     port map (
      Clear_Buffer => Clear_Buffer,
      Prefetch_Almost_Full => Prefetch_Almost_Full,
      Prefetch_Early_Full => Prefetch_Early_Full,
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_iii_1 => sel_input_iii_1
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[4].Gen_Sel_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_269
     port map (
      Clk => Clk,
      D(31 downto 15) => new_data_cmb(31 downto 15),
      D(14) => \Data_Mux[14].new_data_cmb_reg\,
      D(13) => \Data_Mux[13].new_data_cmb_reg\,
      D(12) => \Data_Mux[12].new_data_cmb_reg\,
      D(11) => \Data_Mux[11].new_data_cmb_reg\,
      D(10) => \Data_Mux[10].new_data_cmb_reg\,
      D(9) => \Data_Mux[9].new_data_cmb_reg\,
      D(8) => \Data_Mux[8].new_data_cmb_reg\,
      D(7) => \Data_Mux[7].new_data_cmb_reg\,
      D(6) => \Data_Mux[6].new_data_cmb_reg\,
      D(5) => \Data_Mux[5].new_data_cmb_reg\,
      D(4) => \Data_Mux[4].new_data_cmb_reg\,
      D(3) => \Data_Mux[3].new_data_cmb_reg\,
      D(2) => \Data_Mux[2].new_data_cmb_reg\,
      D(1) => \Data_Mux[1].new_data_cmb_reg\,
      D(0) => \Data_Mux[0].new_data_cmb_reg\,
      Q(31 downto 0) => \^q\(31 downto 0),
      \Using_FPGA.Native_0\ => \^using_fpga.native_0\,
      \cur_data_i_reg[0]\ => \cur_data_i_reg[0]_2\,
      \cur_data_i_reg[31]\ => \Using_FPGA.Native_6\,
      if4_data(0 to 31) => if4_data(0 to 31),
      \out\(31) => p_1_in98_in,
      \out\(30) => p_1_in92_in,
      \out\(29) => p_1_in86_in,
      \out\(28) => p_1_in80_in,
      \out\(27) => p_1_in74_in,
      \out\(26) => p_1_in68_in,
      \out\(25) => p_1_in62_in,
      \out\(24) => p_1_in56_in,
      \out\(23) => p_1_in50_in,
      \out\(22) => p_1_in44_in,
      \out\(21) => p_1_in38_in,
      \out\(20) => p_1_in32_in,
      \out\(19) => p_1_in26_in,
      \out\(18) => p_1_in20_in,
      \out\(17) => p_1_in14_in,
      \out\(16) => p_1_in8_in,
      \out\(15) => p_1_in2_in,
      \out\(14) => p_1_in182_in,
      \out\(13) => p_1_in176_in,
      \out\(12) => p_1_in170_in,
      \out\(11) => p_1_in164_in,
      \out\(10) => p_1_in158_in,
      \out\(9) => p_1_in152_in,
      \out\(8) => p_1_in146_in,
      \out\(7) => p_1_in140_in,
      \out\(6) => p_1_in134_in,
      \out\(5) => p_1_in128_in,
      \out\(4) => p_1_in122_in,
      \out\(3) => p_1_in116_in,
      \out\(2) => p_1_in110_in,
      \out\(1) => p_1_in105_in,
      \out\(0) => \data_buffer_reg[3][0]_srl4_n_0\,
      sel_input_i => sel_input_i,
      sync_reset => sync_reset
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[4].Mux_Select_LUT6\: entity work.microblaze_microblaze_0_0_MB_LUT6_270
     port map (
      Clear_Buffer => Clear_Buffer,
      Prefetch_Early_Full => Prefetch_Early_Full,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_iii_0 => sel_input_iii_0
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized2\
     port map (
      Clear_Buffer => Clear_Buffer,
      Prefetch_Early_Full => Prefetch_Early_Full,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_delayslot => sel_input_delayslot
    );
\Generating_Control_Logic.Using_FPGA.Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7\: entity work.microblaze_microblaze_0_0_MB_MUXF7
     port map (
      Use_Next_Data => Use_Next_Data,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_7\,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      sel_input_delayslot => sel_input_delayslot,
      sel_input_i => sel_input_i,
      sel_input_iii_0 => sel_input_iii_0
    );
\Generating_Control_Logic.Using_FPGA.Last_Sel_DFF\: entity work.microblaze_microblaze_0_0_MB_FDS
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      sel_input_depth => sel_input_depth,
      sync_reset => sync_reset
    );
\Generating_Control_Logic.Using_FPGA.Mux_Select_Empty_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized4\
     port map (
      Clear_Buffer => Clear_Buffer,
      Use_Next_Data => Use_Next_Data,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_6\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      sel_input_depth => sel_input_depth
    );
\Generating_Control_Logic.Using_FPGA.Mux_Select_OF_Valid_LUT6\: entity work.\microblaze_microblaze_0_0_MB_LUT6__parameterized6\
     port map (
      Clear_Buffer => Clear_Buffer,
      Use_Next_Data => Use_Next_Data,
      \Using_FPGA.Native_0\ => \^using_fpga.native\,
      \Using_FPGA.Native_1\ => \^using_fpga.native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_6\,
      cur_valid_cmb => cur_valid_cmb,
      if4_push_instr_fetch => if4_push_instr_fetch
    );
\Generating_Control_Logic.Using_FPGA.OF_Valid_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_271
     port map (
      Clk => Clk,
      Dbg_Clean_Stop_reg => ex_atomic_instruction_pair_i_2_n_0,
      Q(2) => \^q\(29),
      Q(1 downto 0) => \^q\(27 downto 26),
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native_1\(0),
      cur_valid_cmb => cur_valid_cmb,
      ex_atomic_instruction_pair0 => ex_atomic_instruction_pair0,
      ex_jump => ex_jump,
      ex_jump_nodelay => ex_jump_nodelay,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      \imm_reg_reg[15]\ => ex_MSR_clear_decode_i_2_n_0,
      of_raw_valid => of_raw_valid,
      sync_reset => sync_reset
    );
\Performance_Debug_Control.ex_brki_hit_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000008"
    )
        port map (
      I0 => \Performance_Debug_Control.ex_brki_hit_reg\(0),
      I1 => \^q\(29),
      I2 => of_gpr_write_dbg_inferred_i_3_n_0,
      I3 => \Performance_Debug_Control.ex_brki_hit_i_2_n_0\,
      I4 => \Performance_Debug_Control.ex_brki_hit_reg_0\,
      O => \Serial_Dbg_Intf.control_reg_reg[8]\
    );
\Performance_Debug_Control.ex_brki_hit_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFEEEA"
    )
        port map (
      I0 => \Performance_Debug_Control.ex_brki_hit_i_3_n_0\,
      I1 => ex_jump_nodelay,
      I2 => ex_jump_hold,
      I3 => ex_jump,
      I4 => \Performance_Debug_Control.ex_brki_hit_i_4_n_0\,
      O => \Performance_Debug_Control.ex_brki_hit_i_2_n_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFF7"
    )
        port map (
      I0 => \^q\(19),
      I1 => \^q\(18),
      I2 => \^q\(20),
      I3 => \^q\(10),
      I4 => \^q\(11),
      I5 => \^q\(1),
      O => \Performance_Debug_Control.ex_brki_hit_i_3_n_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFFFFFE"
    )
        port map (
      I0 => \Performance_Debug_Control.ex_brki_hit_i_5_n_0\,
      I1 => \Performance_Debug_Control.ex_brki_hit_i_6_n_0\,
      I2 => \^q\(5),
      I3 => \^q\(0),
      I4 => \^q\(13),
      I5 => \^q\(6),
      O => \Performance_Debug_Control.ex_brki_hit_i_4_n_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFDFFFFFFFF"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(14),
      I2 => \^q\(7),
      I3 => \^q\(8),
      I4 => \^q\(9),
      I5 => \^q\(3),
      O => \Performance_Debug_Control.ex_brki_hit_i_5_n_0\
    );
\Performance_Debug_Control.ex_brki_hit_i_6\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => \^q\(2),
      I1 => \Using_FPGA.Native_7\,
      I2 => \^q\(12),
      I3 => \^q\(15),
      O => \Performance_Debug_Control.ex_brki_hit_i_6_n_0\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_6\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFFEEEEE"
    )
        port map (
      I0 => \^cur_data_i_reg[26]_1\,
      I1 => \Performance_Debug_Control.ex_brki_hit_i_4_n_0\,
      I2 => ex_jump,
      I3 => ex_jump_hold,
      I4 => ex_jump_nodelay,
      I5 => \Performance_Debug_Control.ex_brki_hit_i_3_n_0\,
      O => \Using_FPGA.Native_4\
    );
\Using_FPGA.Native_i_1__100\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => \cur_data_i_reg[31]_5\
    );
\Using_FPGA.Native_i_1__219\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \cur_data_i_reg[26]_3\
    );
\Using_FPGA.Native_i_1__220\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \cur_data_i_reg[26]_4\
    );
\Using_FPGA.Native_i_1__221\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \cur_data_i_reg[26]_5\
    );
\Using_FPGA.Native_i_1__222\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \cur_data_i_reg[26]_6\
    );
\Using_FPGA.Native_i_1__223\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \cur_data_i_reg[26]_7\
    );
\Using_FPGA.Native_i_1__23\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => OF_Use_Op_B
    );
\Using_FPGA.Native_i_1__5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00DF00FF00FF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => \cur_data_i_reg[28]_2\
    );
\Using_FPGA.Native_i_1__52\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^q\(22),
      I1 => ex_gpr_write_addr(1),
      I2 => ex_gpr_write_addr(0),
      I3 => \^q\(21),
      O => S_10
    );
\Using_FPGA.Native_i_1__53\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^q\(21),
      I1 => \EX_Op3[0]_i_15_0\(0),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_15_0\(1),
      O => S_11
    );
\Using_FPGA.Native_i_1__54\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^q\(21),
      I1 => \EX_Op3[0]_i_16_0\(0),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_16_0\(1),
      O => S_12
    );
\Using_FPGA.Native_i_1__55\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^q\(21),
      I1 => \EX_Op3[0]_i_17_0\(0),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_17_0\(1),
      O => S_13
    );
\Using_FPGA.Native_i_1__56\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"9009"
    )
        port map (
      I0 => \^q\(21),
      I1 => \EX_Op3[0]_i_18_0\(0),
      I2 => \^q\(22),
      I3 => \EX_Op3[0]_i_18_0\(1),
      O => S_14
    );
\Using_FPGA.Native_i_1__6\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => S
    );
\Using_FPGA.Native_i_1__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5555555555555557"
    )
        port map (
      I0 => \^of_is_div_instr\,
      I1 => \Using_FPGA.Native_8\,
      I2 => m2_is_div_instr,
      I3 => m1_is_div_instr_i,
      I4 => m0_is_div_instr_i,
      I5 => \Using_FPGA.Native_9\,
      O => m3_is_div_instr_i_reg
    );
\Using_FPGA.Native_i_1__84\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00DF00FF00FF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => \cur_data_i_reg[28]_3\
    );
\Using_FPGA.Native_i_1__85\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00DF00FF00FF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => \cur_data_i_reg[28]_4\
    );
\Using_FPGA.Native_i_1__86\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00DF00FF00FF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => \cur_data_i_reg[28]_5\
    );
\Using_FPGA.Native_i_1__87\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00FF00DF00FF00FF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => \cur_data_i_reg[28]_6\
    );
\Using_FPGA.Native_i_1__88\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => ex_gpr_write_addr(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \Using_FPGA.Native_12\(1),
      I4 => \^q\(24),
      I5 => \Using_FPGA.Native_12\(0),
      O => \ex_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__89\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_15_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_15_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_15_0\(3),
      O => \m0_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__90\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_16_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_16_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_16_0\(3),
      O => \m1_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__91\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_17_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(25),
      I3 => \EX_Op3[0]_i_17_0\(4),
      I4 => \^q\(24),
      I5 => \EX_Op3[0]_i_17_0\(3),
      O => \m2_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__92\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"9009000000009009"
    )
        port map (
      I0 => \EX_Op3[0]_i_18_0\(2),
      I1 => \^q\(23),
      I2 => \^q\(24),
      I3 => \EX_Op3[0]_i_18_0\(3),
      I4 => \^q\(25),
      I5 => \EX_Op3[0]_i_18_0\(4),
      O => \m3_gpr_write_addr_reg[2]\
    );
\Using_FPGA.Native_i_1__93\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => \cur_data_i_reg[26]_8\
    );
\Using_FPGA.Native_i_1__94\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => \cur_data_i_reg[31]_2\
    );
\Using_FPGA.Native_i_1__95\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => \cur_data_i_reg[26]_9\
    );
\Using_FPGA.Native_i_1__96\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => \cur_data_i_reg[31]_3\
    );
\Using_FPGA.Native_i_1__97\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => \cur_data_i_reg[26]_10\
    );
\Using_FPGA.Native_i_1__98\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"7F"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      O => \cur_data_i_reg[31]_4\
    );
\Using_FPGA.Native_i_1__99\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000080000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(29),
      I2 => \^q\(27),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => \cur_data_i_reg[26]_11\
    );
\Using_FPGA.Native_i_2__0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000200"
    )
        port map (
      I0 => \^q\(27),
      I1 => \^q\(26),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      O => \^of_is_div_instr\
    );
\Using_Mul_Instr.ex_not_mul_op_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFFFB"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      I3 => \^q\(27),
      I4 => \^q\(26),
      O => \cur_data_i_reg[31]_1\
    );
\cur_data_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[0].new_data_cmb_reg\,
      Q => \^q\(0),
      R => sync_reset
    );
\cur_data_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[10].new_data_cmb_reg\,
      Q => \^q\(10),
      R => sync_reset
    );
\cur_data_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[11].new_data_cmb_reg\,
      Q => \^q\(11),
      R => sync_reset
    );
\cur_data_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[12].new_data_cmb_reg\,
      Q => \^q\(12),
      R => sync_reset
    );
\cur_data_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[13].new_data_cmb_reg\,
      Q => \^q\(13),
      R => sync_reset
    );
\cur_data_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[14].new_data_cmb_reg\,
      Q => \^q\(14),
      R => sync_reset
    );
\cur_data_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(15),
      Q => \^q\(15),
      R => sync_reset
    );
\cur_data_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(16),
      Q => \^q\(16),
      R => sync_reset
    );
\cur_data_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(17),
      Q => \^q\(17),
      R => sync_reset
    );
\cur_data_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(18),
      Q => \^q\(18),
      R => sync_reset
    );
\cur_data_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(19),
      Q => \^q\(19),
      R => sync_reset
    );
\cur_data_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[1].new_data_cmb_reg\,
      Q => \^q\(1),
      R => sync_reset
    );
\cur_data_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(20),
      Q => \^q\(20),
      R => sync_reset
    );
\cur_data_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(21),
      Q => \^q\(21),
      R => sync_reset
    );
\cur_data_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(22),
      Q => \^q\(22),
      R => sync_reset
    );
\cur_data_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(23),
      Q => \^q\(23),
      R => sync_reset
    );
\cur_data_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(24),
      Q => \^q\(24),
      R => sync_reset
    );
\cur_data_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(25),
      Q => \^q\(25),
      R => sync_reset
    );
\cur_data_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(26),
      Q => \^q\(26),
      R => sync_reset
    );
\cur_data_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(27),
      Q => \^q\(27),
      R => sync_reset
    );
\cur_data_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(28),
      Q => \^q\(28),
      R => sync_reset
    );
\cur_data_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(29),
      Q => \^q\(29),
      R => sync_reset
    );
\cur_data_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[2].new_data_cmb_reg\,
      Q => \^q\(2),
      R => sync_reset
    );
\cur_data_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(30),
      Q => \^q\(30),
      R => sync_reset
    );
\cur_data_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => new_data_cmb(31),
      Q => \^q\(31),
      R => sync_reset
    );
\cur_data_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[3].new_data_cmb_reg\,
      Q => \^q\(3),
      R => sync_reset
    );
\cur_data_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[4].new_data_cmb_reg\,
      Q => \^q\(4),
      R => sync_reset
    );
\cur_data_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[5].new_data_cmb_reg\,
      Q => \^q\(5),
      R => sync_reset
    );
\cur_data_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[6].new_data_cmb_reg\,
      Q => \^q\(6),
      R => sync_reset
    );
\cur_data_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[7].new_data_cmb_reg\,
      Q => \^q\(7),
      R => sync_reset
    );
\cur_data_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[8].new_data_cmb_reg\,
      Q => \^q\(8),
      R => sync_reset
    );
\cur_data_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Data_Mux[9].new_data_cmb_reg\,
      Q => \^q\(9),
      R => sync_reset
    );
\data_buffer_reg[3][0]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(31),
      Q => \data_buffer_reg[3][0]_srl4_n_0\
    );
\data_buffer_reg[3][10]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(21),
      Q => p_1_in158_in
    );
\data_buffer_reg[3][11]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(20),
      Q => p_1_in164_in
    );
\data_buffer_reg[3][12]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(19),
      Q => p_1_in170_in
    );
\data_buffer_reg[3][13]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(18),
      Q => p_1_in176_in
    );
\data_buffer_reg[3][14]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(17),
      Q => p_1_in182_in
    );
\data_buffer_reg[3][15]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(16),
      Q => p_1_in2_in
    );
\data_buffer_reg[3][16]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(15),
      Q => p_1_in8_in
    );
\data_buffer_reg[3][17]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(14),
      Q => p_1_in14_in
    );
\data_buffer_reg[3][18]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(13),
      Q => p_1_in20_in
    );
\data_buffer_reg[3][19]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(12),
      Q => p_1_in26_in
    );
\data_buffer_reg[3][1]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(30),
      Q => p_1_in105_in
    );
\data_buffer_reg[3][20]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(11),
      Q => p_1_in32_in
    );
\data_buffer_reg[3][21]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(10),
      Q => p_1_in38_in
    );
\data_buffer_reg[3][22]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(9),
      Q => p_1_in44_in
    );
\data_buffer_reg[3][23]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(8),
      Q => p_1_in50_in
    );
\data_buffer_reg[3][24]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(7),
      Q => p_1_in56_in
    );
\data_buffer_reg[3][25]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(6),
      Q => p_1_in62_in
    );
\data_buffer_reg[3][26]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(5),
      Q => p_1_in68_in
    );
\data_buffer_reg[3][27]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(4),
      Q => p_1_in74_in
    );
\data_buffer_reg[3][28]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(3),
      Q => p_1_in80_in
    );
\data_buffer_reg[3][29]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(2),
      Q => p_1_in86_in
    );
\data_buffer_reg[3][2]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(29),
      Q => p_1_in110_in
    );
\data_buffer_reg[3][30]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(1),
      Q => p_1_in92_in
    );
\data_buffer_reg[3][31]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(0),
      Q => p_1_in98_in
    );
\data_buffer_reg[3][3]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(28),
      Q => p_1_in116_in
    );
\data_buffer_reg[3][4]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(27),
      Q => p_1_in122_in
    );
\data_buffer_reg[3][5]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(26),
      Q => p_1_in128_in
    );
\data_buffer_reg[3][6]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(25),
      Q => p_1_in134_in
    );
\data_buffer_reg[3][7]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(24),
      Q => p_1_in140_in
    );
\data_buffer_reg[3][8]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(23),
      Q => p_1_in146_in
    );
\data_buffer_reg[3][9]_srl4\: unisim.vcomponents.SRL16E
    generic map(
      INIT => X"0000"
    )
        port map (
      A0 => \^addr\(0),
      A1 => \^addr\(1),
      A2 => '0',
      A3 => '0',
      CE => if4_push_instr_fetch,
      CLK => Clk,
      D => if4_data(22),
      Q => p_1_in152_in
    );
ex_Is_BS_Instr_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000400"
    )
        port map (
      I0 => \^q\(27),
      I1 => \^q\(26),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      O => \cur_data_i_reg[27]_0\
    );
ex_MSR_clear_decode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000020000"
    )
        port map (
      I0 => \^q\(16),
      I1 => ex_MSR_clear_decode_i_2_n_0,
      I2 => \^q\(29),
      I3 => \^q\(27),
      I4 => \^q\(26),
      I5 => \^q\(15),
      O => ex_MSR_clear_decode
    );
ex_MSR_clear_decode_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"DF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      O => ex_MSR_clear_decode_i_2_n_0
    );
ex_MSR_set_decode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000010000"
    )
        port map (
      I0 => \^q\(16),
      I1 => ex_MSR_clear_decode_i_2_n_0,
      I2 => \^q\(29),
      I3 => \^q\(27),
      I4 => \^q\(26),
      I5 => \^q\(15),
      O => ex_MSR_set_decode
    );
ex_atomic_instruction_pair_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000ACF00000AC00"
    )
        port map (
      I0 => \^q\(25),
      I1 => \^q\(20),
      I2 => \^q\(26),
      I3 => \^q\(27),
      I4 => ex_MSR_clear_decode_i_2_n_0,
      I5 => \^q\(29),
      O => ex_atomic_instruction_pair_i_2_n_0
    );
ex_branch_with_delayslot_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_atomic_instruction_pair_i_2_n_0,
      I1 => ex_databus_access_i_reg,
      O => ex_branch_with_delayslot0
    );
ex_byte_access_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      O => of_byte_access
    );
ex_complete_in_later_stage_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFAAAAAABFAAAA"
    )
        port map (
      I0 => ex_complete_in_later_stage_i_2_n_0,
      I1 => \^q\(27),
      I2 => \^q\(26),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => of_ex_complete_in_later_stage
    );
ex_complete_in_later_stage_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1010101010101000"
    )
        port map (
      I0 => ex_move_to_MSR_instr_i_2_n_0,
      I1 => \^q\(14),
      I2 => \^q\(0),
      I3 => \^q\(1),
      I4 => \^q\(3),
      I5 => \^q\(2),
      O => ex_complete_in_later_stage_i_2_n_0
    );
ex_databus_access_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00007000"
    )
        port map (
      I0 => ex_jump,
      I1 => ex_jump_nodelay,
      I2 => \^q\(31),
      I3 => \^q\(30),
      I4 => ex_databus_access_i_reg,
      O => p_104_in
    );
ex_databus_exclusive_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000004000000000"
    )
        port map (
      I0 => ex_databus_access_i_reg,
      I1 => ex_databus_exclusive_i_i_2_n_0,
      I2 => \^q\(10),
      I3 => \^q\(29),
      I4 => \^q\(26),
      I5 => \^q\(27),
      O => ex_databus_exclusive_i0
    );
ex_databus_exclusive_i_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0888"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      I2 => ex_jump_nodelay,
      I3 => ex_jump,
      O => ex_databus_exclusive_i_i_2_n_0
    );
ex_databus_read_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00080808"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      I3 => ex_jump_nodelay,
      I4 => ex_jump,
      O => ex_databus_read_i0
    );
ex_databus_write_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"70000000"
    )
        port map (
      I0 => ex_jump,
      I1 => ex_jump_nodelay,
      I2 => \^q\(31),
      I3 => \^q\(30),
      I4 => \^q\(28),
      O => ex_jump_nodelay_reg_1
    );
ex_doublet_access_i_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      O => of_doublet_access
    );
ex_jump_nodelay_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"15"
    )
        port map (
      I0 => ex_atomic_instruction_pair_i_2_n_0,
      I1 => ex_jump_nodelay,
      I2 => ex_jump,
      O => ex_jump_nodelay0
    );
ex_load_alu_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      I2 => \^q\(28),
      O => ex_load_alu_carry2_out
    );
ex_load_shift_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"2A"
    )
        port map (
      I0 => \^cur_data_i_reg[26]_2\,
      I1 => \^q\(6),
      I2 => \^q\(5),
      O => ex_load_shift_carry0
    );
ex_m0_complete_in_later_stage_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFAAABAA"
    )
        port map (
      I0 => ex_complete_in_later_stage_i_2_n_0,
      I1 => \^q\(26),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      O => of_m0_complete_in_later_stage
    );
ex_m1_complete_in_later_stage_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAFFAAAAAAAEAAAA"
    )
        port map (
      I0 => ex_complete_in_later_stage_i_2_n_0,
      I1 => \^q\(27),
      I2 => \^q\(26),
      I3 => \^q\(28),
      I4 => \^q\(30),
      I5 => \^q\(31),
      O => of_m1_complete_in_later_stage
    );
ex_m3_complete_in_later_stage_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      O => \cur_data_i_reg[28]_0\
    );
ex_mbar_decode_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFBFFFFFFFFFFFFF"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \^cur_data_i_reg[26]_1\
    );
ex_mbar_is_sleep_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^q\(25),
      I1 => \^q\(24),
      O => ex_mbar_is_sleep0
    );
ex_move_to_MSR_instr_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000020000"
    )
        port map (
      I0 => \^q\(0),
      I1 => \^q\(1),
      I2 => \^q\(3),
      I3 => \^q\(2),
      I4 => \^q\(14),
      I5 => ex_move_to_MSR_instr_i_2_n_0,
      O => ex_move_to_MSR_instr35_out
    );
ex_move_to_MSR_instr_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFDFFFFFFFFF"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      I3 => \^q\(29),
      I4 => \^q\(27),
      I5 => \^q\(26),
      O => ex_move_to_MSR_instr_i_2_n_0
    );
ex_op1_cmp_eq_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFEB"
    )
        port map (
      I0 => \^q\(22),
      I1 => \^q\(21),
      I2 => \^q\(23),
      I3 => ex_op1_cmp_eq_i_2_n_0,
      O => ex_op1_cmp_eq
    );
ex_op1_cmp_eq_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"DFFFFFFF"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      I3 => \^q\(26),
      I4 => \^q\(27),
      O => ex_op1_cmp_eq_i_2_n_0
    );
ex_op1_cmp_eq_n_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0014"
    )
        port map (
      I0 => ex_op1_cmp_eq_i_2_n_0,
      I1 => \^q\(23),
      I2 => \^q\(21),
      I3 => \^q\(22),
      O => ex_op1_cmp_eq_n7_out
    );
ex_sel_alu_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0DFF"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(29),
      I2 => \^q\(28),
      I3 => \^q\(31),
      O => \cur_data_i_reg[10]_0\
    );
ex_set_bip_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0040"
    )
        port map (
      I0 => of_gpr_write_dbg_inferred_i_3_n_0,
      I1 => \^q\(19),
      I2 => \^q\(18),
      I3 => \^q\(20),
      O => ex_set_bip
    );
ex_start_div_raw_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"08"
    )
        port map (
      I0 => \^of_is_div_instr\,
      I1 => \Using_FPGA.Native_6\,
      I2 => sync_reset,
      O => \Use_Async_Reset.sync_reset_reg\
    );
force1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"01"
    )
        port map (
      I0 => \^q\(22),
      I1 => \^q\(23),
      I2 => ex_op1_cmp_eq_i_2_n_0,
      O => force12_out
    );
force2_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00800000"
    )
        port map (
      I0 => \^q\(27),
      I1 => \^q\(26),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      O => ex_op1_cmp_eq1
    );
force_Val1_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => ex_op1_cmp_eq_i_2_n_0,
      I1 => \^q\(22),
      I2 => \^q\(23),
      O => force_Val10_out
    );
force_Val2_N_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFDFDFDFFFFFFF"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      I3 => \^q\(29),
      I4 => \^q\(26),
      I5 => \^q\(27),
      O => \cur_data_i_reg[31]_0\
    );
of_gpr_write_dbg_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00AE00AE00AEAEAE"
    )
        port map (
      I0 => of_gpr_write_dbg_inferred_i_2_n_0,
      I1 => \^q\(18),
      I2 => of_gpr_write_dbg_inferred_i_3_n_0,
      I3 => \^cur_data_i_reg[26]_2\,
      I4 => \^q\(2),
      I5 => \^q\(3),
      O => \^cur_data_i_reg[18]_0\
    );
of_gpr_write_dbg_inferred_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F0000000F0F1F0F3"
    )
        port map (
      I0 => \^q\(14),
      I1 => \^q\(29),
      I2 => ex_MSR_clear_decode_i_2_n_0,
      I3 => \^q\(27),
      I4 => \^q\(26),
      I5 => of_gpr_write_dbg_inferred_i_5_n_0,
      O => of_gpr_write_dbg_inferred_i_2_n_0
    );
of_gpr_write_dbg_inferred_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFDFFF"
    )
        port map (
      I0 => \^q\(31),
      I1 => \^q\(30),
      I2 => \^q\(28),
      I3 => \^q\(27),
      I4 => \^q\(26),
      O => of_gpr_write_dbg_inferred_i_3_n_0
    );
of_gpr_write_dbg_inferred_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000100000"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      I2 => \^q\(28),
      I3 => \^q\(30),
      I4 => \^q\(31),
      I5 => \^q\(29),
      O => \^cur_data_i_reg[26]_2\
    );
of_gpr_write_dbg_inferred_i_5: unisim.vcomponents.LUT3
    generic map(
      INIT => X"80"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(30),
      I2 => \^q\(31),
      O => of_gpr_write_dbg_inferred_i_5_n_0
    );
of_gpr_write_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAAAAAAAAAA8"
    )
        port map (
      I0 => \^cur_data_i_reg[18]_0\,
      I1 => \^q\(21),
      I2 => \^q\(24),
      I3 => \^q\(25),
      I4 => \^q\(23),
      I5 => \^q\(22),
      O => in0
    );
of_read_imm_reg_raw_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000700000000"
    )
        port map (
      I0 => ex_jump_nodelay,
      I1 => ex_jump,
      I2 => \^q\(27),
      I3 => \^q\(26),
      I4 => ex_MSR_clear_decode_i_2_n_0,
      I5 => \^q\(29),
      O => ex_jump_nodelay_reg_0
    );
use_Reg_Neg_DI_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1004"
    )
        port map (
      I0 => ex_op1_cmp_eq_i_2_n_0,
      I1 => \^q\(22),
      I2 => \^q\(23),
      I3 => \^q\(21),
      O => use_Reg_Neg_DI1_out
    );
use_Reg_Neg_S_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1004"
    )
        port map (
      I0 => ex_op1_cmp_eq_i_2_n_0,
      I1 => \^q\(23),
      I2 => \^q\(22),
      I3 => \^q\(21),
      O => use_Reg_Neg_S3_out
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_PC_Module_ff is
  port (
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[23]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[19]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[15]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[11]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[7]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[3]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[1]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \cur_data_i_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \m3_PC_i_reg[29]_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \cur_data_i_reg[2]\ : out STD_LOGIC;
    \cur_data_i_reg[1]\ : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    sync_reset : in STD_LOGIC;
    \bp1_PC_i_reg[0]_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \WB_Exception_Return_Addr_reg[0]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_exception_from_m2 : in STD_LOGIC;
    if4_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 );
    \ex_PC_i_reg[0]_0\ : in STD_LOGIC;
    \cur_data_i_reg[31]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[30]\ : in STD_LOGIC;
    \bp1_PC_i_reg[0]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    bp0_jump : in STD_LOGIC;
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_op1_sel_spr_pc : in STD_LOGIC;
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    ex_set_msr_ie_instr : in STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    if4_pre_buffer_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    Prefetch_Buffer_Full : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m0_PC_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    in0 : in STD_LOGIC;
    \m2_PC_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \m3_PC_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Exception_Return_Addr0 : in STD_LOGIC_VECTOR ( 29 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_PC_Module_ff : entity is "PC_Module_ff";
end microblaze_microblaze_0_0_PC_Module_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_PC_Module_ff is
  signal \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\ : STD_LOGIC_VECTOR ( 31 downto 1 );
  signal \^q\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \WB_Exception_Return_Addr[27]_i_3_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[0]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[0]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[11]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[11]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[11]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[11]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[15]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[15]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[15]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[15]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[19]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[19]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[19]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[19]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[23]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[23]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[23]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[23]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[27]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[27]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[27]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[27]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[3]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[3]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[3]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[3]_i_2_n_3\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[7]_i_2_n_0\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[7]_i_2_n_1\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[7]_i_2_n_2\ : STD_LOGIC;
  signal \WB_Exception_Return_Addr_reg[7]_i_2_n_3\ : STD_LOGIC;
  signal bp0_new_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \bp0_next_pc[10]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[10]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[10]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[10]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[14]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[14]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[14]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[14]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[18]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[18]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[18]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[18]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[22]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[22]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[22]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[22]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[26]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[26]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[26]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[26]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[2]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[2]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[2]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[30]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[30]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[30]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[30]_i_5_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[6]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[6]_i_3_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[6]_i_4_n_0\ : STD_LOGIC;
  signal \bp0_next_pc[6]_i_5_n_0\ : STD_LOGIC;
  signal bp0_next_pc_reg : STD_LOGIC_VECTOR ( 0 to 30 );
  signal \bp0_next_pc_reg[10]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[10]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[14]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[18]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[22]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[26]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[2]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[2]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[2]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[2]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[2]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[30]_i_1_n_7\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_1\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_2\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_3\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_4\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_5\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_6\ : STD_LOGIC;
  signal \bp0_next_pc_reg[6]_i_1_n_7\ : STD_LOGIC;
  signal bp1_PC_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^cur_data_i_reg[31]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \ex_PC_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[10]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[11]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[13]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[15]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[16]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[17]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[18]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[27]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[31]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[4]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[5]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[6]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[7]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[8]\ : STD_LOGIC;
  signal \ex_PC_i_reg_n_0_[9]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[0]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[10]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[11]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[12]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[13]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[14]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[15]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[16]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[17]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[18]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[19]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[1]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[20]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[21]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[22]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[23]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[24]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[25]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[26]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[27]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[28]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[29]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[2]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[30]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[31]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[3]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[4]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[5]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[6]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[7]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[8]\ : STD_LOGIC;
  signal \m0_PC_i_reg_n_0_[9]\ : STD_LOGIC;
  signal m1_PC_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m2_PC_i : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \NLW_WB_Exception_Return_Addr_reg[0]_i_2_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_WB_Exception_Return_Addr_reg[0]_i_2_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  signal \NLW_bp0_next_pc_reg[2]_i_1_CO_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \NLW_bp0_next_pc_reg[2]_i_1_O_UNCONNECTED\ : STD_LOGIC_VECTOR ( 3 to 3 );
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \bp1_PC_i[0]_i_1\ : label is "soft_lutpair148";
  attribute SOFT_HLUTNM of \bp1_PC_i[10]_i_1\ : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of \bp1_PC_i[11]_i_1\ : label is "soft_lutpair153";
  attribute SOFT_HLUTNM of \bp1_PC_i[12]_i_1\ : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of \bp1_PC_i[13]_i_1\ : label is "soft_lutpair154";
  attribute SOFT_HLUTNM of \bp1_PC_i[14]_i_1\ : label is "soft_lutpair155";
  attribute SOFT_HLUTNM of \bp1_PC_i[15]_i_1\ : label is "soft_lutpair155";
  attribute SOFT_HLUTNM of \bp1_PC_i[16]_i_1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \bp1_PC_i[17]_i_1\ : label is "soft_lutpair156";
  attribute SOFT_HLUTNM of \bp1_PC_i[18]_i_1\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \bp1_PC_i[19]_i_1\ : label is "soft_lutpair157";
  attribute SOFT_HLUTNM of \bp1_PC_i[1]_i_1\ : label is "soft_lutpair148";
  attribute SOFT_HLUTNM of \bp1_PC_i[20]_i_1\ : label is "soft_lutpair158";
  attribute SOFT_HLUTNM of \bp1_PC_i[21]_i_1\ : label is "soft_lutpair158";
  attribute SOFT_HLUTNM of \bp1_PC_i[22]_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \bp1_PC_i[23]_i_1\ : label is "soft_lutpair159";
  attribute SOFT_HLUTNM of \bp1_PC_i[24]_i_1\ : label is "soft_lutpair160";
  attribute SOFT_HLUTNM of \bp1_PC_i[25]_i_1\ : label is "soft_lutpair160";
  attribute SOFT_HLUTNM of \bp1_PC_i[26]_i_1\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \bp1_PC_i[27]_i_1\ : label is "soft_lutpair161";
  attribute SOFT_HLUTNM of \bp1_PC_i[28]_i_1\ : label is "soft_lutpair162";
  attribute SOFT_HLUTNM of \bp1_PC_i[29]_i_1\ : label is "soft_lutpair162";
  attribute SOFT_HLUTNM of \bp1_PC_i[2]_i_1\ : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \bp1_PC_i[30]_i_1\ : label is "soft_lutpair163";
  attribute SOFT_HLUTNM of \bp1_PC_i[31]_i_1\ : label is "soft_lutpair163";
  attribute SOFT_HLUTNM of \bp1_PC_i[3]_i_1\ : label is "soft_lutpair149";
  attribute SOFT_HLUTNM of \bp1_PC_i[4]_i_1\ : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of \bp1_PC_i[5]_i_1\ : label is "soft_lutpair150";
  attribute SOFT_HLUTNM of \bp1_PC_i[6]_i_1\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of \bp1_PC_i[7]_i_1\ : label is "soft_lutpair151";
  attribute SOFT_HLUTNM of \bp1_PC_i[8]_i_1\ : label is "soft_lutpair152";
  attribute SOFT_HLUTNM of \bp1_PC_i[9]_i_1\ : label is "soft_lutpair152";
begin
  Q(31 downto 0) <= \^q\(31 downto 0);
  \cur_data_i_reg[31]\(31 downto 0) <= \^cur_data_i_reg[31]\(31 downto 0);
PC_BUFFER_I1: entity work.\microblaze_microblaze_0_0_OneHot_Buffer__parameterized3\
     port map (
      Clk => Clk,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[30]\(0) => \EX_Op1_reg[30]\(0),
      \EX_Op1_reg[30]_0\ => \EX_Op1_reg[30]_0\,
      addr(0) => Prefetch_Buffer_Full,
      addr(1) => if4_pre_buffer_addr(0),
      \cur_data_i_reg[1]_0\ => \cur_data_i_reg[1]\,
      \cur_data_i_reg[2]_0\ => \cur_data_i_reg[2]\,
      \cur_data_i_reg[30]_0\ => \cur_data_i_reg[30]\,
      \cur_data_i_reg[31]_0\(31 downto 0) => \^cur_data_i_reg[31]\(31 downto 0),
      \cur_data_i_reg[31]_1\ => \ex_PC_i_reg[0]_0\,
      \cur_data_i_reg[31]_2\(31 downto 0) => \cur_data_i_reg[31]_0\(31 downto 0),
      ex_set_msr_ie_instr => ex_set_msr_ie_instr,
      if4_push_instr_fetch => if4_push_instr_fetch,
      if4_sel_input(0) => if4_sel_input(0),
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      sync_reset => sync_reset
    );
\WB_Exception_Return_Addr0_carry__0_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(8),
      I1 => \^q\(9),
      O => \m3_PC_i_reg[23]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__0_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(7),
      I1 => \^q\(8),
      O => \m3_PC_i_reg[23]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__0_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(6),
      I1 => \^q\(7),
      O => \m3_PC_i_reg[23]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__0_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(5),
      I1 => \^q\(6),
      O => \m3_PC_i_reg[23]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__1_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(12),
      I1 => \^q\(13),
      O => \m3_PC_i_reg[19]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__1_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(11),
      I1 => \^q\(12),
      O => \m3_PC_i_reg[19]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__1_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(10),
      I1 => \^q\(11),
      O => \m3_PC_i_reg[19]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__1_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(9),
      I1 => \^q\(10),
      O => \m3_PC_i_reg[19]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__2_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(16),
      I1 => \^q\(17),
      O => \m3_PC_i_reg[15]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__2_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(15),
      I1 => \^q\(16),
      O => \m3_PC_i_reg[15]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__2_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(14),
      I1 => \^q\(15),
      O => \m3_PC_i_reg[15]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__2_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(13),
      I1 => \^q\(14),
      O => \m3_PC_i_reg[15]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__3_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(20),
      I1 => \^q\(21),
      O => \m3_PC_i_reg[11]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__3_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(19),
      I1 => \^q\(20),
      O => \m3_PC_i_reg[11]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__3_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(18),
      I1 => \^q\(19),
      O => \m3_PC_i_reg[11]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__3_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(17),
      I1 => \^q\(18),
      O => \m3_PC_i_reg[11]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__4_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(24),
      I1 => \^q\(25),
      O => \m3_PC_i_reg[7]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__4_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(23),
      I1 => \^q\(24),
      O => \m3_PC_i_reg[7]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__4_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(22),
      I1 => \^q\(23),
      O => \m3_PC_i_reg[7]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__4_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(21),
      I1 => \^q\(22),
      O => \m3_PC_i_reg[7]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__5_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(28),
      I1 => \^q\(29),
      O => \m3_PC_i_reg[3]_0\(3)
    );
\WB_Exception_Return_Addr0_carry__5_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(27),
      I1 => \^q\(28),
      O => \m3_PC_i_reg[3]_0\(2)
    );
\WB_Exception_Return_Addr0_carry__5_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(26),
      I1 => \^q\(27),
      O => \m3_PC_i_reg[3]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__5_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(25),
      I1 => \^q\(26),
      O => \m3_PC_i_reg[3]_0\(0)
    );
\WB_Exception_Return_Addr0_carry__6_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(30),
      I1 => \^q\(31),
      O => \m3_PC_i_reg[1]_0\(1)
    );
\WB_Exception_Return_Addr0_carry__6_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(29),
      I1 => \^q\(30),
      O => \m3_PC_i_reg[1]_0\(0)
    );
WB_Exception_Return_Addr0_carry_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EA"
    )
        port map (
      I0 => \^q\(2),
      I1 => \WB_Exception_Return_Addr_reg[0]\(0),
      I2 => m3_exception_from_m2,
      O => \m3_PC_i_reg[29]_0\(0)
    );
WB_Exception_Return_Addr0_carry_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(4),
      I1 => \^q\(5),
      O => S(3)
    );
WB_Exception_Return_Addr0_carry_i_3: unisim.vcomponents.LUT2
    generic map(
      INIT => X"9"
    )
        port map (
      I0 => \^q\(3),
      I1 => \^q\(4),
      O => S(2)
    );
WB_Exception_Return_Addr0_carry_i_4: unisim.vcomponents.LUT4
    generic map(
      INIT => X"F807"
    )
        port map (
      I0 => m3_exception_from_m2,
      I1 => \WB_Exception_Return_Addr_reg[0]\(0),
      I2 => \^q\(2),
      I3 => \^q\(3),
      O => S(1)
    );
WB_Exception_Return_Addr0_carry_i_5: unisim.vcomponents.LUT3
    generic map(
      INIT => X"95"
    )
        port map (
      I0 => \^q\(2),
      I1 => \WB_Exception_Return_Addr_reg[0]\(0),
      I2 => m3_exception_from_m2,
      O => S(0)
    );
\WB_Exception_Return_Addr[27]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"95"
    )
        port map (
      I0 => \^q\(2),
      I1 => \WB_Exception_Return_Addr_reg[0]\(0),
      I2 => m3_exception_from_m2,
      O => \WB_Exception_Return_Addr[27]_i_3_n_0\
    );
\WB_Exception_Return_Addr_reg[0]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[3]_i_2_n_0\,
      CO(3 downto 2) => \NLW_WB_Exception_Return_Addr_reg[0]_i_2_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \WB_Exception_Return_Addr_reg[0]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[0]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \NLW_WB_Exception_Return_Addr_reg[0]_i_2_O_UNCONNECTED\(3),
      O(2 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(31 downto 29),
      S(3) => '0',
      S(2 downto 0) => \^q\(31 downto 29)
    );
\WB_Exception_Return_Addr_reg[11]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[15]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[11]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[11]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[11]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[11]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(20 downto 17),
      S(3 downto 0) => \^q\(20 downto 17)
    );
\WB_Exception_Return_Addr_reg[15]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[19]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[15]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[15]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[15]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[15]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(16 downto 13),
      S(3 downto 0) => \^q\(16 downto 13)
    );
\WB_Exception_Return_Addr_reg[19]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[23]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[19]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[19]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[19]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[19]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(12 downto 9),
      S(3 downto 0) => \^q\(12 downto 9)
    );
\WB_Exception_Return_Addr_reg[23]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[27]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[23]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[23]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[23]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[23]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(8 downto 5),
      S(3 downto 0) => \^q\(8 downto 5)
    );
\WB_Exception_Return_Addr_reg[27]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \WB_Exception_Return_Addr_reg[27]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[27]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[27]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[27]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 2) => B"00",
      DI(1) => \^q\(2),
      DI(0) => '0',
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(4 downto 1),
      S(3 downto 2) => \^q\(4 downto 3),
      S(1) => \WB_Exception_Return_Addr[27]_i_3_n_0\,
      S(0) => \^q\(1)
    );
\WB_Exception_Return_Addr_reg[3]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[7]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[3]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[3]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[3]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[3]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(28 downto 25),
      S(3 downto 0) => \^q\(28 downto 25)
    );
\WB_Exception_Return_Addr_reg[7]_i_2\: unisim.vcomponents.CARRY4
     port map (
      CI => \WB_Exception_Return_Addr_reg[11]_i_2_n_0\,
      CO(3) => \WB_Exception_Return_Addr_reg[7]_i_2_n_0\,
      CO(2) => \WB_Exception_Return_Addr_reg[7]_i_2_n_1\,
      CO(1) => \WB_Exception_Return_Addr_reg[7]_i_2_n_2\,
      CO(0) => \WB_Exception_Return_Addr_reg[7]_i_2_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3 downto 0) => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(24 downto 21),
      S(3 downto 0) => \^q\(24 downto 21)
    );
\bp0_next_pc[10]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(24),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(7),
      O => \bp0_next_pc[10]_i_2_n_0\
    );
\bp0_next_pc[10]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(23),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(8),
      O => \bp0_next_pc[10]_i_3_n_0\
    );
\bp0_next_pc[10]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(22),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(9),
      O => \bp0_next_pc[10]_i_4_n_0\
    );
\bp0_next_pc[10]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(21),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(10),
      O => \bp0_next_pc[10]_i_5_n_0\
    );
\bp0_next_pc[14]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(20),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(11),
      O => \bp0_next_pc[14]_i_2_n_0\
    );
\bp0_next_pc[14]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(19),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(12),
      O => \bp0_next_pc[14]_i_3_n_0\
    );
\bp0_next_pc[14]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(18),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(13),
      O => \bp0_next_pc[14]_i_4_n_0\
    );
\bp0_next_pc[14]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(17),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(14),
      O => \bp0_next_pc[14]_i_5_n_0\
    );
\bp0_next_pc[18]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(16),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(15),
      O => \bp0_next_pc[18]_i_2_n_0\
    );
\bp0_next_pc[18]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(15),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(16),
      O => \bp0_next_pc[18]_i_3_n_0\
    );
\bp0_next_pc[18]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(14),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(17),
      O => \bp0_next_pc[18]_i_4_n_0\
    );
\bp0_next_pc[18]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(13),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(18),
      O => \bp0_next_pc[18]_i_5_n_0\
    );
\bp0_next_pc[22]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(12),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(19),
      O => \bp0_next_pc[22]_i_2_n_0\
    );
\bp0_next_pc[22]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(11),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(20),
      O => \bp0_next_pc[22]_i_3_n_0\
    );
\bp0_next_pc[22]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(10),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(21),
      O => \bp0_next_pc[22]_i_4_n_0\
    );
\bp0_next_pc[22]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(9),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(22),
      O => \bp0_next_pc[22]_i_5_n_0\
    );
\bp0_next_pc[26]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(8),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(23),
      O => \bp0_next_pc[26]_i_2_n_0\
    );
\bp0_next_pc[26]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(7),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(24),
      O => \bp0_next_pc[26]_i_3_n_0\
    );
\bp0_next_pc[26]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(6),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(25),
      O => \bp0_next_pc[26]_i_4_n_0\
    );
\bp0_next_pc[26]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(5),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(26),
      O => \bp0_next_pc[26]_i_5_n_0\
    );
\bp0_next_pc[2]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(31),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(0),
      O => \bp0_next_pc[2]_i_2_n_0\
    );
\bp0_next_pc[2]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(30),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(1),
      O => \bp0_next_pc[2]_i_3_n_0\
    );
\bp0_next_pc[2]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(29),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(2),
      O => \bp0_next_pc[2]_i_4_n_0\
    );
\bp0_next_pc[30]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(4),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(27),
      O => \bp0_next_pc[30]_i_2_n_0\
    );
\bp0_next_pc[30]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(3),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(28),
      O => \bp0_next_pc[30]_i_3_n_0\
    );
\bp0_next_pc[30]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"56A6"
    )
        port map (
      I0 => DI(0),
      I1 => bp0_next_pc_reg(29),
      I2 => bp0_jump,
      I3 => \bp1_PC_i_reg[0]_1\(2),
      O => \bp0_next_pc[30]_i_4_n_0\
    );
\bp0_next_pc[30]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(1),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(30),
      O => \bp0_next_pc[30]_i_5_n_0\
    );
\bp0_next_pc[6]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(28),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(3),
      O => \bp0_next_pc[6]_i_2_n_0\
    );
\bp0_next_pc[6]_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(27),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(4),
      O => \bp0_next_pc[6]_i_3_n_0\
    );
\bp0_next_pc[6]_i_4\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(26),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(5),
      O => \bp0_next_pc[6]_i_4_n_0\
    );
\bp0_next_pc[6]_i_5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(25),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(6),
      O => \bp0_next_pc[6]_i_5_n_0\
    );
\bp0_next_pc_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[2]_i_1_n_5\,
      Q => bp0_next_pc_reg(0),
      R => sync_reset
    );
\bp0_next_pc_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[10]_i_1_n_7\,
      Q => bp0_next_pc_reg(10),
      R => sync_reset
    );
\bp0_next_pc_reg[10]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[14]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[10]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[10]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[10]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[10]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[10]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[10]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[10]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[10]_i_1_n_7\,
      S(3) => \bp0_next_pc[10]_i_2_n_0\,
      S(2) => \bp0_next_pc[10]_i_3_n_0\,
      S(1) => \bp0_next_pc[10]_i_4_n_0\,
      S(0) => \bp0_next_pc[10]_i_5_n_0\
    );
\bp0_next_pc_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[14]_i_1_n_4\,
      Q => bp0_next_pc_reg(11),
      R => sync_reset
    );
\bp0_next_pc_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[14]_i_1_n_5\,
      Q => bp0_next_pc_reg(12),
      R => sync_reset
    );
\bp0_next_pc_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[14]_i_1_n_6\,
      Q => bp0_next_pc_reg(13),
      R => sync_reset
    );
\bp0_next_pc_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[14]_i_1_n_7\,
      Q => bp0_next_pc_reg(14),
      R => sync_reset
    );
\bp0_next_pc_reg[14]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[18]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[14]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[14]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[14]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[14]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[14]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[14]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[14]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[14]_i_1_n_7\,
      S(3) => \bp0_next_pc[14]_i_2_n_0\,
      S(2) => \bp0_next_pc[14]_i_3_n_0\,
      S(1) => \bp0_next_pc[14]_i_4_n_0\,
      S(0) => \bp0_next_pc[14]_i_5_n_0\
    );
\bp0_next_pc_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[18]_i_1_n_4\,
      Q => bp0_next_pc_reg(15),
      R => sync_reset
    );
\bp0_next_pc_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[18]_i_1_n_5\,
      Q => bp0_next_pc_reg(16),
      R => sync_reset
    );
\bp0_next_pc_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[18]_i_1_n_6\,
      Q => bp0_next_pc_reg(17),
      R => sync_reset
    );
\bp0_next_pc_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[18]_i_1_n_7\,
      Q => bp0_next_pc_reg(18),
      R => sync_reset
    );
\bp0_next_pc_reg[18]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[22]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[18]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[18]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[18]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[18]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[18]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[18]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[18]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[18]_i_1_n_7\,
      S(3) => \bp0_next_pc[18]_i_2_n_0\,
      S(2) => \bp0_next_pc[18]_i_3_n_0\,
      S(1) => \bp0_next_pc[18]_i_4_n_0\,
      S(0) => \bp0_next_pc[18]_i_5_n_0\
    );
\bp0_next_pc_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[22]_i_1_n_4\,
      Q => bp0_next_pc_reg(19),
      R => sync_reset
    );
\bp0_next_pc_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[2]_i_1_n_6\,
      Q => bp0_next_pc_reg(1),
      R => sync_reset
    );
\bp0_next_pc_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[22]_i_1_n_5\,
      Q => bp0_next_pc_reg(20),
      R => sync_reset
    );
\bp0_next_pc_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[22]_i_1_n_6\,
      Q => bp0_next_pc_reg(21),
      R => sync_reset
    );
\bp0_next_pc_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[22]_i_1_n_7\,
      Q => bp0_next_pc_reg(22),
      R => sync_reset
    );
\bp0_next_pc_reg[22]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[26]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[22]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[22]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[22]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[22]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[22]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[22]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[22]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[22]_i_1_n_7\,
      S(3) => \bp0_next_pc[22]_i_2_n_0\,
      S(2) => \bp0_next_pc[22]_i_3_n_0\,
      S(1) => \bp0_next_pc[22]_i_4_n_0\,
      S(0) => \bp0_next_pc[22]_i_5_n_0\
    );
\bp0_next_pc_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[26]_i_1_n_4\,
      Q => bp0_next_pc_reg(23),
      R => sync_reset
    );
\bp0_next_pc_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[26]_i_1_n_5\,
      Q => bp0_next_pc_reg(24),
      R => sync_reset
    );
\bp0_next_pc_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[26]_i_1_n_6\,
      Q => bp0_next_pc_reg(25),
      R => sync_reset
    );
\bp0_next_pc_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[26]_i_1_n_7\,
      Q => bp0_next_pc_reg(26),
      R => sync_reset
    );
\bp0_next_pc_reg[26]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[30]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[26]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[26]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[26]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[26]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[26]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[26]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[26]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[26]_i_1_n_7\,
      S(3) => \bp0_next_pc[26]_i_2_n_0\,
      S(2) => \bp0_next_pc[26]_i_3_n_0\,
      S(1) => \bp0_next_pc[26]_i_4_n_0\,
      S(0) => \bp0_next_pc[26]_i_5_n_0\
    );
\bp0_next_pc_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[30]_i_1_n_4\,
      Q => bp0_next_pc_reg(27),
      R => sync_reset
    );
\bp0_next_pc_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[30]_i_1_n_5\,
      Q => bp0_next_pc_reg(28),
      R => sync_reset
    );
\bp0_next_pc_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[30]_i_1_n_6\,
      Q => bp0_next_pc_reg(29),
      R => sync_reset
    );
\bp0_next_pc_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[2]_i_1_n_7\,
      Q => bp0_next_pc_reg(2),
      R => sync_reset
    );
\bp0_next_pc_reg[2]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[6]_i_1_n_0\,
      CO(3 downto 2) => \NLW_bp0_next_pc_reg[2]_i_1_CO_UNCONNECTED\(3 downto 2),
      CO(1) => \bp0_next_pc_reg[2]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[2]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \NLW_bp0_next_pc_reg[2]_i_1_O_UNCONNECTED\(3),
      O(2) => \bp0_next_pc_reg[2]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[2]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[2]_i_1_n_7\,
      S(3) => '0',
      S(2) => \bp0_next_pc[2]_i_2_n_0\,
      S(1) => \bp0_next_pc[2]_i_3_n_0\,
      S(0) => \bp0_next_pc[2]_i_4_n_0\
    );
\bp0_next_pc_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[30]_i_1_n_7\,
      Q => bp0_next_pc_reg(30),
      R => sync_reset
    );
\bp0_next_pc_reg[30]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => '0',
      CO(3) => \bp0_next_pc_reg[30]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[30]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[30]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[30]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 2) => B"00",
      DI(1) => DI(0),
      DI(0) => '0',
      O(3) => \bp0_next_pc_reg[30]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[30]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[30]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[30]_i_1_n_7\,
      S(3) => \bp0_next_pc[30]_i_2_n_0\,
      S(2) => \bp0_next_pc[30]_i_3_n_0\,
      S(1) => \bp0_next_pc[30]_i_4_n_0\,
      S(0) => \bp0_next_pc[30]_i_5_n_0\
    );
\bp0_next_pc_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[6]_i_1_n_4\,
      Q => bp0_next_pc_reg(3),
      R => sync_reset
    );
\bp0_next_pc_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[6]_i_1_n_5\,
      Q => bp0_next_pc_reg(4),
      R => sync_reset
    );
\bp0_next_pc_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[6]_i_1_n_6\,
      Q => bp0_next_pc_reg(5),
      R => sync_reset
    );
\bp0_next_pc_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[6]_i_1_n_7\,
      Q => bp0_next_pc_reg(6),
      R => sync_reset
    );
\bp0_next_pc_reg[6]_i_1\: unisim.vcomponents.CARRY4
     port map (
      CI => \bp0_next_pc_reg[10]_i_1_n_0\,
      CO(3) => \bp0_next_pc_reg[6]_i_1_n_0\,
      CO(2) => \bp0_next_pc_reg[6]_i_1_n_1\,
      CO(1) => \bp0_next_pc_reg[6]_i_1_n_2\,
      CO(0) => \bp0_next_pc_reg[6]_i_1_n_3\,
      CYINIT => '0',
      DI(3 downto 0) => B"0000",
      O(3) => \bp0_next_pc_reg[6]_i_1_n_4\,
      O(2) => \bp0_next_pc_reg[6]_i_1_n_5\,
      O(1) => \bp0_next_pc_reg[6]_i_1_n_6\,
      O(0) => \bp0_next_pc_reg[6]_i_1_n_7\,
      S(3) => \bp0_next_pc[6]_i_2_n_0\,
      S(2) => \bp0_next_pc[6]_i_3_n_0\,
      S(1) => \bp0_next_pc[6]_i_4_n_0\,
      S(0) => \bp0_next_pc[6]_i_5_n_0\
    );
\bp0_next_pc_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[10]_i_1_n_4\,
      Q => bp0_next_pc_reg(7),
      R => sync_reset
    );
\bp0_next_pc_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[10]_i_1_n_5\,
      Q => bp0_next_pc_reg(8),
      R => sync_reset
    );
\bp0_next_pc_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => \bp0_next_pc_reg[10]_i_1_n_6\,
      Q => bp0_next_pc_reg(9),
      R => sync_reset
    );
\bp1_PC_i[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(31),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(0),
      O => bp0_new_pc(0)
    );
\bp1_PC_i[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(21),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(10),
      O => bp0_new_pc(10)
    );
\bp1_PC_i[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(20),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(11),
      O => bp0_new_pc(11)
    );
\bp1_PC_i[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(19),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(12),
      O => bp0_new_pc(12)
    );
\bp1_PC_i[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(18),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(13),
      O => bp0_new_pc(13)
    );
\bp1_PC_i[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(17),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(14),
      O => bp0_new_pc(14)
    );
\bp1_PC_i[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(16),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(15),
      O => bp0_new_pc(15)
    );
\bp1_PC_i[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(15),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(16),
      O => bp0_new_pc(16)
    );
\bp1_PC_i[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(14),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(17),
      O => bp0_new_pc(17)
    );
\bp1_PC_i[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(13),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(18),
      O => bp0_new_pc(18)
    );
\bp1_PC_i[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(12),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(19),
      O => bp0_new_pc(19)
    );
\bp1_PC_i[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(30),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(1),
      O => bp0_new_pc(1)
    );
\bp1_PC_i[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(11),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(20),
      O => bp0_new_pc(20)
    );
\bp1_PC_i[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(10),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(21),
      O => bp0_new_pc(21)
    );
\bp1_PC_i[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(9),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(22),
      O => bp0_new_pc(22)
    );
\bp1_PC_i[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(8),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(23),
      O => bp0_new_pc(23)
    );
\bp1_PC_i[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(7),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(24),
      O => bp0_new_pc(24)
    );
\bp1_PC_i[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(6),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(25),
      O => bp0_new_pc(25)
    );
\bp1_PC_i[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(5),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(26),
      O => bp0_new_pc(26)
    );
\bp1_PC_i[27]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(4),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(27),
      O => bp0_new_pc(27)
    );
\bp1_PC_i[28]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(3),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(28),
      O => bp0_new_pc(28)
    );
\bp1_PC_i[29]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(2),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(29),
      O => bp0_new_pc(29)
    );
\bp1_PC_i[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(29),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(2),
      O => bp0_new_pc(2)
    );
\bp1_PC_i[30]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(1),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(30),
      O => bp0_new_pc(30)
    );
\bp1_PC_i[31]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(0),
      I1 => bp0_jump,
      I2 => bp1_PC_i(31),
      O => bp0_new_pc(31)
    );
\bp1_PC_i[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(28),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(3),
      O => bp0_new_pc(3)
    );
\bp1_PC_i[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(27),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(4),
      O => bp0_new_pc(4)
    );
\bp1_PC_i[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(26),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(5),
      O => bp0_new_pc(5)
    );
\bp1_PC_i[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(25),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(6),
      O => bp0_new_pc(6)
    );
\bp1_PC_i[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(24),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(7),
      O => bp0_new_pc(7)
    );
\bp1_PC_i[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(23),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(8),
      O => bp0_new_pc(8)
    );
\bp1_PC_i[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \bp1_PC_i_reg[0]_1\(22),
      I1 => bp0_jump,
      I2 => bp0_next_pc_reg(9),
      O => bp0_new_pc(9)
    );
\bp1_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(0),
      Q => bp1_PC_i(0),
      R => sync_reset
    );
\bp1_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(10),
      Q => bp1_PC_i(10),
      R => sync_reset
    );
\bp1_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(11),
      Q => bp1_PC_i(11),
      R => sync_reset
    );
\bp1_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(12),
      Q => bp1_PC_i(12),
      R => sync_reset
    );
\bp1_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(13),
      Q => bp1_PC_i(13),
      R => sync_reset
    );
\bp1_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(14),
      Q => bp1_PC_i(14),
      R => sync_reset
    );
\bp1_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(15),
      Q => bp1_PC_i(15),
      R => sync_reset
    );
\bp1_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(16),
      Q => bp1_PC_i(16),
      R => sync_reset
    );
\bp1_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(17),
      Q => bp1_PC_i(17),
      R => sync_reset
    );
\bp1_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(18),
      Q => bp1_PC_i(18),
      R => sync_reset
    );
\bp1_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(19),
      Q => bp1_PC_i(19),
      R => sync_reset
    );
\bp1_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(1),
      Q => bp1_PC_i(1),
      R => sync_reset
    );
\bp1_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(20),
      Q => bp1_PC_i(20),
      R => sync_reset
    );
\bp1_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(21),
      Q => bp1_PC_i(21),
      R => sync_reset
    );
\bp1_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(22),
      Q => bp1_PC_i(22),
      R => sync_reset
    );
\bp1_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(23),
      Q => bp1_PC_i(23),
      R => sync_reset
    );
\bp1_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(24),
      Q => bp1_PC_i(24),
      R => sync_reset
    );
\bp1_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(25),
      Q => bp1_PC_i(25),
      R => sync_reset
    );
\bp1_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(26),
      Q => bp1_PC_i(26),
      R => sync_reset
    );
\bp1_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(27),
      Q => bp1_PC_i(27),
      R => sync_reset
    );
\bp1_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(28),
      Q => bp1_PC_i(28),
      R => sync_reset
    );
\bp1_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(29),
      Q => bp1_PC_i(29),
      R => sync_reset
    );
\bp1_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(2),
      Q => bp1_PC_i(2),
      R => sync_reset
    );
\bp1_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(30),
      Q => bp1_PC_i(30),
      R => sync_reset
    );
\bp1_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(31),
      Q => bp1_PC_i(31),
      R => sync_reset
    );
\bp1_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(3),
      Q => bp1_PC_i(3),
      R => sync_reset
    );
\bp1_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(4),
      Q => bp1_PC_i(4),
      R => sync_reset
    );
\bp1_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(5),
      Q => bp1_PC_i(5),
      R => sync_reset
    );
\bp1_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(6),
      Q => bp1_PC_i(6),
      R => sync_reset
    );
\bp1_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(7),
      Q => bp1_PC_i(7),
      R => sync_reset
    );
\bp1_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(8),
      Q => bp1_PC_i(8),
      R => sync_reset
    );
\bp1_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \bp1_PC_i_reg[0]_0\,
      D => bp0_new_pc(9),
      Q => bp1_PC_i(9),
      R => sync_reset
    );
\ex_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(31),
      Q => \ex_PC_i_reg_n_0_[0]\,
      R => sync_reset
    );
\ex_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(21),
      Q => \ex_PC_i_reg_n_0_[10]\,
      R => sync_reset
    );
\ex_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(20),
      Q => \ex_PC_i_reg_n_0_[11]\,
      R => sync_reset
    );
\ex_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(19),
      Q => \ex_PC_i_reg_n_0_[12]\,
      R => sync_reset
    );
\ex_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(18),
      Q => \ex_PC_i_reg_n_0_[13]\,
      R => sync_reset
    );
\ex_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(17),
      Q => \ex_PC_i_reg_n_0_[14]\,
      R => sync_reset
    );
\ex_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(16),
      Q => \ex_PC_i_reg_n_0_[15]\,
      R => sync_reset
    );
\ex_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(15),
      Q => \ex_PC_i_reg_n_0_[16]\,
      R => sync_reset
    );
\ex_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(14),
      Q => \ex_PC_i_reg_n_0_[17]\,
      R => sync_reset
    );
\ex_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(13),
      Q => \ex_PC_i_reg_n_0_[18]\,
      R => sync_reset
    );
\ex_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(12),
      Q => \ex_PC_i_reg_n_0_[19]\,
      R => sync_reset
    );
\ex_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(30),
      Q => \ex_PC_i_reg_n_0_[1]\,
      R => sync_reset
    );
\ex_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(11),
      Q => \ex_PC_i_reg_n_0_[20]\,
      R => sync_reset
    );
\ex_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(10),
      Q => \ex_PC_i_reg_n_0_[21]\,
      R => sync_reset
    );
\ex_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(9),
      Q => \ex_PC_i_reg_n_0_[22]\,
      R => sync_reset
    );
\ex_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(8),
      Q => \ex_PC_i_reg_n_0_[23]\,
      R => sync_reset
    );
\ex_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(7),
      Q => \ex_PC_i_reg_n_0_[24]\,
      R => sync_reset
    );
\ex_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(6),
      Q => \ex_PC_i_reg_n_0_[25]\,
      R => sync_reset
    );
\ex_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(5),
      Q => \ex_PC_i_reg_n_0_[26]\,
      R => sync_reset
    );
\ex_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(4),
      Q => \ex_PC_i_reg_n_0_[27]\,
      R => sync_reset
    );
\ex_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(3),
      Q => \ex_PC_i_reg_n_0_[28]\,
      R => sync_reset
    );
\ex_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(2),
      Q => \ex_PC_i_reg_n_0_[29]\,
      R => sync_reset
    );
\ex_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(29),
      Q => \ex_PC_i_reg_n_0_[2]\,
      R => sync_reset
    );
\ex_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(1),
      Q => \ex_PC_i_reg_n_0_[30]\,
      R => sync_reset
    );
\ex_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(0),
      Q => \ex_PC_i_reg_n_0_[31]\,
      R => sync_reset
    );
\ex_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(28),
      Q => \ex_PC_i_reg_n_0_[3]\,
      R => sync_reset
    );
\ex_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(27),
      Q => \ex_PC_i_reg_n_0_[4]\,
      R => sync_reset
    );
\ex_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(26),
      Q => \ex_PC_i_reg_n_0_[5]\,
      R => sync_reset
    );
\ex_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(25),
      Q => \ex_PC_i_reg_n_0_[6]\,
      R => sync_reset
    );
\ex_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(24),
      Q => \ex_PC_i_reg_n_0_[7]\,
      R => sync_reset
    );
\ex_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(23),
      Q => \ex_PC_i_reg_n_0_[8]\,
      R => sync_reset
    );
\ex_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \ex_PC_i_reg[0]_0\,
      D => \^cur_data_i_reg[31]\(22),
      Q => \ex_PC_i_reg_n_0_[9]\,
      R => sync_reset
    );
\exception_registers_I1/WB_Exception_Return_Addr[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(31),
      I1 => WB_Exception_Return_Addr0(29),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(30)
    );
\exception_registers_I1/WB_Exception_Return_Addr[10]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(21),
      I1 => WB_Exception_Return_Addr0(19),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(20)
    );
\exception_registers_I1/WB_Exception_Return_Addr[11]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(20),
      I1 => WB_Exception_Return_Addr0(18),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(19)
    );
\exception_registers_I1/WB_Exception_Return_Addr[12]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(19),
      I1 => WB_Exception_Return_Addr0(17),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(18)
    );
\exception_registers_I1/WB_Exception_Return_Addr[13]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(18),
      I1 => WB_Exception_Return_Addr0(16),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(17)
    );
\exception_registers_I1/WB_Exception_Return_Addr[14]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(17),
      I1 => WB_Exception_Return_Addr0(15),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(16)
    );
\exception_registers_I1/WB_Exception_Return_Addr[15]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(16),
      I1 => WB_Exception_Return_Addr0(14),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(15)
    );
\exception_registers_I1/WB_Exception_Return_Addr[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(15),
      I1 => WB_Exception_Return_Addr0(13),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(14)
    );
\exception_registers_I1/WB_Exception_Return_Addr[17]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(14),
      I1 => WB_Exception_Return_Addr0(12),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(13)
    );
\exception_registers_I1/WB_Exception_Return_Addr[18]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(13),
      I1 => WB_Exception_Return_Addr0(11),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(12)
    );
\exception_registers_I1/WB_Exception_Return_Addr[19]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(12),
      I1 => WB_Exception_Return_Addr0(10),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(11)
    );
\exception_registers_I1/WB_Exception_Return_Addr[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(30),
      I1 => WB_Exception_Return_Addr0(28),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(29)
    );
\exception_registers_I1/WB_Exception_Return_Addr[20]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(11),
      I1 => WB_Exception_Return_Addr0(9),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(10)
    );
\exception_registers_I1/WB_Exception_Return_Addr[21]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(10),
      I1 => WB_Exception_Return_Addr0(8),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(9)
    );
\exception_registers_I1/WB_Exception_Return_Addr[22]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(9),
      I1 => WB_Exception_Return_Addr0(7),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(8)
    );
\exception_registers_I1/WB_Exception_Return_Addr[23]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(8),
      I1 => WB_Exception_Return_Addr0(6),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(7)
    );
\exception_registers_I1/WB_Exception_Return_Addr[24]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(7),
      I1 => WB_Exception_Return_Addr0(5),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(6)
    );
\exception_registers_I1/WB_Exception_Return_Addr[25]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(6),
      I1 => WB_Exception_Return_Addr0(4),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(5)
    );
\exception_registers_I1/WB_Exception_Return_Addr[26]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(5),
      I1 => WB_Exception_Return_Addr0(3),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(4)
    );
\exception_registers_I1/WB_Exception_Return_Addr[27]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(4),
      I1 => WB_Exception_Return_Addr0(2),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(3)
    );
\exception_registers_I1/WB_Exception_Return_Addr[28]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(3),
      I1 => WB_Exception_Return_Addr0(1),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(2)
    );
\exception_registers_I1/WB_Exception_Return_Addr[29]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(2),
      I1 => WB_Exception_Return_Addr0(0),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(1)
    );
\exception_registers_I1/WB_Exception_Return_Addr[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(29),
      I1 => WB_Exception_Return_Addr0(27),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(28)
    );
\exception_registers_I1/WB_Exception_Return_Addr[30]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(1),
      I1 => \^q\(1),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(0)
    );
\exception_registers_I1/WB_Exception_Return_Addr[3]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(28),
      I1 => WB_Exception_Return_Addr0(26),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(27)
    );
\exception_registers_I1/WB_Exception_Return_Addr[4]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(27),
      I1 => WB_Exception_Return_Addr0(25),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(26)
    );
\exception_registers_I1/WB_Exception_Return_Addr[5]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(26),
      I1 => WB_Exception_Return_Addr0(24),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(25)
    );
\exception_registers_I1/WB_Exception_Return_Addr[6]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(25),
      I1 => WB_Exception_Return_Addr0(23),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(24)
    );
\exception_registers_I1/WB_Exception_Return_Addr[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(24),
      I1 => WB_Exception_Return_Addr0(22),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(23)
    );
\exception_registers_I1/WB_Exception_Return_Addr[8]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(23),
      I1 => WB_Exception_Return_Addr0(21),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(22)
    );
\exception_registers_I1/WB_Exception_Return_Addr[9]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CAAA"
    )
        port map (
      I0 => \DATA_FLOW_I1/exception_registers_I1/WB_Exception_Return_Addr01_in\(22),
      I1 => WB_Exception_Return_Addr0(20),
      I2 => m3_exception_from_m2,
      I3 => \WB_Exception_Return_Addr_reg[0]\(0),
      O => \Using_FPGA.Native\(21)
    );
\if0_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(0),
      Q => D(31),
      R => sync_reset
    );
\if0_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(10),
      Q => D(21),
      R => sync_reset
    );
\if0_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(11),
      Q => D(20),
      R => sync_reset
    );
\if0_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(12),
      Q => D(19),
      R => sync_reset
    );
\if0_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(13),
      Q => D(18),
      R => sync_reset
    );
\if0_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(14),
      Q => D(17),
      R => sync_reset
    );
\if0_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(15),
      Q => D(16),
      R => sync_reset
    );
\if0_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(16),
      Q => D(15),
      R => sync_reset
    );
\if0_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(17),
      Q => D(14),
      R => sync_reset
    );
\if0_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(18),
      Q => D(13),
      R => sync_reset
    );
\if0_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(19),
      Q => D(12),
      R => sync_reset
    );
\if0_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(1),
      Q => D(30),
      R => sync_reset
    );
\if0_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(20),
      Q => D(11),
      R => sync_reset
    );
\if0_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(21),
      Q => D(10),
      R => sync_reset
    );
\if0_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(22),
      Q => D(9),
      R => sync_reset
    );
\if0_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(23),
      Q => D(8),
      R => sync_reset
    );
\if0_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(24),
      Q => D(7),
      R => sync_reset
    );
\if0_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(25),
      Q => D(6),
      R => sync_reset
    );
\if0_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(26),
      Q => D(5),
      R => sync_reset
    );
\if0_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(27),
      Q => D(4),
      R => sync_reset
    );
\if0_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(28),
      Q => D(3),
      R => sync_reset
    );
\if0_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(29),
      Q => D(2),
      R => sync_reset
    );
\if0_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(2),
      Q => D(29),
      R => sync_reset
    );
\if0_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(30),
      Q => D(1),
      R => sync_reset
    );
\if0_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(31),
      Q => D(0),
      R => sync_reset
    );
\if0_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(3),
      Q => D(28),
      R => sync_reset
    );
\if0_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(4),
      Q => D(27),
      R => sync_reset
    );
\if0_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(5),
      Q => D(26),
      R => sync_reset
    );
\if0_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(6),
      Q => D(25),
      R => sync_reset
    );
\if0_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(7),
      Q => D(24),
      R => sync_reset
    );
\if0_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(8),
      Q => D(23),
      R => sync_reset
    );
\if0_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => E(0),
      D => bp1_PC_i(9),
      Q => D(22),
      R => sync_reset
    );
\m0_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[0]\,
      Q => \m0_PC_i_reg_n_0_[0]\,
      R => sync_reset
    );
\m0_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[10]\,
      Q => \m0_PC_i_reg_n_0_[10]\,
      R => sync_reset
    );
\m0_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[11]\,
      Q => \m0_PC_i_reg_n_0_[11]\,
      R => sync_reset
    );
\m0_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[12]\,
      Q => \m0_PC_i_reg_n_0_[12]\,
      R => sync_reset
    );
\m0_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[13]\,
      Q => \m0_PC_i_reg_n_0_[13]\,
      R => sync_reset
    );
\m0_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[14]\,
      Q => \m0_PC_i_reg_n_0_[14]\,
      R => sync_reset
    );
\m0_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[15]\,
      Q => \m0_PC_i_reg_n_0_[15]\,
      R => sync_reset
    );
\m0_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[16]\,
      Q => \m0_PC_i_reg_n_0_[16]\,
      R => sync_reset
    );
\m0_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[17]\,
      Q => \m0_PC_i_reg_n_0_[17]\,
      R => sync_reset
    );
\m0_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[18]\,
      Q => \m0_PC_i_reg_n_0_[18]\,
      R => sync_reset
    );
\m0_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[19]\,
      Q => \m0_PC_i_reg_n_0_[19]\,
      R => sync_reset
    );
\m0_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[1]\,
      Q => \m0_PC_i_reg_n_0_[1]\,
      R => sync_reset
    );
\m0_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[20]\,
      Q => \m0_PC_i_reg_n_0_[20]\,
      R => sync_reset
    );
\m0_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[21]\,
      Q => \m0_PC_i_reg_n_0_[21]\,
      R => sync_reset
    );
\m0_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[22]\,
      Q => \m0_PC_i_reg_n_0_[22]\,
      R => sync_reset
    );
\m0_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[23]\,
      Q => \m0_PC_i_reg_n_0_[23]\,
      R => sync_reset
    );
\m0_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[24]\,
      Q => \m0_PC_i_reg_n_0_[24]\,
      R => sync_reset
    );
\m0_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[25]\,
      Q => \m0_PC_i_reg_n_0_[25]\,
      R => sync_reset
    );
\m0_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[26]\,
      Q => \m0_PC_i_reg_n_0_[26]\,
      R => sync_reset
    );
\m0_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[27]\,
      Q => \m0_PC_i_reg_n_0_[27]\,
      R => sync_reset
    );
\m0_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[28]\,
      Q => \m0_PC_i_reg_n_0_[28]\,
      R => sync_reset
    );
\m0_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[29]\,
      Q => \m0_PC_i_reg_n_0_[29]\,
      R => sync_reset
    );
\m0_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[2]\,
      Q => \m0_PC_i_reg_n_0_[2]\,
      R => sync_reset
    );
\m0_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[30]\,
      Q => \m0_PC_i_reg_n_0_[30]\,
      R => sync_reset
    );
\m0_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[31]\,
      Q => \m0_PC_i_reg_n_0_[31]\,
      R => sync_reset
    );
\m0_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[3]\,
      Q => \m0_PC_i_reg_n_0_[3]\,
      R => sync_reset
    );
\m0_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[4]\,
      Q => \m0_PC_i_reg_n_0_[4]\,
      R => sync_reset
    );
\m0_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[5]\,
      Q => \m0_PC_i_reg_n_0_[5]\,
      R => sync_reset
    );
\m0_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[6]\,
      Q => \m0_PC_i_reg_n_0_[6]\,
      R => sync_reset
    );
\m0_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[7]\,
      Q => \m0_PC_i_reg_n_0_[7]\,
      R => sync_reset
    );
\m0_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[8]\,
      Q => \m0_PC_i_reg_n_0_[8]\,
      R => sync_reset
    );
\m0_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m0_PC_i_reg[0]_0\(0),
      D => \ex_PC_i_reg_n_0_[9]\,
      Q => \m0_PC_i_reg_n_0_[9]\,
      R => sync_reset
    );
\m1_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[0]\,
      Q => m1_PC_i(0),
      R => sync_reset
    );
\m1_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[10]\,
      Q => m1_PC_i(10),
      R => sync_reset
    );
\m1_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[11]\,
      Q => m1_PC_i(11),
      R => sync_reset
    );
\m1_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[12]\,
      Q => m1_PC_i(12),
      R => sync_reset
    );
\m1_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[13]\,
      Q => m1_PC_i(13),
      R => sync_reset
    );
\m1_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[14]\,
      Q => m1_PC_i(14),
      R => sync_reset
    );
\m1_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[15]\,
      Q => m1_PC_i(15),
      R => sync_reset
    );
\m1_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[16]\,
      Q => m1_PC_i(16),
      R => sync_reset
    );
\m1_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[17]\,
      Q => m1_PC_i(17),
      R => sync_reset
    );
\m1_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[18]\,
      Q => m1_PC_i(18),
      R => sync_reset
    );
\m1_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[19]\,
      Q => m1_PC_i(19),
      R => sync_reset
    );
\m1_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[1]\,
      Q => m1_PC_i(1),
      R => sync_reset
    );
\m1_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[20]\,
      Q => m1_PC_i(20),
      R => sync_reset
    );
\m1_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[21]\,
      Q => m1_PC_i(21),
      R => sync_reset
    );
\m1_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[22]\,
      Q => m1_PC_i(22),
      R => sync_reset
    );
\m1_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[23]\,
      Q => m1_PC_i(23),
      R => sync_reset
    );
\m1_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[24]\,
      Q => m1_PC_i(24),
      R => sync_reset
    );
\m1_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[25]\,
      Q => m1_PC_i(25),
      R => sync_reset
    );
\m1_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[26]\,
      Q => m1_PC_i(26),
      R => sync_reset
    );
\m1_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[27]\,
      Q => m1_PC_i(27),
      R => sync_reset
    );
\m1_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[28]\,
      Q => m1_PC_i(28),
      R => sync_reset
    );
\m1_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[29]\,
      Q => m1_PC_i(29),
      R => sync_reset
    );
\m1_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[2]\,
      Q => m1_PC_i(2),
      R => sync_reset
    );
\m1_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[30]\,
      Q => m1_PC_i(30),
      R => sync_reset
    );
\m1_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[31]\,
      Q => m1_PC_i(31),
      R => sync_reset
    );
\m1_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[3]\,
      Q => m1_PC_i(3),
      R => sync_reset
    );
\m1_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[4]\,
      Q => m1_PC_i(4),
      R => sync_reset
    );
\m1_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[5]\,
      Q => m1_PC_i(5),
      R => sync_reset
    );
\m1_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[6]\,
      Q => m1_PC_i(6),
      R => sync_reset
    );
\m1_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[7]\,
      Q => m1_PC_i(7),
      R => sync_reset
    );
\m1_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[8]\,
      Q => m1_PC_i(8),
      R => sync_reset
    );
\m1_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => in0,
      D => \m0_PC_i_reg_n_0_[9]\,
      Q => m1_PC_i(9),
      R => sync_reset
    );
\m2_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(0),
      Q => m2_PC_i(0),
      R => sync_reset
    );
\m2_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(10),
      Q => m2_PC_i(10),
      R => sync_reset
    );
\m2_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(11),
      Q => m2_PC_i(11),
      R => sync_reset
    );
\m2_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(12),
      Q => m2_PC_i(12),
      R => sync_reset
    );
\m2_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(13),
      Q => m2_PC_i(13),
      R => sync_reset
    );
\m2_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(14),
      Q => m2_PC_i(14),
      R => sync_reset
    );
\m2_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(15),
      Q => m2_PC_i(15),
      R => sync_reset
    );
\m2_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(16),
      Q => m2_PC_i(16),
      R => sync_reset
    );
\m2_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(17),
      Q => m2_PC_i(17),
      R => sync_reset
    );
\m2_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(18),
      Q => m2_PC_i(18),
      R => sync_reset
    );
\m2_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(19),
      Q => m2_PC_i(19),
      R => sync_reset
    );
\m2_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(1),
      Q => m2_PC_i(1),
      R => sync_reset
    );
\m2_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(20),
      Q => m2_PC_i(20),
      R => sync_reset
    );
\m2_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(21),
      Q => m2_PC_i(21),
      R => sync_reset
    );
\m2_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(22),
      Q => m2_PC_i(22),
      R => sync_reset
    );
\m2_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(23),
      Q => m2_PC_i(23),
      R => sync_reset
    );
\m2_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(24),
      Q => m2_PC_i(24),
      R => sync_reset
    );
\m2_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(25),
      Q => m2_PC_i(25),
      R => sync_reset
    );
\m2_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(26),
      Q => m2_PC_i(26),
      R => sync_reset
    );
\m2_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(27),
      Q => m2_PC_i(27),
      R => sync_reset
    );
\m2_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(28),
      Q => m2_PC_i(28),
      R => sync_reset
    );
\m2_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(29),
      Q => m2_PC_i(29),
      R => sync_reset
    );
\m2_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(2),
      Q => m2_PC_i(2),
      R => sync_reset
    );
\m2_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(30),
      Q => m2_PC_i(30),
      R => sync_reset
    );
\m2_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(31),
      Q => m2_PC_i(31),
      R => sync_reset
    );
\m2_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(3),
      Q => m2_PC_i(3),
      R => sync_reset
    );
\m2_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(4),
      Q => m2_PC_i(4),
      R => sync_reset
    );
\m2_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(5),
      Q => m2_PC_i(5),
      R => sync_reset
    );
\m2_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(6),
      Q => m2_PC_i(6),
      R => sync_reset
    );
\m2_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(7),
      Q => m2_PC_i(7),
      R => sync_reset
    );
\m2_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(8),
      Q => m2_PC_i(8),
      R => sync_reset
    );
\m2_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m2_PC_i_reg[0]_0\(0),
      D => m1_PC_i(9),
      Q => m2_PC_i(9),
      R => sync_reset
    );
\m3_PC_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(0),
      Q => \^q\(31),
      R => sync_reset
    );
\m3_PC_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(10),
      Q => \^q\(21),
      R => sync_reset
    );
\m3_PC_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(11),
      Q => \^q\(20),
      R => sync_reset
    );
\m3_PC_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(12),
      Q => \^q\(19),
      R => sync_reset
    );
\m3_PC_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(13),
      Q => \^q\(18),
      R => sync_reset
    );
\m3_PC_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(14),
      Q => \^q\(17),
      R => sync_reset
    );
\m3_PC_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(15),
      Q => \^q\(16),
      R => sync_reset
    );
\m3_PC_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(16),
      Q => \^q\(15),
      R => sync_reset
    );
\m3_PC_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(17),
      Q => \^q\(14),
      R => sync_reset
    );
\m3_PC_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(18),
      Q => \^q\(13),
      R => sync_reset
    );
\m3_PC_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(19),
      Q => \^q\(12),
      R => sync_reset
    );
\m3_PC_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(1),
      Q => \^q\(30),
      R => sync_reset
    );
\m3_PC_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(20),
      Q => \^q\(11),
      R => sync_reset
    );
\m3_PC_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(21),
      Q => \^q\(10),
      R => sync_reset
    );
\m3_PC_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(22),
      Q => \^q\(9),
      R => sync_reset
    );
\m3_PC_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(23),
      Q => \^q\(8),
      R => sync_reset
    );
\m3_PC_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(24),
      Q => \^q\(7),
      R => sync_reset
    );
\m3_PC_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(25),
      Q => \^q\(6),
      R => sync_reset
    );
\m3_PC_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(26),
      Q => \^q\(5),
      R => sync_reset
    );
\m3_PC_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(27),
      Q => \^q\(4),
      R => sync_reset
    );
\m3_PC_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(28),
      Q => \^q\(3),
      R => sync_reset
    );
\m3_PC_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(29),
      Q => \^q\(2),
      R => sync_reset
    );
\m3_PC_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(2),
      Q => \^q\(29),
      R => sync_reset
    );
\m3_PC_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(30),
      Q => \^q\(1),
      R => sync_reset
    );
\m3_PC_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(31),
      Q => \^q\(0),
      R => sync_reset
    );
\m3_PC_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(3),
      Q => \^q\(28),
      R => sync_reset
    );
\m3_PC_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(4),
      Q => \^q\(27),
      R => sync_reset
    );
\m3_PC_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(5),
      Q => \^q\(26),
      R => sync_reset
    );
\m3_PC_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(6),
      Q => \^q\(25),
      R => sync_reset
    );
\m3_PC_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(7),
      Q => \^q\(24),
      R => sync_reset
    );
\m3_PC_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(8),
      Q => \^q\(23),
      R => sync_reset
    );
\m3_PC_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \m3_PC_i_reg[0]_0\(0),
      D => m2_PC_i(9),
      Q => \^q\(22),
      R => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Register_File_gti is
  port (
    GPR_Op1 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    GPR_Op3 : out STD_LOGIC_VECTOR ( 0 to 31 );
    Clk : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    WB_Fwd : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op3[1]_i_2\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Register_File_gti : entity is "Register_File_gti";
end microblaze_microblaze_0_0_Register_File_gti;

architecture STRUCTURE of microblaze_microblaze_0_0_Register_File_gti is
begin
\Using_LUT6.All_RAM32M[0].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[1]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(0),
      GPR_Op1(0) => GPR_Op1(1),
      GPR_Op2(1) => GPR_Op2(0),
      GPR_Op2(0) => GPR_Op2(1),
      GPR_Op3(1) => GPR_Op3(0),
      GPR_Op3(0) => GPR_Op3(1),
      WB_Fwd(1) => WB_Fwd(0),
      WB_Fwd(0) => WB_Fwd(1),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[10].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_685
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[21]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(20),
      GPR_Op1(0) => GPR_Op1(21),
      GPR_Op2(1) => GPR_Op2(20),
      GPR_Op2(0) => GPR_Op2(21),
      GPR_Op3(1) => GPR_Op3(20),
      GPR_Op3(0) => GPR_Op3(21),
      WB_Fwd(1) => WB_Fwd(20),
      WB_Fwd(0) => WB_Fwd(21),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[11].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_686
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[23]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(22),
      GPR_Op1(0) => GPR_Op1(23),
      GPR_Op2(1) => GPR_Op2(22),
      GPR_Op2(0) => GPR_Op2(23),
      GPR_Op3(1) => GPR_Op3(22),
      GPR_Op3(0) => GPR_Op3(23),
      WB_Fwd(1) => WB_Fwd(22),
      WB_Fwd(0) => WB_Fwd(23),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[12].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_687
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[25]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(24),
      GPR_Op1(0) => GPR_Op1(25),
      GPR_Op2(1) => GPR_Op2(24),
      GPR_Op2(0) => GPR_Op2(25),
      GPR_Op3(1) => GPR_Op3(24),
      GPR_Op3(0) => GPR_Op3(25),
      WB_Fwd(1) => WB_Fwd(24),
      WB_Fwd(0) => WB_Fwd(25),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[13].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_688
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[27]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(26),
      GPR_Op1(0) => GPR_Op1(27),
      GPR_Op2(1) => GPR_Op2(26),
      GPR_Op2(0) => GPR_Op2(27),
      GPR_Op3(1) => GPR_Op3(26),
      GPR_Op3(0) => GPR_Op3(27),
      WB_Fwd(1) => WB_Fwd(26),
      WB_Fwd(0) => WB_Fwd(27),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[14].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_689
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[29]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(28),
      GPR_Op1(0) => GPR_Op1(29),
      GPR_Op2(1) => GPR_Op2(28),
      GPR_Op2(0) => GPR_Op2(29),
      GPR_Op3(1) => GPR_Op3(28),
      GPR_Op3(0) => GPR_Op3(29),
      WB_Fwd(1) => WB_Fwd(28),
      WB_Fwd(0) => WB_Fwd(29),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[15].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_690
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[31]_i_3\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(30),
      GPR_Op1(0) => GPR_Op1(31),
      GPR_Op2(1) => GPR_Op2(30),
      GPR_Op2(0) => GPR_Op2(31),
      GPR_Op3(1) => GPR_Op3(30),
      GPR_Op3(0) => GPR_Op3(31),
      WB_Fwd(1) => WB_Fwd(30),
      WB_Fwd(0) => WB_Fwd(31),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[1].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_691
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[3]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(2),
      GPR_Op1(0) => GPR_Op1(3),
      GPR_Op2(1) => GPR_Op2(2),
      GPR_Op2(0) => GPR_Op2(3),
      GPR_Op3(1) => GPR_Op3(2),
      GPR_Op3(0) => GPR_Op3(3),
      WB_Fwd(1) => WB_Fwd(2),
      WB_Fwd(0) => WB_Fwd(3),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[2].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_692
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[5]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(4),
      GPR_Op1(0) => GPR_Op1(5),
      GPR_Op2(1) => GPR_Op2(4),
      GPR_Op2(0) => GPR_Op2(5),
      GPR_Op3(1) => GPR_Op3(4),
      GPR_Op3(0) => GPR_Op3(5),
      WB_Fwd(1) => WB_Fwd(4),
      WB_Fwd(0) => WB_Fwd(5),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[3].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_693
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[7]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(6),
      GPR_Op1(0) => GPR_Op1(7),
      GPR_Op2(1) => GPR_Op2(6),
      GPR_Op2(0) => GPR_Op2(7),
      GPR_Op3(1) => GPR_Op3(6),
      GPR_Op3(0) => GPR_Op3(7),
      WB_Fwd(1) => WB_Fwd(6),
      WB_Fwd(0) => WB_Fwd(7),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[4].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_694
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[9]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(8),
      GPR_Op1(0) => GPR_Op1(9),
      GPR_Op2(1) => GPR_Op2(8),
      GPR_Op2(0) => GPR_Op2(9),
      GPR_Op3(1) => GPR_Op3(8),
      GPR_Op3(0) => GPR_Op3(9),
      WB_Fwd(1) => WB_Fwd(8),
      WB_Fwd(0) => WB_Fwd(9),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[5].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_695
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[11]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(10),
      GPR_Op1(0) => GPR_Op1(11),
      GPR_Op2(1) => GPR_Op2(10),
      GPR_Op2(0) => GPR_Op2(11),
      GPR_Op3(1) => GPR_Op3(10),
      GPR_Op3(0) => GPR_Op3(11),
      WB_Fwd(1) => WB_Fwd(10),
      WB_Fwd(0) => WB_Fwd(11),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[6].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_696
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[13]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(12),
      GPR_Op1(0) => GPR_Op1(13),
      GPR_Op2(1) => GPR_Op2(12),
      GPR_Op2(0) => GPR_Op2(13),
      GPR_Op3(1) => GPR_Op3(12),
      GPR_Op3(0) => GPR_Op3(13),
      WB_Fwd(1) => WB_Fwd(12),
      WB_Fwd(0) => WB_Fwd(13),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[7].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_697
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[15]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(14),
      GPR_Op1(0) => GPR_Op1(15),
      GPR_Op2(1) => GPR_Op2(14),
      GPR_Op2(0) => GPR_Op2(15),
      GPR_Op3(1) => GPR_Op3(14),
      GPR_Op3(0) => GPR_Op3(15),
      WB_Fwd(1) => WB_Fwd(14),
      WB_Fwd(0) => WB_Fwd(15),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[8].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_698
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[17]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(16),
      GPR_Op1(0) => GPR_Op1(17),
      GPR_Op2(1) => GPR_Op2(16),
      GPR_Op2(0) => GPR_Op2(17),
      GPR_Op3(1) => GPR_Op3(16),
      GPR_Op3(0) => GPR_Op3(17),
      WB_Fwd(1) => WB_Fwd(16),
      WB_Fwd(0) => WB_Fwd(17),
      wb_gpr_wr => wb_gpr_wr
    );
\Using_LUT6.All_RAM32M[9].ram32m_i\: entity work.microblaze_microblaze_0_0_MB_RAM32M_699
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[19]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(14 downto 0),
      GPR_Op1(1) => GPR_Op1(18),
      GPR_Op1(0) => GPR_Op1(19),
      GPR_Op2(1) => GPR_Op2(18),
      GPR_Op2(0) => GPR_Op2(19),
      GPR_Op3(1) => GPR_Op3(18),
      GPR_Op3(0) => GPR_Op3(19),
      WB_Fwd(1) => WB_Fwd(18),
      WB_Fwd(0) => WB_Fwd(19),
      wb_gpr_wr => wb_gpr_wr
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Zero_Detect_gti is
  port (
    EX_Op1_Zero : out STD_LOGIC;
    div_iterations_early : out STD_LOGIC;
    EX_Op1_CMP_Equal : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    div_busy_reg : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    ex_start_div : in STD_LOGIC;
    div_busy_reg_0 : in STD_LOGIC;
    div_busy_reg_1 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Zero_Detect_gti : entity is "Zero_Detect_gti";
end microblaze_microblaze_0_0_Zero_Detect_gti;

architecture STRUCTURE of microblaze_microblaze_0_0_Zero_Detect_gti is
  signal S : STD_LOGIC;
  signal \S0_inferred__0/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__1/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__2/i__n_0\ : STD_LOGIC;
  signal \S0_inferred__3/i__n_0\ : STD_LOGIC;
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal zero_CI_1 : STD_LOGIC;
  signal zero_CI_2 : STD_LOGIC;
  signal zero_CI_3 : STD_LOGIC;
  signal zero_CI_4 : STD_LOGIC;
  signal zero_CI_5 : STD_LOGIC;
  signal zero_CI_6 : STD_LOGIC;
begin
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
Part_Of_Zero_Carry_Start: entity work.microblaze_microblaze_0_0_MB_MUXCY_584
     port map (
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      lopt => \^lopt\,
      lopt_1 => ex_op1_cmp_equal_n,
      lopt_2 => S,
      lopt_3 => \^lopt_1\,
      lopt_4 => \S0_inferred__3/i__n_0\,
      lopt_5 => \^lopt_2\,
      lopt_6 => \S0_inferred__2/i__n_0\,
      zero_CI_6 => zero_CI_6
    );
\S0_inferred__0/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(0),
      I1 => \Using_FPGA.Native\(5),
      I2 => \Using_FPGA.Native\(3),
      I3 => \Using_FPGA.Native\(4),
      I4 => \Using_FPGA.Native\(1),
      I5 => \Using_FPGA.Native\(2),
      O => \S0_inferred__0/i__n_0\
    );
\S0_inferred__1/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(6),
      I1 => \Using_FPGA.Native\(11),
      I2 => \Using_FPGA.Native\(9),
      I3 => \Using_FPGA.Native\(10),
      I4 => \Using_FPGA.Native\(7),
      I5 => \Using_FPGA.Native\(8),
      O => \S0_inferred__1/i__n_0\
    );
\S0_inferred__2/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(12),
      I1 => \Using_FPGA.Native\(17),
      I2 => \Using_FPGA.Native\(15),
      I3 => \Using_FPGA.Native\(16),
      I4 => \Using_FPGA.Native\(13),
      I5 => \Using_FPGA.Native\(14),
      O => \S0_inferred__2/i__n_0\
    );
\S0_inferred__3/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(18),
      I1 => \Using_FPGA.Native\(23),
      I2 => \Using_FPGA.Native\(21),
      I3 => \Using_FPGA.Native\(22),
      I4 => \Using_FPGA.Native\(19),
      I5 => \Using_FPGA.Native\(20),
      O => \S0_inferred__3/i__n_0\
    );
\S0_inferred__4/i_\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000000001"
    )
        port map (
      I0 => \Using_FPGA.Native\(24),
      I1 => \Using_FPGA.Native\(29),
      I2 => \Using_FPGA.Native\(27),
      I3 => \Using_FPGA.Native\(28),
      I4 => \Using_FPGA.Native\(25),
      I5 => \Using_FPGA.Native\(26),
      O => S
    );
\Zero_Detecting[1].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_585
     port map (
      EX_Op1_Zero => EX_Op1_Zero,
      div_busy_reg => div_busy_reg,
      div_busy_reg_0 => div_busy_reg_0,
      div_busy_reg_1 => div_busy_reg_1,
      div_iterations_early => div_iterations_early,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_start_div => ex_start_div,
      lopt => lopt_4,
      zero_CI_1 => zero_CI_1
    );
\Zero_Detecting[2].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_586
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__0/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => lopt_3,
      zero_CI_1 => zero_CI_1,
      zero_CI_2 => zero_CI_2
    );
\Zero_Detecting[3].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_587
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__1/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => lopt_3,
      lopt_1 => \S0_inferred__0/i__n_0\,
      lopt_2 => lopt_4,
      lopt_3 => div_busy_reg,
      lopt_4 => lopt_5,
      lopt_5 => lopt_6,
      lopt_6 => lopt_7,
      zero_CI_2 => zero_CI_2,
      zero_CI_3 => zero_CI_3
    );
\Zero_Detecting[4].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_588
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__2/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt_2\,
      zero_CI_3 => zero_CI_3,
      zero_CI_4 => zero_CI_4
    );
\Zero_Detecting[5].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_589
     port map (
      \Using_FPGA.Native_0\ => \S0_inferred__3/i__n_0\,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt_1\,
      zero_CI_4 => zero_CI_4,
      zero_CI_5 => zero_CI_5
    );
\Zero_Detecting[6].I_Part_Of_Zero_Detect\: entity work.microblaze_microblaze_0_0_MB_MUXCY_590
     port map (
      S => S,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      lopt => \^lopt\,
      zero_CI_5 => zero_CI_5,
      zero_CI_6 => zero_CI_6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_address_hit is
  port (
    single_Step_N_reg : out STD_LOGIC;
    Hit : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    single_Step_N : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\ : in STD_LOGIC;
    force_stop_i : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Dbg_Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_address_hit : entity is "address_hit";
end microblaze_microblaze_0_0_address_hit;

architecture STRUCTURE of microblaze_microblaze_0_0_address_hit is
  signal SRL16_MC15_1 : STD_LOGIC;
  signal SRL16_MC15_2 : STD_LOGIC;
  signal SRL16_MC15_3 : STD_LOGIC;
  signal SRL16_MC15_4 : STD_LOGIC;
  signal SRL16_MC15_5 : STD_LOGIC;
  signal SRL16_MC15_6 : STD_LOGIC;
  signal SRL16_MC15_7 : STD_LOGIC;
  signal SRL16_Sel_0 : STD_LOGIC;
  signal SRL16_Sel_1 : STD_LOGIC;
  signal SRL16_Sel_2 : STD_LOGIC;
  signal SRL16_Sel_3 : STD_LOGIC;
  signal SRL16_Sel_4 : STD_LOGIC;
  signal SRL16_Sel_5 : STD_LOGIC;
  signal SRL16_Sel_6 : STD_LOGIC;
  signal SRL16_Sel_7 : STD_LOGIC;
  signal carry_0 : STD_LOGIC;
  signal carry_1 : STD_LOGIC;
  signal carry_2 : STD_LOGIC;
  signal carry_3 : STD_LOGIC;
  signal carry_4 : STD_LOGIC;
  signal carry_5 : STD_LOGIC;
  signal carry_6 : STD_LOGIC;
  signal carry_7 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal \which_pc__0\ : STD_LOGIC;
begin
\Compare[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY
     port map (
      Q(0) => Q(0),
      SRL16_Sel_7 => SRL16_Sel_7,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => SRL16_Sel_6,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => SRL16_Sel_5,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => SRL16_Sel_4
    );
\Compare[0].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E
     port map (
      Address(3) => Address(28),
      Address(2) => Address(29),
      Address(1) => Address(30),
      Address(0) => Address(31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_7 => SRL16_Sel_7,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_15
     port map (
      SRL16_Sel_6 => SRL16_Sel_6,
      carry_6 => carry_6,
      carry_7 => carry_7,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Compare[1].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_16
     port map (
      Address(3) => Address(24),
      Address(2) => Address(25),
      Address(1) => Address(26),
      Address(0) => Address(27),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_MC15_7 => SRL16_MC15_7,
      SRL16_Sel_6 => SRL16_Sel_6,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[2].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_17
     port map (
      SRL16_Sel_5 => SRL16_Sel_5,
      carry_5 => carry_5,
      carry_6 => carry_6,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Compare[2].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_18
     port map (
      Address(3) => Address(20),
      Address(2) => Address(21),
      Address(1) => Address(22),
      Address(0) => Address(23),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_MC15_6 => SRL16_MC15_6,
      SRL16_Sel_5 => SRL16_Sel_5,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[3].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_19
     port map (
      SRL16_Sel_4 => SRL16_Sel_4,
      carry_4 => carry_4,
      carry_5 => carry_5,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
\Compare[3].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_20
     port map (
      Address(3) => Address(16),
      Address(2) => Address(17),
      Address(1) => Address(18),
      Address(0) => Address(19),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_MC15_5 => SRL16_MC15_5,
      SRL16_Sel_4 => SRL16_Sel_4,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[4].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_21
     port map (
      SRL16_Sel_3 => SRL16_Sel_3,
      carry_3 => carry_3,
      carry_4 => carry_4,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => SRL16_Sel_2,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => SRL16_Sel_1,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => SRL16_Sel_0
    );
\Compare[4].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_22
     port map (
      Address(3) => Address(12),
      Address(2) => Address(13),
      Address(1) => Address(14),
      Address(0) => Address(15),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_MC15_4 => SRL16_MC15_4,
      SRL16_Sel_3 => SRL16_Sel_3,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[5].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_23
     port map (
      SRL16_Sel_2 => SRL16_Sel_2,
      carry_2 => carry_2,
      carry_3 => carry_3,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\Compare[5].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_24
     port map (
      Address(3) => Address(8),
      Address(2) => Address(9),
      Address(1) => Address(10),
      Address(0) => Address(11),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_MC15_3 => SRL16_MC15_3,
      SRL16_Sel_2 => SRL16_Sel_2,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[6].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_25
     port map (
      SRL16_Sel_1 => SRL16_Sel_1,
      carry_1 => carry_1,
      carry_2 => carry_2,
      lopt => lopt_8,
      lopt_1 => lopt_9
    );
\Compare[6].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_26
     port map (
      Address(3) => Address(4),
      Address(2) => Address(5),
      Address(1) => Address(6),
      Address(0) => Address(7),
      Dbg_Clk => Dbg_Clk,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_MC15_2 => SRL16_MC15_2,
      SRL16_Sel_1 => SRL16_Sel_1,
      \which_pc__0\ => \which_pc__0\
    );
\Compare[7].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_27
     port map (
      SRL16_Sel_0 => SRL16_Sel_0,
      carry_0 => carry_0,
      carry_1 => carry_1,
      lopt => lopt_10,
      lopt_1 => lopt_11
    );
\Compare[7].SRLC16E_I\: entity work.microblaze_microblaze_0_0_MB_SRLC16E_28
     port map (
      Address(3) => Address(0),
      Address(2) => Address(1),
      Address(1) => Address(2),
      Address(0) => Address(3),
      Dbg_Clk => Dbg_Clk,
      Dbg_TDI => Dbg_TDI,
      SRL16_MC15_1 => SRL16_MC15_1,
      SRL16_Sel_0 => SRL16_Sel_0,
      \which_pc__0\ => \which_pc__0\
    );
\The_First_BreakPoints.MUXCY_Post\: entity work.microblaze_microblaze_0_0_MB_MUXCY_29
     port map (
      Hit => Hit,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\,
      carry_0 => carry_0,
      force_stop_i => force_stop_i,
      single_Step_N => single_Step_N,
      single_Step_N_reg => single_Step_N_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and is
  port (
    if4_ready_tmp3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    if4_ready_tmp2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_48
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if4_ready_tmp2 => if4_ready_tmp2,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_144 is
  port (
    of_piperun_masked_no9 : out STD_LOGIC;
    ex_is_div_instr_i_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no8 : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_144 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_144;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_144 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_145
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_i_1__8\ => \Using_FPGA.Native_i_1__8\,
      \Using_FPGA.Native_i_1__8_0\ => \Using_FPGA.Native_i_1__8_0\,
      \Using_FPGA.Native_i_1__8_1\ => \Using_FPGA.Native_i_1__8_1\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_is_div_instr_i_reg => ex_is_div_instr_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no8 => of_piperun_masked_no8,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_146 is
  port (
    of_piperun_masked_no8 : out STD_LOGIC;
    of_piperun_masked_no7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_146 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_146;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_146 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_147
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_masked_no7 => of_piperun_masked_no7,
      of_piperun_masked_no8 => of_piperun_masked_no8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_148 is
  port (
    of_piperun_masked_no7 : out STD_LOGIC;
    of_piperun_masked_no6 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_148 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_148;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_148 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_149
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_piperun_masked_no6 => of_piperun_masked_no6,
      of_piperun_masked_no7 => of_piperun_masked_no7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_150 is
  port (
    of_piperun_masked_no6 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_150 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_150;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_150 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_151
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no5 => of_piperun_masked_no5,
      of_piperun_masked_no6 => of_piperun_masked_no6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_152 is
  port (
    of_piperun_masked_no5 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_152 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_152;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_152 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_153
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no4 => of_piperun_masked_no4,
      of_piperun_masked_no5 => of_piperun_masked_no5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_154 is
  port (
    of_piperun_masked_no4 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_154 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_154;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_154 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_155
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no3 => of_piperun_masked_no3,
      of_piperun_masked_no4 => of_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_156 is
  port (
    of_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_156 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_156;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_156 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_157
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_piperun_masked_no2 => of_piperun_masked_no2,
      of_piperun_masked_no3 => of_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_158 is
  port (
    of_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_158 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_158;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_158 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_159
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_masked_no2 => of_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_160 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    p_48_out : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_raw_valid : in STD_LOGIC;
    of_piperun_masked_no10 : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ : in STD_LOGIC;
    \p_43_out__4\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_dead_valid_hold_reg : in STD_LOGIC;
    of_dead_valid_hold : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    \of_MSR_i_reg[30]\ : in STD_LOGIC;
    \of_MSR_i_reg[30]_0\ : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_1\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_160 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_160;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_160 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_161
     port map (
      D => D,
      D_0 => D_0,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0) => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      WB_Div_Zero_Overflow_reg(1 downto 0) => WB_Div_Zero_Overflow_reg(1 downto 0),
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      \of_MSR_i_reg[25]\(1 downto 0) => \of_MSR_i_reg[25]\(1 downto 0),
      \of_MSR_i_reg[25]_0\(1 downto 0) => \of_MSR_i_reg[25]_0\(1 downto 0),
      \of_MSR_i_reg[25]_1\ => \of_MSR_i_reg[25]_1\,
      \of_MSR_i_reg[25]_2\(0) => \of_MSR_i_reg[25]_2\(0),
      \of_MSR_i_reg[30]\ => \of_MSR_i_reg[30]\,
      \of_MSR_i_reg[30]_0\ => \of_MSR_i_reg[30]_0\,
      of_dead_valid_hold => of_dead_valid_hold,
      of_dead_valid_hold_reg => of_dead_valid_hold_reg,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_raw_valid => of_raw_valid,
      \out\ => \out\,
      \p_43_out__4\ => \p_43_out__4\,
      p_48_out => p_48_out,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_162 is
  port (
    of_piperun_masked_no10 : out STD_LOGIC;
    of_piperun_masked_no9 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_162 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_162;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_162 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_163
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_164 is
  port (
    of_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_164 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_164;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_164 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_165
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_raw => of_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_168 is
  port (
    m3_raw_valid_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    m3_raw_valid_reg_0 : out STD_LOGIC;
    wb_piperun_i_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m3_dead_valid_hold_reg : in STD_LOGIC;
    m3_piperun_masked_no3 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    m3_active_access : in STD_LOGIC;
    m3_raw_valid_reg_1 : in STD_LOGIC;
    m3_raw_valid_reg_2 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_raw_valid_reg : in STD_LOGIC;
    wb_raw_valid_reg_0 : in STD_LOGIC;
    wb_raw_valid_reg_1 : in STD_LOGIC;
    m3_gpr_write_dbg : in STD_LOGIC;
    m3_dead_valid_hold_reg_0 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \wb_PC_i_reg[31]\ : in STD_LOGIC;
    \wb_PC_i_reg[31]_0\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_168 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_168;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_168 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_169
     port map (
      D => D,
      Q(2 downto 0) => Q(2 downto 0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_active_access => m3_active_access,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_dead_valid_hold_reg => m3_dead_valid_hold_reg,
      m3_dead_valid_hold_reg_0 => m3_dead_valid_hold_reg_0,
      m3_gpr_write_dbg => m3_gpr_write_dbg,
      m3_msr(0) => m3_msr(0),
      m3_piperun_masked_no3 => m3_piperun_masked_no3,
      m3_raw_valid_reg => m3_raw_valid_reg,
      m3_raw_valid_reg_0 => m3_raw_valid_reg_0,
      m3_raw_valid_reg_1 => m3_raw_valid_reg_1,
      m3_raw_valid_reg_2(0) => m3_raw_valid_reg_2(0),
      sync_reset => sync_reset,
      \wb_PC_i_reg[31]\ => \wb_PC_i_reg[31]\,
      \wb_PC_i_reg[31]_0\ => \wb_PC_i_reg[31]_0\,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\,
      \wb_exception_raw_kind_reg[31]\(0) => \wb_exception_raw_kind_reg[31]\(0),
      wb_piperun_i_reg => wb_piperun_i_reg,
      wb_raw_valid_reg => wb_raw_valid_reg,
      wb_raw_valid_reg_0 => wb_raw_valid_reg_0,
      wb_raw_valid_reg_1 => wb_raw_valid_reg_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_170 is
  port (
    m3_piperun_masked_no3 : out STD_LOGIC;
    WB_MSR_Set_IE_reg : in STD_LOGIC;
    m3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_170 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_170;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_170 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_171
     port map (
      WB_MSR_Set_IE_reg => WB_MSR_Set_IE_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_piperun_masked_no2 => m3_piperun_masked_no2,
      m3_piperun_masked_no3 => m3_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_172 is
  port (
    m3_piperun_masked_no2 : out STD_LOGIC;
    m3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_172 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_172;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_172 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_173
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_masked_no2 => m3_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_174 is
  port (
    m3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_174 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_174;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_174 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_175
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_raw => m3_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_180 is
  port (
    m2_raw_valid_reg : out STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg\ : out STD_LOGIC;
    m2_raw_valid_reg_0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m2_dead_valid_hold_reg : in STD_LOGIC;
    m2_piperun_masked_no5 : in STD_LOGIC;
    m2_potential_bubble : in STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.m2_dready_hold_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_dlmb_dready : in STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m2_databus_write : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    m2_raw_valid_reg_1 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m2_gpr_write : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m2_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_180 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_180;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_180 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_181
     port map (
      D(0) => D(0),
      D_0 => D_0,
      D_1 => D_1,
      D_2 => D_2,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg\ => \Use_DAXI.M_AXI_DP_BREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1 downto 0) => \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1 downto 0),
      \Use_DAXI.M_AXI_DP_RREADY_I_reg\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      \Use_DLMB.m2_dready_hold_reg\(0) => \Use_DLMB.m2_dready_hold_reg\(0),
      \Use_DLMB.m2_dready_hold_reg_0\ => \Use_DLMB.m2_dready_hold_reg_0\,
      \Use_DLMB.m2_potential_bubble_reg\ => \Use_DLMB.m2_potential_bubble_reg\,
      \Use_DLMB.m2_potential_bubble_reg_0\ => \Use_DLMB.m2_potential_bubble_reg_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m2_databus_write => m2_databus_write,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_dead_valid_hold_reg => m2_dead_valid_hold_reg,
      m2_dlmb_dready => m2_dlmb_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_gpr_write => m2_gpr_write,
      m2_gpr_write_dbg => m2_gpr_write_dbg,
      m2_is_div_instr => m2_is_div_instr,
      m2_piperun_masked_no5 => m2_piperun_masked_no5,
      m2_potential_bubble => m2_potential_bubble,
      m2_raw_valid_reg => m2_raw_valid_reg,
      m2_raw_valid_reg_0 => m2_raw_valid_reg_0,
      m2_raw_valid_reg_1 => m2_raw_valid_reg_1,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_182 is
  port (
    m2_piperun_masked_no5 : out STD_LOGIC;
    m2_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_182 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_182;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_182 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_183
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_piperun_masked_no4 => m2_piperun_masked_no4,
      m2_piperun_masked_no5 => m2_piperun_masked_no5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_184 is
  port (
    m2_piperun_masked_no4 : out STD_LOGIC;
    m2_piperun_masked_no3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_184 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_184;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_184 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_185
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m2_piperun_masked_no3 => m2_piperun_masked_no3,
      m2_piperun_masked_no4 => m2_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_186 is
  port (
    m2_piperun_masked_no3 : out STD_LOGIC;
    m2_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_186 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_186;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_186 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_187
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_piperun_masked_no2 => m2_piperun_masked_no2,
      m2_piperun_masked_no3 => m2_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_188 is
  port (
    m2_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_188 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_188;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_188 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_189
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_masked_no2 => m2_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_190 is
  port (
    m2_piperun_masked_no1 : out STD_LOGIC;
    m2_piperun_raw : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_190 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_190;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_190 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_191
     port map (
      DReady => DReady,
      DWait => DWait,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_allow_dready => m2_allow_dready,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_raw => m2_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_194 is
  port (
    m1_raw_valid_reg : out STD_LOGIC;
    m1_databus_write_from_m0_reg : out STD_LOGIC;
    m1_databus_write_from_m0_reg_0 : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ : out STD_LOGIC;
    m1_databus_addr_from_m0_reg : out STD_LOGIC;
    m1_databus_access_from_m0_reg : out STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg\ : out STD_LOGIC;
    m1_raw_valid_reg_0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    \m2_PC_i_reg[0]\ : in STD_LOGIC;
    m1_piperun_masked_no2 : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ : in STD_LOGIC;
    m1_databus_access : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    \Use_DAXI.m2_active_access_unmasked_reg\ : in STD_LOGIC;
    m1_dlmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    A_N201_out : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_194 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_194;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_194 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_195
     port map (
      A_N201_out => A_N201_out,
      D(1 downto 0) => D(1 downto 0),
      DWait => DWait,
      D_0 => D_0,
      D_1 => D_1,
      D_2 => D_2,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\,
      \Use_DAXI.m2_active_access_unmasked_reg\ => \Use_DAXI.m2_active_access_unmasked_reg\,
      \Use_DLMB.m1_dlmb_issued_reg\ => \Use_DLMB.m1_dlmb_issued_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_is_div_instr_i => m0_is_div_instr_i,
      m1_databus_access => m1_databus_access,
      m1_databus_access_from_m0_reg => m1_databus_access_from_m0_reg,
      m1_databus_addr_from_m0_reg => m1_databus_addr_from_m0_reg,
      m1_databus_write_from_m0_reg => m1_databus_write_from_m0_reg,
      m1_databus_write_from_m0_reg_0 => m1_databus_write_from_m0_reg_0,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_dlmb_issued => m1_dlmb_issued,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m1_piperun_masked_no2 => m1_piperun_masked_no2,
      m1_raw_valid_reg => m1_raw_valid_reg,
      m1_raw_valid_reg_0 => m1_raw_valid_reg_0,
      \m2_PC_i_reg[0]\ => \m2_PC_i_reg[0]\,
      m2_allow_dready => m2_allow_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_196 is
  port (
    m1_piperun_masked_no2 : out STD_LOGIC;
    m1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_196 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_196;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_196 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_197
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_masked_no2 => m1_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_198 is
  port (
    m1_piperun_masked_no1 : out STD_LOGIC;
    m1_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_198 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_198;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_198 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_199
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_raw => m1_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_202 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m0_piperun_masked_no4 : in STD_LOGIC;
    m0_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_raw_valid_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_202 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_202;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_202 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_203
     port map (
      D => D,
      D_0 => D_0,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_3\(0),
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_8\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_piperun_masked_no4 => m0_piperun_masked_no4,
      m0_raw_valid_reg => m0_raw_valid_reg,
      m0_raw_valid_reg_0 => m0_raw_valid_reg_0,
      m0_raw_valid_reg_1 => m0_raw_valid_reg_1,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_204 is
  port (
    m0_piperun_masked_no4 : out STD_LOGIC;
    m0_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_204 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_204;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_204 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_205
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no3 => m0_piperun_masked_no3,
      m0_piperun_masked_no4 => m0_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_206 is
  port (
    m0_piperun_masked_no3 : out STD_LOGIC;
    m0_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_206 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_206;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_206 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_207
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no2 => m0_piperun_masked_no2,
      m0_piperun_masked_no3 => m0_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_208 is
  port (
    m0_piperun_masked_no2 : out STD_LOGIC;
    m0_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_208 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_208;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_208 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_209
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_masked_no2 => m0_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_210 is
  port (
    m0_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m0_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_210 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_210;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_210 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_211
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_raw => m0_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_218 is
  port (
    if4_piperun_masked_no4 : out STD_LOGIC;
    if4_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_218 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_218;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_218 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_219
     port map (
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_220 is
  port (
    if4_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    if4_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_220 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_220;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_220 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_221
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_224 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC;
    if4_dead_fetch_hold_reg : out STD_LOGIC;
    if3_piperun_masked_no3 : in STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Use_ILMB.if3_potential_bubble_reg\ : in STD_LOGIC;
    if3_potential_bubble : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    if3_ilmb_iready : in STD_LOGIC;
    if4_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if4_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_224 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_224;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_224 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_225
     port map (
      D(0) => D(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Use_Async_Reset.sync_reset_reg_0\ => \Use_Async_Reset.sync_reset_reg_0\,
      \Use_ILMB.if3_iready_hold_reg\ => \Use_ILMB.if3_iready_hold_reg\,
      \Use_ILMB.if3_potential_bubble_reg\ => \Use_ILMB.if3_potential_bubble_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if3_ilmb_iready => if3_ilmb_iready,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if3_potential_bubble => if3_potential_bubble,
      if4_dead_fetch_hold_reg => if4_dead_fetch_hold_reg,
      if4_dead_fetch_hold_reg_0 => if4_dead_fetch_hold_reg_0,
      if4_dead_fetch_hold_reg_1 => if4_dead_fetch_hold_reg_1,
      if4_dead_fetch_hold_reg_2 => if4_dead_fetch_hold_reg_2,
      if4_dead_fetch_hold_reg_3 => if4_dead_fetch_hold_reg_3,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_226 is
  port (
    if3_piperun_masked_no3 : out STD_LOGIC;
    if4_ibus_access_i_reg : in STD_LOGIC;
    if3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_226 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_226;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_226 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_227
     port map (
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if4_ibus_access_i_reg => if4_ibus_access_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_228 is
  port (
    if3_piperun_masked_no2 : out STD_LOGIC;
    if3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_228 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_228;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_228 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_229
     port map (
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_232 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : out STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg\ : out STD_LOGIC;
    if3_dead_fetch_hold_reg : out STD_LOGIC;
    if2_piperun_masked_no2 : in STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg_0\ : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    if3_allow_iready : in STD_LOGIC;
    if2_ilmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if3_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if3_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_232 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_232;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_232 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_233
     port map (
      IWAIT => IWAIT,
      \Use_ILMB.if2_ilmb_issued_reg\ => \Use_ILMB.if2_ilmb_issued_reg\,
      \Use_ILMB.if2_ilmb_issued_reg_0\ => \Use_ILMB.if2_ilmb_issued_reg_0\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      if2_ibus_first_cycle_raw_reg => if2_ibus_first_cycle_raw_reg,
      if2_ilmb_issued => if2_ilmb_issued,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_allow_iready => if3_allow_iready,
      if3_dead_fetch_hold_reg => if3_dead_fetch_hold_reg,
      if3_dead_fetch_hold_reg_0 => if3_dead_fetch_hold_reg_0,
      if3_dead_fetch_hold_reg_1 => if3_dead_fetch_hold_reg_1,
      if3_dead_fetch_hold_reg_2 => if3_dead_fetch_hold_reg_2,
      if3_dead_fetch_hold_reg_3 => if3_dead_fetch_hold_reg_3,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_234 is
  port (
    if2_piperun_masked_no2 : out STD_LOGIC;
    if3_ibus_access_i_reg : in STD_LOGIC;
    if2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_234 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_234;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_234 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_235
     port map (
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_ibus_access_i_reg => if3_ibus_access_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_238 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if0_raw_valid_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_238 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_238;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_238 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_239
     port map (
      if0_raw_valid_reg => if0_raw_valid_reg,
      if2_raw_valid_reg => if2_raw_valid_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_242 is
  port (
    ex_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    \ex_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    wb_exception_from_m3_reg_rep : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_raw_valid_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \m0_PC_i_reg[0]\ : in STD_LOGIC;
    ex_piperun_masked_no6 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \m0_exception_raw_kind_reg[30]\ : in STD_LOGIC;
    m0_exception_raw_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    m0_exception_from_ex : in STD_LOGIC;
    in0 : in STD_LOGIC;
    of_clear_msr_bip_hold_reg : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_clear_msr_bip_hold_reg_0 : in STD_LOGIC;
    of_set_msr_ie_hold_reg : in STD_LOGIC;
    of_clear_msr_bip_hold_reg_1 : in STD_LOGIC;
    of_set_msr_ee_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    of_set_msr_ie : in STD_LOGIC;
    of_set_msr_ie_hold_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_reservation_reg : in STD_LOGIC;
    ex_reservation_reg_0 : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_msr_clear_bip : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC_VECTOR ( 13 downto 0 );
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    wb_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    ex_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_242 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_242;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_242 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_243
     port map (
      D => D,
      D_0 => D_0,
      D_1 => D_1,
      EX_CarryIn => EX_CarryIn,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_17\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_18\(2 downto 0) => \Using_FPGA.Native_17\(2 downto 0),
      \Using_FPGA.Native_19\(13 downto 0) => \Using_FPGA.Native_18\(13 downto 0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_8\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      ex_MSR_i(10 downto 0) => ex_MSR_i(10 downto 0),
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(1 downto 0) => ex_gpr_write_addr(1 downto 0),
      \ex_gpr_write_addr_reg[2]\ => \ex_gpr_write_addr_reg[2]\,
      \ex_gpr_write_addr_reg[3]\ => \ex_gpr_write_addr_reg[3]\,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      ex_raw_valid_reg => ex_raw_valid_reg,
      ex_raw_valid_reg_0 => ex_raw_valid_reg_0,
      ex_reservation => ex_reservation,
      ex_reservation_reg => ex_reservation_reg,
      ex_reservation_reg_0 => ex_reservation_reg_0,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      \m0_PC_i_reg[0]\ => \m0_PC_i_reg[0]\,
      m0_exception_from_ex => m0_exception_from_ex,
      m0_exception_raw_kind(0) => m0_exception_raw_kind(0),
      \m0_exception_raw_kind_reg[30]\ => \m0_exception_raw_kind_reg[30]\,
      m0_is_div_instr_i => m0_is_div_instr_i,
      of_clear_msr_bip_hold_reg => of_clear_msr_bip_hold_reg,
      of_clear_msr_bip_hold_reg_0 => of_clear_msr_bip_hold_reg_0,
      of_clear_msr_bip_hold_reg_1 => of_clear_msr_bip_hold_reg_1,
      of_set_msr_ee_hold_reg => of_set_msr_ee_hold_reg,
      of_set_msr_ie => of_set_msr_ie,
      of_set_msr_ie_hold_reg => of_set_msr_ie_hold_reg,
      of_set_msr_ie_hold_reg_0 => of_set_msr_ie_hold_reg_0,
      sync_reset => sync_reset,
      wb_MSR_i(10 downto 0) => wb_MSR_i(10 downto 0),
      wb_exception_from_m3_reg_rep => wb_exception_from_m3_reg_rep,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      wb_exception_taken => wb_exception_taken,
      wb_msr_clear_bip => wb_msr_clear_bip
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_244 is
  port (
    ex_piperun_masked_no6 : out STD_LOGIC;
    ex_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_244 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_244;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_244 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_245
     port map (
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_246 is
  port (
    ex_piperun_masked_no5 : out STD_LOGIC;
    ex_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_246 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_246;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_246 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_247
     port map (
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_248 is
  port (
    ex_piperun_masked_no4 : out STD_LOGIC;
    ex_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_248 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_248;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_248 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_249
     port map (
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_250 is
  port (
    ex_piperun_masked_no3 : out STD_LOGIC;
    ex_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_250 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_250;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_250 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_251
     port map (
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_252 is
  port (
    ex_piperun_masked_no2 : out STD_LOGIC;
    ex_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_252 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_252;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_252 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_253
     port map (
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_254 is
  port (
    ex_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    ex_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_254 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_254;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_254 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_255
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_raw => ex_piperun_raw,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_258 is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_258 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_258;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_258 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_259
     port map (
      E(0) => E(0),
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_262 is
  port (
    bp1_raw_valid_reg : out STD_LOGIC;
    bp1_dead_fetch_hold_bt : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    bp0_piperun_masked_no1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_dead_fetch_hold_reg_0 : in STD_LOGIC;
    bp1_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_262 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_262;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_262 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_263
     port map (
      E(0) => E(0),
      bp0_dead_fetch_hold => bp0_dead_fetch_hold,
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      bp1_dead_fetch_hold_bt => bp1_dead_fetch_hold_bt,
      bp1_dead_fetch_hold_reg => bp1_dead_fetch_hold_reg,
      bp1_dead_fetch_hold_reg_0 => bp1_dead_fetch_hold_reg_0,
      bp1_dead_fetch_hold_reg_1 => bp1_dead_fetch_hold_reg_1,
      bp1_raw_valid_reg => bp1_raw_valid_reg,
      kill_fetch_mmu => kill_fetch_mmu,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_304 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_304 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_304;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_304 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_305
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_306 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    A0_out : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_306 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_306;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_306 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_307
     port map (
      A0_out => A0_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_310 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    of_m2_no_stall_conflict : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_310 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_310;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_310 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_311
     port map (
      And_OUT => And_OUT,
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_no_stall_conflict => of_m2_no_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_313 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    A1_out : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_313 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_313;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_313 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_314
     port map (
      A1_out => A1_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_318 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_318 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_318;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_318 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_319
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_321 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    A2_out : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_321 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_321;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_321 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_322
     port map (
      A2_out => A2_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_326 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    of_op3_ex_stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_326 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_326;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_326 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_327
     port map (
      And_OUT => And_OUT,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_329 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    A3_out : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_329 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_329;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_329 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_330
     port map (
      A3_out => A3_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_334 is
  port (
    of_op3_ex_stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_334 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_334;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_334 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_335
     port map (
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_337 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    A4_out : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_337 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_337;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_337 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_338
     port map (
      A4_out => A4_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_344 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    OF_Use_Op_B : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_344 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_344;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_344 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_345
     port map (
      OF_Use_Op_B => OF_Use_Op_B,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_346 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_346 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_346;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_346 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_347
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_350 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_350 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_350;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_350 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_351
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_352 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_352 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_352;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_352 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_353
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_356 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_356 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_356;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_356 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_357
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_358 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_358 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_358;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_358 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_359
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_362 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_362 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_362;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_362 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_363
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_364 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_364 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_364;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_364 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_365
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_368 is
  port (
    part_c_and_b : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_368 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_368;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_368 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_369
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_and_b => part_c_and_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_370 is
  port (
    part_c : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_370 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_370;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_370 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_371
     port map (
      Q(0) => Q(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      part_c => part_c
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_406 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_406 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_406;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_406 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_407
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_408 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_408 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_408;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_408 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_409
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_413 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_413 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_413;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_413 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_414
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_416 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_416 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_416;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_416 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_417
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_421 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_421 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_421;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_421 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_422
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_424 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_424 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_424;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_424 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_425
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_429 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall4_in : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_429 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_429;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_429 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_430
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_432 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_432 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_432;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_432 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_433
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_437 is
  port (
    OF_Op_EX_Stall4_in : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_437 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_437;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_437 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_438
     port map (
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_440 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_440 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_440;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_440 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_441
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_445 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_445 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_445;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_445 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_446
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_449 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_449 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_449;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_449 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_450
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_451 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_451 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_451;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_451 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_452
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_455 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_455 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_455;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_455 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_456
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_457 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_457 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_457;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_457 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_458
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_461 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_461 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_461;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_461 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_462
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_463 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_463 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_463;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_463 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_464
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_467 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_467 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_467;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_467 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_468
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_469 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c_or_not_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_469 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_469;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_469 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_470
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_or_not_b => part_c_or_not_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_473 is
  port (
    part_c : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_473 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_473;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_473 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_474
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      part_c => part_c
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_499 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_499 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_499;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_499 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_500
     port map (
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_501 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_501 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_501;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_501 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_502
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_506 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_506 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_506;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_506 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_507
     port map (
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_509 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_509 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_509;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_509 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_510
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_514 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_514 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_514;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_514 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_515
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_517 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_517 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_517;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_517 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_518
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_522 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_522 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_522;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_522 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_523
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_525 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_525 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_525;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_525 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_526
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_530 is
  port (
    OF_Op_EX_Stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_530 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_530;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_530 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_531
     port map (
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_533 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_533 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_533;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_533 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_534
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_538 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_538 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_538;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_538 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_539
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_540 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_540 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_540;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_540 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_541
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_542 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_542 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_542;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_542 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_543
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_544 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_544 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_544;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_544 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_545
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_546 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_546 : entity is "carry_and";
end microblaze_microblaze_0_0_carry_and_546;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_546 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_547
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_ex_use_conflict => of_ex_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_bb is
  port (
    if4_push_instr_fetch : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    if4_sel_input : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_bb : entity is "carry_latch_and_bb";
end microblaze_microblaze_0_0_carry_latch_and_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_bb is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      if4_push_instr_fetch => if4_push_instr_fetch,
      if4_sel_input(0) => if4_sel_input(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_336
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_291 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_291 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_291;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_291 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_328
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_295 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_295 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_295;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_295 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_320
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_299 is
  port (
    of_m2_no_stall_conflict : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_299 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_299;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_299 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_312
     port map (
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_no_stall_conflict => of_m2_no_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_389 is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_389 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_389;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_389 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_439
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_393 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_393 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_393;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_393 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_431
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_397 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_397 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_397;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_397 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_423
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_401 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m2_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_401 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_401;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_401 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_415
     port map (
      And_OUT => And_OUT,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_482 is
  port (
    And_OUT : out STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_482 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_482;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_482 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_532
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_486 is
  port (
    of_m0_no_stall_conflict : out STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_486 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_486;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_486 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_524
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_490 is
  port (
    of_m1_no_stall_conflict : out STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_490 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_490;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_490 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_516
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_latch_and_n_bb_494 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m2_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_latch_and_n_bb_494 : entity is "carry_latch_and_n_bb";
end microblaze_microblaze_0_0_carry_latch_and_n_bb_494;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_latch_and_n_bb_494 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_MB_AND2B1L_508
     port map (
      And_OUT => And_OUT,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or is
  port (
    if4_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    if4_ready_tmp3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_43
     port map (
      S_0 => S_0,
      if4_ready => if4_ready,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_142 is
  port (
    of_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_142 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_142;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_142 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_143
     port map (
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_raw => of_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_166 is
  port (
    m3_piperun_raw : out STD_LOGIC;
    m3_piperun_data_raw : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_166 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_166;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_166 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_167
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_piperun_data_raw => m3_piperun_data_raw,
      m3_piperun_raw => m3_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_176 is
  port (
    m3_piperun_data_raw : out STD_LOGIC;
    m3_databus_ready : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_176 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_176;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_176 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_177
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_databus_ready => m3_databus_ready,
      m3_piperun_data_raw => m3_piperun_data_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_178 is
  port (
    m2_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_178 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_178;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_178 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_179
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m2_piperun_raw => m2_piperun_raw,
      m3_dead_valid_hold => m3_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_192 is
  port (
    m1_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_192 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_192;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_192 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_193
     port map (
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m1_piperun_raw => m1_piperun_raw,
      m2_dead_valid_hold => m2_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_200 is
  port (
    m0_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_200 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_200;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_200 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_201
     port map (
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_raw => m0_piperun_raw,
      m1_dead_valid_hold => m1_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_212 is
  port (
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ : in STD_LOGIC;
    if4_piperun_masked_no4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_212 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_212;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_212 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_213
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ => \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_214 is
  port (
    if4_piperun_masked_no2 : out STD_LOGIC;
    if4_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_214 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_214;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_214 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_215
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_216 is
  port (
    if4_piperun_masked_no1 : out STD_LOGIC;
    if4_ready : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_216 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_216;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_216 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_217
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_ready => if4_ready,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_222 is
  port (
    if3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_222 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_222;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_222 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_223
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_230 is
  port (
    if2_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_230 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_230;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_230 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_231
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_236 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if2_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_3 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    if2_dead_fetch_hold_reg_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_236 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_236;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_236 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_237
     port map (
      if2_dead_fetch_hold_reg => if2_dead_fetch_hold_reg,
      if2_dead_fetch_hold_reg_0 => if2_dead_fetch_hold_reg_0,
      if2_dead_fetch_hold_reg_1 => if2_dead_fetch_hold_reg_1,
      if2_dead_fetch_hold_reg_2 => if2_dead_fetch_hold_reg_2,
      if2_dead_fetch_hold_reg_3 => if2_dead_fetch_hold_reg_3,
      if2_dead_fetch_hold_reg_4 => if2_dead_fetch_hold_reg_4,
      if2_raw_valid_reg => if2_raw_valid_reg,
      kill_fetch_mmu => kill_fetch_mmu,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_240 is
  port (
    ex_piperun_raw : out STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_240 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_240;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_240 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_241
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      ex_piperun_raw => ex_piperun_raw,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_dead_valid_hold => m0_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_256 is
  port (
    bp1_piperun_masked_no1 : out STD_LOGIC;
    \if0_PC_i_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_256 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_256;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_256 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_257
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      \if0_PC_i_reg[0]\ => \if0_PC_i_reg[0]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_260 is
  port (
    bp0_piperun_masked_no1 : out STD_LOGIC;
    \bp1_PC_i_reg[0]\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_260 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_260;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_260 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_261
     port map (
      E(0) => E(0),
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      \bp1_PC_i_reg[0]\ => \bp1_PC_i_reg[0]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_342 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    S_4 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_342 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_342;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_342 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_343
     port map (
      S_4 => S_4,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_348 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_348 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_348;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_348 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_349
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_354 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_354 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_354;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_354 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_355
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_360 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_360 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_360;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_360 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_361
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_366 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c_and_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_366 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_366;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_366 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_367
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_and_b => part_c_and_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_44 is
  port (
    if4_ready_tmp2 : out STD_LOGIC;
    S : in STD_LOGIC;
    if4_ready_tmp1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_44 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_44;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_44 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_45
     port map (
      S => S,
      if4_ready_tmp1 => if4_ready_tmp1,
      if4_ready_tmp2 => if4_ready_tmp2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_447 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_447 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_447;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_447 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_448
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_453 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_453 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_453;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_453 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_454
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_459 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_459 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_459;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_459 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_460
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_46 is
  port (
    if4_ready_tmp1 : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_46 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_46;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_46 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_47
     port map (
      if4_ready_tmp1 => if4_ready_tmp1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_465 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_465 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_465;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_465 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_466
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_471 is
  port (
    part_c_or_not_b : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_471 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_471;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_471 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_472
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_or_not_b => part_c_or_not_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_51 is
  port (
    m3_databus_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    m3_ready_tmp : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_51 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_51;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_51 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_52
     port map (
      S_0 => S_0,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_databus_ready => m3_databus_ready,
      m3_ready_tmp => m3_ready_tmp
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_53 is
  port (
    m3_ready_tmp : out STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_53 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_53;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_53 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_54
     port map (
      S => S,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m3_ready_tmp => m3_ready_tmp
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_568 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    if2_ibus_access_raw0 : out STD_LOGIC;
    bp0_dead_fetch_hold_reg : out STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_0 : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp0_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_568 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_568;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_568 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_569
     port map (
      DI(0) => DI(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      bp0_dead_fetch_hold => bp0_dead_fetch_hold,
      bp0_dead_fetch_hold_reg => bp0_dead_fetch_hold_reg,
      bp0_dead_fetch_hold_reg_0 => bp0_dead_fetch_hold_reg_0,
      bp1_dead_fetch_hold_reg => bp1_dead_fetch_hold_reg,
      if2_ibus_access_raw0 => if2_ibus_access_raw0,
      if2_ibus_first_cycle_raw_reg => if2_ibus_first_cycle_raw_reg,
      if2_ibus_first_cycle_raw_reg_0 => if2_ibus_first_cycle_raw_reg_0,
      if2_ibus_first_cycle_raw_reg_1 => if2_ibus_first_cycle_raw_reg_1,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_570 is
  port (
    kill_fetch : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    if2_raw_valid_reg : out STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    if2_dead_fetch_hold_reg : in STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_570 : entity is "carry_or";
end microblaze_microblaze_0_0_carry_or_570;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_570 is
begin
MUXCY_I: entity work.microblaze_microblaze_0_0_MB_MUXCY_571
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(0) => ex_gpr_write_addr(0),
      ex_jump => ex_jump,
      if2_dead_fetch_hold_reg => if2_dead_fetch_hold_reg,
      if2_dead_fetch_hold_reg_0 => if2_dead_fetch_hold_reg_0,
      if2_raw_valid_reg => if2_raw_valid_reg,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator : entity is "comparator";
end microblaze_microblaze_0_0_comparator;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_308
     port map (
      S_3 => S_3,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_309
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m3_addr_conflict => of_m3_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_315 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_315 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_315;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_315 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_316
     port map (
      S_2 => S_2,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_317
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m2_addr_conflict => of_m2_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_323 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_323 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_323;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_323 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_324
     port map (
      S_1 => S_1,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_325
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m1_addr_conflict => of_m1_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_331 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_331 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_331;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_331 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_332
     port map (
      S_0 => S_0,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_333
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m0_addr_conflict => of_m0_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_339 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_339 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_339;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_339 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_340
     port map (
      S => S,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_341
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_ex_addr_conflict => of_ex_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_410 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_410 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_410;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_410 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_411
     port map (
      S_3 => S_3,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_412
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m3_addr_conflict => of_m3_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_418 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_418 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_418;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_418 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_419
     port map (
      S_2 => S_2,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_420
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m2_addr_conflict => of_m2_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_426 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_426 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_426;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_426 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_427
     port map (
      S_1 => S_1,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_428
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m1_addr_conflict => of_m1_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_434 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_434 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_434;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_434 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_435
     port map (
      S_0 => S_0,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_436
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_m0_addr_conflict => of_m0_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_442 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_442 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_442;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_442 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_443
     port map (
      S => S,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_444
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      lopt_2 => lopt_4,
      lopt_3 => lopt_5,
      lopt_4 => lopt_6,
      lopt_5 => lopt_7,
      of_ex_addr_conflict => of_ex_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_503 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_503 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_503;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_503 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_504
     port map (
      S_3 => S_3,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_505
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_m3_addr_conflict => of_m3_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_511 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_511 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_511;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_511 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_512
     port map (
      S_2 => S_2,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_513
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_m2_addr_conflict => of_m2_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_519 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_519 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_519;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_519 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_520
     port map (
      S_1 => S_1,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_521
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_m1_addr_conflict => of_m1_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_527 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_527 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_527;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_527 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_528
     port map (
      S_0 => S_0,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_529
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_m0_addr_conflict => of_m0_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_535 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_535 : entity is "comparator";
end microblaze_microblaze_0_0_comparator_535;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_535 is
  signal carry_chain_1 : STD_LOGIC;
begin
\Comp_Carry_Chain[0].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_536
     port map (
      S => S,
      carry_chain_1 => carry_chain_1,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict
    );
\Comp_Carry_Chain[1].MUXCY_I\: entity work.microblaze_microblaze_0_0_MB_MUXCY_537
     port map (
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      carry_chain_1 => carry_chain_1,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_ex_addr_conflict => of_ex_addr_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_dsp_module is
  port (
    D : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 16 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_dsp_module : entity is "dsp_module";
end microblaze_microblaze_0_0_dsp_module;

architecture STRUCTURE of microblaze_microblaze_0_0_dsp_module is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.microblaze_microblaze_0_0_MB_DSP48E1
     port map (
      Clk => Clk,
      D(16 downto 0) => D(16 downto 0),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1_0\(47 downto 0) => \Using_FPGA.DSP48E1_I1\(47 downto 0),
      \Using_FPGA.DSP48E1_I1_1\ => \Using_FPGA.DSP48E1_I1_0\,
      \Using_FPGA.DSP48E1_I1_2\(16 downto 0) => \Using_FPGA.DSP48E1_I1_1\(16 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_dsp_module__parameterized1\ is
  port (
    PCOUT : out STD_LOGIC_VECTOR ( 47 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_1\ : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_dsp_module__parameterized1\ : entity is "dsp_module";
end \microblaze_microblaze_0_0_dsp_module__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_dsp_module__parameterized1\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\microblaze_microblaze_0_0_MB_DSP48E1__parameterized1\
     port map (
      Clk => Clk,
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\(14 downto 0) => \Using_FPGA.DSP48E1_I1_0\(14 downto 0),
      \Using_FPGA.DSP48E1_I1_2\(47 downto 0) => \Using_FPGA.DSP48E1_I1_1\(47 downto 0),
      m0_piperun => m0_piperun
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_dsp_module__parameterized3\ is
  port (
    m1_mul_result : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    PCOUT : in STD_LOGIC_VECTOR ( 47 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_dsp_module__parameterized3\ : entity is "dsp_module";
end \microblaze_microblaze_0_0_dsp_module__parameterized3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_dsp_module__parameterized3\ is
begin
\Using_DSP48E1.DSP48E1_I1\: entity work.\microblaze_microblaze_0_0_MB_DSP48E1__parameterized3\
     port map (
      Clk => Clk,
      PCOUT(47 downto 0) => PCOUT(47 downto 0),
      Q(14 downto 0) => Q(14 downto 0),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\(16 downto 0) => \Using_FPGA.DSP48E1_I1_0\(16 downto 0),
      m0_piperun => m0_piperun,
      m1_mul_result(14 downto 0) => m1_mul_result(14 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mb_sync_vec is
  port (
    D : out STD_LOGIC_VECTOR ( 0 to 0 );
    async_reset : out STD_LOGIC;
    Raw : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mb_sync_vec : entity is "mb_sync_vec";
end microblaze_microblaze_0_0_mb_sync_vec;

architecture STRUCTURE of microblaze_microblaze_0_0_mb_sync_vec is
begin
\sync_bits[0].sync_bit\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2_40\
     port map (
      Config_Reset => Config_Reset,
      D(0) => D(0),
      Dbg_Clk => Dbg_Clk,
      Raw => Raw,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      async_reset => async_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_mb_sync_vec__parameterized1\ is
  port (
    sample_synced : out STD_LOGIC_VECTOR ( 0 to 9 );
    p_11_out : out STD_LOGIC;
    \Serial_Dbg_Intf.trig_ack_out_1_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    p_91_out : out STD_LOGIC;
    p_94_out : out STD_LOGIC;
    p_79_out : out STD_LOGIC;
    p_89_out : out STD_LOGIC;
    p_86_out : out STD_LOGIC;
    p_97_out : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 8 downto 0 );
    Dbg_Trig_Ack_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Dbg_Trig_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Clk : in STD_LOGIC;
    \Synchronize.use_sync_reset.sync_reg[1]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Synchronize.use_sync_reset.sync_reg[1]_4\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_mb_sync_vec__parameterized1\ : entity is "mb_sync_vec";
end \microblaze_microblaze_0_0_mb_sync_vec__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_mb_sync_vec__parameterized1\ is
  signal \^sample_synced\ : STD_LOGIC_VECTOR ( 0 to 9 );
begin
  sample_synced(0 to 9) <= \^sample_synced\(0 to 9);
\sync_bits[0].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_30
     port map (
      Clk => Clk,
      D(0) => D(0),
      Q(0) => Q(8),
      p_97_out => p_97_out,
      sample_synced(0) => \^sample_synced\(0),
      sync_reset => sync_reset
    );
\sync_bits[1].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_31
     port map (
      Clk => Clk,
      Q(0) => Q(7),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]\(0),
      p_94_out => p_94_out,
      sample_synced(0) => \^sample_synced\(1),
      sync_reset => sync_reset
    );
\sync_bits[2].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_32
     port map (
      Clk => Clk,
      Q(0) => Q(6),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_0\(0),
      p_91_out => p_91_out,
      sample_synced(0) => \^sample_synced\(2),
      sync_reset => sync_reset
    );
\sync_bits[3].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_33
     port map (
      Clk => Clk,
      Q(0) => Q(5),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(1),
      p_89_out => p_89_out,
      sample_synced(0) => \^sample_synced\(3),
      sync_reset => sync_reset
    );
\sync_bits[4].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_34
     port map (
      Clk => Clk,
      Q(0) => Q(4),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_1\(0),
      p_86_out => p_86_out,
      sample_synced(0) => \^sample_synced\(4),
      sync_reset => sync_reset
    );
\sync_bits[5].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_35
     port map (
      Clk => Clk,
      Dbg_Trig_In(0) => Dbg_Trig_In(0),
      Q(2) => Q(6),
      Q(1) => Q(3),
      Q(0) => Q(0),
      \Serial_Dbg_Intf.trig_in_1_reg\(1) => \^sample_synced\(2),
      \Serial_Dbg_Intf.trig_in_1_reg\(0) => \^sample_synced\(8),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_2\(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      sample_synced(0) => \^sample_synced\(5),
      sync_reset => sync_reset
    );
\sync_bits[6].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_36
     port map (
      Clk => Clk,
      Q(0) => Q(2),
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_3\(0),
      p_79_out => p_79_out,
      sample_synced(0) => \^sample_synced\(6),
      sync_reset => sync_reset
    );
\sync_bits[7].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_37
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_Out(0) => Dbg_Trig_Ack_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(1) => Q(3),
      Q(0) => Q(1),
      \Serial_Dbg_Intf.continue_from_brk_reg\(0) => \^sample_synced\(5),
      \Serial_Dbg_Intf.trig_ack_out_1_reg\ => \Serial_Dbg_Intf.trig_ack_out_1_reg\,
      p_11_out => p_11_out,
      sample_synced(0) => \^sample_synced\(7),
      sync_reset => sync_reset
    );
\sync_bits[8].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_38
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      sample_synced(0) => \^sample_synced\(8),
      sync_reset => sync_reset
    );
\sync_bits[9].sync_bit\: entity work.microblaze_microblaze_0_0_mb_sync_bit_39
     port map (
      Clk => Clk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => \Synchronize.use_sync_reset.sync_reg[1]_4\(0),
      sample_synced(0) => \^sample_synced\(9),
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd is
  port (
    m3_div_zero_overflow_ex_hold : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_583
     port map (
      Clk => Clk,
      E(0) => E(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      m3_div_zero_overflow_ex_hold => m3_div_zero_overflow_ex_hold,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_139 is
  port (
    wb_gpr_wr_dbg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_139 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_139;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_139 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_141
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_140 is
  port (
    wb_gpr_wr : out STD_LOGIC;
    wb_reset_reg : out STD_LOGIC;
    wb_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    trace_reg_write_i_reg : in STD_LOGIC;
    trace_reg_write_i_reg_0 : in STD_LOGIC;
    wb_reset : in STD_LOGIC;
    \EX_Op2[0]_i_20\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Q : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_140 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_140;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_140 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR
     port map (
      Clk => Clk,
      D => D,
      \EX_Op2[0]_i_20\(0) => \EX_Op2[0]_i_20\(0),
      Q(0) => Q(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      trace_reg_write_i_reg => trace_reg_write_i_reg,
      trace_reg_write_i_reg_0 => trace_reg_write_i_reg_0,
      wb_gpr_wr => wb_gpr_wr,
      wb_raw_valid_reg => wb_raw_valid_reg,
      wb_reset => wb_reset,
      wb_reset_reg => wb_reset_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_55 is
  port (
    ex_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_55 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_55;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_55 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_582
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      ex_gpr_write_dbg => ex_gpr_write_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_56 is
  port (
    ex_gpr_write : out STD_LOGIC;
    A4_out : out STD_LOGIC;
    ex_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_56 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_56;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_56 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_581
     port map (
      A4_out => A4_out,
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => ex_gpr_write,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_2\,
      ex_raw_valid_reg => ex_raw_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_57 is
  port (
    ex_jump_hold : out STD_LOGIC;
    flush_pipe_for_rst : out STD_LOGIC;
    ex_sleep_i0 : out STD_LOGIC;
    ex_mbar_decode_reg : out STD_LOGIC;
    ex_mbar_decode_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_mbar_sleep : in STD_LOGIC;
    ex_mbar_wait_1 : in STD_LOGIC;
    ex_first_cycle : in STD_LOGIC;
    ex_hibernate_i_reg : in STD_LOGIC;
    ex_hibernate_i_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_57 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_57;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_57 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_580
     port map (
      Clk => Clk,
      \Use_Async_Reset.sync_reset_reg\ => flush_pipe_for_rst,
      \Using_FPGA.Native_0\ => ex_jump_hold,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      ex_first_cycle => ex_first_cycle,
      ex_hibernate_i_reg => ex_hibernate_i_reg,
      ex_hibernate_i_reg_0 => ex_hibernate_i_reg_0,
      ex_mbar_decode_reg => ex_mbar_decode_reg,
      ex_mbar_decode_reg_0 => ex_mbar_decode_reg_0,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_wait_1 => ex_mbar_wait_1,
      ex_sleep_i0 => ex_sleep_i0,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_60 is
  port (
    m0_is_div_instr_i : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_60 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_60;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_60 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_567
     port map (
      Clk => Clk,
      D => D,
      m0_is_div_instr_i => m0_is_div_instr_i,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_61 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_61 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_61;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_61 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_566
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      in0 => in0,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_62 is
  port (
    m0_exception_from_ex : out STD_LOGIC;
    \p_43_out__4\ : out STD_LOGIC;
    single_Step_N_reg : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    wb_exception_from_m3_reg_rep : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    ex_dead_valid_hold_reg : out STD_LOGIC;
    wb_exception_from_m3_reg_rep_0 : out STD_LOGIC;
    of_next_ex_valid : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    A_N201_out : in STD_LOGIC;
    m3_exception_taken : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    p_48_out : in STD_LOGIC;
    ex_first_cycle_reg : in STD_LOGIC;
    ex_raw_valid_reg : in STD_LOGIC;
    ex_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    in0 : in STD_LOGIC;
    m1_databus_addr_from_m0_reg : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_0 : in STD_LOGIC;
    of_read_imm_reg_raw_reg : in STD_LOGIC;
    of_raw_valid : in STD_LOGIC;
    of_dead_valid_hold : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_jump_nodelay : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    of_read_imm_reg_raw_reg_0 : in STD_LOGIC;
    of_read_imm_reg_raw_reg_1 : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_1 : in STD_LOGIC;
    m1_databus_addr_from_m0_reg_2 : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_exception_raw_kind : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_62 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_62;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_62 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_565
     port map (
      A_N201_out => A_N201_out,
      Clk => Clk,
      D(2 downto 0) => D(2 downto 0),
      D_0 => D_0,
      D_1 => D_1,
      D_2 => D_2,
      E(0) => E(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native_0\ => m0_exception_from_ex,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\(0) => \Using_FPGA.Native_2\(0),
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_dead_valid_hold_reg => ex_dead_valid_hold_reg,
      ex_first_cycle_reg => ex_first_cycle_reg,
      ex_jump => ex_jump,
      ex_jump_nodelay => ex_jump_nodelay,
      ex_raw_valid_reg => ex_raw_valid_reg,
      ex_raw_valid_reg_0 => ex_raw_valid_reg_0,
      in0 => in0,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m0_exception_raw_kind(2 downto 0) => m0_exception_raw_kind(2 downto 0),
      m0_raw_valid_reg => m0_raw_valid_reg,
      m1_databus_addr_from_m0_reg => m1_databus_addr_from_m0_reg,
      m1_databus_addr_from_m0_reg_0 => m1_databus_addr_from_m0_reg_0,
      m1_databus_addr_from_m0_reg_1 => m1_databus_addr_from_m0_reg_1,
      m1_databus_addr_from_m0_reg_2 => m1_databus_addr_from_m0_reg_2,
      m1_exception_from_m0 => m1_exception_from_m0,
      m3_exception_taken => m3_exception_taken,
      of_dead_valid_hold => of_dead_valid_hold,
      of_next_ex_valid => of_next_ex_valid,
      of_raw_valid => of_raw_valid,
      of_read_imm_reg_raw_reg => of_read_imm_reg_raw_reg,
      of_read_imm_reg_raw_reg_0 => of_read_imm_reg_raw_reg_0,
      of_read_imm_reg_raw_reg_1 => of_read_imm_reg_raw_reg_1,
      \p_43_out__4\ => \p_43_out__4\,
      p_48_out => p_48_out,
      single_Step_N => single_Step_N,
      single_Step_N_reg => single_Step_N_reg,
      sync_reset => sync_reset,
      wb_exception_from_m3_reg_rep => wb_exception_from_m3_reg_rep,
      wb_exception_from_m3_reg_rep_0 => wb_exception_from_m3_reg_rep_0,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      wb_exception_taken => wb_exception_taken
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_63 is
  port (
    m0_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_63 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_63;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_63 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_564
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      m0_gpr_write_dbg => m0_gpr_write_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_64 is
  port (
    m0_gpr_write : out STD_LOGIC;
    A3_out : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    m0_raw_valid_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_64 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_64;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_64 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_563
     port map (
      A3_out => A3_out,
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => m0_gpr_write,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      m0_raw_valid_reg => m0_raw_valid_reg,
      m0_raw_valid_reg_0 => m0_raw_valid_reg_0
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_65 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    ex_Interrupt_raw_reg : out STD_LOGIC;
    m1_databus_access_from_m00 : out STD_LOGIC;
    ex_reservation_reg : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    m1_databus_access_from_m0_reg : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_databus_access_from_m0_reg_0 : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    m0_databus_read_i0 : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_65 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_65;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_65 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_562
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      ex_Interrupt_raw_reg => ex_Interrupt_raw_reg,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_reservation => ex_reservation,
      ex_reservation_reg => ex_reservation_reg,
      m0_databus_read_i0 => m0_databus_read_i0,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m1_databus_access_from_m00 => m1_databus_access_from_m00,
      m1_databus_access_from_m0_reg => m1_databus_access_from_m0_reg,
      m1_databus_access_from_m0_reg_0 => m1_databus_access_from_m0_reg_0,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_66 is
  port (
    m1_is_div_instr_i : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_66 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_66;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_66 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_561
     port map (
      Clk => Clk,
      D => D,
      m1_is_div_instr_i => m1_is_div_instr_i,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_67 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_67 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_67;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_67 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_560
     port map (
      Clk => Clk,
      E(0) => E(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_68 is
  port (
    m1_exception_from_m0 : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    A_N201_out : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_exception_from_m1 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_raw_valid_reg : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m1_raw_valid_reg_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_68 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_68;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_68 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_559
     port map (
      A_N201_out => A_N201_out,
      Clk => Clk,
      D(2 downto 0) => D(2 downto 0),
      D_0 => D_0,
      D_1 => D_1,
      E(0) => E(0),
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => m1_exception_from_m0,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\(0) => \Using_FPGA.Native_0\(0),
      m0_dead_valid_hold => m0_dead_valid_hold,
      m1_raw_valid_reg => m1_raw_valid_reg,
      m1_raw_valid_reg_0 => m1_raw_valid_reg_0,
      m2_exception_from_m1 => m2_exception_from_m1,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_69 is
  port (
    m1_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_69 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_69;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_69 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_558
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      m1_gpr_write_dbg => m1_gpr_write_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_70 is
  port (
    m1_gpr_write : out STD_LOGIC;
    A2_out : out STD_LOGIC;
    m1_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_70 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_70;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_70 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_557
     port map (
      A2_out => A2_out,
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => m1_gpr_write,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_2\,
      m1_raw_valid_reg => m1_raw_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_71 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    floating_hold_div_by_zero_reg : out STD_LOGIC;
    floating_hold_div_by_zero_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \floating_hold_div_by_zero__0\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    floating_hold_div_by_zero_reg_1 : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    floating_hold_div_by_zero_reg_2 : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    floating_hold_div_overflow_reg : in STD_LOGIC;
    last_cycle : in STD_LOGIC;
    floating_hold_div_overflow_reg_0 : in STD_LOGIC;
    m3_div_overflow_i_reg : in STD_LOGIC;
    m3_div_overflow_i_reg_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_71 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_71;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_71 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_556
     port map (
      Clk => Clk,
      D => D,
      E(0) => E(0),
      EX_Op1_Zero => EX_Op1_Zero,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \floating_hold_div_by_zero__0\ => \floating_hold_div_by_zero__0\,
      floating_hold_div_by_zero_reg => floating_hold_div_by_zero_reg,
      floating_hold_div_by_zero_reg_0 => floating_hold_div_by_zero_reg_0,
      floating_hold_div_by_zero_reg_1 => floating_hold_div_by_zero_reg_1,
      floating_hold_div_by_zero_reg_2 => floating_hold_div_by_zero_reg_2,
      floating_hold_div_overflow_reg => floating_hold_div_overflow_reg,
      floating_hold_div_overflow_reg_0 => floating_hold_div_overflow_reg_0,
      last_cycle => last_cycle,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow_i_reg => m3_div_overflow_i_reg,
      m3_div_overflow_i_reg_0 => m3_div_overflow_i_reg_0,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_72 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_72 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_72;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_72 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_555
     port map (
      Clk => Clk,
      E(0) => E(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_2\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_73 is
  port (
    m2_exception_from_m1 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    m2_databus_access_i0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    m2_exception_taken : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    sync_reset : in STD_LOGIC;
    D_1 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m2_databus_access_i_reg : in STD_LOGIC;
    m2_raw_valid_reg : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    m1_databus_access : in STD_LOGIC;
    m3_exception_from_m2 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    m2_databus_access_i_reg_0 : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m1_databus_addr_from_m0_i_3 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_73 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_73;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_73 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_554
     port map (
      Clk => Clk,
      D(2 downto 0) => D(2 downto 0),
      D_0 => D_0,
      D_1 => D_1,
      E(0) => E(0),
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => m2_exception_from_m1,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      m1_databus_access => m1_databus_access,
      m1_databus_addr_from_m0_i_3 => m1_databus_addr_from_m0_i_3,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_exception_from_m0 => m1_exception_from_m0,
      m2_databus_access_i0 => m2_databus_access_i0,
      m2_databus_access_i_reg => m2_databus_access_i_reg,
      m2_databus_access_i_reg_0 => m2_databus_access_i_reg_0,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_exception_taken => m2_exception_taken,
      m2_raw_valid_reg => m2_raw_valid_reg,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_exception_from_m2 => m3_exception_from_m2,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_74 is
  port (
    m2_gpr_write_dbg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_gpr_write_dbg : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_74 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_74;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_74 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_553
     port map (
      Clk => Clk,
      D => D,
      D_0 => D_0,
      E(0) => E(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      m2_gpr_write_dbg => m2_gpr_write_dbg,
      m3_gpr_write_dbg => m3_gpr_write_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_75 is
  port (
    m2_gpr_write : out STD_LOGIC;
    A1_out : out STD_LOGIC;
    m2_raw_valid_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_75 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_75;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_75 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_552
     port map (
      A1_out => A1_out,
      Clk => Clk,
      D => D,
      D_0 => D_0,
      E(0) => E(0),
      \Using_FPGA.Native_0\ => m2_gpr_write,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_3\,
      m2_raw_valid_reg => m2_raw_valid_reg,
      m3_gpr_write => m3_gpr_write
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_76 is
  port (
    m3_exception_from_m2 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m3_exception_taken : out STD_LOGIC;
    m3_databus_access_i0 : out STD_LOGIC;
    wb_exception_from_m3_reg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_exception_from_m3_reg_0 : out STD_LOGIC;
    wb_exception_from_m3_reg_1 : out STD_LOGIC;
    sync_reset : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    m3_databus_access_i_reg : in STD_LOGIC;
    m3_databus_access_i_reg_0 : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m2_exception_taken : in STD_LOGIC;
    m1_databus_addr_from_m0_i_2 : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_exception_from_m0 : in STD_LOGIC;
    m3_databus_access_i_reg_1 : in STD_LOGIC;
    m2_exception_from_m1 : in STD_LOGIC;
    wb_abort_div : in STD_LOGIC;
    wb_exception_from_m3_reg_2 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    wb_exception_from_m3_reg_3 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_76 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_76;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_76 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_551
     port map (
      Clk => Clk,
      D(2 downto 0) => D(2 downto 0),
      D_0 => D_0,
      Q(2 downto 0) => Q(2 downto 0),
      \Using_FPGA.Native_0\ => m3_exception_from_m2,
      m1_databus_addr_from_m0_i_2 => m1_databus_addr_from_m0_i_2,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_exception_from_m0 => m1_exception_from_m0,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_exception_from_m1 => m2_exception_from_m1,
      m2_exception_taken => m2_exception_taken,
      m3_databus_access_i0 => m3_databus_access_i0,
      m3_databus_access_i_reg => m3_databus_access_i_reg,
      m3_databus_access_i_reg_0 => m3_databus_access_i_reg_0,
      m3_databus_access_i_reg_1 => m3_databus_access_i_reg_1,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_exception_taken => m3_exception_taken,
      sync_reset => sync_reset,
      wb_abort_div => wb_abort_div,
      wb_exception_from_m3_reg => wb_exception_from_m3_reg,
      wb_exception_from_m3_reg_0 => wb_exception_from_m3_reg_0,
      wb_exception_from_m3_reg_1 => wb_exception_from_m3_reg_1,
      wb_exception_from_m3_reg_2 => wb_exception_from_m3_reg_2,
      wb_exception_from_m3_reg_3 => wb_exception_from_m3_reg_3,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_77 is
  port (
    m3_gpr_write_dbg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    D : in STD_LOGIC;
    Clk : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_77 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_77;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_77 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_550
     port map (
      Clk => Clk,
      D => D,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      m3_gpr_write_dbg => m3_gpr_write_dbg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_78 is
  port (
    m3_gpr_write : out STD_LOGIC;
    A0_out : out STD_LOGIC;
    m3_raw_valid_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    D_0 : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_78 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_78;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_78 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_549
     port map (
      A0_out => A0_out,
      Clk => Clk,
      D => D,
      D_0 => D_0,
      \Using_FPGA.Native_0\ => m3_gpr_write,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_3\,
      m3_raw_valid_reg => m3_raw_valid_reg
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_two_piperun_fd_79 is
  port (
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    m3_div_overflow : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_two_piperun_fd_79 : entity is "two_piperun_fd";
end microblaze_microblaze_0_0_two_piperun_fd_79;

architecture STRUCTURE of microblaze_microblaze_0_0_two_piperun_fd_79 is
begin
\Using_0.TWO_PIPE_ZERO_DFF_DFF\: entity work.microblaze_microblaze_0_0_MB_FDR_548
     port map (
      Clk => Clk,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      \of_MSR_i_reg[25]\ => \of_MSR_i_reg[25]\,
      \of_MSR_i_reg[25]_0\ => \of_MSR_i_reg[25]_0\,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\(0) => \wb_exception_from_m3_reg_rep__0\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ALU is
  port (
    ex_fwd : out STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_databus_addr : out STD_LOGIC_VECTOR ( 29 downto 0 );
    D : out STD_LOGIC_VECTOR ( 4 downto 0 );
    ex_sel_alu_reg : out STD_LOGIC;
    ex_sel_alu_reg_0 : out STD_LOGIC;
    LO : out STD_LOGIC;
    ex_alu_result : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    \m0_addr_3lsb_reg[2]\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \m0_databus_addr_i_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    I2 : in STD_LOGIC;
    I0 : in STD_LOGIC;
    \m0_Ex_Result_i_reg[23]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    \m0_Ex_Result_i_reg[22]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[21]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[20]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[19]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[18]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[17]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[16]\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ALU : entity is "ALU";
end microblaze_microblaze_0_0_ALU;

architecture STRUCTURE of microblaze_microblaze_0_0_ALU is
  signal alu_carry_1 : STD_LOGIC;
  signal alu_carry_10 : STD_LOGIC;
  signal alu_carry_11 : STD_LOGIC;
  signal alu_carry_12 : STD_LOGIC;
  signal alu_carry_13 : STD_LOGIC;
  signal alu_carry_14 : STD_LOGIC;
  signal alu_carry_15 : STD_LOGIC;
  signal alu_carry_16 : STD_LOGIC;
  signal alu_carry_17 : STD_LOGIC;
  signal alu_carry_18 : STD_LOGIC;
  signal alu_carry_19 : STD_LOGIC;
  signal alu_carry_2 : STD_LOGIC;
  signal alu_carry_20 : STD_LOGIC;
  signal alu_carry_21 : STD_LOGIC;
  signal alu_carry_22 : STD_LOGIC;
  signal alu_carry_23 : STD_LOGIC;
  signal alu_carry_24 : STD_LOGIC;
  signal alu_carry_25 : STD_LOGIC;
  signal alu_carry_26 : STD_LOGIC;
  signal alu_carry_27 : STD_LOGIC;
  signal alu_carry_28 : STD_LOGIC;
  signal alu_carry_29 : STD_LOGIC;
  signal alu_carry_3 : STD_LOGIC;
  signal alu_carry_30 : STD_LOGIC;
  signal alu_carry_31 : STD_LOGIC;
  signal alu_carry_4 : STD_LOGIC;
  signal alu_carry_5 : STD_LOGIC;
  signal alu_carry_6 : STD_LOGIC;
  signal alu_carry_7 : STD_LOGIC;
  signal alu_carry_8 : STD_LOGIC;
  signal alu_carry_9 : STD_LOGIC;
  signal alu_carry_in : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
begin
\Use_Carry_Decoding.CarryIn_MUXCY\: entity work.microblaze_microblaze_0_0_MB_MUXCY_823
     port map (
      CI => alu_carry_in,
      DI_0 => DI_0,
      ex_use_carry => ex_use_carry,
      lopt => lopt,
      \m0_addr_3lsb_reg[2]\ => \m0_addr_3lsb_reg[2]\
    );
\Using_FPGA.ALL_Bits[0].ALU_Bit_I1\: entity work.\microblaze_microblaze_0_0_ALU_Bit__parameterized2\
     port map (
      EX_Enable_ALU => EX_Enable_ALU,
      \EX_Op2_reg[0]\ => LO,
      I0 => I0,
      I2 => I2,
      LO => alu_carry_31,
      Q(0) => Q(31),
      S_1 => S_1,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(31),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(29),
      ex_unsigned_op => ex_unsigned_op,
      lopt => lopt_92,
      lopt_1 => lopt_93,
      lopt_2 => lopt_94,
      lopt_3 => lopt_95,
      lopt_4 => lopt_97,
      \m0_databus_addr_i_reg[0]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0)
    );
\Using_FPGA.ALL_Bits[10].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit
     port map (
      EX_CarryOut => alu_carry_22,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_21,
      Q(0) => Q(21),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(19),
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_10 => lopt_75,
      lopt_11 => lopt_76,
      lopt_2 => lopt_67,
      lopt_3 => lopt_68,
      lopt_4 => lopt_69,
      lopt_5 => lopt_70,
      lopt_6 => lopt_71,
      lopt_7 => lopt_72,
      lopt_8 => lopt_73,
      lopt_9 => lopt_74,
      \m0_databus_addr_i_reg[10]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[10]_0\(0) => \Using_FPGA.Native\(21)
    );
\Using_FPGA.ALL_Bits[11].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_824
     port map (
      EX_CarryOut => alu_carry_21,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_20,
      Q(0) => Q(20),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(18),
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_61,
      lopt_3 => lopt_64,
      \m0_databus_addr_i_reg[11]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[11]_0\(0) => \Using_FPGA.Native\(20)
    );
\Using_FPGA.ALL_Bits[12].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_825
     port map (
      EX_CarryOut => alu_carry_20,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_19,
      Q(0) => Q(19),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(17),
      lopt => lopt_56,
      lopt_1 => lopt_57,
      lopt_2 => lopt_58,
      lopt_3 => lopt_63,
      \m0_databus_addr_i_reg[12]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[12]_0\(0) => \Using_FPGA.Native\(19)
    );
\Using_FPGA.ALL_Bits[13].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_826
     port map (
      EX_CarryOut => alu_carry_19,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_18,
      Q(0) => Q(18),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(16),
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_2 => lopt_55,
      lopt_3 => lopt_62,
      \m0_databus_addr_i_reg[13]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[13]_0\(0) => \Using_FPGA.Native\(18)
    );
\Using_FPGA.ALL_Bits[14].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_827
     port map (
      EX_CarryOut => alu_carry_18,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_17,
      Q(0) => Q(17),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(15),
      lopt => lopt_53,
      lopt_1 => lopt_54,
      lopt_10 => lopt_63,
      lopt_11 => lopt_64,
      lopt_2 => lopt_55,
      lopt_3 => lopt_56,
      lopt_4 => lopt_57,
      lopt_5 => lopt_58,
      lopt_6 => lopt_59,
      lopt_7 => lopt_60,
      lopt_8 => lopt_61,
      lopt_9 => lopt_62,
      \m0_databus_addr_i_reg[14]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[14]_0\(0) => \Using_FPGA.Native\(17)
    );
\Using_FPGA.ALL_Bits[15].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_828
     port map (
      EX_CarryOut => alu_carry_17,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_16,
      Q(0) => Q(16),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(14),
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_49,
      lopt_3 => lopt_52,
      \m0_databus_addr_i_reg[15]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[15]_0\(0) => \Using_FPGA.Native\(16)
    );
\Using_FPGA.ALL_Bits[16].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_829
     port map (
      D(0) => D(4),
      EX_CarryOut => alu_carry_16,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_15,
      Q(0) => Q(15),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(13),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_44,
      lopt_1 => lopt_45,
      lopt_2 => lopt_46,
      lopt_3 => lopt_51,
      \m0_Ex_Result_i_reg[16]\ => \m0_Ex_Result_i_reg[16]\,
      \m0_databus_addr_i_reg[16]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[16]_0\(0) => \Using_FPGA.Native\(15)
    );
\Using_FPGA.ALL_Bits[17].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_830
     port map (
      D(0) => D(3),
      EX_CarryOut => alu_carry_15,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_14,
      Q(0) => Q(14),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(12),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_43,
      lopt_3 => lopt_50,
      \m0_Ex_Result_i_reg[17]\ => \m0_Ex_Result_i_reg[17]\,
      \m0_databus_addr_i_reg[17]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[17]_0\(0) => \Using_FPGA.Native\(14)
    );
\Using_FPGA.ALL_Bits[18].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_831
     port map (
      D(0) => D(2),
      EX_CarryOut => alu_carry_14,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_13,
      Q(0) => Q(13),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(11),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_10 => lopt_51,
      lopt_11 => lopt_52,
      lopt_2 => lopt_43,
      lopt_3 => lopt_44,
      lopt_4 => lopt_45,
      lopt_5 => lopt_46,
      lopt_6 => lopt_47,
      lopt_7 => lopt_48,
      lopt_8 => lopt_49,
      lopt_9 => lopt_50,
      \m0_Ex_Result_i_reg[18]\ => \m0_Ex_Result_i_reg[18]\,
      \m0_databus_addr_i_reg[18]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[18]_0\(0) => \Using_FPGA.Native\(13)
    );
\Using_FPGA.ALL_Bits[19].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_832
     port map (
      EX_CarryOut => alu_carry_13,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_12,
      Q(0) => Q(12),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(10),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(2),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_37,
      lopt_3 => lopt_40,
      \m0_Ex_Result_i_reg[19]\ => \m0_Ex_Result_i_reg[19]\,
      \m0_databus_addr_i_reg[19]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[19]_0\(0) => \Using_FPGA.Native\(12)
    );
\Using_FPGA.ALL_Bits[1].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_833
     port map (
      EX_CarryOut => alu_carry_31,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_30,
      Q(0) => Q(30),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(28),
      lopt => lopt_89,
      lopt_1 => lopt_90,
      lopt_2 => lopt_91,
      lopt_3 => lopt_96,
      \m0_databus_addr_i_reg[1]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[1]_0\(0) => \Using_FPGA.Native\(30)
    );
\Using_FPGA.ALL_Bits[20].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_834
     port map (
      D(0) => D(1),
      EX_CarryOut => alu_carry_12,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_11,
      Q(0) => Q(11),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(9),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_32,
      lopt_1 => lopt_33,
      lopt_2 => lopt_34,
      lopt_3 => lopt_39,
      \m0_Ex_Result_i_reg[20]\ => \m0_Ex_Result_i_reg[20]\,
      \m0_databus_addr_i_reg[20]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[20]_0\(0) => \Using_FPGA.Native\(11)
    );
\Using_FPGA.ALL_Bits[21].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_835
     port map (
      D(0) => D(0),
      EX_CarryOut => alu_carry_11,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_10,
      Q(0) => Q(10),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(8),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31,
      lopt_3 => lopt_38,
      \m0_Ex_Result_i_reg[21]\ => \m0_Ex_Result_i_reg[21]\,
      \m0_databus_addr_i_reg[21]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[21]_0\(0) => \Using_FPGA.Native\(10)
    );
\Using_FPGA.ALL_Bits[22].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_836
     port map (
      EX_CarryOut => alu_carry_10,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_9,
      Q(0) => Q(9),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(7),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(1),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_10 => lopt_39,
      lopt_11 => lopt_40,
      lopt_2 => lopt_31,
      lopt_3 => lopt_32,
      lopt_4 => lopt_33,
      lopt_5 => lopt_34,
      lopt_6 => lopt_35,
      lopt_7 => lopt_36,
      lopt_8 => lopt_37,
      lopt_9 => lopt_38,
      \m0_Ex_Result_i_reg[22]\ => \m0_Ex_Result_i_reg[22]\,
      \m0_databus_addr_i_reg[22]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[22]_0\(0) => \Using_FPGA.Native\(9)
    );
\Using_FPGA.ALL_Bits[23].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_837
     port map (
      EX_CarryOut => alu_carry_9,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_8,
      Q(0) => Q(8),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(6),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(0) => ex_fwd(0),
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_23,
      lopt_1 => lopt_24,
      lopt_2 => lopt_25,
      lopt_3 => lopt_28,
      \m0_Ex_Result_i_reg[23]\ => \m0_Ex_Result_i_reg[23]\,
      \m0_databus_addr_i_reg[23]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[23]_0\(0) => \Using_FPGA.Native\(8)
    );
\Using_FPGA.ALL_Bits[24].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_838
     port map (
      EX_CarryOut => alu_carry_8,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_7,
      Q(0) => Q(7),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(5),
      lopt => lopt_20,
      lopt_1 => lopt_21,
      lopt_2 => lopt_22,
      lopt_3 => lopt_27,
      \m0_databus_addr_i_reg[24]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[24]_0\(0) => \Using_FPGA.Native\(7)
    );
\Using_FPGA.ALL_Bits[25].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_839
     port map (
      EX_CarryOut => alu_carry_7,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_6,
      Q(0) => Q(6),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(4),
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_2 => lopt_19,
      lopt_3 => lopt_26,
      \m0_databus_addr_i_reg[25]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[25]_0\(0) => \Using_FPGA.Native\(6)
    );
\Using_FPGA.ALL_Bits[26].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_840
     port map (
      EX_CarryOut => alu_carry_6,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_5,
      Q(0) => Q(5),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(3),
      ex_sel_alu_reg => ex_sel_alu_reg,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_10 => lopt_27,
      lopt_11 => lopt_28,
      lopt_2 => lopt_19,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => lopt_22,
      lopt_6 => lopt_23,
      lopt_7 => lopt_24,
      lopt_8 => lopt_25,
      lopt_9 => lopt_26,
      \m0_databus_addr_i_reg[26]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[26]_0\(0) => \Using_FPGA.Native\(5)
    );
\Using_FPGA.ALL_Bits[27].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_841
     port map (
      EX_CarryOut => alu_carry_5,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_4,
      Q(0) => Q(4),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(2),
      ex_sel_alu_reg => ex_sel_alu_reg_0,
      ex_sel_alu_res => ex_sel_alu_res,
      lopt => lopt_11,
      lopt_1 => lopt_12,
      lopt_2 => lopt_13,
      lopt_3 => lopt_16,
      \m0_databus_addr_i_reg[27]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[27]_0\(0) => \Using_FPGA.Native\(4)
    );
\Using_FPGA.ALL_Bits[28].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_842
     port map (
      EX_CarryOut => alu_carry_4,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_3,
      Q(0) => Q(3),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(1),
      lopt => lopt_8,
      lopt_1 => lopt_9,
      lopt_2 => lopt_10,
      lopt_3 => lopt_15,
      \m0_databus_addr_i_reg[28]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[28]_0\(0) => \Using_FPGA.Native\(3)
    );
\Using_FPGA.ALL_Bits[29].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_843
     port map (
      EX_CarryOut => alu_carry_3,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_2,
      Q(0) => Q(2),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(0),
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_2 => lopt_7,
      lopt_3 => lopt_14,
      \m0_databus_addr_i_reg[29]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[29]_0\(0) => \Using_FPGA.Native\(2)
    );
\Using_FPGA.ALL_Bits[2].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_844
     port map (
      EX_CarryOut => alu_carry_30,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_29,
      Q(0) => Q(29),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(27),
      lopt => lopt_89,
      lopt_1 => lopt_90,
      lopt_10 => lopt_97,
      lopt_2 => lopt_91,
      lopt_3 => lopt_92,
      lopt_4 => ex_unsigned_op,
      lopt_5 => S_1,
      lopt_6 => lopt_93,
      lopt_7 => lopt_94,
      lopt_8 => lopt_95,
      lopt_9 => lopt_96,
      \m0_databus_addr_i_reg[2]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[2]_0\(0) => \Using_FPGA.Native\(29)
    );
\Using_FPGA.ALL_Bits[30].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_845
     port map (
      EX_CarryOut => alu_carry_2,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_1,
      Q(0) => Q(1),
      ex_alu_result(0) => ex_alu_result(1),
      ex_alu_sel_logic => ex_alu_sel_logic,
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_10 => lopt_15,
      lopt_11 => lopt_16,
      lopt_2 => lopt_7,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => lopt_10,
      lopt_6 => lopt_11,
      lopt_7 => lopt_12,
      lopt_8 => lopt_13,
      lopt_9 => lopt_14,
      \m0_addr_3lsb_reg[1]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_addr_3lsb_reg[1]_0\(0) => \Using_FPGA.Native\(1)
    );
\Using_FPGA.ALL_Bits[31].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_846
     port map (
      EX_CarryIn => alu_carry_in,
      EX_CarryOut => alu_carry_1,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(0),
      ex_alu_result(0) => ex_alu_result(0),
      ex_alu_sel_logic => ex_alu_sel_logic,
      lopt => lopt_1,
      lopt_1 => lopt_2,
      lopt_2 => lopt_3,
      lopt_3 => lopt_4,
      \m0_addr_3lsb_reg[2]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_addr_3lsb_reg[2]_0\(0) => \Using_FPGA.Native\(0)
    );
\Using_FPGA.ALL_Bits[3].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_847
     port map (
      EX_CarryOut => alu_carry_29,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_28,
      Q(0) => Q(28),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(26),
      lopt => lopt_83,
      lopt_1 => lopt_84,
      lopt_2 => lopt_85,
      lopt_3 => lopt_88,
      \m0_databus_addr_i_reg[3]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[3]_0\(0) => \Using_FPGA.Native\(28)
    );
\Using_FPGA.ALL_Bits[4].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_848
     port map (
      EX_CarryOut => alu_carry_28,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_27,
      Q(0) => Q(27),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(25),
      lopt => lopt_80,
      lopt_1 => lopt_81,
      lopt_2 => lopt_82,
      lopt_3 => lopt_87,
      \m0_databus_addr_i_reg[4]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[4]_0\(0) => \Using_FPGA.Native\(27)
    );
\Using_FPGA.ALL_Bits[5].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_849
     port map (
      EX_CarryOut => alu_carry_27,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_26,
      Q(0) => Q(26),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(24),
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_2 => lopt_79,
      lopt_3 => lopt_86,
      \m0_databus_addr_i_reg[5]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[5]_0\(0) => \Using_FPGA.Native\(26)
    );
\Using_FPGA.ALL_Bits[6].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_850
     port map (
      EX_CarryOut => alu_carry_26,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_25,
      Q(0) => Q(25),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(23),
      lopt => lopt_77,
      lopt_1 => lopt_78,
      lopt_10 => lopt_87,
      lopt_11 => lopt_88,
      lopt_2 => lopt_79,
      lopt_3 => lopt_80,
      lopt_4 => lopt_81,
      lopt_5 => lopt_82,
      lopt_6 => lopt_83,
      lopt_7 => lopt_84,
      lopt_8 => lopt_85,
      lopt_9 => lopt_86,
      \m0_databus_addr_i_reg[6]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[6]_0\(0) => \Using_FPGA.Native\(25)
    );
\Using_FPGA.ALL_Bits[7].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_851
     port map (
      EX_CarryOut => alu_carry_25,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_24,
      Q(0) => Q(24),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(22),
      lopt => lopt_71,
      lopt_1 => lopt_72,
      lopt_2 => lopt_73,
      lopt_3 => lopt_76,
      \m0_databus_addr_i_reg[7]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[7]_0\(0) => \Using_FPGA.Native\(24)
    );
\Using_FPGA.ALL_Bits[8].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_852
     port map (
      EX_CarryOut => alu_carry_24,
      EX_Enable_ALU => EX_Enable_ALU,
      LO => alu_carry_23,
      Q(0) => Q(23),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(21),
      lopt => lopt_68,
      lopt_1 => lopt_69,
      lopt_2 => lopt_70,
      lopt_3 => lopt_75,
      \m0_databus_addr_i_reg[8]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[8]_0\(0) => \Using_FPGA.Native\(23)
    );
\Using_FPGA.ALL_Bits[9].ALU_Bit_I1\: entity work.microblaze_microblaze_0_0_ALU_Bit_853
     port map (
      EX_CarryIn => alu_carry_22,
      EX_CarryOut => alu_carry_23,
      EX_Enable_ALU => EX_Enable_ALU,
      Q(0) => Q(22),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(0) => ex_databus_addr(20),
      lopt => lopt_65,
      lopt_1 => lopt_66,
      lopt_2 => lopt_67,
      lopt_3 => lopt_74,
      \m0_databus_addr_i_reg[9]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0),
      \m0_databus_addr_i_reg[9]_0\(0) => \Using_FPGA.Native\(22)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Debug is
  port (
    \Serial_Dbg_Intf.if_debug_ready_i_reg_0\ : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 36 downto 0 );
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ : out STD_LOGIC;
    read_register_MSR_1 : out STD_LOGIC;
    single_Step_N : out STD_LOGIC;
    Sleep_Out : out STD_LOGIC;
    dbg_halt_reset_mode_reg_0 : out STD_LOGIC;
    \Performance_Debug_Control.dbg_state_nohalt_reg_0\ : out STD_LOGIC;
    \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    normal_stop_i : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ : out STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_2_sp_1 : out STD_LOGIC;
    single_Step_N_reg_0 : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : out STD_LOGIC;
    S : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg_1\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    \Performance_Debug_Control.m0_dbg_hit_reg[0]_0\ : in STD_LOGIC;
    of_piperun : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Sleep : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg_0\ : in STD_LOGIC;
    wb_halted : in STD_LOGIC;
    wb_read_imm_reg_1 : in STD_LOGIC;
    wb_delay_slot : in STD_LOGIC;
    wb_read_imm_reg : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    ex_dbg_pc_hit_i : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    \p_4_out__0\ : in STD_LOGIC;
    exception_reg_0 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Sleep_Decode : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Data_Read_Reg_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Config_Reg_En : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    wb_pc_valid : in STD_LOGIC;
    if0_pause : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    ex_Interrupt : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    \data_rd_reg_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Debug : entity is "Debug";
end microblaze_microblaze_0_0_Debug;

architecture STRUCTURE of microblaze_microblaze_0_0_Debug is
  signal A1 : STD_LOGIC;
  signal A2 : STD_LOGIC;
  signal A3 : STD_LOGIC;
  signal Command_Reg_En : STD_LOGIC;
  signal Control_Reg_En : STD_LOGIC;
  signal Dbg_Reg_En_2_sn_1 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_10_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_11_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_12_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_13_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_17_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_18_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_19_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_20_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_23_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_24_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_25_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_26_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_27_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_28_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_2_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_3_n_0 : STD_LOGIC;
  signal Dbg_TDO_INST_0_i_9_n_0 : STD_LOGIC;
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal Full_32_bit : STD_LOGIC;
  signal Full_32_bit_1 : STD_LOGIC;
  signal Instr_Insert_Reg_En : STD_LOGIC;
  signal Instr_Insert_Reg_En_1 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 36 downto 0 );
  signal New_Dbg_Instr2_TCK : STD_LOGIC;
  signal New_Dbg_Instr_TCK : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_freeze_nohalt_i_4_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_freeze_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_state_nohalt_i_4_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_state_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_i_reg_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\ : STD_LOGIC;
  signal \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.force_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\ : STD_LOGIC;
  signal \Performance_Debug_Control.normal_stop_i_i_1_n_0\ : STD_LOGIC;
  signal \Performance_Debug_Control.step_continue_hold_i_1_n_0\ : STD_LOGIC;
  signal Q0_out : STD_LOGIC;
  signal Q1_in : STD_LOGIC;
  signal Q1_out : STD_LOGIC;
  signal Q2_in : STD_LOGIC;
  signal Q2_out : STD_LOGIC;
  signal Q4_out : STD_LOGIC;
  signal Q5_out : STD_LOGIC;
  signal Q6_out : STD_LOGIC;
  signal Q_0 : STD_LOGIC;
  signal Raw : STD_LOGIC;
  signal \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.continue_from_brk_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\ : STD_LOGIC;
  signal \^serial_dbg_intf.if_debug_ready_i_reg_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count[5]_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_11\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_sample_n_12\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.sync_stop_CPU_n_0\ : STD_LOGIC;
  signal \Serial_Dbg_Intf.unchanged_i_1_n_0\ : STD_LOGIC;
  signal \^sleep_out\ : STD_LOGIC;
  signal \TDO_Data_Reg0__9\ : STD_LOGIC_VECTOR ( 3 downto 2 );
  signal \TDO_Data_Reg__31\ : STD_LOGIC;
  signal \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\ : STD_LOGIC;
  signal async_reset : STD_LOGIC;
  signal capture_1 : STD_LOGIC;
  signal command_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal command_reg_clear : STD_LOGIC;
  signal command_reg_clear_i_1_n_0 : STD_LOGIC;
  signal command_reg_rst33_out : STD_LOGIC;
  signal config_with_scan_reset : STD_LOGIC;
  signal continue_from_brk_TClk : STD_LOGIC;
  signal continue_from_brk_rst34_out : STD_LOGIC;
  signal data_rd_reg : STD_LOGIC_VECTOR ( 0 to 32 );
  signal \data_rd_reg[0]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_1_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_2_n_0\ : STD_LOGIC;
  signal \data_rd_reg[32]_i_3_n_0\ : STD_LOGIC;
  signal data_read_reg : STD_LOGIC_VECTOR ( 0 to 32 );
  signal dbg_brki_hit : STD_LOGIC;
  signal dbg_brki_hit_synced : STD_LOGIC;
  signal dbg_freeze_nohalt0_in : STD_LOGIC;
  signal dbg_halt_reset_mode_i_1_n_0 : STD_LOGIC;
  signal \^dbg_halt_reset_mode_reg_0\ : STD_LOGIC;
  signal dbg_stop_1 : STD_LOGIC;
  signal delay_slot_instr : STD_LOGIC;
  signal ex_brki_hit : STD_LOGIC;
  signal ex_pc_brk : STD_LOGIC;
  signal ex_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of ex_piperun_for_ce : signal is std.standard.true;
  signal ex_step_continue_hold : STD_LOGIC;
  signal exception_i_1_n_0 : STD_LOGIC;
  signal exception_i_2_n_0 : STD_LOGIC;
  signal executing_i_1_n_0 : STD_LOGIC;
  signal force_stop_TClk : STD_LOGIC;
  signal force_stop_cmd_1 : STD_LOGIC;
  signal force_stop_cmd_rst30_out : STD_LOGIC;
  signal force_stop_i : STD_LOGIC;
  signal force_stop_overrun : STD_LOGIC;
  signal instr_rd_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal instr_read_reg : STD_LOGIC_VECTOR ( 0 to 1 );
  signal m0_brki_hit : STD_LOGIC;
  signal m0_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m0_piperun_for_ce : signal is std.standard.true;
  signal m1_brki_hit : STD_LOGIC;
  signal m1_dbg_hit : STD_LOGIC;
  signal m1_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m1_piperun_for_ce : signal is std.standard.true;
  signal m2_brki_hit : STD_LOGIC;
  signal m2_dbg_hit : STD_LOGIC;
  signal m2_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m2_piperun_for_ce : signal is std.standard.true;
  signal m3_brki_hit : STD_LOGIC;
  signal m3_dbg_hit : STD_LOGIC;
  signal m3_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m3_piperun_for_ce : signal is std.standard.true;
  signal mb_halted_1 : STD_LOGIC;
  signal no_sleeping1_out : STD_LOGIC;
  signal normal_stop_TClk : STD_LOGIC;
  signal normal_stop_cmd_1 : STD_LOGIC;
  signal normal_stop_cmd_rst29_out : STD_LOGIC;
  signal \^normal_stop_i\ : STD_LOGIC;
  signal of_piperun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of of_piperun_for_ce : signal is std.standard.true;
  signal p_0_in : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal p_0_in74_in : STD_LOGIC;
  signal p_100_out : STD_LOGIC;
  signal p_11_out : STD_LOGIC;
  signal \p_36_out__1\ : STD_LOGIC;
  signal \p_40_out__0\ : STD_LOGIC;
  signal p_59_out : STD_LOGIC;
  signal p_79_out : STD_LOGIC;
  signal p_86_out : STD_LOGIC;
  signal p_89_out : STD_LOGIC;
  signal p_91_out : STD_LOGIC;
  signal p_94_out : STD_LOGIC;
  signal p_97_out : STD_LOGIC;
  signal pause_synced : STD_LOGIC;
  signal read_register_MSR : STD_LOGIC;
  signal \^read_register_msr_1\ : STD_LOGIC;
  signal read_register_PC : STD_LOGIC;
  signal read_register_PC_1 : STD_LOGIC;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal running_clock : STD_LOGIC;
  signal running_clock_rst19_out : STD_LOGIC;
  signal running_clock_synced : STD_LOGIC;
  signal sample_synced : STD_LOGIC_VECTOR ( 0 to 9 );
  signal saved_reset_mode_dbg_halt : STD_LOGIC;
  signal saved_reset_mode_dbg_halt_i_1_n_0 : STD_LOGIC;
  signal saved_reset_mode_sleep : STD_LOGIC;
  signal saved_reset_mode_sleep_i_1_n_0 : STD_LOGIC;
  signal sel0 : STD_LOGIC_VECTOR ( 3 downto 1 );
  signal sel0_2 : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^single_step_n\ : STD_LOGIC;
  signal single_Step_N_i_1_n_0 : STD_LOGIC;
  signal single_Step_TClk : STD_LOGIC;
  signal single_step_count : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \single_step_count[0]_i_1_n_0\ : STD_LOGIC;
  signal \single_step_count[1]_i_1_n_0\ : STD_LOGIC;
  signal sleep_reset_mode : STD_LOGIC;
  signal sleep_reset_mode_i_1_n_0 : STD_LOGIC;
  signal sleep_synced : STD_LOGIC;
  signal start_dbg_exec_reg_n_0 : STD_LOGIC;
  signal start_single_cmd : STD_LOGIC;
  signal start_single_step_i_1_n_0 : STD_LOGIC;
  signal start_single_step_reg_n_0 : STD_LOGIC;
  signal start_single_step_rst31_out : STD_LOGIC;
  signal \step_continue__0\ : STD_LOGIC;
  signal step_continue_hold : STD_LOGIC;
  signal sync : STD_LOGIC;
  signal sync_trig_ack_in_0_n_1 : STD_LOGIC;
  signal sync_trig_out_0_n_1 : STD_LOGIC;
  signal tdo_config_word1_0 : STD_LOGIC;
  signal trig_ack_in_0_synced : STD_LOGIC;
  signal trig_ack_in_0_synced_1 : STD_LOGIC;
  signal trig_out_0_synced : STD_LOGIC;
  signal trig_out_0_synced_1 : STD_LOGIC;
  signal unchanged : STD_LOGIC;
  signal wb_brki_hit : STD_LOGIC;
  signal wb_dbg_hit : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_13 : label is "soft_lutpair282";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_21 : label is "soft_lutpair281";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_22 : label is "soft_lutpair282";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3\ : label is "soft_lutpair279";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.step_continue_hold_i_1\ : label is "soft_lutpair285";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\ : label is "soft_lutpair281";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[1]_i_1\ : label is "soft_lutpair287";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[2]_i_1\ : label is "soft_lutpair280";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[3]_i_1\ : label is "soft_lutpair280";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[5]_i_2\ : label is "soft_lutpair287";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[6]_i_1\ : label is "soft_lutpair283";
  attribute SOFT_HLUTNM of \Serial_Dbg_Intf.shift_count[7]_i_1\ : label is "soft_lutpair283";
  attribute SOFT_HLUTNM of \data_rd_reg[32]_i_2\ : label is "soft_lutpair286";
  attribute SOFT_HLUTNM of \data_rd_reg[32]_i_3\ : label is "soft_lutpair286";
  attribute SOFT_HLUTNM of dbg_halt_reset_mode_i_2 : label is "soft_lutpair285";
  attribute SOFT_HLUTNM of exception_i_2 : label is "soft_lutpair278";
  attribute SOFT_HLUTNM of executing_i_1 : label is "soft_lutpair278";
  attribute SOFT_HLUTNM of saved_reset_mode_dbg_halt_i_1 : label is "soft_lutpair284";
  attribute SOFT_HLUTNM of saved_reset_mode_sleep_i_1 : label is "soft_lutpair284";
  attribute SOFT_HLUTNM of sleep_reset_mode_i_2 : label is "soft_lutpair279";
begin
  Dbg_Reg_En_2_sp_1 <= Dbg_Reg_En_2_sn_1;
  Dbg_Trig_Ack_Out(1 downto 0) <= \^dbg_trig_ack_out\(1 downto 0);
  Dbg_Trig_In(1 downto 0) <= \^dbg_trig_in\(1 downto 0);
  LOCKSTEP_Master_Out(36 downto 0) <= \^lockstep_master_out\(36 downto 0);
  \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ <= \^performance_debug_control.dbg_freeze_nohalt_reg_0\;
  \Performance_Debug_Control.dbg_state_nohalt_reg_0\ <= \^performance_debug_control.dbg_state_nohalt_reg_0\;
  \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ <= \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\;
  \Serial_Dbg_Intf.if_debug_ready_i_reg_0\ <= \^serial_dbg_intf.if_debug_ready_i_reg_0\;
  Sleep_Out <= \^sleep_out\;
  dbg_halt_reset_mode_reg_0 <= \^dbg_halt_reset_mode_reg_0\;
  ex_piperun_for_ce <= \Performance_Debug_Control.m0_dbg_hit_reg[0]_0\;
  m0_piperun_for_ce <= m0_piperun;
  m1_piperun_for_ce <= m1_piperun;
  m2_piperun_for_ce <= m2_piperun;
  m3_piperun_for_ce <= m3_piperun;
  normal_stop_i <= \^normal_stop_i\;
  of_piperun_for_ce <= of_piperun;
  read_register_MSR_1 <= \^read_register_msr_1\;
  reset_bool_for_rst <= sync_reset;
  single_Step_N <= \^single_step_n\;
Dbg_TDO_INST_0_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAAAAAAEAAAAAAAE"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_18_n_0,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\,
      I2 => A1,
      I3 => A2,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I5 => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\,
      O => Dbg_TDO_INST_0_i_10_n_0
    );
Dbg_TDO_INST_0_i_11: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CFAFCFA0C0AFC0A0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_19_n_0,
      I1 => Dbg_TDO_INST_0_i_20_n_0,
      I2 => \TDO_Data_Reg0__9\(2),
      I3 => \TDO_Data_Reg0__9\(3),
      I4 => Dbg_TDO_INST_0_i_23_n_0,
      I5 => Dbg_TDO_INST_0_i_24_n_0,
      O => Dbg_TDO_INST_0_i_11_n_0
    );
Dbg_TDO_INST_0_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CFAFCFA0C0AFC0A0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_25_n_0,
      I1 => Dbg_TDO_INST_0_i_26_n_0,
      I2 => \TDO_Data_Reg0__9\(2),
      I3 => \TDO_Data_Reg0__9\(3),
      I4 => Dbg_TDO_INST_0_i_27_n_0,
      I5 => Dbg_TDO_INST_0_i_28_n_0,
      O => Dbg_TDO_INST_0_i_12_n_0
    );
Dbg_TDO_INST_0_i_13: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A3,
      O => Dbg_TDO_INST_0_i_13_n_0
    );
Dbg_TDO_INST_0_i_17: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000D8D855000000"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\,
      I4 => A2,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_17_n_0
    );
Dbg_TDO_INST_0_i_18: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00008888F5A00000"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\,
      I2 => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\,
      I3 => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\,
      I4 => A2,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_18_n_0
    );
Dbg_TDO_INST_0_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(27),
      I1 => data_read_reg(25),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(28),
      I5 => data_read_reg(26),
      O => Dbg_TDO_INST_0_i_19_n_0
    );
Dbg_TDO_INST_0_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4000000000000004"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\,
      I2 => sel0_2(0),
      I3 => A1,
      I4 => A2,
      I5 => A3,
      O => Dbg_TDO_INST_0_i_2_n_0
    );
Dbg_TDO_INST_0_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(19),
      I1 => data_read_reg(17),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(20),
      I5 => data_read_reg(18),
      O => Dbg_TDO_INST_0_i_20_n_0
    );
Dbg_TDO_INST_0_i_21: unisim.vcomponents.LUT3
    generic map(
      INIT => X"1E"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => A1,
      I2 => A2,
      O => \TDO_Data_Reg0__9\(2)
    );
Dbg_TDO_INST_0_i_22: unisim.vcomponents.LUT4
    generic map(
      INIT => X"01FE"
    )
        port map (
      I0 => A2,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A3,
      O => \TDO_Data_Reg0__9\(3)
    );
Dbg_TDO_INST_0_i_23: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(31),
      I1 => data_read_reg(29),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(32),
      I5 => data_read_reg(30),
      O => Dbg_TDO_INST_0_i_23_n_0
    );
Dbg_TDO_INST_0_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(23),
      I1 => data_read_reg(21),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(24),
      I5 => data_read_reg(22),
      O => Dbg_TDO_INST_0_i_24_n_0
    );
Dbg_TDO_INST_0_i_25: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(11),
      I1 => data_read_reg(9),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(12),
      I5 => data_read_reg(10),
      O => Dbg_TDO_INST_0_i_25_n_0
    );
Dbg_TDO_INST_0_i_26: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(3),
      I1 => data_read_reg(1),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(4),
      I5 => data_read_reg(2),
      O => Dbg_TDO_INST_0_i_26_n_0
    );
Dbg_TDO_INST_0_i_27: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(15),
      I1 => data_read_reg(13),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(16),
      I5 => data_read_reg(14),
      O => Dbg_TDO_INST_0_i_27_n_0
    );
Dbg_TDO_INST_0_i_28: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFCFAFC0A0CFA0C0"
    )
        port map (
      I0 => data_read_reg(7),
      I1 => data_read_reg(5),
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A1,
      I4 => data_read_reg(8),
      I5 => data_read_reg(6),
      O => Dbg_TDO_INST_0_i_28_n_0
    );
Dbg_TDO_INST_0_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0AC0C0A0C0A0C0A0"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_9_n_0,
      I1 => Dbg_TDO_INST_0_i_10_n_0,
      I2 => sel0_2(0),
      I3 => A3,
      I4 => A2,
      I5 => A1,
      O => Dbg_TDO_INST_0_i_3_n_0
    );
Dbg_TDO_INST_0_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FAFFCFAC0A00C0AC"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_11_n_0,
      I1 => Dbg_TDO_INST_0_i_12_n_0,
      I2 => sel0_2(0),
      I3 => Dbg_TDO_INST_0_i_13_n_0,
      I4 => sel0(1),
      I5 => data_read_reg(0),
      O => \TDO_Data_Reg__31\
    );
Dbg_TDO_INST_0_i_9: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAFAAAEAAAAAAAE"
    )
        port map (
      I0 => Dbg_TDO_INST_0_i_17_n_0,
      I1 => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\,
      I2 => A1,
      I3 => A2,
      I4 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I5 => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\,
      O => Dbg_TDO_INST_0_i_9_n_0
    );
Full_32_bit_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_halted,
      D => wb_read_imm_reg_1,
      Q => Full_32_bit_1,
      R => reset_bool_for_rst
    );
Full_32_bit_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_halted,
      D => wb_read_imm_reg,
      Q => Full_32_bit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m1_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun_for_ce,
      D => m0_brki_hit,
      Q => m1_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m1_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      Q => m1_dbg_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m2_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun_for_ce,
      D => m1_brki_hit,
      Q => m2_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m2_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_piperun_for_ce,
      D => m1_dbg_hit,
      Q => m2_dbg_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m3_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun_for_ce,
      D => m2_brki_hit,
      Q => m3_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.Frequency_Pipe_Flow.m3_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_piperun_for_ce,
      D => m2_dbg_hit,
      Q => m3_dbg_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_halted,
      D => wb_brki_hit,
      Q => dbg_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAAABAAAAAAA8"
    )
        port map (
      I0 => dbg_freeze_nohalt0_in,
      I1 => \p_40_out__0\,
      I2 => \p_4_out__0\,
      I3 => \Performance_Debug_Control.dbg_freeze_nohalt_i_4_n_0\,
      I4 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      I5 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      O => \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AAA8AAAA"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I1 => start_single_step_reg_n_0,
      I2 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I3 => reset_bool_for_rst,
      I4 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      O => \p_40_out__0\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_4\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I1 => reset_bool_for_rst,
      O => \Performance_Debug_Control.dbg_freeze_nohalt_i_4_n_0\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_halted,
      D => wb_dbg_hit,
      Q => Raw,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_state_nohalt_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"2222222322222220"
    )
        port map (
      I0 => dbg_freeze_nohalt0_in,
      I1 => \p_36_out__1\,
      I2 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I3 => reset_bool_for_rst,
      I4 => \Performance_Debug_Control.dbg_state_nohalt_i_4_n_0\,
      I5 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      O => \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_state_nohalt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000F000E0E0E0E"
    )
        port map (
      I0 => wb_halted,
      I1 => \^dbg_halt_reset_mode_reg_0\,
      I2 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I3 => Reset_Mode(0),
      I4 => Reset_Mode(1),
      I5 => reset_bool_for_rst,
      O => dbg_freeze_nohalt0_in
    );
\Performance_Debug_Control.dbg_state_nohalt_i_3\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"07"
    )
        port map (
      I0 => saved_reset_mode_dbg_halt,
      I1 => \^dbg_halt_reset_mode_reg_0\,
      I2 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      O => \p_36_out__1\
    );
\Performance_Debug_Control.dbg_state_nohalt_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF44404444"
    )
        port map (
      I0 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      I1 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I2 => \step_continue__0\,
      I3 => reset_bool_for_rst,
      I4 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      I5 => \p_4_out__0\,
      O => \Performance_Debug_Control.dbg_state_nohalt_i_4_n_0\
    );
\Performance_Debug_Control.dbg_state_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.dbg_stop_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Dbg_Stop,
      Q => dbg_stop_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_stop_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF040F0404"
    )
        port map (
      I0 => trig_out_0_synced_1,
      I1 => trig_out_0_synced,
      I2 => D(0),
      I3 => dbg_stop_1,
      I4 => Dbg_Stop,
      I5 => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      O => \Performance_Debug_Control.dbg_stop_i_i_1_n_0\
    );
\Performance_Debug_Control.dbg_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_stop_i_i_1_n_0\,
      Q => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      R => ex_dbg_pc_hit_i
    );
\Performance_Debug_Control.dbg_stop_if_delay_i_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101010101010100"
    )
        port map (
      I0 => saved_reset_mode_sleep,
      I1 => \^dbg_halt_reset_mode_reg_0\,
      I2 => reset_bool_for_rst,
      I3 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I4 => wb_halted,
      I5 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      O => \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\
    );
\Performance_Debug_Control.dbg_stop_if_delay_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0\,
      Q => \^lockstep_master_out\(32),
      R => '0'
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00E2"
    )
        port map (
      I0 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I1 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\,
      I2 => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\,
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FCFEFCFEFCFFFCFE"
    )
        port map (
      I0 => \p_40_out__0\,
      I1 => \p_4_out__0\,
      I2 => reset_bool_for_rst,
      I3 => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      I4 => saved_reset_mode_sleep,
      I5 => \^sleep_out\,
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0EFEFE0E"
    )
        port map (
      I0 => \^dbg_halt_reset_mode_reg_0\,
      I1 => wb_halted,
      I2 => reset_bool_for_rst,
      I3 => Reset_Mode(1),
      I4 => Reset_Mode(0),
      O => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3_n_0\
    );
\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0\,
      Q => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      R => '0'
    );
\Performance_Debug_Control.ex_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => \Performance_Debug_Control.ex_brki_hit_reg_0\,
      Q => ex_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\,
      Q => ex_pc_brk,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      Q => \^lockstep_master_out\(35),
      R => ex_dbg_pc_hit_i
    );
\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\,
      Q => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.ex_step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => step_continue_hold,
      Q => ex_step_continue_hold,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.force_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      Q => force_stop_cmd_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.force_stop_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0010"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I1 => wb_halted,
      I2 => force_stop_cmd_1,
      I3 => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      I4 => force_stop_i,
      O => \Performance_Debug_Control.force_stop_i_i_1_n_0\
    );
\Performance_Debug_Control.force_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.force_stop_i_i_1_n_0\,
      Q => force_stop_i,
      R => ex_dbg_pc_hit_i
    );
\Performance_Debug_Control.force_stop_overrun_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => force_stop_cmd_1,
      I1 => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      O => p_59_out
    );
\Performance_Debug_Control.force_stop_overrun_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_59_out,
      Q => force_stop_overrun,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.m0_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_piperun_for_ce,
      D => ex_brki_hit,
      Q => m0_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.m0_dbg_hit[0]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => ex_pc_brk,
      I1 => ex_step_continue_hold,
      I2 => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      O => \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\
    );
\Performance_Debug_Control.m0_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_piperun_for_ce,
      D => \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0\,
      Q => \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.normal_stop_cmd_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      Q => normal_stop_cmd_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.normal_stop_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF0010"
    )
        port map (
      I0 => \^performance_debug_control.dbg_state_nohalt_reg_0\,
      I1 => wb_halted,
      I2 => normal_stop_cmd_1,
      I3 => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      I4 => \^normal_stop_i\,
      O => \Performance_Debug_Control.normal_stop_i_i_1_n_0\
    );
\Performance_Debug_Control.normal_stop_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.normal_stop_i_i_1_n_0\,
      Q => \^normal_stop_i\,
      R => ex_dbg_pc_hit_i
    );
\Performance_Debug_Control.step_continue_hold_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0F0E"
    )
        port map (
      I0 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I1 => start_single_step_reg_n_0,
      I2 => of_piperun_for_ce,
      I3 => step_continue_hold,
      O => \Performance_Debug_Control.step_continue_hold_i_1_n_0\
    );
\Performance_Debug_Control.step_continue_hold_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Performance_Debug_Control.step_continue_hold_i_1_n_0\,
      Q => step_continue_hold,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.trig_ack_out_0_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_out_0_n_1,
      Q => \^dbg_trig_ack_out\(1),
      R => '0'
    );
\Performance_Debug_Control.trig_out_0_synced_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_out_0_synced,
      Q => trig_out_0_synced_1,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.wb_brki_hit_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun_for_ce,
      D => m3_brki_hit,
      Q => wb_brki_hit,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.wb_dbg_hit_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_piperun_for_ce,
      D => m3_dbg_hit,
      Q => wb_dbg_hit,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000002"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      I4 => Dbg_Reg_En_2_sn_1,
      O => Instr_Insert_Reg_En
    );
\Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Instr_Insert_Reg_En,
      Q => Instr_Insert_Reg_En_1
    );
\Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => New_Dbg_Instr_TCK,
      Q => New_Dbg_Instr2_TCK
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08000000"
    )
        port map (
      I0 => sel0_2(0),
      I1 => A3,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\,
      I4 => Instr_Insert_Reg_En,
      O => p_100_out
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"1000"
    )
        port map (
      I0 => instr_read_reg(0),
      I1 => instr_read_reg(1),
      I2 => A1,
      I3 => A2,
      O => \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2_n_0\
    );
\Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_100_out,
      Q => New_Dbg_Instr_TCK
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00B8"
    )
        port map (
      I0 => Scan_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Config_Reset,
      I3 => Scan_En,
      O => config_with_scan_reset
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\,
      Q => \^lockstep_master_out\(31)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \^lockstep_master_out\(21)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \^lockstep_master_out\(20)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \^lockstep_master_out\(19)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \^lockstep_master_out\(18)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \^lockstep_master_out\(17)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \^lockstep_master_out\(16)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \^lockstep_master_out\(15)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \^lockstep_master_out\(14)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \^lockstep_master_out\(13)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \^lockstep_master_out\(12)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \^lockstep_master_out\(30)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \^lockstep_master_out\(11)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \^lockstep_master_out\(10)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \^lockstep_master_out\(9)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \^lockstep_master_out\(8)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \^lockstep_master_out\(7)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \^lockstep_master_out\(6)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \^lockstep_master_out\(5)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \^lockstep_master_out\(4)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \^lockstep_master_out\(3)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \^lockstep_master_out\(2)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \^lockstep_master_out\(29)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(1)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \^lockstep_master_out\(0)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \^lockstep_master_out\(28)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \^lockstep_master_out\(27)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \^lockstep_master_out\(26)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \^lockstep_master_out\(25)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \^lockstep_master_out\(24)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \^lockstep_master_out\(23)
    );
\Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => New_Dbg_Instr_TCK,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \^lockstep_master_out\(22)
    );
\Serial_Dbg_Intf.SRL16E_1\: entity work.microblaze_microblaze_0_0_MB_SRL16E
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q_0 => Q_0
    );
\Serial_Dbg_Intf.SRL16E_2\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized1\
     port map (
      Config_Reg_En => Config_Reg_En,
      Data_Read_Reg_En => Data_Read_Reg_En,
      Dbg_Clk => Dbg_Clk,
      Dbg_TDO => Dbg_TDO,
      Dbg_TDO_0 => Dbg_TDO_INST_0_i_2_n_0,
      Dbg_TDO_1 => Dbg_TDO_INST_0_i_3_n_0,
      Dbg_TDO_2(1) => instr_read_reg(0),
      Dbg_TDO_2(0) => instr_read_reg(1),
      Dbg_TDO_INST_0_i_1_0 => \Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I_n_0\,
      Dbg_TDO_INST_0_i_1_1 => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\,
      Instr_Insert_Reg_En => Instr_Insert_Reg_En,
      Q(7 downto 5) => sel0(3 downto 1),
      Q(4) => sel0_2(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q5_out => Q5_out,
      Q6_out => Q6_out,
      Q_0 => Q_0,
      Status_Reg_En => Status_Reg_En,
      \TDO_Data_Reg__31\ => \TDO_Data_Reg__31\
    );
\Serial_Dbg_Intf.SRL16E_3\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized9\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q2_in => Q2_in
    );
\Serial_Dbg_Intf.SRL16E_4\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized11\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q1_in => Q1_in
    );
\Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7\
     port map (
      Dbg_Clk => Dbg_Clk,
      Dbg_TDO_INST_0_i_7 => \Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I_n_0\,
      Q(6 downto 5) => sel0(2 downto 1),
      Q(4) => sel0_2(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      \Serial_Dbg_Intf.shift_count_reg[4]\ => \Serial_Dbg_Intf.The_Base_Vector[1].SRL16E_Base_Vector_n_0\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Base_Vector[2].SRL16E_Base_Vector\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7_2\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      tdo_config_word1_0 => tdo_config_word1_0
    );
\Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized3\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q6_out => Q6_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized5\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q5_out => Q5_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[3].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7_3\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q4_out => Q4_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7_4\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(5) => sel0(1),
      Q(4) => sel0_2(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q1_out => Q1_out,
      Q2_out => Q2_out,
      Q4_out => Q4_out,
      \Serial_Dbg_Intf.shift_count_reg[5]\ => \Serial_Dbg_Intf.The_Cache_Addresses[4].SRL16E_Cache_I_n_0\
    );
\Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized3_5\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q2_out => Q2_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized5_6\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q1_out => Q1_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[7].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7_7\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q0_out => Q0_out
    );
\Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I\: entity work.\microblaze_microblaze_0_0_MB_SRL16E__parameterized7_8\
     port map (
      Dbg_Clk => Dbg_Clk,
      Q(5) => sel0(1),
      Q(4) => sel0_2(0),
      Q(3) => A3,
      Q(2) => A2,
      Q(1) => A1,
      Q(0) => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      Q0_out => Q0_out,
      Q1_in => Q1_in,
      Q2_in => Q2_in,
      \Serial_Dbg_Intf.shift_count_reg[5]\ => \Serial_Dbg_Intf.The_Cache_Addresses[8].SRL16E_Cache_I_n_0\
    );
\Serial_Dbg_Intf.capture_1_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_Capture,
      Q => capture_1
    );
\Serial_Dbg_Intf.command_reg[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => Dbg_Reg_En(4),
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(7),
      I4 => Dbg_Reg_En_2_sn_1,
      O => Command_Reg_En
    );
\Serial_Dbg_Intf.command_reg[0]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F3E2"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => command_reg_clear,
      I4 => Scan_En,
      O => command_reg_rst33_out
    );
\Serial_Dbg_Intf.command_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst33_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => command_reg(0)
    );
\Serial_Dbg_Intf.command_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Command_Reg_En,
      CLR => command_reg_rst33_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => command_reg(1)
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F3E2"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      I4 => Scan_En,
      O => continue_from_brk_rst34_out
    );
\Serial_Dbg_Intf.continue_from_brk_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => continue_from_brk_rst34_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => continue_from_brk_TClk
    );
\Serial_Dbg_Intf.continue_from_brk_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_11_out,
      Q => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.control_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.control_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.control_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.control_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.control_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => Q(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(0),
      Q => data_read_reg(0)
    );
\Serial_Dbg_Intf.data_read_reg_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(10),
      Q => data_read_reg(10)
    );
\Serial_Dbg_Intf.data_read_reg_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(11),
      Q => data_read_reg(11)
    );
\Serial_Dbg_Intf.data_read_reg_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(12),
      Q => data_read_reg(12)
    );
\Serial_Dbg_Intf.data_read_reg_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(13),
      Q => data_read_reg(13)
    );
\Serial_Dbg_Intf.data_read_reg_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(14),
      Q => data_read_reg(14)
    );
\Serial_Dbg_Intf.data_read_reg_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(15),
      Q => data_read_reg(15)
    );
\Serial_Dbg_Intf.data_read_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(16),
      Q => data_read_reg(16)
    );
\Serial_Dbg_Intf.data_read_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(17),
      Q => data_read_reg(17)
    );
\Serial_Dbg_Intf.data_read_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(18),
      Q => data_read_reg(18)
    );
\Serial_Dbg_Intf.data_read_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(19),
      Q => data_read_reg(19)
    );
\Serial_Dbg_Intf.data_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(1),
      Q => data_read_reg(1)
    );
\Serial_Dbg_Intf.data_read_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(20),
      Q => data_read_reg(20)
    );
\Serial_Dbg_Intf.data_read_reg_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(21),
      Q => data_read_reg(21)
    );
\Serial_Dbg_Intf.data_read_reg_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(22),
      Q => data_read_reg(22)
    );
\Serial_Dbg_Intf.data_read_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(23),
      Q => data_read_reg(23)
    );
\Serial_Dbg_Intf.data_read_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(24),
      Q => data_read_reg(24)
    );
\Serial_Dbg_Intf.data_read_reg_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(25),
      Q => data_read_reg(25)
    );
\Serial_Dbg_Intf.data_read_reg_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(26),
      Q => data_read_reg(26)
    );
\Serial_Dbg_Intf.data_read_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(27),
      Q => data_read_reg(27)
    );
\Serial_Dbg_Intf.data_read_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(28),
      Q => data_read_reg(28)
    );
\Serial_Dbg_Intf.data_read_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(29),
      Q => data_read_reg(29)
    );
\Serial_Dbg_Intf.data_read_reg_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(2),
      Q => data_read_reg(2)
    );
\Serial_Dbg_Intf.data_read_reg_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(30),
      Q => data_read_reg(30)
    );
\Serial_Dbg_Intf.data_read_reg_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(31),
      Q => data_read_reg(31)
    );
\Serial_Dbg_Intf.data_read_reg_reg[32]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(32),
      Q => data_read_reg(32)
    );
\Serial_Dbg_Intf.data_read_reg_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(3),
      Q => data_read_reg(3)
    );
\Serial_Dbg_Intf.data_read_reg_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(4),
      Q => data_read_reg(4)
    );
\Serial_Dbg_Intf.data_read_reg_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(5),
      Q => data_read_reg(5)
    );
\Serial_Dbg_Intf.data_read_reg_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(6),
      Q => data_read_reg(6)
    );
\Serial_Dbg_Intf.data_read_reg_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(7),
      Q => data_read_reg(7)
    );
\Serial_Dbg_Intf.data_read_reg_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(8),
      Q => data_read_reg(8)
    );
\Serial_Dbg_Intf.data_read_reg_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => data_rd_reg(9),
      Q => data_read_reg(9)
    );
\Serial_Dbg_Intf.dbg_disable_interrupt_i_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(9),
      Q => \^lockstep_master_out\(36),
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000010"
    )
        port map (
      I0 => Dbg_Reg_En(4),
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      I4 => Dbg_Reg_En_2_sn_1,
      O => Control_Reg_En
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000E2E2E2F3"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => \^sleep_out\,
      I4 => Sleep_Decode,
      I5 => Scan_En,
      O => no_sleeping1_out
    );
\Serial_Dbg_Intf.dbg_wakeup_i_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFFE"
    )
        port map (
      I0 => Dbg_Reg_En(2),
      I1 => Dbg_Reg_En(1),
      I2 => Dbg_Reg_En(0),
      I3 => Dbg_Reg_En(3),
      O => Dbg_Reg_En_2_sn_1
    );
\Serial_Dbg_Intf.dbg_wakeup_i_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => no_sleeping1_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \^lockstep_master_out\(34)
    );
\Serial_Dbg_Intf.force_stop_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F3E2"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      I4 => Scan_En,
      O => force_stop_cmd_rst30_out
    );
\Serial_Dbg_Intf.force_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => force_stop_cmd_rst30_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => force_stop_TClk
    );
\Serial_Dbg_Intf.force_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_94_out,
      Q => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.if_debug_ready_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_79_out,
      Q => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.instr_read_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => instr_rd_reg(0),
      Q => instr_read_reg(0)
    );
\Serial_Dbg_Intf.instr_read_reg_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => instr_rd_reg(1),
      Q => instr_read_reg(1)
    );
\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Instr_Insert_Reg_En_1,
      Q => \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.normal_stop_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F3E2"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      I4 => Scan_En,
      O => normal_stop_cmd_rst29_out
    );
\Serial_Dbg_Intf.normal_stop_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => normal_stop_cmd_rst29_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => normal_stop_TClk
    );
\Serial_Dbg_Intf.normal_stop_cmd_i_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_97_out,
      Q => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.read_register_MSR_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_89_out,
      Q => read_register_MSR,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.read_register_PC_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => p_86_out,
      Q => read_register_PC,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(0),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(1),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(2),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(3),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(4),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(5),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(6),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(7),
      Q => p_0_in74_in,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sample_synced_1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sample_synced(8),
      Q => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.shift_count[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => Dbg_Shift,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => p_0_in(0)
    );
\Serial_Dbg_Intf.shift_count[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"60"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I1 => A1,
      I2 => Dbg_Shift,
      O => p_0_in(1)
    );
\Serial_Dbg_Intf.shift_count[2]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7080"
    )
        port map (
      I0 => A1,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => Dbg_Shift,
      I3 => A2,
      O => p_0_in(2)
    );
\Serial_Dbg_Intf.shift_count[3]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"7F008000"
    )
        port map (
      I0 => A2,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I2 => A1,
      I3 => Dbg_Shift,
      I4 => A3,
      O => p_0_in(3)
    );
\Serial_Dbg_Intf.shift_count[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFF000080000000"
    )
        port map (
      I0 => A3,
      I1 => A1,
      I2 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I3 => A2,
      I4 => Dbg_Shift,
      I5 => sel0_2(0),
      O => p_0_in(4)
    );
\Serial_Dbg_Intf.shift_count[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"7FFF000080000000"
    )
        port map (
      I0 => sel0_2(0),
      I1 => A2,
      I2 => \Serial_Dbg_Intf.shift_count[5]_i_2_n_0\,
      I3 => A3,
      I4 => Dbg_Shift,
      I5 => sel0(1),
      O => p_0_in(5)
    );
\Serial_Dbg_Intf.shift_count[5]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => A1,
      I1 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      O => \Serial_Dbg_Intf.shift_count[5]_i_2_n_0\
    );
\Serial_Dbg_Intf.shift_count[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"48"
    )
        port map (
      I0 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I1 => Dbg_Shift,
      I2 => sel0(2),
      O => p_0_in(6)
    );
\Serial_Dbg_Intf.shift_count[7]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"7080"
    )
        port map (
      I0 => sel0(2),
      I1 => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\,
      I2 => Dbg_Shift,
      I3 => sel0(3),
      O => p_0_in(7)
    );
\Serial_Dbg_Intf.shift_count[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"8000000000000000"
    )
        port map (
      I0 => sel0(1),
      I1 => A3,
      I2 => A1,
      I3 => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\,
      I4 => A2,
      I5 => sel0_2(0),
      O => \Serial_Dbg_Intf.shift_count[7]_i_2_n_0\
    );
\Serial_Dbg_Intf.shift_count_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(0),
      Q => \Serial_Dbg_Intf.shift_count_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.shift_count_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(1),
      Q => A1
    );
\Serial_Dbg_Intf.shift_count_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(2),
      Q => A2
    );
\Serial_Dbg_Intf.shift_count_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(3),
      Q => A3
    );
\Serial_Dbg_Intf.shift_count_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(4),
      Q => sel0_2(0)
    );
\Serial_Dbg_Intf.shift_count_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(5),
      Q => sel0(1)
    );
\Serial_Dbg_Intf.shift_count_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(6),
      Q => sel0(2)
    );
\Serial_Dbg_Intf.shift_count_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => p_0_in(7),
      Q => sel0(3)
    );
\Serial_Dbg_Intf.shift_datain_reg[10]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\
    );
\Serial_Dbg_Intf.shift_datain_reg[11]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[11]\
    );
\Serial_Dbg_Intf.shift_datain_reg[12]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[12]\
    );
\Serial_Dbg_Intf.shift_datain_reg[13]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[13]\
    );
\Serial_Dbg_Intf.shift_datain_reg[14]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[14]\
    );
\Serial_Dbg_Intf.shift_datain_reg[15]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[15]\
    );
\Serial_Dbg_Intf.shift_datain_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.shift_datain_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.shift_datain_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.shift_datain_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.shift_datain_reg[1]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[1]\
    );
\Serial_Dbg_Intf.shift_datain_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.shift_datain_reg[21]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[21]\
    );
\Serial_Dbg_Intf.shift_datain_reg[22]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[22]\
    );
\Serial_Dbg_Intf.shift_datain_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.shift_datain_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.shift_datain_reg[25]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[25]\
    );
\Serial_Dbg_Intf.shift_datain_reg[26]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[26]\
    );
\Serial_Dbg_Intf.shift_datain_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.shift_datain_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.shift_datain_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.shift_datain_reg[2]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[2]\
    );
\Serial_Dbg_Intf.shift_datain_reg[30]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[30]\
    );
\Serial_Dbg_Intf.shift_datain_reg[31]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => Dbg_TDI,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[31]\
    );
\Serial_Dbg_Intf.shift_datain_reg[3]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[3]\
    );
\Serial_Dbg_Intf.shift_datain_reg[4]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[4]\
    );
\Serial_Dbg_Intf.shift_datain_reg[5]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[5]\
    );
\Serial_Dbg_Intf.shift_datain_reg[6]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[6]\
    );
\Serial_Dbg_Intf.shift_datain_reg[7]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[7]\
    );
\Serial_Dbg_Intf.shift_datain_reg[8]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[8]\
    );
\Serial_Dbg_Intf.shift_datain_reg[9]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[10]\,
      Q => \Serial_Dbg_Intf.shift_datain_reg_n_0_[9]\
    );
\Serial_Dbg_Intf.single_Step_TClk_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000F3E2"
    )
        port map (
      I0 => Config_Reset,
      I1 => Scan_Reset_Sel,
      I2 => Scan_Reset,
      I3 => start_single_step_reg_n_0,
      I4 => Scan_En,
      O => start_single_step_rst31_out
    );
\Serial_Dbg_Intf.single_Step_TClk_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Update,
      CE => Control_Reg_En,
      CLR => start_single_step_rst31_out,
      D => \Serial_Dbg_Intf.shift_datain_reg_n_0_[23]\,
      Q => single_Step_TClk
    );
\Serial_Dbg_Intf.start_single_cmd_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      D => p_91_out,
      Q => start_single_cmd,
      R => reset_bool_for_rst
    );
\Serial_Dbg_Intf.status_reg_reg[0]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sync,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[0]\
    );
\Serial_Dbg_Intf.status_reg_reg[16]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[16]\
    );
\Serial_Dbg_Intf.status_reg_reg[17]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => reset_bool_for_rst,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[17]\
    );
\Serial_Dbg_Intf.status_reg_reg[18]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[18]\
    );
\Serial_Dbg_Intf.status_reg_reg[19]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => delay_slot_instr,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[19]\
    );
\Serial_Dbg_Intf.status_reg_reg[20]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => Full_32_bit_1,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[20]\
    );
\Serial_Dbg_Intf.status_reg_reg[23]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => dbg_brki_hit_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[23]\
    );
\Serial_Dbg_Intf.status_reg_reg[24]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => running_clock_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[24]\
    );
\Serial_Dbg_Intf.status_reg_reg[27]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => sleep_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[27]\
    );
\Serial_Dbg_Intf.status_reg_reg[28]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => pause_synced,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[28]\
    );
\Serial_Dbg_Intf.status_reg_reg[29]\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => Dbg_Capture,
      CLR => config_with_scan_reset,
      D => unchanged,
      Q => \Serial_Dbg_Intf.status_reg_reg_n_0_[29]\
    );
\Serial_Dbg_Intf.sync_dbg_brk_hit\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2\
     port map (
      D(0) => dbg_brki_hit_synced,
      Dbg_Clk => Dbg_Clk,
      async_reset => async_reset,
      dbg_brki_hit => dbg_brki_hit
    );
\Serial_Dbg_Intf.sync_dbg_hit\: entity work.microblaze_microblaze_0_0_mb_sync_vec
     port map (
      Config_Reset => Config_Reset,
      D(0) => sync,
      Dbg_Clk => Dbg_Clk,
      Raw => Raw,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      async_reset => async_reset
    );
\Serial_Dbg_Intf.sync_dbg_wakeup\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized4\
     port map (
      Clk => Clk,
      LOCKSTEP_Master_Out(1 downto 0) => \^lockstep_master_out\(34 downto 33),
      \Serial_Dbg_Intf.force_stop_cmd_i_reg\ => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      dbg_continue_i_reg => \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0\,
      dbg_continue_i_reg_0 => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      dbg_continue_i_reg_1 => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      dbg_continue_i_reg_2 => \Serial_Dbg_Intf.force_stop_cmd_i_reg_n_0\,
      dbg_continue_i_reg_3 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      if0_pause => if0_pause,
      start_single_cmd => start_single_cmd,
      sync_reset => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sync_pause\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2_9\
     port map (
      D(0) => pause_synced,
      Dbg_Clk => Dbg_Clk,
      Pause => Pause,
      async_reset => async_reset
    );
\Serial_Dbg_Intf.sync_running_clock\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2_10\
     port map (
      D(0) => running_clock_synced,
      Dbg_Clk => Dbg_Clk,
      async_reset => async_reset,
      running_clock => running_clock
    );
\Serial_Dbg_Intf.sync_sample\: entity work.\microblaze_microblaze_0_0_mb_sync_vec__parameterized1\
     port map (
      Clk => Clk,
      D(0) => normal_stop_TClk,
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(0),
      Q(8) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0]\,
      Q(7) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1]\,
      Q(6) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2]\,
      Q(5) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3]\,
      Q(4) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4]\,
      Q(3) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[5]\,
      Q(2) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6]\,
      Q(1) => p_0_in74_in,
      Q(0) => \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[8]\,
      \Serial_Dbg_Intf.trig_ack_out_1_reg\ => \Serial_Dbg_Intf.sync_sample_n_11\,
      \Synchronize.use_sync_reset.sync_reg[1]\(0) => force_stop_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_0\(0) => single_Step_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_1\(1) => command_reg(0),
      \Synchronize.use_sync_reset.sync_reg[1]_1\(0) => command_reg(1),
      \Synchronize.use_sync_reset.sync_reg[1]_2\(0) => continue_from_brk_TClk,
      \Synchronize.use_sync_reset.sync_reg[1]_3\(0) => New_Dbg_Instr2_TCK,
      \Synchronize.use_sync_reset.sync_reg[1]_4\(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[3]\,
      \Use_Async_Reset.sync_reset_reg\ => \Serial_Dbg_Intf.sync_sample_n_12\,
      p_11_out => p_11_out,
      p_79_out => p_79_out,
      p_86_out => p_86_out,
      p_89_out => p_89_out,
      p_91_out => p_91_out,
      p_94_out => p_94_out,
      p_97_out => p_97_out,
      sample_synced(0 to 9) => sample_synced(0 to 9),
      sync_reset => reset_bool_for_rst
    );
\Serial_Dbg_Intf.sync_sleep\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2_11\
     port map (
      D(0) => sleep_synced,
      Dbg_Clk => Dbg_Clk,
      Sleep => Sleep,
      async_reset => async_reset
    );
\Serial_Dbg_Intf.sync_stop_CPU\: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized2_12\
     port map (
      D(0) => \Serial_Dbg_Intf.sync_stop_CPU_n_0\,
      Dbg_Clk => Dbg_Clk,
      \Single_Synchronize.use_async_reset.sync_reg_0\ => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      async_reset => async_reset
    );
\Serial_Dbg_Intf.trig_ack_out_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_11\,
      Q => \^dbg_trig_ack_out\(0),
      R => '0'
    );
\Serial_Dbg_Intf.trig_in_1_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_sample_n_12\,
      Q => \^dbg_trig_in\(0),
      R => '0'
    );
\Serial_Dbg_Intf.unchanged_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF00000040"
    )
        port map (
      I0 => Dbg_Reg_En_2_sn_1,
      I1 => Dbg_Reg_En(6),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(5),
      I4 => Dbg_Reg_En(4),
      I5 => unchanged,
      O => \Serial_Dbg_Intf.unchanged_i_1_n_0\
    );
\Serial_Dbg_Intf.unchanged_reg\: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Dbg_Clk,
      CE => '1',
      CLR => config_with_scan_reset,
      D => \Serial_Dbg_Intf.unchanged_i_1_n_0\,
      Q => unchanged
    );
\Using_FPGA.Native_i_1__102\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      O => \Serial_Dbg_Intf.if_debug_ready_i_reg_1\
    );
\Using_FPGA.Native_i_1__13\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^lockstep_master_out\(35),
      I1 => ex_Interrupt,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\
    );
\Using_FPGA.Native_i_1__33\: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      O => S
    );
\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I\: entity work.microblaze_microblaze_0_0_address_hit
     port map (
      Address(0 to 31) => Address(0 to 31),
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_TDI => Dbg_TDI,
      Hit => \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3\ => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0\ => \Performance_Debug_Control.dbg_stop_i_reg_n_0\,
      Q(0) => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      force_stop_i => force_stop_i,
      single_Step_N => \^single_step_n\,
      single_Step_N_reg => single_Step_N_reg_0
    );
command_reg_clear_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => read_register_PC_1,
      I1 => \^read_register_msr_1\,
      O => command_reg_clear_i_1_n_0
    );
command_reg_clear_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => command_reg_clear_i_1_n_0,
      Q => command_reg_clear,
      R => reset_bool_for_rst
    );
\data_rd_reg[0]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FEEE"
    )
        port map (
      I0 => read_register_PC_1,
      I1 => \^read_register_msr_1\,
      I2 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I3 => wb_gpr_wr_dbg,
      O => \data_rd_reg[0]_i_1_n_0\
    );
\data_rd_reg[32]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F2AAF3FFF2AAF000"
    )
        port map (
      I0 => \data_rd_reg[32]_i_2_n_0\,
      I1 => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      I2 => wb_gpr_wr_dbg,
      I3 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I4 => \data_rd_reg[32]_i_3_n_0\,
      I5 => data_rd_reg(32),
      O => \data_rd_reg[32]_i_1_n_0\
    );
\data_rd_reg[32]_i_2\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => \^performance_debug_control.dbg_freeze_nohalt_reg_0\,
      I1 => wb_pc_valid,
      I2 => \^read_register_msr_1\,
      O => \data_rd_reg[32]_i_2_n_0\
    );
\data_rd_reg[32]_i_3\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^read_register_msr_1\,
      I1 => read_register_PC_1,
      O => \data_rd_reg[32]_i_3_n_0\
    );
\data_rd_reg_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(31),
      Q => data_rd_reg(0),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(21),
      Q => data_rd_reg(10),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(20),
      Q => data_rd_reg(11),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(19),
      Q => data_rd_reg(12),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(18),
      Q => data_rd_reg(13),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(17),
      Q => data_rd_reg(14),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(16),
      Q => data_rd_reg(15),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(15),
      Q => data_rd_reg(16),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(14),
      Q => data_rd_reg(17),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(13),
      Q => data_rd_reg(18),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(12),
      Q => data_rd_reg(19),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(30),
      Q => data_rd_reg(1),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(11),
      Q => data_rd_reg(20),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(10),
      Q => data_rd_reg(21),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(9),
      Q => data_rd_reg(22),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(8),
      Q => data_rd_reg(23),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(7),
      Q => data_rd_reg(24),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(6),
      Q => data_rd_reg(25),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(5),
      Q => data_rd_reg(26),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(4),
      Q => data_rd_reg(27),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(3),
      Q => data_rd_reg(28),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(2),
      Q => data_rd_reg(29),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(29),
      Q => data_rd_reg(2),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(1),
      Q => data_rd_reg(30),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(0),
      Q => data_rd_reg(31),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \data_rd_reg[32]_i_1_n_0\,
      Q => data_rd_reg(32),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(28),
      Q => data_rd_reg(3),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(27),
      Q => data_rd_reg(4),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(26),
      Q => data_rd_reg(5),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(25),
      Q => data_rd_reg(6),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(24),
      Q => data_rd_reg(7),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(23),
      Q => data_rd_reg(8),
      R => reset_bool_for_rst
    );
\data_rd_reg_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \data_rd_reg[0]_i_1_n_0\,
      D => \data_rd_reg_reg[0]_0\(22),
      Q => data_rd_reg(9),
      R => reset_bool_for_rst
    );
dbg_continue_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Serial_Dbg_Intf.sync_dbg_wakeup_n_0\,
      Q => \^lockstep_master_out\(33),
      R => reset_bool_for_rst
    );
dbg_halt_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4400440F44004400"
    )
        port map (
      I0 => Reset_Mode(1),
      I1 => Reset_Mode(0),
      I2 => \step_continue__0\,
      I3 => reset_bool_for_rst,
      I4 => \Serial_Dbg_Intf.control_reg_reg_n_0_[0]\,
      I5 => \^dbg_halt_reset_mode_reg_0\,
      O => dbg_halt_reset_mode_i_1_n_0
    );
dbg_halt_reset_mode_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => start_single_step_reg_n_0,
      I1 => \Serial_Dbg_Intf.continue_from_brk_reg_n_0\,
      O => \step_continue__0\
    );
dbg_halt_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => dbg_halt_reset_mode_i_1_n_0,
      Q => \^dbg_halt_reset_mode_reg_0\,
      R => '0'
    );
delay_slot_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => wb_halted,
      D => wb_delay_slot,
      Q => delay_slot_instr,
      R => reset_bool_for_rst
    );
exception_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4055400000000000"
    )
        port map (
      I0 => start_dbg_exec_reg_n_0,
      I1 => \^performance_debug_control.dbg_stop_instr_fetch_nohalt_reg_0\,
      I2 => exception_reg_0(0),
      I3 => exception_reg_0(1),
      I4 => instr_rd_reg(1),
      I5 => exception_i_2_n_0,
      O => exception_i_1_n_0
    );
exception_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => force_stop_overrun,
      I1 => reset_bool_for_rst,
      O => exception_i_2_n_0
    );
exception_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => exception_i_1_n_0,
      Q => instr_rd_reg(1),
      R => '0'
    );
executing_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"11001110"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => force_stop_overrun,
      I2 => instr_rd_reg(0),
      I3 => start_dbg_exec_reg_n_0,
      I4 => exception_reg_0(1),
      O => executing_i_1_n_0
    );
executing_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => executing_i_1_n_0,
      Q => instr_rd_reg(0),
      R => '0'
    );
mb_halted_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => D(0),
      Q => mb_halted_1,
      R => reset_bool_for_rst
    );
read_register_MSR_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_MSR,
      Q => \^read_register_msr_1\,
      R => reset_bool_for_rst
    );
read_register_PC_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => read_register_PC,
      Q => read_register_PC_1,
      R => reset_bool_for_rst
    );
running_clock_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00CA"
    )
        port map (
      I0 => capture_1,
      I1 => Scan_Reset,
      I2 => Scan_Reset_Sel,
      I3 => Scan_En,
      O => running_clock_rst19_out
    );
running_clock_reg: unisim.vcomponents.FDCE
    generic map(
      INIT => '0'
    )
        port map (
      C => Clk,
      CE => '1',
      CLR => running_clock_rst19_out,
      D => '1',
      Q => running_clock
    );
saved_reset_mode_dbg_halt_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"2F20"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => Reset_Mode(1),
      I2 => reset_bool_for_rst,
      I3 => saved_reset_mode_dbg_halt,
      O => saved_reset_mode_dbg_halt_i_1_n_0
    );
saved_reset_mode_dbg_halt_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_dbg_halt_i_1_n_0,
      Q => saved_reset_mode_dbg_halt,
      R => '0'
    );
saved_reset_mode_sleep_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0ACA"
    )
        port map (
      I0 => \^sleep_out\,
      I1 => Reset_Mode(1),
      I2 => reset_bool_for_rst,
      I3 => Reset_Mode(0),
      O => saved_reset_mode_sleep_i_1_n_0
    );
saved_reset_mode_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => saved_reset_mode_sleep_i_1_n_0,
      Q => saved_reset_mode_sleep,
      R => '0'
    );
single_Step_N_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FB"
    )
        port map (
      I0 => single_step_count(1),
      I1 => start_single_step_reg_n_0,
      I2 => single_step_count(0),
      O => single_Step_N_i_1_n_0
    );
single_Step_N_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_piperun_for_ce,
      D => single_Step_N_i_1_n_0,
      Q => \^single_step_n\,
      S => reset_bool_for_rst
    );
\single_step_count[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"CCAF33A0"
    )
        port map (
      I0 => \Serial_Dbg_Intf.control_reg_reg_n_0_[4]\,
      I1 => single_step_count(1),
      I2 => start_single_cmd,
      I3 => of_piperun_for_ce,
      I4 => single_step_count(0),
      O => \single_step_count[0]_i_1_n_0\
    );
\single_step_count[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0BF8"
    )
        port map (
      I0 => \Serial_Dbg_Intf.control_reg_reg_n_0_[5]\,
      I1 => start_single_cmd,
      I2 => of_piperun_for_ce,
      I3 => single_step_count(1),
      O => \single_step_count[1]_i_1_n_0\
    );
\single_step_count_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[0]_i_1_n_0\,
      Q => single_step_count(0),
      R => reset_bool_for_rst
    );
\single_step_count_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \single_step_count[1]_i_1_n_0\,
      Q => single_step_count(1),
      R => reset_bool_for_rst
    );
sleep_reset_mode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAABBBBBAAA88888"
    )
        port map (
      I0 => sleep_reset_mode,
      I1 => reset_bool_for_rst,
      I2 => wakeup_i(1),
      I3 => wakeup_i(0),
      I4 => saved_reset_mode_sleep,
      I5 => \^sleep_out\,
      O => sleep_reset_mode_i_1_n_0
    );
sleep_reset_mode_i_2: unisim.vcomponents.LUT3
    generic map(
      INIT => X"40"
    )
        port map (
      I0 => Reset_Mode(0),
      I1 => reset_bool_for_rst,
      I2 => Reset_Mode(1),
      O => sleep_reset_mode
    );
sleep_reset_mode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sleep_reset_mode_i_1_n_0,
      Q => \^sleep_out\,
      R => '0'
    );
start_dbg_exec_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^serial_dbg_intf.if_debug_ready_i_reg_0\,
      Q => start_dbg_exec_reg_n_0,
      R => reset_bool_for_rst
    );
start_single_step_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3322302233223322"
    )
        port map (
      I0 => start_single_cmd,
      I1 => reset_bool_for_rst,
      I2 => single_step_count(1),
      I3 => start_single_step_reg_n_0,
      I4 => single_step_count(0),
      I5 => of_piperun_for_ce,
      O => start_single_step_i_1_n_0
    );
start_single_step_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => start_single_step_i_1_n_0,
      Q => start_single_step_reg_n_0,
      R => '0'
    );
sync_trig_ack_in_0: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized4_13\
     port map (
      Clk => Clk,
      D(0) => D(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      mb_halted_1 => mb_halted_1,
      sync_reset => reset_bool_for_rst,
      trig_ack_in_0_synced => trig_ack_in_0_synced,
      trig_ack_in_0_synced_1 => trig_ack_in_0_synced_1,
      trig_in_0_reg => sync_trig_ack_in_0_n_1
    );
sync_trig_out_0: entity work.\microblaze_microblaze_0_0_mb_sync_bit__parameterized4_14\
     port map (
      Clk => Clk,
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      \Performance_Debug_Control.trig_ack_out_0_reg\ => sync_trig_out_0_n_1,
      sync_reset => reset_bool_for_rst,
      trig_out_0_synced => trig_out_0_synced,
      trig_out_0_synced_1 => trig_out_0_synced_1
    );
trig_ack_in_0_synced_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trig_ack_in_0_synced,
      Q => trig_ack_in_0_synced_1,
      R => reset_bool_for_rst
    );
trig_in_0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => sync_trig_ack_in_0_n_1,
      Q => \^dbg_trig_in\(1),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_PreFetch_Buffer_ff is
  port (
    if4_sel_input : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_raw_valid : out STD_LOGIC;
    Prefetch_Buffer_Full : out STD_LOGIC;
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \cur_data_i_reg[27]\ : out STD_LOGIC;
    ex_jump_nodelay_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    ex_jump_nodelay_reg_0 : out STD_LOGIC;
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \cur_data_i_reg[28]\ : out STD_LOGIC;
    ex_jump_nodelay_reg_1 : out STD_LOGIC;
    \cur_data_i_reg[10]\ : out STD_LOGIC;
    \cur_data_i_reg[28]_0\ : out STD_LOGIC;
    \cur_data_i_reg[26]_0\ : out STD_LOGIC;
    \cur_data_i_reg[26]_1\ : out STD_LOGIC;
    \cur_data_i_reg[26]_2\ : out STD_LOGIC;
    \cur_data_i_reg[26]_3\ : out STD_LOGIC;
    \cur_data_i_reg[26]_4\ : out STD_LOGIC;
    of_ex_complete_in_later_stage : out STD_LOGIC;
    of_m0_complete_in_later_stage : out STD_LOGIC;
    if4_pre_buffer_addr : out STD_LOGIC_VECTOR ( 0 to 0 );
    \cur_data_i_reg[1]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    \wb_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    of_op3_sel : out STD_LOGIC_VECTOR ( 0 to 0 );
    \cur_data_i_reg[1]_0\ : out STD_LOGIC;
    \cur_data_i_reg[0]\ : out STD_LOGIC;
    \cur_data_i_reg[26]_5\ : out STD_LOGIC;
    \cur_data_i_reg[6]\ : out STD_LOGIC;
    \cur_data_i_reg[6]_0\ : out STD_LOGIC;
    of_m1_complete_in_later_stage : out STD_LOGIC;
    of_op1_sel_spr_pc : out STD_LOGIC;
    ex_move_to_MSR_instr35_out : out STD_LOGIC;
    in0 : out STD_LOGIC;
    of_gpr_write_dbg : out STD_LOGIC;
    \cur_data_i_reg[28]_1\ : out STD_LOGIC;
    ex_MSR_set_decode : out STD_LOGIC;
    ex_MSR_clear_decode : out STD_LOGIC;
    ex_branch_with_delayslot0 : out STD_LOGIC;
    ex_jump_nodelay0 : out STD_LOGIC;
    ex_atomic_instruction_pair0 : out STD_LOGIC;
    \cur_data_i_reg[31]\ : out STD_LOGIC;
    of_doublet_access : out STD_LOGIC;
    EX_Pattern_Cmp_Sel7_out : out STD_LOGIC;
    \cur_data_i_reg[7]\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    ex_set_bip : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 1 downto 0 );
    force12_out : out STD_LOGIC;
    use_Reg_Neg_S3_out : out STD_LOGIC;
    force_Val10_out : out STD_LOGIC;
    use_Reg_Neg_DI1_out : out STD_LOGIC;
    ex_op1_cmp_eq1 : out STD_LOGIC;
    ex_op1_cmp_eq : out STD_LOGIC;
    ex_op1_cmp_eq_n7_out : out STD_LOGIC;
    \cur_data_i_reg[5]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_load_shift_carry0 : out STD_LOGIC;
    \cur_data_i_reg[5]_0\ : out STD_LOGIC;
    ex_databus_read_i0 : out STD_LOGIC;
    ex_databus_exclusive_i0 : out STD_LOGIC;
    p_104_in : out STD_LOGIC;
    S : out STD_LOGIC;
    m3_is_div_instr_i_reg : out STD_LOGIC;
    of_is_div_instr : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    of_byte_access : out STD_LOGIC;
    \cur_data_i_reg[31]_0\ : out STD_LOGIC;
    ex_mbar_is_sleep0 : out STD_LOGIC;
    EX_CMP_Op12_out : out STD_LOGIC;
    EX_Unsigned_Op11_out : out STD_LOGIC;
    ex_load_alu_carry2_out : out STD_LOGIC;
    EX_Use_Carry10_out : out STD_LOGIC;
    EX_Bit_Extract0 : out STD_LOGIC;
    of_is_bsifi : out STD_LOGIC;
    OF_Use_Op_B : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    S_0 : out STD_LOGIC;
    S_1 : out STD_LOGIC;
    S_2 : out STD_LOGIC;
    S_3 : out STD_LOGIC;
    S_4 : out STD_LOGIC;
    S_5 : out STD_LOGIC;
    S_6 : out STD_LOGIC;
    S_7 : out STD_LOGIC;
    S_8 : out STD_LOGIC;
    S_9 : out STD_LOGIC;
    S_10 : out STD_LOGIC;
    S_11 : out STD_LOGIC;
    S_12 : out STD_LOGIC;
    S_13 : out STD_LOGIC;
    S_14 : out STD_LOGIC;
    \cur_data_i_reg[30]\ : out STD_LOGIC;
    \cur_data_i_reg[8]\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \cur_data_i_reg[3]\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]_0\ : out STD_LOGIC;
    \cur_data_i_reg[28]_2\ : out STD_LOGIC;
    \cur_data_i_reg[28]_3\ : out STD_LOGIC;
    \cur_data_i_reg[28]_4\ : out STD_LOGIC;
    \cur_data_i_reg[28]_5\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    \m0_gpr_write_addr_reg[2]_1\ : out STD_LOGIC;
    \m1_gpr_write_addr_reg[2]_1\ : out STD_LOGIC;
    \m2_gpr_write_addr_reg[2]_1\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[2]_1\ : out STD_LOGIC;
    \cur_data_i_reg[26]_6\ : out STD_LOGIC;
    \cur_data_i_reg[31]_1\ : out STD_LOGIC;
    \cur_data_i_reg[26]_7\ : out STD_LOGIC;
    \cur_data_i_reg[31]_2\ : out STD_LOGIC;
    \cur_data_i_reg[26]_8\ : out STD_LOGIC;
    \cur_data_i_reg[31]_3\ : out STD_LOGIC;
    \cur_data_i_reg[26]_9\ : out STD_LOGIC;
    \cur_data_i_reg[31]_4\ : out STD_LOGIC;
    EX_CLZ_Instr_reg : out STD_LOGIC;
    m2_m1_sel_res_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_6\ : out STD_LOGIC;
    \EX_Op3[0]_i_7\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[0]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[2]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[5]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[8]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[9]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[12]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[13]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[14]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[16]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[18]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[21]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[25]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg : out STD_LOGIC;
    m2_m1_sel_res_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2[0]_i_6\ : out STD_LOGIC;
    \EX_Op2[0]_i_7\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[20]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[17]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[1]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[3]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[4]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[6]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[7]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[10]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[11]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[15]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_0 : out STD_LOGIC;
    \cur_data_i_reg[31]_5\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \m2_M1_Result_i_reg[29]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Branch_CMP_Op1[29]_i_3\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3\ : out STD_LOGIC;
    \cur_data_i_reg[3]_0\ : out STD_LOGIC;
    \cur_data_i_reg[4]\ : out STD_LOGIC;
    \cur_data_i_reg[5]_1\ : out STD_LOGIC;
    \cur_data_i_reg[7]_0\ : out STD_LOGIC;
    \cur_data_i_reg[8]_0\ : out STD_LOGIC;
    \cur_data_i_reg[9]\ : out STD_LOGIC;
    \cur_data_i_reg[12]\ : out STD_LOGIC;
    if4_push_instr_fetch : in STD_LOGIC;
    \cur_data_i_reg[0]_0\ : in STD_LOGIC;
    Clear_Buffer : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_brki_hit_reg_0\ : in STD_LOGIC;
    ex_jump_nodelay : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_branch_with_delayslot : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    if4_data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \cur_data_i_reg[10]_0\ : in STD_LOGIC;
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_4\ : in STD_LOGIC;
    \EX_Op3[0]_i_18\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_0\ : in STD_LOGIC;
    m3_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_0\ : in STD_LOGIC;
    \EX_Op3[0]_i_17\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_1\ : in STD_LOGIC;
    m2_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_7\ : in STD_LOGIC;
    \EX_Op3[0]_i_16\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_2\ : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3_1\ : in STD_LOGIC;
    \EX_Op3[0]_i_15\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_7_3\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_8\ : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \EX_Op3[29]_i_3\ : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 2 downto 0 );
    ex_databus_access_i_reg : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    if0_pause : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3[0]_i_12\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op3[0]_i_6_0\ : in STD_LOGIC;
    \EX_Op2[0]_i_12\ : in STD_LOGIC;
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op2_reg[30]\ : in STD_LOGIC;
    \EX_Op1_reg[30]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3_reg[31]\ : in STD_LOGIC;
    wb_fwd : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \EX_Op2_reg[31]\ : in STD_LOGIC;
    \EX_Op2_reg[31]_0\ : in STD_LOGIC;
    \EX_Op2_reg[31]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]_2\ : in STD_LOGIC;
    \EX_Op2_reg[31]_3\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    \EX_Op2_reg[0]_0\ : in STD_LOGIC;
    \EX_Op2_reg[0]_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[2]\ : in STD_LOGIC;
    \EX_Op2_reg[2]_0\ : in STD_LOGIC;
    \EX_Op2_reg[2]_1\ : in STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC;
    \EX_Op2_reg[5]_0\ : in STD_LOGIC;
    \EX_Op2_reg[5]_1\ : in STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC;
    \EX_Op2_reg[8]_0\ : in STD_LOGIC;
    \EX_Op2_reg[8]_1\ : in STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC;
    \EX_Op2_reg[9]_0\ : in STD_LOGIC;
    \EX_Op2_reg[9]_1\ : in STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC;
    \EX_Op2_reg[12]_0\ : in STD_LOGIC;
    \EX_Op2_reg[12]_1\ : in STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC;
    \EX_Op2_reg[13]_0\ : in STD_LOGIC;
    \EX_Op2_reg[13]_1\ : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[14]_0\ : in STD_LOGIC;
    \EX_Op2_reg[14]_1\ : in STD_LOGIC;
    \EX_Op2_reg[16]\ : in STD_LOGIC;
    \EX_Op2_reg[18]\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC;
    \EX_Op2[25]_i_2\ : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2_reg[29]\ : in STD_LOGIC;
    \EX_Op2_reg[29]_0\ : in STD_LOGIC;
    \EX_Op2_reg[29]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]_4\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC;
    \EX_Op2_reg[1]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_0\ : in STD_LOGIC;
    \EX_Op2_reg[1]_1\ : in STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC;
    \EX_Op2_reg[3]_0\ : in STD_LOGIC;
    \EX_Op2_reg[3]_1\ : in STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC;
    \EX_Op2_reg[4]_0\ : in STD_LOGIC;
    \EX_Op2_reg[4]_1\ : in STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC;
    \EX_Op2_reg[6]_0\ : in STD_LOGIC;
    \EX_Op2_reg[6]_1\ : in STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC;
    \EX_Op2_reg[7]_0\ : in STD_LOGIC;
    \EX_Op2_reg[7]_1\ : in STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC;
    \EX_Op2_reg[10]_0\ : in STD_LOGIC;
    \EX_Op2_reg[10]_1\ : in STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC;
    \EX_Op2_reg[11]_0\ : in STD_LOGIC;
    \EX_Op2_reg[11]_1\ : in STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC;
    \EX_Op2_reg[15]_0\ : in STD_LOGIC;
    \EX_Op2_reg[15]_1\ : in STD_LOGIC;
    \EX_Op2[16]_i_2\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \EX_Op2_reg[30]_0\ : in STD_LOGIC;
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    \EX_Op1_reg[0]_0\ : in STD_LOGIC;
    \EX_Op1_reg[0]_1\ : in STD_LOGIC_VECTOR ( 28 downto 0 );
    ex_set_msr_ee_instr : in STD_LOGIC;
    \EX_Op1_reg[23]\ : in STD_LOGIC;
    \EX_Op1_reg[25]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    of_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Op1_reg[29]_1\ : in STD_LOGIC;
    \EX_Op1_reg[29]_2\ : in STD_LOGIC;
    \EX_Op1_reg[29]_3\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[29]_4\ : in STD_LOGIC;
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Op1_reg[30]_1\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]\ : in STD_LOGIC;
    GPR_Op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Branch_CMP_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_1\ : in STD_LOGIC;
    ex_alu_result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op1_reg[31]\ : in STD_LOGIC;
    \EX_Op1_reg[31]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_2\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_3\ : in STD_LOGIC;
    of_read_imm_reg : in STD_LOGIC;
    \EX_Op2[0]_i_4\ : in STD_LOGIC_VECTOR ( 15 downto 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_PreFetch_Buffer_ff : entity is "PreFetch_Buffer_ff";
end microblaze_microblaze_0_0_PreFetch_Buffer_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_PreFetch_Buffer_ff is
  signal INSTR_BUFFER_I1_n_116 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_138 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_139 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_140 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_141 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_142 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_143 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_173 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_174 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_175 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_176 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_177 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_178 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_179 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_180 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_181 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_182 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_183 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_184 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_185 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_186 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_187 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_188 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_189 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_190 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_191 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_192 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_38 : STD_LOGIC;
  signal INSTR_BUFFER_I1_n_44 : STD_LOGIC;
  signal \^prefetch_buffer_full\ : STD_LOGIC;
  signal \^cur_data_i_reg[1]_0\ : STD_LOGIC;
  signal \^if4_pre_buffer_addr\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^if4_sel_input\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal of_op1_sel_spr : STD_LOGIC;
  signal of_predecode : STD_LOGIC_VECTOR ( 0 to 0 );
begin
  Prefetch_Buffer_Full <= \^prefetch_buffer_full\;
  \cur_data_i_reg[1]_0\ <= \^cur_data_i_reg[1]_0\;
  if4_pre_buffer_addr(0) <= \^if4_pre_buffer_addr\(0);
  if4_sel_input(1 downto 0) <= \^if4_sel_input\(1 downto 0);
INSTR_BUFFER_I1: entity work.microblaze_microblaze_0_0_OneHot_Buffer
     port map (
      Clear_Buffer => Clear_Buffer,
      Clk => Clk,
      D(1 downto 0) => D(1 downto 0),
      EX_Bit_Extract0 => EX_Bit_Extract0,
      EX_CLZ_Instr_reg => EX_CLZ_Instr_reg,
      EX_CMP_Op12_out => EX_CMP_Op12_out,
      \EX_Op1_reg[0]\(29 downto 0) => \EX_Op1_reg[0]\(29 downto 0),
      \EX_Op1_reg[0]_0\ => \EX_Op1_reg[0]_0\,
      \EX_Op1_reg[0]_1\(28 downto 0) => \EX_Op1_reg[0]_1\(28 downto 0),
      \EX_Op1_reg[23]\ => \EX_Op1_reg[23]\,
      \EX_Op1_reg[25]\(0) => \EX_Op1_reg[25]\(0),
      \EX_Op2[0]_i_4\(15 downto 0) => \EX_Op2[0]_i_4\(15 downto 0),
      \EX_Op2[16]_i_2\(4 downto 0) => \EX_Op2[16]_i_2\(6 downto 2),
      \EX_Op2[21]_i_2\ => \^cur_data_i_reg[1]_0\,
      \EX_Op2[25]_i_2\ => \EX_Op2[25]_i_2\,
      \EX_Op3[0]_i_12_0\(4 downto 0) => \EX_Op3[0]_i_12\(4 downto 0),
      \EX_Op3[0]_i_15_0\(4 downto 0) => \EX_Op3[0]_i_15\(4 downto 0),
      \EX_Op3[0]_i_16_0\(4 downto 0) => \EX_Op3[0]_i_16\(4 downto 0),
      \EX_Op3[0]_i_17_0\(4 downto 0) => \EX_Op3[0]_i_17\(4 downto 0),
      \EX_Op3[0]_i_18_0\(4 downto 0) => \EX_Op3[0]_i_18\(4 downto 0),
      \EX_Op3[0]_i_4\ => \EX_Op3[0]_i_4\,
      \EX_Op3[0]_i_6_0\ => \EX_Op3[0]_i_6\,
      \EX_Op3[0]_i_6_1\ => \EX_Op3[0]_i_6_0\,
      \EX_Op3[0]_i_7_0\ => \EX_Op3[0]_i_7\,
      \EX_Op3[0]_i_7_1\ => \EX_Op3[0]_i_7_0\,
      \EX_Op3[0]_i_7_2\ => \EX_Op3[0]_i_7_1\,
      \EX_Op3[0]_i_7_3\ => \EX_Op3[0]_i_7_2\,
      \EX_Op3[0]_i_7_4\ => \EX_Op3[0]_i_7_3\,
      \EX_Op3[0]_i_7_5\(0) => of_predecode(0),
      \EX_Op3[29]_i_3\ => \EX_Op3[29]_i_3\,
      \EX_Op3_reg[30]\ => \EX_Op3_reg[30]\,
      \EX_Op3_reg[30]_0\ => \EX_Op2_reg[30]\,
      \EX_Op3_reg[30]_1\ => \EX_Op1_reg[30]\,
      \EX_Op3_reg[31]\ => \EX_Op3_reg[31]\,
      \EX_Op3_reg[31]_0\ => \EX_Op2_reg[31]\,
      \EX_Op3_reg[31]_1\ => \EX_Op2_reg[31]_0\,
      \EX_Op3_reg[31]_2\ => \EX_Op2_reg[31]_1\,
      \EX_Op3_reg[31]_3\ => \EX_Op2_reg[31]_2\,
      \EX_Op3_reg[31]_4\ => \EX_Op2_reg[31]_3\,
      EX_Pattern_Cmp_Sel7_out => EX_Pattern_Cmp_Sel7_out,
      EX_Unsigned_Op11_out => EX_Unsigned_Op11_out,
      EX_Use_Carry10_out => EX_Use_Carry10_out,
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(1 downto 0) => GPR_Op3(1 downto 0),
      OF_Use_Op_B => OF_Use_Op_B,
      \Performance_Debug_Control.ex_brki_hit_reg\(0) => \Performance_Debug_Control.ex_brki_hit_reg\(0),
      \Performance_Debug_Control.ex_brki_hit_reg_0\ => \Performance_Debug_Control.ex_brki_hit_reg_0\,
      Q(31 downto 0) => Q(31 downto 0),
      S => S,
      S_10 => S_10,
      S_11 => S_11,
      S_12 => S_12,
      S_13 => S_13,
      S_14 => S_14,
      \Serial_Dbg_Intf.control_reg_reg[8]\ => \Serial_Dbg_Intf.control_reg_reg[8]\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \^if4_sel_input\(0),
      \Using_FPGA.Native_0\ => \^if4_sel_input\(1),
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_12\(1 downto 0) => \Using_FPGA.Native_9\(1 downto 0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_6\ => \cur_data_i_reg[0]_0\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_6\,
      addr(1) => \^prefetch_buffer_full\,
      addr(0) => \^if4_pre_buffer_addr\(0),
      \cur_data_i_reg[0]_0\ => INSTR_BUFFER_I1_n_173,
      \cur_data_i_reg[0]_1\ => INSTR_BUFFER_I1_n_190,
      \cur_data_i_reg[0]_2\ => \cur_data_i_reg[10]_0\,
      \cur_data_i_reg[10]_0\ => \cur_data_i_reg[10]\,
      \cur_data_i_reg[10]_1\ => INSTR_BUFFER_I1_n_143,
      \cur_data_i_reg[11]_0\ => INSTR_BUFFER_I1_n_142,
      \cur_data_i_reg[12]_0\ => \cur_data_i_reg[12]\,
      \cur_data_i_reg[13]_0\ => INSTR_BUFFER_I1_n_141,
      \cur_data_i_reg[14]_0\ => INSTR_BUFFER_I1_n_140,
      \cur_data_i_reg[15]_0\ => INSTR_BUFFER_I1_n_139,
      \cur_data_i_reg[15]_1\ => INSTR_BUFFER_I1_n_174,
      \cur_data_i_reg[18]_0\ => of_gpr_write_dbg,
      \cur_data_i_reg[1]_0\ => INSTR_BUFFER_I1_n_191,
      \cur_data_i_reg[26]_0\ => INSTR_BUFFER_I1_n_38,
      \cur_data_i_reg[26]_1\ => \cur_data_i_reg[26]\,
      \cur_data_i_reg[26]_10\ => \cur_data_i_reg[26]_8\,
      \cur_data_i_reg[26]_11\ => \cur_data_i_reg[26]_9\,
      \cur_data_i_reg[26]_2\ => INSTR_BUFFER_I1_n_44,
      \cur_data_i_reg[26]_3\ => \cur_data_i_reg[26]_0\,
      \cur_data_i_reg[26]_4\ => \cur_data_i_reg[26]_1\,
      \cur_data_i_reg[26]_5\ => \cur_data_i_reg[26]_2\,
      \cur_data_i_reg[26]_6\ => \cur_data_i_reg[26]_3\,
      \cur_data_i_reg[26]_7\ => \cur_data_i_reg[26]_4\,
      \cur_data_i_reg[26]_8\ => \cur_data_i_reg[26]_6\,
      \cur_data_i_reg[26]_9\ => \cur_data_i_reg[26]_7\,
      \cur_data_i_reg[27]_0\ => \cur_data_i_reg[27]\,
      \cur_data_i_reg[27]_1\ => of_op1_sel_spr_pc,
      \cur_data_i_reg[28]_0\ => \cur_data_i_reg[28]\,
      \cur_data_i_reg[28]_1\ => \cur_data_i_reg[28]_0\,
      \cur_data_i_reg[28]_2\ => \cur_data_i_reg[28]_1\,
      \cur_data_i_reg[28]_3\ => \cur_data_i_reg[28]_2\,
      \cur_data_i_reg[28]_4\ => \cur_data_i_reg[28]_3\,
      \cur_data_i_reg[28]_5\ => \cur_data_i_reg[28]_4\,
      \cur_data_i_reg[28]_6\ => \cur_data_i_reg[28]_5\,
      \cur_data_i_reg[29]_0\ => INSTR_BUFFER_I1_n_116,
      \cur_data_i_reg[2]_0\ => INSTR_BUFFER_I1_n_192,
      \cur_data_i_reg[30]_0\ => \cur_data_i_reg[30]\,
      \cur_data_i_reg[31]_0\ => \cur_data_i_reg[31]\,
      \cur_data_i_reg[31]_1\ => \cur_data_i_reg[31]_0\,
      \cur_data_i_reg[31]_2\ => \cur_data_i_reg[31]_1\,
      \cur_data_i_reg[31]_3\ => \cur_data_i_reg[31]_2\,
      \cur_data_i_reg[31]_4\ => \cur_data_i_reg[31]_3\,
      \cur_data_i_reg[31]_5\ => \cur_data_i_reg[31]_4\,
      \cur_data_i_reg[31]_6\(28 downto 0) => \cur_data_i_reg[31]_5\(31 downto 3),
      \cur_data_i_reg[3]_0\ => \cur_data_i_reg[3]_0\,
      \cur_data_i_reg[4]_0\ => \cur_data_i_reg[4]\,
      \cur_data_i_reg[5]_0\(1 downto 0) => \cur_data_i_reg[5]\(1 downto 0),
      \cur_data_i_reg[5]_1\ => \cur_data_i_reg[5]_0\,
      \cur_data_i_reg[5]_2\ => \cur_data_i_reg[5]_1\,
      \cur_data_i_reg[6]_0\ => INSTR_BUFFER_I1_n_138,
      \cur_data_i_reg[7]_0\ => \cur_data_i_reg[7]\,
      \cur_data_i_reg[7]_1\ => \cur_data_i_reg[7]_0\,
      \cur_data_i_reg[8]_0\ => \cur_data_i_reg[8]_0\,
      \cur_data_i_reg[9]_0\ => \cur_data_i_reg[9]\,
      ex_MSR_clear_decode => ex_MSR_clear_decode,
      ex_MSR_set_decode => ex_MSR_set_decode,
      ex_atomic_instruction_pair0 => ex_atomic_instruction_pair0,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot0 => ex_branch_with_delayslot0,
      ex_databus_access_i_reg => ex_databus_access_i_reg,
      ex_databus_exclusive_i0 => ex_databus_exclusive_i0,
      ex_databus_read_i0 => ex_databus_read_i0,
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_addr(2 downto 0) => ex_gpr_write_addr(2 downto 0),
      \ex_gpr_write_addr_reg[2]\ => \ex_gpr_write_addr_reg[2]\,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_jump_nodelay => ex_jump_nodelay,
      ex_jump_nodelay0 => ex_jump_nodelay0,
      ex_jump_nodelay_reg => ex_jump_nodelay_reg,
      ex_jump_nodelay_reg_0 => ex_jump_nodelay_reg_0,
      ex_jump_nodelay_reg_1 => ex_jump_nodelay_reg_1,
      ex_load_alu_carry2_out => ex_load_alu_carry2_out,
      ex_load_shift_carry0 => ex_load_shift_carry0,
      ex_mbar_is_sleep0 => ex_mbar_is_sleep0,
      ex_move_to_MSR_instr35_out => ex_move_to_MSR_instr35_out,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq1 => ex_op1_cmp_eq1,
      ex_op1_cmp_eq_n7_out => ex_op1_cmp_eq_n7_out,
      ex_set_bip => ex_set_bip,
      ex_set_msr_ee_instr => ex_set_msr_ee_instr,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      if0_pause => if0_pause,
      if4_data(0 to 31) => if4_data(0 to 31),
      if4_push_instr_fetch => if4_push_instr_fetch,
      \imm_reg_reg[0]\ => INSTR_BUFFER_I1_n_189,
      \imm_reg_reg[10]\ => INSTR_BUFFER_I1_n_183,
      \imm_reg_reg[11]\ => INSTR_BUFFER_I1_n_184,
      \imm_reg_reg[12]\ => INSTR_BUFFER_I1_n_185,
      \imm_reg_reg[13]\ => INSTR_BUFFER_I1_n_186,
      \imm_reg_reg[14]\ => INSTR_BUFFER_I1_n_187,
      \imm_reg_reg[15]\ => INSTR_BUFFER_I1_n_188,
      \imm_reg_reg[2]\ => INSTR_BUFFER_I1_n_175,
      \imm_reg_reg[3]\ => INSTR_BUFFER_I1_n_176,
      \imm_reg_reg[4]\ => INSTR_BUFFER_I1_n_177,
      \imm_reg_reg[5]\ => INSTR_BUFFER_I1_n_178,
      \imm_reg_reg[6]\ => INSTR_BUFFER_I1_n_179,
      \imm_reg_reg[7]\ => INSTR_BUFFER_I1_n_180,
      \imm_reg_reg[8]\ => INSTR_BUFFER_I1_n_181,
      \imm_reg_reg[9]\ => INSTR_BUFFER_I1_n_182,
      in0 => in0,
      \m0_gpr_write_addr_reg[2]\ => \m0_gpr_write_addr_reg[2]_1\,
      m0_is_div_instr_i => m0_is_div_instr_i,
      \m1_gpr_write_addr_reg[2]\ => \m1_gpr_write_addr_reg[2]_1\,
      m1_is_div_instr_i => m1_is_div_instr_i,
      \m2_gpr_write_addr_reg[2]\ => \m2_gpr_write_addr_reg[2]_1\,
      m2_is_div_instr => m2_is_div_instr,
      m2_m1_sel_res_reg(0) => m2_m1_sel_res_reg(0),
      \m3_gpr_write_addr_reg[2]\ => \m3_gpr_write_addr_reg[2]_1\,
      \m3_gpr_write_addr_reg[3]\ => \m3_gpr_write_addr_reg[3]\,
      m3_is_div_instr_i_reg => m3_is_div_instr_i_reg,
      of_byte_access => of_byte_access,
      of_doublet_access => of_doublet_access,
      of_ex_complete_in_later_stage => of_ex_complete_in_later_stage,
      of_is_bsifi => of_is_bsifi,
      of_is_div_instr => of_is_div_instr,
      of_m0_complete_in_later_stage => of_m0_complete_in_later_stage,
      of_m1_complete_in_later_stage => of_m1_complete_in_later_stage,
      of_msr(0) => of_msr(0),
      of_op1_sel_spr => of_op1_sel_spr,
      of_op3_sel(0) => of_op3_sel(0),
      of_raw_valid => of_raw_valid,
      of_read_imm_reg => of_read_imm_reg,
      p_104_in => p_104_in,
      sync_reset => sync_reset,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      wb_fwd(0) => wb_fwd(0),
      \wb_gpr_write_addr_reg[3]\ => \wb_gpr_write_addr_reg[3]\
    );
PREDECODE_BUFFER_I1: entity work.\microblaze_microblaze_0_0_OneHot_Buffer__parameterized1\
     port map (
      Clk => Clk,
      \EX_Branch_CMP_Op1[29]_i_3_0\ => \EX_Branch_CMP_Op1[29]_i_3\,
      \EX_Branch_CMP_Op1[30]_i_3_0\ => \EX_Branch_CMP_Op1[30]_i_3\,
      \EX_Branch_CMP_Op1[30]_i_3_1\ => \EX_Branch_CMP_Op1[30]_i_3_0\,
      \EX_Branch_CMP_Op1[30]_i_3_2\ => \EX_Branch_CMP_Op1[30]_i_3_1\,
      \EX_Branch_CMP_Op1[30]_i_3_3\ => \EX_Op3[0]_i_6_0\,
      \EX_Branch_CMP_Op1[30]_i_7_0\(4 downto 0) => \EX_Op3[0]_i_18\(4 downto 0),
      \EX_Branch_CMP_Op1[30]_i_7_1\(4 downto 0) => \EX_Op3[0]_i_17\(4 downto 0),
      \EX_Branch_CMP_Op1[30]_i_7_2\ => \EX_Branch_CMP_Op1[30]_i_7\,
      \EX_Branch_CMP_Op1[30]_i_8_0\(4 downto 0) => \EX_Op3[0]_i_16\(4 downto 0),
      \EX_Branch_CMP_Op1[30]_i_8_1\(4 downto 0) => \EX_Op3[0]_i_15\(4 downto 0),
      \EX_Branch_CMP_Op1[30]_i_8_2\ => \EX_Branch_CMP_Op1[30]_i_8\,
      \EX_Branch_CMP_Op1_reg[29]\(1 downto 0) => \EX_Op2[16]_i_2\(1 downto 0),
      \EX_Branch_CMP_Op1_reg[29]_0\ => \EX_Branch_CMP_Op1_reg[29]\,
      \EX_Branch_CMP_Op1_reg[29]_1\ => \EX_Branch_CMP_Op1_reg[29]_0\,
      \EX_Branch_CMP_Op1_reg[30]\ => \EX_Branch_CMP_Op1_reg[30]\,
      \EX_Branch_CMP_Op1_reg[30]_0\ => \EX_Branch_CMP_Op1_reg[30]_0\,
      \EX_Branch_CMP_Op1_reg[30]_1\ => \EX_Branch_CMP_Op1_reg[30]_1\,
      \EX_Branch_CMP_Op1_reg[30]_2\ => \EX_Branch_CMP_Op1_reg[30]_2\,
      \EX_Branch_CMP_Op1_reg[30]_3\ => \EX_Branch_CMP_Op1_reg[30]_3\,
      \EX_Op1_reg[29]\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[29]_0\ => \EX_Op1_reg[29]_0\,
      \EX_Op1_reg[29]_1\ => \EX_Op1_reg[29]_1\,
      \EX_Op1_reg[29]_2\ => \EX_Op1_reg[29]_2\,
      \EX_Op1_reg[29]_3\(0) => \EX_Op1_reg[29]_3\(0),
      \EX_Op1_reg[29]_4\ => \EX_Op1_reg[29]_4\,
      \EX_Op1_reg[30]\ => \EX_Op1_reg[30]\,
      \EX_Op1_reg[30]_0\ => \EX_Op1_reg[30]_0\,
      \EX_Op1_reg[30]_1\ => \EX_Op1_reg[30]_1\,
      \EX_Op1_reg[31]\ => INSTR_BUFFER_I1_n_173,
      \EX_Op1_reg[31]_0\ => \EX_Op1_reg[31]\,
      \EX_Op1_reg[31]_1\ => \EX_Op1_reg[31]_0\,
      \EX_Op2[0]_i_12_0\ => \EX_Op2[0]_i_12\,
      \EX_Op2[0]_i_6_0\ => \EX_Op2[0]_i_6\,
      \EX_Op2[0]_i_6_1\ => INSTR_BUFFER_I1_n_38,
      \EX_Op2[0]_i_6_2\ => INSTR_BUFFER_I1_n_44,
      \EX_Op2[0]_i_6_3\(4 downto 0) => \EX_Op3[0]_i_12\(4 downto 0),
      \EX_Op2[0]_i_7_0\ => \EX_Op2[0]_i_7\,
      \EX_Op2[0]_i_7_1\ => \EX_Op3[0]_i_7_0\,
      \EX_Op2[0]_i_7_2\ => \EX_Op3[0]_i_7_1\,
      \EX_Op2[0]_i_7_3\ => \EX_Op3[0]_i_7_2\,
      \EX_Op2[0]_i_7_4\ => \EX_Op3[0]_i_7_3\,
      \EX_Op2[0]_i_7_5\ => \EX_Op3[0]_i_4\,
      \EX_Op2[16]_i_3\ => INSTR_BUFFER_I1_n_116,
      \EX_Op2_reg[0]\ => \EX_Op2_reg[0]\,
      \EX_Op2_reg[0]_0\ => \EX_Op2_reg[0]_0\,
      \EX_Op2_reg[0]_1\(0) => \EX_Op2_reg[0]_1\(0),
      \EX_Op2_reg[0]_2\ => INSTR_BUFFER_I1_n_189,
      \EX_Op2_reg[10]\ => \EX_Op2_reg[10]\,
      \EX_Op2_reg[10]_0\ => \EX_Op2_reg[10]_0\,
      \EX_Op2_reg[10]_1\ => \EX_Op2_reg[10]_1\,
      \EX_Op2_reg[10]_2\ => INSTR_BUFFER_I1_n_183,
      \EX_Op2_reg[11]\ => \EX_Op2_reg[11]\,
      \EX_Op2_reg[11]_0\ => \EX_Op2_reg[11]_0\,
      \EX_Op2_reg[11]_1\ => \EX_Op2_reg[11]_1\,
      \EX_Op2_reg[11]_2\ => INSTR_BUFFER_I1_n_184,
      \EX_Op2_reg[12]\ => \EX_Op2_reg[12]\,
      \EX_Op2_reg[12]_0\ => \EX_Op2_reg[12]_0\,
      \EX_Op2_reg[12]_1\ => \EX_Op2_reg[12]_1\,
      \EX_Op2_reg[12]_2\ => INSTR_BUFFER_I1_n_185,
      \EX_Op2_reg[13]\ => \EX_Op2_reg[13]\,
      \EX_Op2_reg[13]_0\ => \EX_Op2_reg[13]_0\,
      \EX_Op2_reg[13]_1\ => \EX_Op2_reg[13]_1\,
      \EX_Op2_reg[13]_2\ => INSTR_BUFFER_I1_n_186,
      \EX_Op2_reg[14]\ => \EX_Op2_reg[14]\,
      \EX_Op2_reg[14]_0\ => \EX_Op2_reg[14]_0\,
      \EX_Op2_reg[14]_1\ => \EX_Op2_reg[14]_1\,
      \EX_Op2_reg[14]_2\ => INSTR_BUFFER_I1_n_187,
      \EX_Op2_reg[15]\ => \EX_Op2_reg[15]\,
      \EX_Op2_reg[15]_0\ => \EX_Op2_reg[15]_0\,
      \EX_Op2_reg[15]_1\ => \EX_Op2_reg[15]_1\,
      \EX_Op2_reg[15]_2\ => INSTR_BUFFER_I1_n_188,
      \EX_Op2_reg[16]\ => \EX_Op2_reg[16]\,
      \EX_Op2_reg[16]_0\ => INSTR_BUFFER_I1_n_139,
      \EX_Op2_reg[17]\ => \EX_Op2_reg[17]\,
      \EX_Op2_reg[17]_0\ => INSTR_BUFFER_I1_n_140,
      \EX_Op2_reg[18]\ => \EX_Op2_reg[18]\,
      \EX_Op2_reg[18]_0\ => INSTR_BUFFER_I1_n_141,
      \EX_Op2_reg[1]\ => \EX_Op2_reg[1]\,
      \EX_Op2_reg[1]_0\ => \EX_Op2_reg[1]_0\,
      \EX_Op2_reg[1]_1\ => \EX_Op2_reg[1]_1\,
      \EX_Op2_reg[1]_2\ => INSTR_BUFFER_I1_n_174,
      \EX_Op2_reg[20]\ => \EX_Op2_reg[20]\,
      \EX_Op2_reg[20]_0\ => INSTR_BUFFER_I1_n_142,
      \EX_Op2_reg[21]\ => \EX_Op2_reg[21]\,
      \EX_Op2_reg[21]_0\ => INSTR_BUFFER_I1_n_143,
      \EX_Op2_reg[25]\ => \EX_Op2_reg[25]\,
      \EX_Op2_reg[25]_0\ => INSTR_BUFFER_I1_n_138,
      \EX_Op2_reg[29]\ => \EX_Op2_reg[29]\,
      \EX_Op2_reg[29]_0\ => \EX_Op2_reg[29]_0\,
      \EX_Op2_reg[29]_1\ => \EX_Op2_reg[29]_1\,
      \EX_Op2_reg[29]_2\ => INSTR_BUFFER_I1_n_192,
      \EX_Op2_reg[2]\ => \EX_Op2_reg[2]\,
      \EX_Op2_reg[2]_0\ => \EX_Op2_reg[2]_0\,
      \EX_Op2_reg[2]_1\ => \EX_Op2_reg[2]_1\,
      \EX_Op2_reg[2]_2\ => INSTR_BUFFER_I1_n_175,
      \EX_Op2_reg[30]\ => \EX_Op2_reg[30]_0\,
      \EX_Op2_reg[30]_0\ => \EX_Op2_reg[30]\,
      \EX_Op2_reg[30]_1\ => INSTR_BUFFER_I1_n_191,
      \EX_Op2_reg[31]\ => \EX_Op2_reg[31]_4\,
      \EX_Op2_reg[31]_0\ => \EX_Op2_reg[31]\,
      \EX_Op2_reg[31]_1\ => \EX_Op2_reg[31]_0\,
      \EX_Op2_reg[31]_2\ => INSTR_BUFFER_I1_n_190,
      \EX_Op2_reg[31]_3\ => \EX_Op2_reg[31]_1\,
      \EX_Op2_reg[31]_4\ => \EX_Op2_reg[31]_2\,
      \EX_Op2_reg[31]_5\ => \EX_Op2_reg[31]_3\,
      \EX_Op2_reg[3]\ => \EX_Op2_reg[3]\,
      \EX_Op2_reg[3]_0\ => \EX_Op2_reg[3]_0\,
      \EX_Op2_reg[3]_1\ => \EX_Op2_reg[3]_1\,
      \EX_Op2_reg[3]_2\ => INSTR_BUFFER_I1_n_176,
      \EX_Op2_reg[4]\ => \EX_Op2_reg[4]\,
      \EX_Op2_reg[4]_0\ => \EX_Op2_reg[4]_0\,
      \EX_Op2_reg[4]_1\ => \EX_Op2_reg[4]_1\,
      \EX_Op2_reg[4]_2\ => INSTR_BUFFER_I1_n_177,
      \EX_Op2_reg[5]\ => \EX_Op2_reg[5]\,
      \EX_Op2_reg[5]_0\ => \EX_Op2_reg[5]_0\,
      \EX_Op2_reg[5]_1\ => \EX_Op2_reg[5]_1\,
      \EX_Op2_reg[5]_2\ => INSTR_BUFFER_I1_n_178,
      \EX_Op2_reg[6]\ => \EX_Op2_reg[6]\,
      \EX_Op2_reg[6]_0\ => \EX_Op2_reg[6]_0\,
      \EX_Op2_reg[6]_1\ => \EX_Op2_reg[6]_1\,
      \EX_Op2_reg[6]_2\ => INSTR_BUFFER_I1_n_179,
      \EX_Op2_reg[7]\ => \EX_Op2_reg[7]\,
      \EX_Op2_reg[7]_0\ => \EX_Op2_reg[7]_0\,
      \EX_Op2_reg[7]_1\ => \EX_Op2_reg[7]_1\,
      \EX_Op2_reg[7]_2\ => INSTR_BUFFER_I1_n_180,
      \EX_Op2_reg[8]\ => \EX_Op2_reg[8]\,
      \EX_Op2_reg[8]_0\ => \EX_Op2_reg[8]_0\,
      \EX_Op2_reg[8]_1\ => \EX_Op2_reg[8]_1\,
      \EX_Op2_reg[8]_2\ => INSTR_BUFFER_I1_n_181,
      \EX_Op2_reg[9]\ => \EX_Op2_reg[9]\,
      \EX_Op2_reg[9]_0\ => \EX_Op2_reg[9]_0\,
      \EX_Op2_reg[9]_1\ => \EX_Op2_reg[9]_1\,
      \EX_Op2_reg[9]_2\ => INSTR_BUFFER_I1_n_182,
      GPR_Op1(2 downto 0) => GPR_Op1(2 downto 0),
      M1_Sel_Mul_Res_reg => M1_Sel_Mul_Res_reg,
      M1_Sel_Mul_Res_reg_0 => M1_Sel_Mul_Res_reg_0,
      Q(1) => of_predecode(0),
      Q(0) => \cur_data_i_reg[1]\(0),
      S_0 => S_0,
      S_1 => S_1,
      S_2 => S_2,
      S_3 => S_3,
      S_4 => S_4,
      S_5 => S_5,
      S_6 => S_6,
      S_7 => S_7,
      S_8 => S_8,
      S_9 => S_9,
      \Using_FPGA.Native\(1 downto 0) => \Using_FPGA.Native_9\(1 downto 0),
      \WB_Exception_Return_Addr_reg[16]\ => \WB_Exception_Return_Addr_reg[16]\,
      \WB_Exception_Return_Addr_reg[17]\ => \WB_Exception_Return_Addr_reg[17]\,
      \WB_Exception_Return_Addr_reg[18]\ => \WB_Exception_Return_Addr_reg[18]\,
      \WB_Exception_Return_Addr_reg[20]\ => \WB_Exception_Return_Addr_reg[20]\,
      \WB_Exception_Return_Addr_reg[21]\ => \WB_Exception_Return_Addr_reg[21]\,
      \WB_Exception_Return_Addr_reg[25]\ => \WB_Exception_Return_Addr_reg[25]\,
      addr(0) => \^prefetch_buffer_full\,
      addr(1) => \^if4_pre_buffer_addr\(0),
      \cur_data_i_reg[0]_0\ => \cur_data_i_reg[0]\,
      \cur_data_i_reg[0]_1\ => \cur_data_i_reg[0]_0\,
      \cur_data_i_reg[10]_0\ => \^if4_sel_input\(1),
      \cur_data_i_reg[10]_1\ => \cur_data_i_reg[10]_0\,
      \cur_data_i_reg[1]_0\ => \^cur_data_i_reg[1]_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]_5\,
      \cur_data_i_reg[2]_0\(2 downto 0) => \cur_data_i_reg[31]_5\(2 downto 0),
      \cur_data_i_reg[3]_0\ => \cur_data_i_reg[3]\,
      \cur_data_i_reg[6]_0\ => \cur_data_i_reg[6]\,
      \cur_data_i_reg[6]_1\ => \cur_data_i_reg[6]_0\,
      \cur_data_i_reg[8]_0\ => \cur_data_i_reg[8]\,
      ex_alu_result(1 downto 0) => ex_alu_result(1 downto 0),
      ex_gpr_write_addr(2 downto 0) => ex_gpr_write_addr(2 downto 0),
      if4_push_instr_fetch => if4_push_instr_fetch,
      \in\(10) => \in\(0),
      \in\(9) => if4_data(11),
      \in\(8) => if4_data(12),
      \in\(7) => if4_data(13),
      \in\(6) => if4_data(14),
      \in\(5) => if4_data(15),
      \in\(4) => if4_data(16),
      \in\(3) => if4_data(17),
      \in\(2) => if4_data(18),
      \in\(1) => if4_data(19),
      \in\(0) => if4_data(20),
      m0_gpr_write => m0_gpr_write,
      \m0_gpr_write_addr_reg[2]\ => \m0_gpr_write_addr_reg[2]\,
      \m0_gpr_write_addr_reg[2]_0\ => \m0_gpr_write_addr_reg[2]_0\,
      \m1_M0_Result_i_reg[0]\ => \m1_M0_Result_i_reg[0]\,
      \m1_M0_Result_i_reg[10]\ => \m1_M0_Result_i_reg[10]\,
      \m1_M0_Result_i_reg[11]\ => \m1_M0_Result_i_reg[11]\,
      \m1_M0_Result_i_reg[12]\ => \m1_M0_Result_i_reg[12]\,
      \m1_M0_Result_i_reg[13]\ => \m1_M0_Result_i_reg[13]\,
      \m1_M0_Result_i_reg[14]\ => \m1_M0_Result_i_reg[14]\,
      \m1_M0_Result_i_reg[15]\ => \m1_M0_Result_i_reg[15]\,
      \m1_M0_Result_i_reg[1]\ => \m1_M0_Result_i_reg[1]\,
      \m1_M0_Result_i_reg[2]\ => \m1_M0_Result_i_reg[2]\,
      \m1_M0_Result_i_reg[3]\ => \m1_M0_Result_i_reg[3]\,
      \m1_M0_Result_i_reg[4]\ => \m1_M0_Result_i_reg[4]\,
      \m1_M0_Result_i_reg[5]\ => \m1_M0_Result_i_reg[5]\,
      \m1_M0_Result_i_reg[6]\ => \m1_M0_Result_i_reg[6]\,
      \m1_M0_Result_i_reg[7]\ => \m1_M0_Result_i_reg[7]\,
      \m1_M0_Result_i_reg[8]\ => \m1_M0_Result_i_reg[8]\,
      \m1_M0_Result_i_reg[9]\ => \m1_M0_Result_i_reg[9]\,
      m1_gpr_write => m1_gpr_write,
      \m1_gpr_write_addr_reg[2]\ => \m1_gpr_write_addr_reg[2]\,
      \m1_gpr_write_addr_reg[2]_0\ => \m1_gpr_write_addr_reg[2]_0\,
      \m2_M1_Result_i_reg[29]\(2 downto 0) => \m2_M1_Result_i_reg[29]\(2 downto 0),
      m2_gpr_write => m2_gpr_write,
      \m2_gpr_write_addr_reg[2]\ => \m2_gpr_write_addr_reg[2]\,
      \m2_gpr_write_addr_reg[2]_0\ => \m2_gpr_write_addr_reg[2]_0\,
      m2_m1_sel_res_reg(0) => m2_m1_sel_res_reg_0(0),
      m3_gpr_write => m3_gpr_write,
      \m3_gpr_write_addr_reg[2]\ => \m3_gpr_write_addr_reg[2]\,
      \m3_gpr_write_addr_reg[2]_0\ => \m3_gpr_write_addr_reg[2]_0\,
      of_op1_sel_spr => of_op1_sel_spr,
      sync_reset => sync_reset,
      wb_fwd(8 downto 0) => wb_fwd(8 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb is
  port (
    ex_PipeRun_for_ce : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    \ex_gpr_write_addr_reg[3]\ : out STD_LOGIC;
    \ex_gpr_write_addr_reg[2]\ : out STD_LOGIC;
    wb_exception_from_m3_reg_rep : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    ex_raw_valid_reg : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \m0_PC_i_reg[0]\ : in STD_LOGIC;
    ex_piperun_masked_no6 : in STD_LOGIC;
    ex_jump_hold : in STD_LOGIC;
    ex_jump : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \m0_exception_raw_kind_reg[30]\ : in STD_LOGIC;
    m0_exception_raw_kind : in STD_LOGIC_VECTOR ( 0 to 0 );
    sync_reset : in STD_LOGIC;
    m0_exception_from_ex : in STD_LOGIC;
    in0 : in STD_LOGIC;
    of_clear_msr_bip_hold_reg : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_clear_msr_bip_hold_reg_0 : in STD_LOGIC;
    of_set_msr_ie_hold_reg : in STD_LOGIC;
    of_clear_msr_bip_hold_reg_1 : in STD_LOGIC;
    of_set_msr_ee_hold_reg : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    of_set_msr_ie : in STD_LOGIC;
    of_set_msr_ie_hold_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    ex_reservation : in STD_LOGIC;
    ex_reservation_reg : in STD_LOGIC;
    ex_reservation_reg_0 : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_msr_clear_bip : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC_VECTOR ( 13 downto 0 );
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    wb_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    ex_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    EX_CarryIn : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_242
     port map (
      D => D,
      D_0 => D_0,
      D_1 => D_1,
      EX_CarryIn => EX_CarryIn,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_12\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_13\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_14\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_15\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_16\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_17\(2 downto 0) => \Using_FPGA.Native_17\(2 downto 0),
      \Using_FPGA.Native_18\(13 downto 0) => \Using_FPGA.Native_18\(13 downto 0),
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_20\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_9\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      ex_MSR_i(10 downto 0) => ex_MSR_i(10 downto 0),
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(1 downto 0) => ex_gpr_write_addr(1 downto 0),
      \ex_gpr_write_addr_reg[2]\ => \ex_gpr_write_addr_reg[2]\,
      \ex_gpr_write_addr_reg[3]\ => \ex_gpr_write_addr_reg[3]\,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      ex_raw_valid_reg => ex_PipeRun_for_ce(0),
      ex_raw_valid_reg_0 => ex_raw_valid_reg,
      ex_reservation => ex_reservation,
      ex_reservation_reg => ex_reservation_reg,
      ex_reservation_reg_0 => ex_reservation_reg_0,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      \m0_PC_i_reg[0]\ => \m0_PC_i_reg[0]\,
      m0_exception_from_ex => m0_exception_from_ex,
      m0_exception_raw_kind(0) => m0_exception_raw_kind(0),
      \m0_exception_raw_kind_reg[30]\ => \m0_exception_raw_kind_reg[30]\,
      m0_is_div_instr_i => m0_is_div_instr_i,
      of_clear_msr_bip_hold_reg => of_clear_msr_bip_hold_reg,
      of_clear_msr_bip_hold_reg_0 => of_clear_msr_bip_hold_reg_0,
      of_clear_msr_bip_hold_reg_1 => of_clear_msr_bip_hold_reg_1,
      of_set_msr_ee_hold_reg => of_set_msr_ee_hold_reg,
      of_set_msr_ie => of_set_msr_ie,
      of_set_msr_ie_hold_reg => of_set_msr_ie_hold_reg,
      of_set_msr_ie_hold_reg_0 => of_set_msr_ie_hold_reg_0,
      sync_reset => sync_reset,
      wb_MSR_i(10 downto 0) => wb_MSR_i(10 downto 0),
      wb_exception_from_m3_reg_rep => wb_exception_from_m3_reg_rep,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      wb_exception_taken => wb_exception_taken,
      wb_msr_clear_bip => wb_msr_clear_bip
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_104 is
  port (
    m0_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m0_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_104 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_104;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_104 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_210
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_raw => m0_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_112 is
  port (
    m1_PipeRun_for_ce : out STD_LOGIC_VECTOR ( 0 to 0 );
    m1_databus_write_from_m0_reg : out STD_LOGIC;
    m1_databus_write_from_m0_reg_0 : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ : out STD_LOGIC;
    m1_databus_addr_from_m0_reg : out STD_LOGIC;
    m1_databus_access_from_m0_reg : out STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg\ : out STD_LOGIC;
    m1_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    \m2_PC_i_reg[0]\ : in STD_LOGIC;
    m1_piperun_masked_no2 : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ : in STD_LOGIC;
    m1_databus_access : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    \Use_DAXI.m2_active_access_unmasked_reg\ : in STD_LOGIC;
    m1_dlmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    A_N201_out : in STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m1_dead_valid_hold : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    m0_is_div_instr_i : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_112 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_112;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_112 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_194
     port map (
      A_N201_out => A_N201_out,
      D(1 downto 0) => D(1 downto 0),
      DWait => DWait,
      D_0 => D_0,
      D_1 => D_1,
      D_2 => D_2,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\,
      \Use_DAXI.m2_active_access_unmasked_reg\ => \Use_DAXI.m2_active_access_unmasked_reg\,
      \Use_DLMB.m1_dlmb_issued_reg\ => \Use_DLMB.m1_dlmb_issued_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_6\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_is_div_instr_i => m0_is_div_instr_i,
      m1_databus_access => m1_databus_access,
      m1_databus_access_from_m0_reg => m1_databus_access_from_m0_reg,
      m1_databus_addr_from_m0_reg => m1_databus_addr_from_m0_reg,
      m1_databus_write_from_m0_reg => m1_databus_write_from_m0_reg,
      m1_databus_write_from_m0_reg_0 => m1_databus_write_from_m0_reg_0,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_dlmb_issued => m1_dlmb_issued,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m1_piperun_masked_no2 => m1_piperun_masked_no2,
      m1_raw_valid_reg => m1_PipeRun_for_ce(0),
      m1_raw_valid_reg_0 => m1_raw_valid_reg,
      \m2_PC_i_reg[0]\ => \m2_PC_i_reg[0]\,
      m2_allow_dready => m2_allow_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_119 is
  port (
    m2_PipeRun_for_ce : out STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.m2_potential_bubble_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg\ : out STD_LOGIC;
    m2_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    D_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m2_dead_valid_hold_reg : in STD_LOGIC;
    m2_piperun_masked_no5 : in STD_LOGIC;
    m2_potential_bubble : in STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg_0\ : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Use_DLMB.m2_dready_hold_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m2_dlmb_dready : in STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg_0\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m2_databus_write : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    m2_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    m2_gpr_write : in STD_LOGIC;
    m1_gpr_write : in STD_LOGIC;
    m2_gpr_write_dbg : in STD_LOGIC;
    m1_gpr_write_dbg : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    m1_is_div_instr_i : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_119 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_119;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_119 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_180
     port map (
      D(0) => D(0),
      D_0 => D_0,
      D_1 => D_1,
      D_2 => D_2,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg\ => \Use_DAXI.M_AXI_DP_BREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1 downto 0) => \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1 downto 0),
      \Use_DAXI.M_AXI_DP_RREADY_I_reg\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      \Use_DLMB.m2_dready_hold_reg\(0) => \Use_DLMB.m2_dready_hold_reg\(0),
      \Use_DLMB.m2_dready_hold_reg_0\ => \Use_DLMB.m2_dready_hold_reg_0\,
      \Use_DLMB.m2_potential_bubble_reg\ => \Use_DLMB.m2_potential_bubble_reg\,
      \Use_DLMB.m2_potential_bubble_reg_0\ => \Use_DLMB.m2_potential_bubble_reg_0\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\(0) => \Using_FPGA.Native_1\(0),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_6\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m2_databus_write => m2_databus_write,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_dead_valid_hold_reg => m2_dead_valid_hold_reg,
      m2_dlmb_dready => m2_dlmb_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_gpr_write => m2_gpr_write,
      m2_gpr_write_dbg => m2_gpr_write_dbg,
      m2_is_div_instr => m2_is_div_instr,
      m2_piperun_masked_no5 => m2_piperun_masked_no5,
      m2_potential_bubble => m2_potential_bubble,
      m2_raw_valid_reg => m2_PipeRun_for_ce(0),
      m2_raw_valid_reg_0 => m2_raw_valid_reg,
      m2_raw_valid_reg_1 => m2_raw_valid_reg_0,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_125 is
  port (
    m3_PipeRun_for_ce : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    m3_raw_valid_reg : out STD_LOGIC;
    wb_piperun_i_reg : out STD_LOGIC;
    D : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m3_dead_valid_hold_reg : in STD_LOGIC;
    m3_piperun_masked_no3 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    m3_active_access : in STD_LOGIC;
    m3_raw_valid_reg_0 : in STD_LOGIC;
    m3_raw_valid_reg_1 : in STD_LOGIC_VECTOR ( 0 to 0 );
    wb_raw_valid_reg : in STD_LOGIC;
    wb_raw_valid_reg_0 : in STD_LOGIC;
    wb_raw_valid_reg_1 : in STD_LOGIC;
    m3_gpr_write_dbg : in STD_LOGIC;
    m3_dead_valid_hold_reg_0 : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \wb_PC_i_reg[31]\ : in STD_LOGIC;
    \wb_PC_i_reg[31]_0\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m3_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_125 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_125;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_125 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_168
     port map (
      D => D,
      Q(2 downto 0) => Q(2 downto 0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_active_access => m3_active_access,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_dead_valid_hold_reg => m3_dead_valid_hold_reg,
      m3_dead_valid_hold_reg_0 => m3_dead_valid_hold_reg_0,
      m3_gpr_write_dbg => m3_gpr_write_dbg,
      m3_msr(0) => m3_msr(0),
      m3_piperun_masked_no3 => m3_piperun_masked_no3,
      m3_raw_valid_reg => m3_PipeRun_for_ce,
      m3_raw_valid_reg_0 => m3_raw_valid_reg,
      m3_raw_valid_reg_1 => m3_raw_valid_reg_0,
      m3_raw_valid_reg_2(0) => m3_raw_valid_reg_1(0),
      sync_reset => sync_reset,
      \wb_PC_i_reg[31]\ => \wb_PC_i_reg[31]\,
      \wb_PC_i_reg[31]_0\ => \wb_PC_i_reg[31]_0\,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\,
      \wb_exception_raw_kind_reg[31]\(0) => \wb_exception_raw_kind_reg[31]\(0),
      wb_piperun_i_reg => wb_piperun_i_reg,
      wb_raw_valid_reg => wb_raw_valid_reg,
      wb_raw_valid_reg_0 => wb_raw_valid_reg_0,
      wb_raw_valid_reg_1 => wb_raw_valid_reg_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_129 is
  port (
    of_PipeRun_for_ce : out STD_LOGIC;
    p_48_out : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_raw_valid : in STD_LOGIC;
    of_piperun_masked_no10 : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ : in STD_LOGIC;
    \p_43_out__4\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    of_dead_valid_hold_reg : in STD_LOGIC;
    of_dead_valid_hold : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    \of_MSR_i_reg[30]\ : in STD_LOGIC;
    \of_MSR_i_reg[30]_0\ : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_1\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_2\ : in STD_LOGIC_VECTOR ( 0 to 0 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_129 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_129;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_129 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_160
     port map (
      D => D,
      D_0 => D_0,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0) => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Using_FPGA.Native\ => of_PipeRun_for_ce,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      WB_Div_Zero_Overflow_reg(1 downto 0) => WB_Div_Zero_Overflow_reg(1 downto 0),
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      \of_MSR_i_reg[25]\(1 downto 0) => \of_MSR_i_reg[25]\(1 downto 0),
      \of_MSR_i_reg[25]_0\(1 downto 0) => \of_MSR_i_reg[25]_0\(1 downto 0),
      \of_MSR_i_reg[25]_1\ => \of_MSR_i_reg[25]_1\,
      \of_MSR_i_reg[25]_2\(0) => \of_MSR_i_reg[25]_2\(0),
      \of_MSR_i_reg[30]\ => \of_MSR_i_reg[30]\,
      \of_MSR_i_reg[30]_0\ => \of_MSR_i_reg[30]_0\,
      of_dead_valid_hold => of_dead_valid_hold,
      of_dead_valid_hold_reg => of_dead_valid_hold_reg,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_raw_valid => of_raw_valid,
      \out\ => \out\,
      \p_43_out__4\ => \p_43_out__4\,
      p_48_out => p_48_out,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_272 is
  port (
    part_c : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_272 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_272;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_272 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_370
     port map (
      Q(0) => Q(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      part_c => part_c
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_273 is
  port (
    part_c_and_b : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_273 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_273;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_273 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_368
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_and_b => part_c_and_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_275 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_275 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_275;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_275 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_364
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_276 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_276 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_276;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_276 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_362
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_278 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_278 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_278;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_278 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_358
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_279 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_279 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_279;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_279 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_356
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_281 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_281 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_281;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_281 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_352
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_282 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_282 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_282;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_282 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_350
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_284 is
  port (
    \cur_data_i_reg[15]\ : out STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_284 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_284;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_284 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_346
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \cur_data_i_reg[15]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_285 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    OF_Use_Op_B : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_285 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_285;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_285 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_344
     port map (
      OF_Use_Op_B => OF_Use_Op_B,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_287 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    A4_out : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_287 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_287;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_287 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_337
     port map (
      A4_out => A4_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_288 is
  port (
    of_op3_ex_stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_288 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_288;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_288 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_334
     port map (
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_290 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    A3_out : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_290 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_290;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_290 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_329
     port map (
      A3_out => A3_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_292 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    of_op3_ex_stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_292 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_292;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_292 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_326
     port map (
      And_OUT => And_OUT,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_294 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    A2_out : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_294 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_294;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_294 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_321
     port map (
      A2_out => A2_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_296 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_296 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_296;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_296 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_318
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_298 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    A1_out : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_298 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_298;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_298 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_313
     port map (
      A1_out => A1_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_300 is
  port (
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    of_m2_no_stall_conflict : in STD_LOGIC;
    of_m3_stall_conflict : in STD_LOGIC;
    of_m1_no_stall_conflict : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_300 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_300;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_300 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_310
     port map (
      And_OUT => And_OUT,
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_no_stall_conflict => of_m2_no_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_302 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    A0_out : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_302 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_302;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_302 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_306
     port map (
      A0_out => A0_out,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_303 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_303 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_303;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_303 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_304
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_372 is
  port (
    part_c : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_372 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_372;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_372 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_473
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      part_c => part_c
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_375 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_375 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_375;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_375 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_467
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_378 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_378 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_378;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_378 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_461
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_381 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_381 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_381;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_381 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_455
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_384 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_384 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_384;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_384 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_449
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_388 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_388 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_388;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_388 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_440
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_390 is
  port (
    OF_Op_EX_Stall4_in : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_390 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_390;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_390 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_437
     port map (
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_392 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_392 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_392;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_392 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_432
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_394 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall4_in : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_394 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_394;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_394 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_429
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      lopt => lopt,
      lopt_1 => lopt_1,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_396 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_396 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_396;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_396 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_424
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_398 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_398 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_398;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_398 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_421
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_400 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_400 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_400;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_400 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_416
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_402 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_402 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_402;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_402 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_413
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_404 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_404 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_404;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_404 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_408
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_405 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_405 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_405;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_405 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_406
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_475 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_475 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_475;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_475 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_546
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_ex_use_conflict => of_ex_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_476 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_476 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_476;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_476 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_544
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_477 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_477 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_477;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_477 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_542
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_478 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_478 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_478;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_478 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_540
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_479 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_479 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_479;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_479 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_538
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_481 is
  port (
    of_read_ex_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_ex_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_481 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_481;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_481 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_533
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_483 is
  port (
    OF_Op_EX_Stall : out STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    of_read_ex_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_483 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_483;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_483 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_530
     port map (
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_485 is
  port (
    of_read_m0_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m0_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_485 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_485;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_485 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_525
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_487 is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    of_read_m0_write_op_conflict : in STD_LOGIC;
    OF_Op_EX_Stall : in STD_LOGIC;
    And_OUT : in STD_LOGIC;
    of_m0_no_stall_conflict : in STD_LOGIC;
    of_m1_stall_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_487 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_487;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_487 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_522
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_489 is
  port (
    of_read_m1_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m1_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_489 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_489;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_489 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_517
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_491 is
  port (
    of_m1_stall_conflict : out STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m1_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_491 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_491;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_491 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_514
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_493 is
  port (
    of_read_m2_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m2_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_493 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_493;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_493 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_509
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_495 is
  port (
    of_m2_stall_conflict : out STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    of_read_m2_write_op_conflict : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_495 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_495;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_495 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_506
     port map (
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_497 is
  port (
    of_read_m3_write_op_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_m3_addr_conflict : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_497 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_497;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_497 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_501
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_498 is
  port (
    of_m3_stall_conflict : out STD_LOGIC;
    of_read_m3_write_op_conflict : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_498 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_498;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_498 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_499
     port map (
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_bb_99 is
  port (
    if4_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    if4_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_bb_99 : entity is "carry_and_bb";
end microblaze_microblaze_0_0_carry_and_bb_99;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_bb_99 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_220
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb is
  port (
    if4_ready_tmp3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    if4_ready_tmp2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      if4_ready_tmp2 => if4_ready_tmp2,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_100 is
  port (
    if4_piperun_masked_no4 : out STD_LOGIC;
    if4_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_100 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_100;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_100 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_218
     port map (
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_105 is
  port (
    m0_piperun_masked_no2 : out STD_LOGIC;
    m0_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_105 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_105;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_105 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_208
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_masked_no2 => m0_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_106 is
  port (
    m0_piperun_masked_no3 : out STD_LOGIC;
    m0_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_106 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_106;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_106 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_206
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no2 => m0_piperun_masked_no2,
      m0_piperun_masked_no3 => m0_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_107 is
  port (
    m0_piperun_masked_no4 : out STD_LOGIC;
    m0_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_107 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_107;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_107 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_204
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_masked_no3 => m0_piperun_masked_no3,
      m0_piperun_masked_no4 => m0_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_108 is
  port (
    in0 : out STD_LOGIC;
    m0_raw_valid_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC;
    D : out STD_LOGIC;
    D_0 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    m0_piperun_masked_no4 : in STD_LOGIC;
    m0_raw_valid_reg_0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m0_raw_valid_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    m0_gpr_write_dbg : in STD_LOGIC;
    ex_gpr_write_dbg : in STD_LOGIC;
    m0_gpr_write : in STD_LOGIC;
    ex_gpr_write : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_108 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_108;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_108 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_202
     port map (
      D => D,
      D_0 => D_0,
      \Using_FPGA.Native\ => in0,
      \Using_FPGA.Native_0\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_2\(0),
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_7\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_piperun_masked_no4 => m0_piperun_masked_no4,
      m0_raw_valid_reg => m0_raw_valid_reg,
      m0_raw_valid_reg_0 => m0_raw_valid_reg_0,
      m0_raw_valid_reg_1 => m0_raw_valid_reg_1,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_110 is
  port (
    m1_piperun_masked_no1 : out STD_LOGIC;
    m1_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_110 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_110;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_110 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_198
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_raw => m1_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_111 is
  port (
    m1_piperun_masked_no2 : out STD_LOGIC;
    m1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_111 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_111;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_111 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_196
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_masked_no2 => m1_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_114 is
  port (
    m2_piperun_masked_no1 : out STD_LOGIC;
    m2_piperun_raw : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    DReady : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_114 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_114;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_114 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_190
     port map (
      DReady => DReady,
      DWait => DWait,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_allow_dready => m2_allow_dready,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_raw => m2_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_115 is
  port (
    m2_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_115 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_115;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_115 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_188
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_masked_no2 => m2_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_116 is
  port (
    m2_piperun_masked_no3 : out STD_LOGIC;
    m2_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_116 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_116;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_116 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_186
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_piperun_masked_no2 => m2_piperun_masked_no2,
      m2_piperun_masked_no3 => m2_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_117 is
  port (
    m2_piperun_masked_no4 : out STD_LOGIC;
    m2_piperun_masked_no3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_117 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_117;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_117 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_184
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m2_piperun_masked_no3 => m2_piperun_masked_no3,
      m2_piperun_masked_no4 => m2_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_118 is
  port (
    m2_piperun_masked_no5 : out STD_LOGIC;
    m2_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_118 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_118;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_118 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_182
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m2_piperun_masked_no4 => m2_piperun_masked_no4,
      m2_piperun_masked_no5 => m2_piperun_masked_no5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_122 is
  port (
    m3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m3_piperun_raw : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_122 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_122;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_122 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_174
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_raw => m3_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_123 is
  port (
    m3_piperun_masked_no2 : out STD_LOGIC;
    m3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_123 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_123;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_123 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_172
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_masked_no2 => m3_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_124 is
  port (
    m3_piperun_masked_no3 : out STD_LOGIC;
    WB_MSR_Set_IE_reg : in STD_LOGIC;
    m3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_124 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_124;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_124 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_170
     port map (
      WB_MSR_Set_IE_reg => WB_MSR_Set_IE_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_piperun_masked_no2 => m3_piperun_masked_no2,
      m3_piperun_masked_no3 => m3_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_127 is
  port (
    of_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_127 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_127;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_127 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_164
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_raw => of_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_128 is
  port (
    of_piperun_masked_no10 : out STD_LOGIC;
    of_piperun_masked_no9 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_128 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_128;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_128 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_162
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_130 is
  port (
    of_piperun_masked_no2 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_130 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_130;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_130 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_158
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_masked_no2 => of_piperun_masked_no2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_131 is
  port (
    of_piperun_masked_no3 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_131 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_131;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_131 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_156
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_piperun_masked_no2 => of_piperun_masked_no2,
      of_piperun_masked_no3 => of_piperun_masked_no3
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_132 is
  port (
    of_piperun_masked_no4 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_132 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_132;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_132 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_154
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no3 => of_piperun_masked_no3,
      of_piperun_masked_no4 => of_piperun_masked_no4
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_133 is
  port (
    of_piperun_masked_no5 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_133 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_133;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_133 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_152
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no4 => of_piperun_masked_no4,
      of_piperun_masked_no5 => of_piperun_masked_no5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_134 is
  port (
    of_piperun_masked_no6 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_134 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_134;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_134 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_150
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no5 => of_piperun_masked_no5,
      of_piperun_masked_no6 => of_piperun_masked_no6
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_135 is
  port (
    of_piperun_masked_no7 : out STD_LOGIC;
    of_piperun_masked_no6 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_135 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_135;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_135 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_148
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      of_piperun_masked_no6 => of_piperun_masked_no6,
      of_piperun_masked_no7 => of_piperun_masked_no7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_136 is
  port (
    of_piperun_masked_no8 : out STD_LOGIC;
    of_piperun_masked_no7 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_136 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_136;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_136 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_146
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_masked_no7 => of_piperun_masked_no7,
      of_piperun_masked_no8 => of_piperun_masked_no8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_137 is
  port (
    of_piperun_masked_no9 : out STD_LOGIC;
    ex_is_div_instr_i_reg : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    of_piperun_masked_no8 : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_0\ : in STD_LOGIC;
    \Using_FPGA.Native_i_1__8_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_137 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_137;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_137 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_144
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_i_1__8\ => \Using_FPGA.Native_i_1__8\,
      \Using_FPGA.Native_i_1__8_0\ => \Using_FPGA.Native_i_1__8_0\,
      \Using_FPGA.Native_i_1__8_1\ => \Using_FPGA.Native_i_1__8_1\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_is_div_instr_i_reg => ex_is_div_instr_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_piperun_masked_no8 => of_piperun_masked_no8,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_374 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c_or_not_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_374 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_374;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_374 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_469
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_or_not_b => part_c_or_not_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_377 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_377 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_377;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_377 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_463
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_380 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_380 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_380;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_380 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_457
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_383 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_383 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_383;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_383 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_451
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_386 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_386 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_386;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_386 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_445
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_80 is
  port (
    bp1_raw_valid_reg : out STD_LOGIC;
    bp1_dead_fetch_hold_bt : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    bp0_piperun_masked_no1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_dead_fetch_hold_reg_0 : in STD_LOGIC;
    bp1_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_80 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_80;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_80 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_262
     port map (
      E(0) => E(0),
      bp0_dead_fetch_hold => bp0_dead_fetch_hold,
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      bp1_dead_fetch_hold_bt => bp1_dead_fetch_hold_bt,
      bp1_dead_fetch_hold_reg => bp1_dead_fetch_hold_reg,
      bp1_dead_fetch_hold_reg_0 => bp1_dead_fetch_hold_reg_0,
      bp1_dead_fetch_hold_reg_1 => bp1_dead_fetch_hold_reg_1,
      bp1_raw_valid_reg => bp1_raw_valid_reg,
      kill_fetch_mmu => kill_fetch_mmu,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_81 is
  port (
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    bp1_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_81 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_81;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_81 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_258
     port map (
      E(0) => E(0),
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_83 is
  port (
    ex_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    ex_piperun_raw : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_83 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_83;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_83 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_254
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_raw => ex_piperun_raw,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_84 is
  port (
    ex_piperun_masked_no2 : out STD_LOGIC;
    ex_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_84 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_84;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_84 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_252
     port map (
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_85 is
  port (
    ex_piperun_masked_no3 : out STD_LOGIC;
    ex_piperun_masked_no2 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_85 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_85;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_85 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_250
     port map (
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_86 is
  port (
    ex_piperun_masked_no4 : out STD_LOGIC;
    ex_piperun_masked_no3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_86 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_86;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_86 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_248
     port map (
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_87 is
  port (
    ex_piperun_masked_no5 : out STD_LOGIC;
    ex_piperun_masked_no4 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_87 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_87;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_87 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_246
     port map (
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_88 is
  port (
    ex_piperun_masked_no6 : out STD_LOGIC;
    ex_piperun_masked_no5 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_88 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_88;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_88 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_244
     port map (
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_90 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if0_raw_valid_reg : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_90 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_90;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_90 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_238
     port map (
      if0_raw_valid_reg => if0_raw_valid_reg,
      if2_raw_valid_reg => if2_raw_valid_reg,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_92 is
  port (
    if2_piperun_masked_no2 : out STD_LOGIC;
    if3_ibus_access_i_reg : in STD_LOGIC;
    if2_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_92 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_92;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_92 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_234
     port map (
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_ibus_access_i_reg => if3_ibus_access_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_93 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : out STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg\ : out STD_LOGIC;
    if3_dead_fetch_hold_reg : out STD_LOGIC;
    if2_piperun_masked_no2 : in STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg_0\ : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    if3_allow_iready : in STD_LOGIC;
    if2_ilmb_issued : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if3_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if3_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if3_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_93 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_93;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_93 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_232
     port map (
      IWAIT => IWAIT,
      \Use_ILMB.if2_ilmb_issued_reg\ => \Use_ILMB.if2_ilmb_issued_reg\,
      \Use_ILMB.if2_ilmb_issued_reg_0\ => \Use_ILMB.if2_ilmb_issued_reg_0\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      if2_ibus_first_cycle_raw_reg => if2_ibus_first_cycle_raw_reg,
      if2_ilmb_issued => if2_ilmb_issued,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_allow_iready => if3_allow_iready,
      if3_dead_fetch_hold_reg => if3_dead_fetch_hold_reg,
      if3_dead_fetch_hold_reg_0 => if3_dead_fetch_hold_reg_0,
      if3_dead_fetch_hold_reg_1 => if3_dead_fetch_hold_reg_1,
      if3_dead_fetch_hold_reg_2 => if3_dead_fetch_hold_reg_2,
      if3_dead_fetch_hold_reg_3 => if3_dead_fetch_hold_reg_3,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_95 is
  port (
    if3_piperun_masked_no2 : out STD_LOGIC;
    if3_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_95 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_95;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_95 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_228
     port map (
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_96 is
  port (
    if3_piperun_masked_no3 : out STD_LOGIC;
    if4_ibus_access_i_reg : in STD_LOGIC;
    if3_piperun_masked_no2 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_96 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_96;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_96 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_226
     port map (
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if4_ibus_access_i_reg => if4_ibus_access_i_reg,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_and_n_bb_97 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC;
    if4_dead_fetch_hold_reg : out STD_LOGIC;
    if3_piperun_masked_no3 : in STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg\ : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Use_ILMB.if3_potential_bubble_reg\ : in STD_LOGIC;
    if3_potential_bubble : in STD_LOGIC;
    D : in STD_LOGIC_VECTOR ( 0 to 0 );
    if3_ilmb_iready : in STD_LOGIC;
    if4_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_1 : in STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if4_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if4_dead_fetch_hold_reg_3 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_and_n_bb_97 : entity is "carry_and_n_bb";
end microblaze_microblaze_0_0_carry_and_n_bb_97;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_and_n_bb_97 is
begin
carry_and_i1: entity work.microblaze_microblaze_0_0_carry_and_224
     port map (
      D(0) => D(0),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg\,
      \Use_Async_Reset.sync_reset_reg_0\ => \Use_Async_Reset.sync_reset_reg_0\,
      \Use_ILMB.if3_iready_hold_reg\ => \Use_ILMB.if3_iready_hold_reg\,
      \Use_ILMB.if3_potential_bubble_reg\ => \Use_ILMB.if3_potential_bubble_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      if3_ilmb_iready => if3_ilmb_iready,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if3_potential_bubble => if3_potential_bubble,
      if4_dead_fetch_hold_reg => if4_dead_fetch_hold_reg,
      if4_dead_fetch_hold_reg_0 => if4_dead_fetch_hold_reg_0,
      if4_dead_fetch_hold_reg_1 => if4_dead_fetch_hold_reg_1,
      if4_dead_fetch_hold_reg_2 => if4_dead_fetch_hold_reg_2,
      if4_dead_fetch_hold_reg_3 => if4_dead_fetch_hold_reg_3,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb is
  port (
    if4_ready_tmp1 : out STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_46
     port map (
      if4_ready_tmp1 => if4_ready_tmp1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_101 is
  port (
    if4_piperun_masked_no1 : out STD_LOGIC;
    if4_ready : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_101 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_101;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_101 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_216
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_ready => if4_ready,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_102 is
  port (
    if4_piperun_masked_no2 : out STD_LOGIC;
    if4_piperun_masked_no1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_102 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_102;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_102 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_214
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_103 is
  port (
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ : in STD_LOGIC;
    if4_piperun_masked_no4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_103 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_103;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_103 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_212
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ => \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_274 is
  port (
    of_ex_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c_and_b : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_274 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_274;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_274 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_366
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_and_b => part_c_and_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_277 is
  port (
    of_m0_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_277 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_277;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_277 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_360
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_280 is
  port (
    of_m1_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_280 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_280;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_280 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_354
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_283 is
  port (
    of_m2_use_conflict : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_283 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_283;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_283 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_348
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_286 is
  port (
    of_m3_use_conflict : out STD_LOGIC;
    S_4 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_286 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_286;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_286 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_342
     port map (
      S_4 => S_4,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_41 is
  port (
    if4_ready_tmp2 : out STD_LOGIC;
    S : in STD_LOGIC;
    if4_ready_tmp1 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_41 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_41;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_41 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_44
     port map (
      S => S,
      if4_ready_tmp1 => if4_ready_tmp1,
      if4_ready_tmp2 => if4_ready_tmp2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_42 is
  port (
    if4_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    if4_ready_tmp3 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_42 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_42;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_42 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or
     port map (
      S_0 => S_0,
      if4_ready => if4_ready,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_49 is
  port (
    m3_ready_tmp : out STD_LOGIC;
    S : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_49 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_49;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_49 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_53
     port map (
      S => S,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m3_ready_tmp => m3_ready_tmp
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_50 is
  port (
    m3_databus_ready : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    m3_ready_tmp : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_50 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_50;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_50 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_51
     port map (
      S_0 => S_0,
      lopt => lopt,
      lopt_1 => lopt_1,
      m3_databus_ready => m3_databus_ready,
      m3_ready_tmp => m3_ready_tmp
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_58 is
  port (
    kill_fetch : out STD_LOGIC;
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    if2_raw_valid_reg : out STD_LOGIC;
    ex_jump : in STD_LOGIC;
    ex_gpr_write_addr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    if2_dead_fetch_hold_reg : in STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_58 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_58;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_58 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_570
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_4\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(0) => ex_gpr_write_addr(0),
      ex_jump => ex_jump,
      if2_dead_fetch_hold_reg => if2_dead_fetch_hold_reg,
      if2_dead_fetch_hold_reg_0 => if2_dead_fetch_hold_reg_0,
      if2_raw_valid_reg => if2_raw_valid_reg,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_bb_59 is
  port (
    \Using_FPGA.Native\ : out STD_LOGIC;
    bp1_dead_fetch_hold_reg : out STD_LOGIC;
    if2_ibus_access_raw0 : out STD_LOGIC;
    bp0_dead_fetch_hold_reg : out STD_LOGIC;
    kill_fetch : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_0 : in STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    bp0_dead_fetch_hold : in STD_LOGIC;
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    bp0_dead_fetch_hold_reg_0 : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_bb_59 : entity is "carry_or_bb";
end microblaze_microblaze_0_0_carry_or_bb_59;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_bb_59 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_568
     port map (
      DI(0) => DI(0),
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      bp0_dead_fetch_hold => bp0_dead_fetch_hold,
      bp0_dead_fetch_hold_reg => bp0_dead_fetch_hold_reg,
      bp0_dead_fetch_hold_reg_0 => bp0_dead_fetch_hold_reg_0,
      bp1_dead_fetch_hold_reg => bp1_dead_fetch_hold_reg,
      if2_ibus_access_raw0 => if2_ibus_access_raw0,
      if2_ibus_first_cycle_raw_reg => if2_ibus_first_cycle_raw_reg,
      if2_ibus_first_cycle_raw_reg_0 => if2_ibus_first_cycle_raw_reg_0,
      if2_ibus_first_cycle_raw_reg_1 => if2_ibus_first_cycle_raw_reg_1,
      kill_fetch => kill_fetch,
      lopt => lopt,
      lopt_1 => lopt_1,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb is
  port (
    bp0_piperun_masked_no1 : out STD_LOGIC;
    \bp1_PC_i_reg[0]\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_260
     port map (
      E(0) => E(0),
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      \bp1_PC_i_reg[0]\ => \bp1_PC_i_reg[0]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_109 is
  port (
    m0_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    m1_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_109 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_109;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_109 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_200
     port map (
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_piperun_raw => m0_piperun_raw,
      m1_dead_valid_hold => m1_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_113 is
  port (
    m1_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m2_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_113 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_113;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_113 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_192
     port map (
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m1_piperun_raw => m1_piperun_raw,
      m2_dead_valid_hold => m2_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_120 is
  port (
    m2_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    m3_dead_valid_hold : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_120 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_120;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_120 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_178
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      m2_piperun_raw => m2_piperun_raw,
      m3_dead_valid_hold => m3_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_121 is
  port (
    m3_piperun_data_raw : out STD_LOGIC;
    m3_databus_ready : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_121 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_121;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_121 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_176
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_databus_ready => m3_databus_ready,
      m3_piperun_data_raw => m3_piperun_data_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_126 is
  port (
    m3_piperun_raw : out STD_LOGIC;
    m3_piperun_data_raw : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_126 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_126;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_126 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_166
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m3_piperun_data_raw => m3_piperun_data_raw,
      m3_piperun_raw => m3_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_138 is
  port (
    of_piperun_raw : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    ex_dead_valid_hold : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_138 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_138;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_138 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_142
     port map (
      \Using_FPGA.Native\(0) => \Using_FPGA.Native\(0),
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      of_piperun_raw => of_piperun_raw
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_373 is
  port (
    part_c_or_not_b : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    part_c : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_373 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_373;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_373 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_471
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_or_not_b => part_c_or_not_b
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_376 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_376 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_376;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_376 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_465
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_379 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_379 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_379;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_379 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_459
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_382 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_382 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_382;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_382 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_453
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_385 is
  port (
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_385 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_385;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_385 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_447
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_82 is
  port (
    bp1_piperun_masked_no1 : out STD_LOGIC;
    \if0_PC_i_reg[0]\ : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_82 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_82;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_82 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_256
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      \if0_PC_i_reg[0]\ => \if0_PC_i_reg[0]\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_89 is
  port (
    ex_piperun_raw : out STD_LOGIC;
    in0 : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    m0_dead_valid_hold : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_89 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_89;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_89 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_240
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      ex_piperun_raw => ex_piperun_raw,
      in0 => in0,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      m0_dead_valid_hold => m0_dead_valid_hold
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_91 is
  port (
    if2_raw_valid_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg : out STD_LOGIC;
    if2_dead_fetch_hold_reg_0 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_1 : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    if2_dead_fetch_hold_reg_2 : in STD_LOGIC;
    if2_dead_fetch_hold_reg_3 : in STD_LOGIC;
    kill_fetch_mmu : in STD_LOGIC;
    if2_dead_fetch_hold_reg_4 : in STD_LOGIC;
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC;
    lopt_6 : out STD_LOGIC;
    lopt_7 : in STD_LOGIC;
    lopt_8 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_91 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_91;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_91 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_236
     port map (
      if2_dead_fetch_hold_reg => if2_dead_fetch_hold_reg,
      if2_dead_fetch_hold_reg_0 => if2_dead_fetch_hold_reg_0,
      if2_dead_fetch_hold_reg_1 => if2_dead_fetch_hold_reg_1,
      if2_dead_fetch_hold_reg_2 => if2_dead_fetch_hold_reg_2,
      if2_dead_fetch_hold_reg_3 => if2_dead_fetch_hold_reg_3,
      if2_dead_fetch_hold_reg_4 => if2_dead_fetch_hold_reg_4,
      if2_raw_valid_reg => if2_raw_valid_reg,
      kill_fetch_mmu => kill_fetch_mmu,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      sync_reset => sync_reset
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_94 is
  port (
    if2_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_94 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_94;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_94 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_230
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_carry_or_n_bb_98 is
  port (
    if3_piperun_masked_no1 : out STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_carry_or_n_bb_98 : entity is "carry_or_n_bb";
end microblaze_microblaze_0_0_carry_or_n_bb_98;

architecture STRUCTURE of microblaze_microblaze_0_0_carry_or_n_bb_98 is
begin
carry_or_i1: entity work.microblaze_microblaze_0_0_carry_or_222
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      lopt => lopt,
      lopt_1 => lopt_1
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_339
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_289 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_289 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_289;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_289 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_331
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_293 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_293 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_293;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_293 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_323
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_297 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_297 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_297;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_297 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_315
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_301 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_301 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_301;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_301 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_387 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_387 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_387;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_387 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_442
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_391 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_391 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_391;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_391 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_434
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_395 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_395 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_395;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_395 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_426
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_399 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_399 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_399;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_399 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_418
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_403 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_403 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_403;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_403 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_410
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_480 is
  port (
    of_ex_addr_conflict : out STD_LOGIC;
    S : in STD_LOGIC;
    of_ex_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_480 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_480;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_480 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_535
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_484 is
  port (
    of_m0_addr_conflict : out STD_LOGIC;
    S_0 : in STD_LOGIC;
    of_m0_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_484 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_484;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_484 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_527
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_488 is
  port (
    of_m1_addr_conflict : out STD_LOGIC;
    S_1 : in STD_LOGIC;
    of_m1_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_488 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_488;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_488 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_519
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_492 is
  port (
    of_m2_addr_conflict : out STD_LOGIC;
    S_2 : in STD_LOGIC;
    of_m2_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_492 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_492;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_492 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_511
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_comparator_bool_496 is
  port (
    of_m3_addr_conflict : out STD_LOGIC;
    S_3 : in STD_LOGIC;
    of_m3_use_conflict : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_comparator_bool_496 : entity is "comparator_bool";
end microblaze_microblaze_0_0_comparator_bool_496;

architecture STRUCTURE of microblaze_microblaze_0_0_comparator_bool_496 is
begin
comparator_i1: entity work.microblaze_microblaze_0_0_comparator_503
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_mul_unit_ff is
  port (
    m1_mul_result : out STD_LOGIC_VECTOR ( 0 to 31 );
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.DSP48E1_I1_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    m0_piperun : in STD_LOGIC;
    sync_reset : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_mul_unit_ff : entity is "mul_unit_ff";
end microblaze_microblaze_0_0_mul_unit_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_mul_unit_ff is
  signal m0_bd_p : STD_LOGIC_VECTOR ( 31 to 47 );
  signal m0_bd_pout : STD_LOGIC_VECTOR ( 0 to 47 );
  signal m1_ad_pout : STD_LOGIC_VECTOR ( 0 to 47 );
begin
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(31),
      Q => m1_mul_result(15),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(32),
      Q => m1_mul_result(16),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(33),
      Q => m1_mul_result(17),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(34),
      Q => m1_mul_result(18),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(35),
      Q => m1_mul_result(19),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(36),
      Q => m1_mul_result(20),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(37),
      Q => m1_mul_result(21),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(38),
      Q => m1_mul_result(22),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(39),
      Q => m1_mul_result(23),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(40),
      Q => m1_mul_result(24),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(41),
      Q => m1_mul_result(25),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(42),
      Q => m1_mul_result(26),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(43),
      Q => m1_mul_result(27),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(44),
      Q => m1_mul_result(28),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(45),
      Q => m1_mul_result(29),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(46),
      Q => m1_mul_result(30),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.M1_Mul_Result_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_piperun,
      D => m0_bd_p(47),
      Q => m1_mul_result(31),
      R => sync_reset
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I2\: entity work.\microblaze_microblaze_0_0_dsp_module__parameterized1\
     port map (
      Clk => Clk,
      PCOUT(47) => m1_ad_pout(0),
      PCOUT(46) => m1_ad_pout(1),
      PCOUT(45) => m1_ad_pout(2),
      PCOUT(44) => m1_ad_pout(3),
      PCOUT(43) => m1_ad_pout(4),
      PCOUT(42) => m1_ad_pout(5),
      PCOUT(41) => m1_ad_pout(6),
      PCOUT(40) => m1_ad_pout(7),
      PCOUT(39) => m1_ad_pout(8),
      PCOUT(38) => m1_ad_pout(9),
      PCOUT(37) => m1_ad_pout(10),
      PCOUT(36) => m1_ad_pout(11),
      PCOUT(35) => m1_ad_pout(12),
      PCOUT(34) => m1_ad_pout(13),
      PCOUT(33) => m1_ad_pout(14),
      PCOUT(32) => m1_ad_pout(15),
      PCOUT(31) => m1_ad_pout(16),
      PCOUT(30) => m1_ad_pout(17),
      PCOUT(29) => m1_ad_pout(18),
      PCOUT(28) => m1_ad_pout(19),
      PCOUT(27) => m1_ad_pout(20),
      PCOUT(26) => m1_ad_pout(21),
      PCOUT(25) => m1_ad_pout(22),
      PCOUT(24) => m1_ad_pout(23),
      PCOUT(23) => m1_ad_pout(24),
      PCOUT(22) => m1_ad_pout(25),
      PCOUT(21) => m1_ad_pout(26),
      PCOUT(20) => m1_ad_pout(27),
      PCOUT(19) => m1_ad_pout(28),
      PCOUT(18) => m1_ad_pout(29),
      PCOUT(17) => m1_ad_pout(30),
      PCOUT(16) => m1_ad_pout(31),
      PCOUT(15) => m1_ad_pout(32),
      PCOUT(14) => m1_ad_pout(33),
      PCOUT(13) => m1_ad_pout(34),
      PCOUT(12) => m1_ad_pout(35),
      PCOUT(11) => m1_ad_pout(36),
      PCOUT(10) => m1_ad_pout(37),
      PCOUT(9) => m1_ad_pout(38),
      PCOUT(8) => m1_ad_pout(39),
      PCOUT(7) => m1_ad_pout(40),
      PCOUT(6) => m1_ad_pout(41),
      PCOUT(5) => m1_ad_pout(42),
      PCOUT(4) => m1_ad_pout(43),
      PCOUT(3) => m1_ad_pout(44),
      PCOUT(2) => m1_ad_pout(45),
      PCOUT(1) => m1_ad_pout(46),
      PCOUT(0) => m1_ad_pout(47),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_0\(14 downto 0) => \Using_FPGA.DSP48E1_I1_0\(31 downto 17),
      \Using_FPGA.DSP48E1_I1_1\(47) => m0_bd_pout(0),
      \Using_FPGA.DSP48E1_I1_1\(46) => m0_bd_pout(1),
      \Using_FPGA.DSP48E1_I1_1\(45) => m0_bd_pout(2),
      \Using_FPGA.DSP48E1_I1_1\(44) => m0_bd_pout(3),
      \Using_FPGA.DSP48E1_I1_1\(43) => m0_bd_pout(4),
      \Using_FPGA.DSP48E1_I1_1\(42) => m0_bd_pout(5),
      \Using_FPGA.DSP48E1_I1_1\(41) => m0_bd_pout(6),
      \Using_FPGA.DSP48E1_I1_1\(40) => m0_bd_pout(7),
      \Using_FPGA.DSP48E1_I1_1\(39) => m0_bd_pout(8),
      \Using_FPGA.DSP48E1_I1_1\(38) => m0_bd_pout(9),
      \Using_FPGA.DSP48E1_I1_1\(37) => m0_bd_pout(10),
      \Using_FPGA.DSP48E1_I1_1\(36) => m0_bd_pout(11),
      \Using_FPGA.DSP48E1_I1_1\(35) => m0_bd_pout(12),
      \Using_FPGA.DSP48E1_I1_1\(34) => m0_bd_pout(13),
      \Using_FPGA.DSP48E1_I1_1\(33) => m0_bd_pout(14),
      \Using_FPGA.DSP48E1_I1_1\(32) => m0_bd_pout(15),
      \Using_FPGA.DSP48E1_I1_1\(31) => m0_bd_pout(16),
      \Using_FPGA.DSP48E1_I1_1\(30) => m0_bd_pout(17),
      \Using_FPGA.DSP48E1_I1_1\(29) => m0_bd_pout(18),
      \Using_FPGA.DSP48E1_I1_1\(28) => m0_bd_pout(19),
      \Using_FPGA.DSP48E1_I1_1\(27) => m0_bd_pout(20),
      \Using_FPGA.DSP48E1_I1_1\(26) => m0_bd_pout(21),
      \Using_FPGA.DSP48E1_I1_1\(25) => m0_bd_pout(22),
      \Using_FPGA.DSP48E1_I1_1\(24) => m0_bd_pout(23),
      \Using_FPGA.DSP48E1_I1_1\(23) => m0_bd_pout(24),
      \Using_FPGA.DSP48E1_I1_1\(22) => m0_bd_pout(25),
      \Using_FPGA.DSP48E1_I1_1\(21) => m0_bd_pout(26),
      \Using_FPGA.DSP48E1_I1_1\(20) => m0_bd_pout(27),
      \Using_FPGA.DSP48E1_I1_1\(19) => m0_bd_pout(28),
      \Using_FPGA.DSP48E1_I1_1\(18) => m0_bd_pout(29),
      \Using_FPGA.DSP48E1_I1_1\(17) => m0_bd_pout(30),
      \Using_FPGA.DSP48E1_I1_1\(16) => m0_bd_pout(31),
      \Using_FPGA.DSP48E1_I1_1\(15) => m0_bd_pout(32),
      \Using_FPGA.DSP48E1_I1_1\(14) => m0_bd_pout(33),
      \Using_FPGA.DSP48E1_I1_1\(13) => m0_bd_pout(34),
      \Using_FPGA.DSP48E1_I1_1\(12) => m0_bd_pout(35),
      \Using_FPGA.DSP48E1_I1_1\(11) => m0_bd_pout(36),
      \Using_FPGA.DSP48E1_I1_1\(10) => m0_bd_pout(37),
      \Using_FPGA.DSP48E1_I1_1\(9) => m0_bd_pout(38),
      \Using_FPGA.DSP48E1_I1_1\(8) => m0_bd_pout(39),
      \Using_FPGA.DSP48E1_I1_1\(7) => m0_bd_pout(40),
      \Using_FPGA.DSP48E1_I1_1\(6) => m0_bd_pout(41),
      \Using_FPGA.DSP48E1_I1_1\(5) => m0_bd_pout(42),
      \Using_FPGA.DSP48E1_I1_1\(4) => m0_bd_pout(43),
      \Using_FPGA.DSP48E1_I1_1\(3) => m0_bd_pout(44),
      \Using_FPGA.DSP48E1_I1_1\(2) => m0_bd_pout(45),
      \Using_FPGA.DSP48E1_I1_1\(1) => m0_bd_pout(46),
      \Using_FPGA.DSP48E1_I1_1\(0) => m0_bd_pout(47),
      m0_piperun => m0_piperun
    );
\Use_HW_MUL.Using_DSP48_Architectures.No_MUL64.dsp_module_I3\: entity work.\microblaze_microblaze_0_0_dsp_module__parameterized3\
     port map (
      Clk => Clk,
      PCOUT(47) => m1_ad_pout(0),
      PCOUT(46) => m1_ad_pout(1),
      PCOUT(45) => m1_ad_pout(2),
      PCOUT(44) => m1_ad_pout(3),
      PCOUT(43) => m1_ad_pout(4),
      PCOUT(42) => m1_ad_pout(5),
      PCOUT(41) => m1_ad_pout(6),
      PCOUT(40) => m1_ad_pout(7),
      PCOUT(39) => m1_ad_pout(8),
      PCOUT(38) => m1_ad_pout(9),
      PCOUT(37) => m1_ad_pout(10),
      PCOUT(36) => m1_ad_pout(11),
      PCOUT(35) => m1_ad_pout(12),
      PCOUT(34) => m1_ad_pout(13),
      PCOUT(33) => m1_ad_pout(14),
      PCOUT(32) => m1_ad_pout(15),
      PCOUT(31) => m1_ad_pout(16),
      PCOUT(30) => m1_ad_pout(17),
      PCOUT(29) => m1_ad_pout(18),
      PCOUT(28) => m1_ad_pout(19),
      PCOUT(27) => m1_ad_pout(20),
      PCOUT(26) => m1_ad_pout(21),
      PCOUT(25) => m1_ad_pout(22),
      PCOUT(24) => m1_ad_pout(23),
      PCOUT(23) => m1_ad_pout(24),
      PCOUT(22) => m1_ad_pout(25),
      PCOUT(21) => m1_ad_pout(26),
      PCOUT(20) => m1_ad_pout(27),
      PCOUT(19) => m1_ad_pout(28),
      PCOUT(18) => m1_ad_pout(29),
      PCOUT(17) => m1_ad_pout(30),
      PCOUT(16) => m1_ad_pout(31),
      PCOUT(15) => m1_ad_pout(32),
      PCOUT(14) => m1_ad_pout(33),
      PCOUT(13) => m1_ad_pout(34),
      PCOUT(12) => m1_ad_pout(35),
      PCOUT(11) => m1_ad_pout(36),
      PCOUT(10) => m1_ad_pout(37),
      PCOUT(9) => m1_ad_pout(38),
      PCOUT(8) => m1_ad_pout(39),
      PCOUT(7) => m1_ad_pout(40),
      PCOUT(6) => m1_ad_pout(41),
      PCOUT(5) => m1_ad_pout(42),
      PCOUT(4) => m1_ad_pout(43),
      PCOUT(3) => m1_ad_pout(44),
      PCOUT(2) => m1_ad_pout(45),
      PCOUT(1) => m1_ad_pout(46),
      PCOUT(0) => m1_ad_pout(47),
      Q(14 downto 0) => Q(31 downto 17),
      \Using_FPGA.DSP48E1_I1\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_0\(16 downto 0) => \Using_FPGA.DSP48E1_I1_0\(16 downto 0),
      m0_piperun => m0_piperun,
      m1_mul_result(14) => m1_mul_result(0),
      m1_mul_result(13) => m1_mul_result(1),
      m1_mul_result(12) => m1_mul_result(2),
      m1_mul_result(11) => m1_mul_result(3),
      m1_mul_result(10) => m1_mul_result(4),
      m1_mul_result(9) => m1_mul_result(5),
      m1_mul_result(8) => m1_mul_result(6),
      m1_mul_result(7) => m1_mul_result(7),
      m1_mul_result(6) => m1_mul_result(8),
      m1_mul_result(5) => m1_mul_result(9),
      m1_mul_result(4) => m1_mul_result(10),
      m1_mul_result(3) => m1_mul_result(11),
      m1_mul_result(2) => m1_mul_result(12),
      m1_mul_result(1) => m1_mul_result(13),
      m1_mul_result(0) => m1_mul_result(14)
    );
\Use_HW_MUL.Using_DSP48_Architectures.dsp_module_I1\: entity work.microblaze_microblaze_0_0_dsp_module
     port map (
      Clk => Clk,
      D(16) => m0_bd_p(31),
      D(15) => m0_bd_p(32),
      D(14) => m0_bd_p(33),
      D(13) => m0_bd_p(34),
      D(12) => m0_bd_p(35),
      D(11) => m0_bd_p(36),
      D(10) => m0_bd_p(37),
      D(9) => m0_bd_p(38),
      D(8) => m0_bd_p(39),
      D(7) => m0_bd_p(40),
      D(6) => m0_bd_p(41),
      D(5) => m0_bd_p(42),
      D(4) => m0_bd_p(43),
      D(3) => m0_bd_p(44),
      D(2) => m0_bd_p(45),
      D(1) => m0_bd_p(46),
      D(0) => m0_bd_p(47),
      Q(16 downto 0) => Q(16 downto 0),
      \Using_FPGA.DSP48E1_I1\(47) => m0_bd_pout(0),
      \Using_FPGA.DSP48E1_I1\(46) => m0_bd_pout(1),
      \Using_FPGA.DSP48E1_I1\(45) => m0_bd_pout(2),
      \Using_FPGA.DSP48E1_I1\(44) => m0_bd_pout(3),
      \Using_FPGA.DSP48E1_I1\(43) => m0_bd_pout(4),
      \Using_FPGA.DSP48E1_I1\(42) => m0_bd_pout(5),
      \Using_FPGA.DSP48E1_I1\(41) => m0_bd_pout(6),
      \Using_FPGA.DSP48E1_I1\(40) => m0_bd_pout(7),
      \Using_FPGA.DSP48E1_I1\(39) => m0_bd_pout(8),
      \Using_FPGA.DSP48E1_I1\(38) => m0_bd_pout(9),
      \Using_FPGA.DSP48E1_I1\(37) => m0_bd_pout(10),
      \Using_FPGA.DSP48E1_I1\(36) => m0_bd_pout(11),
      \Using_FPGA.DSP48E1_I1\(35) => m0_bd_pout(12),
      \Using_FPGA.DSP48E1_I1\(34) => m0_bd_pout(13),
      \Using_FPGA.DSP48E1_I1\(33) => m0_bd_pout(14),
      \Using_FPGA.DSP48E1_I1\(32) => m0_bd_pout(15),
      \Using_FPGA.DSP48E1_I1\(31) => m0_bd_pout(16),
      \Using_FPGA.DSP48E1_I1\(30) => m0_bd_pout(17),
      \Using_FPGA.DSP48E1_I1\(29) => m0_bd_pout(18),
      \Using_FPGA.DSP48E1_I1\(28) => m0_bd_pout(19),
      \Using_FPGA.DSP48E1_I1\(27) => m0_bd_pout(20),
      \Using_FPGA.DSP48E1_I1\(26) => m0_bd_pout(21),
      \Using_FPGA.DSP48E1_I1\(25) => m0_bd_pout(22),
      \Using_FPGA.DSP48E1_I1\(24) => m0_bd_pout(23),
      \Using_FPGA.DSP48E1_I1\(23) => m0_bd_pout(24),
      \Using_FPGA.DSP48E1_I1\(22) => m0_bd_pout(25),
      \Using_FPGA.DSP48E1_I1\(21) => m0_bd_pout(26),
      \Using_FPGA.DSP48E1_I1\(20) => m0_bd_pout(27),
      \Using_FPGA.DSP48E1_I1\(19) => m0_bd_pout(28),
      \Using_FPGA.DSP48E1_I1\(18) => m0_bd_pout(29),
      \Using_FPGA.DSP48E1_I1\(17) => m0_bd_pout(30),
      \Using_FPGA.DSP48E1_I1\(16) => m0_bd_pout(31),
      \Using_FPGA.DSP48E1_I1\(15) => m0_bd_pout(32),
      \Using_FPGA.DSP48E1_I1\(14) => m0_bd_pout(33),
      \Using_FPGA.DSP48E1_I1\(13) => m0_bd_pout(34),
      \Using_FPGA.DSP48E1_I1\(12) => m0_bd_pout(35),
      \Using_FPGA.DSP48E1_I1\(11) => m0_bd_pout(36),
      \Using_FPGA.DSP48E1_I1\(10) => m0_bd_pout(37),
      \Using_FPGA.DSP48E1_I1\(9) => m0_bd_pout(38),
      \Using_FPGA.DSP48E1_I1\(8) => m0_bd_pout(39),
      \Using_FPGA.DSP48E1_I1\(7) => m0_bd_pout(40),
      \Using_FPGA.DSP48E1_I1\(6) => m0_bd_pout(41),
      \Using_FPGA.DSP48E1_I1\(5) => m0_bd_pout(42),
      \Using_FPGA.DSP48E1_I1\(4) => m0_bd_pout(43),
      \Using_FPGA.DSP48E1_I1\(3) => m0_bd_pout(44),
      \Using_FPGA.DSP48E1_I1\(2) => m0_bd_pout(45),
      \Using_FPGA.DSP48E1_I1\(1) => m0_bd_pout(46),
      \Using_FPGA.DSP48E1_I1\(0) => m0_bd_pout(47),
      \Using_FPGA.DSP48E1_I1_0\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_1\(16 downto 0) => \Using_FPGA.DSP48E1_I1_0\(16 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_DSide_Logic_ff is
  port (
    m3_databus_ready : out STD_LOGIC;
    wb_databus_read_data : out STD_LOGIC_VECTOR ( 15 downto 0 );
    S : in STD_LOGIC;
    S_0 : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \trace_new_reg_value_i_reg[0]\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC;
    lopt_3 : out STD_LOGIC;
    lopt_4 : in STD_LOGIC;
    lopt_5 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_DSide_Logic_ff : entity is "DSide_Logic_ff";
end microblaze_microblaze_0_0_DSide_Logic_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_DSide_Logic_ff is
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal m3_ready_tmp : STD_LOGIC;
begin
  \^lopt_3\ <= lopt_1;
  \^lopt_4\ <= lopt_2;
  lopt <= \^lopt_2\;
  lopt_3 <= \^lopt_5\;
  lopt_6 <= lopt_4;
  lopt_7 <= lopt_5;
\Using_Ready_FPGA.Rdy_Or1\: entity work.microblaze_microblaze_0_0_carry_or_bb_49
     port map (
      S => S,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => S_0,
      lopt_3 => \^lopt_2\,
      lopt_4 => \^lopt_3\,
      lopt_5 => \^lopt_4\,
      lopt_6 => \^lopt_5\,
      lopt_7 => lopt_6,
      lopt_8 => lopt_7,
      m3_ready_tmp => m3_ready_tmp
    );
\Using_Ready_FPGA.Rdy_Or2\: entity work.microblaze_microblaze_0_0_carry_or_bb_50
     port map (
      S_0 => S_0,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      m3_databus_ready => m3_databus_ready,
      m3_ready_tmp => m3_ready_tmp
    );
read_data_mux_I1: entity work.microblaze_microblaze_0_0_Read_Data_Mux_ff
     port map (
      Q(15 downto 0) => Q(15 downto 0),
      \trace_new_reg_value_i_reg[0]\(15 downto 0) => \trace_new_reg_value_i_reg[0]\(15 downto 0),
      wb_databus_read_data(15 downto 0) => wb_databus_read_data(15 downto 0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Data_Flow_ff is
  port (
    ex_alu_result : out STD_LOGIC_VECTOR ( 1 downto 0 );
    m1_unaligned_addr_3lsb : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Q : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \out\ : out STD_LOGIC;
    ex_MSR_i : out STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native\ : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC;
    EX_CarryIn : out STD_LOGIC;
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    m3_msr : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_MSR_i : out STD_LOGIC_VECTOR ( 10 downto 0 );
    wb_msr : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \of_MSR_i_reg[22]\ : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \of_MSR_i_reg[25]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_exception_from_m3_reg_rep__0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Exception_Return_Addr0 : out STD_LOGIC_VECTOR ( 29 downto 0 );
    m0_ex_sel_res : out STD_LOGIC;
    m1_m0_sel_res : out STD_LOGIC;
    m3_m2_sel_res : out STD_LOGIC;
    E : out STD_LOGIC_VECTOR ( 0 to 0 );
    next_sub : out STD_LOGIC;
    O : out STD_LOGIC_VECTOR ( 0 to 0 );
    last_cycle : out STD_LOGIC;
    div_iterations_early_reg : out STD_LOGIC;
    \floating_hold_div_by_zero__0\ : out STD_LOGIC;
    m3_div_by_zero : out STD_LOGIC;
    m3_div_stall : out STD_LOGIC;
    negative_operands : out STD_LOGIC;
    floating_hold_div_overflow_reg : out STD_LOGIC;
    m3_div_overflow : out STD_LOGIC;
    make_result_neg : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_fwd : out STD_LOGIC_VECTOR ( 0 to 31 );
    \wb_PC_i_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \m2_M1_Result_i_reg[29]\ : out STD_LOGIC;
    \m2_M1_Result_i_reg[30]\ : out STD_LOGIC;
    \m2_M1_Result_i_reg[31]\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    \EX_Op1_reg[10]\ : out STD_LOGIC;
    \EX_Op1_reg[9]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    \EX_Op1_reg[8]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[0]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[0]\ : out STD_LOGIC;
    WB_Byte_Access_reg : out STD_LOGIC;
    \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op2_reg[25]\ : out STD_LOGIC;
    \EX_Op2_reg[25]_0\ : out STD_LOGIC;
    m3_div_stall_i_reg : out STD_LOGIC;
    GPR_Op3 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    EX_Enable_Sext_Shift_reg : out STD_LOGIC_VECTOR ( 6 downto 0 );
    EX_CLZ_Instr_reg : out STD_LOGIC;
    m2_m1_sel_res_reg : out STD_LOGIC;
    M1_Sel_Mul_Res_reg : out STD_LOGIC;
    \m1_M0_Result_i_reg[16]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_0 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_1 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_2 : out STD_LOGIC;
    m2_m1_sel_res_reg_0 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_3 : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_4 : out STD_LOGIC;
    \m1_M0_Result_i_reg[25]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_5 : out STD_LOGIC;
    m2_m1_sel_res_reg_1 : out STD_LOGIC_VECTOR ( 28 downto 0 );
    GPR_Op1 : out STD_LOGIC_VECTOR ( 2 downto 0 );
    m2_m1_sel_res_reg_2 : out STD_LOGIC;
    m3_div_overflow_i_reg : out STD_LOGIC;
    \EX_Op2_reg[25]_1\ : out STD_LOGIC;
    EX_Op1_Zero : out STD_LOGIC;
    negative_operands_reg : out STD_LOGIC;
    \EX_Logic_Op_reg[0]\ : out STD_LOGIC;
    ex_databus_addr : out STD_LOGIC_VECTOR ( 29 downto 0 );
    \EX_Op1_reg[0]_0\ : out STD_LOGIC;
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[0]_1\ : out STD_LOGIC;
    \EX_Op1_reg[24]\ : out STD_LOGIC;
    \EX_Op1_reg[24]_0\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg : out STD_LOGIC;
    \EX_Op1_reg[0]_2\ : out STD_LOGIC;
    EX_Pattern_Cmp_Sel_reg_0 : out STD_LOGIC;
    \EX_Op1_reg[16]\ : out STD_LOGIC;
    \EX_Logic_Op_reg[1]\ : out STD_LOGIC;
    ex_sel_alu_reg : out STD_LOGIC;
    \m0_Ex_Result_i_reg[1]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[1]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[2]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[2]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[3]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[3]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[4]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[4]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[5]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[5]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[6]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[6]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[7]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[7]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[8]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[8]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[9]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[9]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[10]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[10]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[11]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[11]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[12]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[12]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[13]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[13]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[14]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[14]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[15]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[15]\ : out STD_LOGIC;
    \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\ : out STD_LOGIC;
    \EX_Op1_reg[24]_1\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[29]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[29]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[30]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[30]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[31]\ : out STD_LOGIC;
    \m0_Ex_Result_i_reg[31]\ : out STD_LOGIC;
    \EX_Op2_reg[29]\ : out STD_LOGIC;
    \EX_Op2_reg[30]\ : out STD_LOGIC;
    M3_Div_By_Zero_reg : out STD_LOGIC;
    \m1_op3_reg[24]\ : out STD_LOGIC_VECTOR ( 27 downto 0 );
    \m1_op3_reg[8]\ : out STD_LOGIC_VECTOR ( 7 downto 0 );
    GPR_Op2 : out STD_LOGIC_VECTOR ( 0 to 31 );
    \imm_reg_reg[0]\ : out STD_LOGIC_VECTOR ( 15 downto 0 );
    \EX_Branch_CMP_Op1_reg[0]\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    LO : out STD_LOGIC;
    \WB_DataBus_Byte_Enable_reg[0]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_DataBus_Write_Data_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    m3_last_cycle_reg : out STD_LOGIC;
    \cnt_shifts_reg[0]\ : in STD_LOGIC;
    Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    \Using_FPGA.DSP48E1_I1\ : in STD_LOGIC;
    m0_piperun : in STD_LOGIC;
    ex_use_carry : in STD_LOGIC;
    DI_0 : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    ex_unsigned_op : in STD_LOGIC;
    \m0_databus_addr_i_reg[9]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    ex_alu_sel_logic : in STD_LOGIC;
    EX_Enable_ALU : in STD_LOGIC;
    in0 : in STD_LOGIC;
    ex_void_bit : in STD_LOGIC;
    ex_left_shift_i : in STD_LOGIC;
    D_2 : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC;
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \of_MSR_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \of_MSR_i_reg[17]\ : in STD_LOGIC_VECTOR ( 14 downto 0 );
    \wb_PC_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    DI : in STD_LOGIC_VECTOR ( 0 to 0 );
    S : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[22]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[18]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[14]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[10]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[6]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[2]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \WB_Exception_Return_Addr_reg[0]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m0_ex_sel_res_reg : in STD_LOGIC;
    m1_m0_sel_res0 : in STD_LOGIC;
    m1_piperun : in STD_LOGIC;
    m2_m1_sel_res0 : in STD_LOGIC;
    m2_piperun : in STD_LOGIC;
    m3_piperun : in STD_LOGIC;
    wb_m3_sel_res0 : in STD_LOGIC;
    ex_start_div : in STD_LOGIC;
    floating_hold_div_by_zero_reg : in STD_LOGIC;
    M3_Div_By_Zero_reg_0 : in STD_LOGIC;
    m3_div_stall_i_reg_0 : in STD_LOGIC;
    negative_operands_reg_0 : in STD_LOGIC;
    floating_hold_div_overflow_reg_0 : in STD_LOGIC;
    m3_div_overflow_i_reg_0 : in STD_LOGIC;
    next_sub_reg : in STD_LOGIC;
    make_result_neg_reg : in STD_LOGIC;
    \data_rd_reg_reg[30]\ : in STD_LOGIC;
    wb_gpr_wr_dbg : in STD_LOGIC;
    read_register_MSR_1 : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[28]_0\ : in STD_LOGIC;
    WB_Div_Zero_Overflow_reg : in STD_LOGIC;
    ex_clz_instr : in STD_LOGIC;
    ex_bit_insert : in STD_LOGIC;
    ex_bit_extract : in STD_LOGIC;
    m1_sel_mul_res : in STD_LOGIC;
    m0_sel_barrel_res : in STD_LOGIC;
    m3_sel_div_res : in STD_LOGIC;
    wb_byte_access : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\ : in STD_LOGIC;
    \EX_Op3_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    \EX_Op3_reg[30]_0\ : in STD_LOGIC;
    of_op3_sel : in STD_LOGIC_VECTOR ( 0 to 2 );
    \m0_Ex_Result_i_reg[0]_0\ : in STD_LOGIC_VECTOR ( 16 downto 0 );
    \EX_Op3_reg[29]\ : in STD_LOGIC;
    \EX_Op3[29]_i_2\ : in STD_LOGIC;
    \EX_Op3[29]_i_2_0\ : in STD_LOGIC;
    \EX_Op3_reg[30]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2_reg[1]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_0\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    \EX_Op2_reg[2]\ : in STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[16]\ : in STD_LOGIC;
    of_op2_sel : in STD_LOGIC_VECTOR ( 0 to 2 );
    \EX_Op2_reg[18]\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[22]\ : in STD_LOGIC;
    \EX_Op2_reg[25]_2\ : in STD_LOGIC;
    \EX_Op2_reg[28]\ : in STD_LOGIC;
    \EX_Op2_reg[29]_0\ : in STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[30]_0\ : in STD_LOGIC;
    \EX_Op2_reg[17]\ : in STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_1\ : in STD_LOGIC;
    \EX_Op2_reg[19]\ : in STD_LOGIC;
    \EX_Op2_reg[23]\ : in STD_LOGIC;
    \EX_Op2_reg[24]\ : in STD_LOGIC;
    \EX_Op2_reg[26]\ : in STD_LOGIC;
    \EX_Op2_reg[27]\ : in STD_LOGIC;
    of_op1_sel : in STD_LOGIC_VECTOR ( 1 downto 0 );
    m3_div_overflow_i_reg_1 : in STD_LOGIC;
    ex_msrclr : in STD_LOGIC;
    ex_msrset : in STD_LOGIC;
    m3_div_zero_overflow_ex_hold : in STD_LOGIC;
    div_busy_reg : in STD_LOGIC;
    ex_div_unsigned : in STD_LOGIC;
    wb_exception_taken : in STD_LOGIC;
    \trace_new_reg_value_i_reg[15]\ : in STD_LOGIC;
    wb_databus_read_data : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \trace_new_reg_value_i_reg[16]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[17]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[18]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[19]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[20]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[21]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[22]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[23]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[24]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[25]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[26]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[27]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[28]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[29]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[30]\ : in STD_LOGIC;
    \trace_new_reg_value_i_reg[31]\ : in STD_LOGIC;
    m2_is_div_instr : in STD_LOGIC;
    ex_pattern_cmp_sel : in STD_LOGIC;
    ex_sel_alu_res : in STD_LOGIC;
    \m0_Ex_Result_i_reg[29]_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[31]_0\ : in STD_LOGIC;
    ex_logic_op : in STD_LOGIC_VECTOR ( 0 to 1 );
    \m0_Ex_Result_i_reg[26]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[27]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[28]\ : in STD_LOGIC;
    ex_cmp_op : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[24]\ : in STD_LOGIC;
    ex_enable_sext_shift : in STD_LOGIC;
    \m0_Ex_Result_i_reg[17]\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Use_HW_BS.mem_mux3_reg[0]\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[30]\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[27]\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]_0\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[30]_0\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[0]_1\ : in STD_LOGIC;
    ex_arith_shift : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\ : in STD_LOGIC_VECTOR ( 18 downto 0 );
    wb_div_zero_overflow : in STD_LOGIC;
    wb_msr_clear_bip : in STD_LOGIC;
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    of_piperun : in STD_LOGIC;
    m1_byte_access : in STD_LOGIC;
    m1_doublet_access : in STD_LOGIC;
    wb_gpr_wr : in STD_LOGIC;
    \EX_Op3[1]_i_2\ : in STD_LOGIC_VECTOR ( 25 downto 0 );
    ADDRD : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \imm_reg_reg[15]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op1_reg[0]_3\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \EX_Branch_CMP_Op1_reg[29]\ : in STD_LOGIC_VECTOR ( 2 downto 0 );
    EX_Op1_CMP_Equal : in STD_LOGIC;
    ex_op1_cmp_equal_n : in STD_LOGIC;
    \m3_databus_write_data_i_reg[0]\ : in STD_LOGIC_VECTOR ( 35 downto 0 );
    \Use_HW_BS.mem_mux3_reg[1]\ : in STD_LOGIC_VECTOR ( 27 downto 0 );
    \wb_PC_i_reg[31]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \WB_Exception_Return_Addr_reg[0]_0\ : in STD_LOGIC_VECTOR ( 30 downto 0 );
    SR : in STD_LOGIC_VECTOR ( 0 to 0 );
    \R_reg[32]\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    lopt : out STD_LOGIC;
    lopt_1 : in STD_LOGIC;
    lopt_2 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Data_Flow_ff : entity is "Data_Flow_ff";
end microblaze_microblaze_0_0_Data_Flow_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Data_Flow_ff is
  signal ALU_I1_n_38 : STD_LOGIC;
  signal ALU_I1_n_39 : STD_LOGIC;
  signal D_Carry : STD_LOGIC_VECTOR ( 32 to 32 );
  signal Data_Flow_Logic_I1_n_0 : STD_LOGIC;
  signal \^ex_branch_cmp_op1_reg[0]\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^ex_clz_instr_reg\ : STD_LOGIC;
  signal \^ex_carryin\ : STD_LOGIC;
  signal \^ex_enable_sext_shift_reg\ : STD_LOGIC_VECTOR ( 6 downto 0 );
  signal \^ex_op1_zero\ : STD_LOGIC;
  signal \^ex_op1_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal I4 : STD_LOGIC;
  signal MSR_I1_n_21 : STD_LOGIC;
  signal Operand_Select_I1_n_100 : STD_LOGIC;
  signal Operand_Select_I1_n_101 : STD_LOGIC;
  signal Operand_Select_I1_n_102 : STD_LOGIC;
  signal Operand_Select_I1_n_103 : STD_LOGIC;
  signal Operand_Select_I1_n_105 : STD_LOGIC;
  signal Operand_Select_I1_n_170 : STD_LOGIC;
  signal Operand_Select_I1_n_171 : STD_LOGIC;
  signal Operand_Select_I1_n_172 : STD_LOGIC;
  signal Operand_Select_I1_n_173 : STD_LOGIC;
  signal Operand_Select_I1_n_174 : STD_LOGIC;
  signal Operand_Select_I1_n_175 : STD_LOGIC;
  signal Operand_Select_I1_n_176 : STD_LOGIC;
  signal Operand_Select_I1_n_177 : STD_LOGIC;
  signal Operand_Select_I1_n_178 : STD_LOGIC;
  signal Operand_Select_I1_n_179 : STD_LOGIC;
  signal Operand_Select_I1_n_180 : STD_LOGIC;
  signal Operand_Select_I1_n_181 : STD_LOGIC;
  signal Operand_Select_I1_n_182 : STD_LOGIC;
  signal Operand_Select_I1_n_186 : STD_LOGIC;
  signal Operand_Select_I1_n_68 : STD_LOGIC;
  signal Operand_Select_I1_n_69 : STD_LOGIC;
  signal Operand_Select_I1_n_70 : STD_LOGIC;
  signal Operand_Select_I1_n_71 : STD_LOGIC;
  signal Operand_Select_I1_n_72 : STD_LOGIC;
  signal Operand_Select_I1_n_73 : STD_LOGIC;
  signal Operand_Select_I1_n_74 : STD_LOGIC;
  signal Operand_Select_I1_n_75 : STD_LOGIC;
  signal Operand_Select_I1_n_76 : STD_LOGIC;
  signal Operand_Select_I1_n_77 : STD_LOGIC;
  signal Operand_Select_I1_n_78 : STD_LOGIC;
  signal Operand_Select_I1_n_79 : STD_LOGIC;
  signal Operand_Select_I1_n_80 : STD_LOGIC;
  signal Operand_Select_I1_n_81 : STD_LOGIC;
  signal Operand_Select_I1_n_82 : STD_LOGIC;
  signal Operand_Select_I1_n_83 : STD_LOGIC;
  signal Operand_Select_I1_n_84 : STD_LOGIC;
  signal Operand_Select_I1_n_85 : STD_LOGIC;
  signal Operand_Select_I1_n_86 : STD_LOGIC;
  signal Operand_Select_I1_n_87 : STD_LOGIC;
  signal Operand_Select_I1_n_88 : STD_LOGIC;
  signal Operand_Select_I1_n_89 : STD_LOGIC;
  signal Operand_Select_I1_n_90 : STD_LOGIC;
  signal Operand_Select_I1_n_91 : STD_LOGIC;
  signal Operand_Select_I1_n_92 : STD_LOGIC;
  signal Operand_Select_I1_n_93 : STD_LOGIC;
  signal Operand_Select_I1_n_94 : STD_LOGIC;
  signal Operand_Select_I1_n_95 : STD_LOGIC;
  signal Operand_Select_I1_n_96 : STD_LOGIC;
  signal Operand_Select_I1_n_97 : STD_LOGIC;
  signal Operand_Select_I1_n_98 : STD_LOGIC;
  signal Operand_Select_I1_n_99 : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 15 downto 0 );
  signal S_0 : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\ : STD_LOGIC;
  signal \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[0].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[10].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[11].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[12].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[13].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[14].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[15].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[16].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[17].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[18].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[19].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[1].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[20].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[21].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[22].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[23].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[24].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[25].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[26].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[27].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[28].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[29].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[2].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[31].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[3].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[4].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[5].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[6].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[7].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[8].D_Sel_reg\ : STD_LOGIC;
  signal \Using_FPGA.D_Handle[9].D_Sel_reg\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_6\ : STD_LOGIC;
  signal div_iterations_early : STD_LOGIC;
  signal \^div_iterations_early_reg\ : STD_LOGIC;
  signal \^ex_alu_result\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal ex_branch_cmp_op1 : STD_LOGIC_VECTOR ( 1 to 29 );
  signal \^ex_databus_addr\ : STD_LOGIC_VECTOR ( 29 downto 0 );
  signal ex_fwd : STD_LOGIC_VECTOR ( 19 to 28 );
  signal ex_op2 : STD_LOGIC_VECTOR ( 1 to 16 );
  signal ex_op3 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^gpr_op1\ : STD_LOGIC_VECTOR ( 0 to 28 );
  signal \^gpr_op3\ : STD_LOGIC_VECTOR ( 0 to 29 );
  signal \^lopt\ : STD_LOGIC;
  signal \^lopt_1\ : STD_LOGIC;
  signal \^lopt_2\ : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal m0_barrel_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m1_mul_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m2_m1_sel_res_reg_1\ : STD_LOGIC_VECTOR ( 28 downto 0 );
  signal m3_div_result : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_op2 : STD_LOGIC_VECTOR ( 0 to 30 );
  signal of_op3 : STD_LOGIC_VECTOR ( 0 to 30 );
  signal p_31_out : STD_LOGIC_VECTOR ( 14 downto 2 );
  signal \^wb_pc_i_reg[0]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^wb_exception_from_m3_reg_rep__0_0\ : STD_LOGIC;
  signal wb_exception_return_addr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^wb_fwd\ : STD_LOGIC_VECTOR ( 0 to 31 );
begin
  \EX_Branch_CMP_Op1_reg[0]\(0) <= \^ex_branch_cmp_op1_reg[0]\(0);
  EX_CLZ_Instr_reg <= \^ex_clz_instr_reg\;
  EX_CarryIn <= \^ex_carryin\;
  EX_Enable_Sext_Shift_reg(6 downto 0) <= \^ex_enable_sext_shift_reg\(6 downto 0);
  EX_Op1_Zero <= \^ex_op1_zero\;
  \EX_Op1_reg[0]\(31 downto 0) <= \^ex_op1_reg[0]\(31 downto 0);
  Q(15 downto 0) <= \^q\(15 downto 0);
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_6\ <= \^using_fpga.native_6\;
  div_iterations_early_reg <= \^div_iterations_early_reg\;
  ex_alu_result(1 downto 0) <= \^ex_alu_result\(1 downto 0);
  ex_databus_addr(29 downto 0) <= \^ex_databus_addr\(29 downto 0);
  lopt <= lopt_5;
  lopt_6 <= lopt_1;
  lopt_7 <= lopt_2;
  m2_m1_sel_res_reg_1(28 downto 0) <= \^m2_m1_sel_res_reg_1\(28 downto 0);
  \wb_PC_i_reg[0]\(31 downto 0) <= \^wb_pc_i_reg[0]\(31 downto 0);
  \wb_exception_from_m3_reg_rep__0_0\ <= \^wb_exception_from_m3_reg_rep__0_0\;
  wb_fwd(0 to 31) <= \^wb_fwd\(0 to 31);
ALU_I1: entity work.microblaze_microblaze_0_0_ALU
     port map (
      D(4 downto 0) => \^ex_enable_sext_shift_reg\(6 downto 2),
      DI_0 => DI_0,
      EX_Enable_ALU => EX_Enable_ALU,
      I0 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\,
      I2 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\,
      LO => LO,
      Q(31) => \^q\(15),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14 downto 0) => \^q\(14 downto 0),
      S_1 => S_1,
      \Using_FPGA.Native\(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      ex_alu_result(1 downto 0) => \^ex_alu_result\(1 downto 0),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_databus_addr(29 downto 0) => \^ex_databus_addr\(29 downto 0),
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_fwd(2) => ex_fwd(19),
      ex_fwd(1) => ex_fwd(22),
      ex_fwd(0) => ex_fwd(23),
      ex_sel_alu_reg => ALU_I1_n_38,
      ex_sel_alu_reg_0 => ALU_I1_n_39,
      ex_sel_alu_res => ex_sel_alu_res,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      lopt => \^lopt\,
      lopt_1 => \^lopt_1\,
      lopt_2 => \^lopt_2\,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      \m0_Ex_Result_i_reg[16]\ => Operand_Select_I1_n_176,
      \m0_Ex_Result_i_reg[17]\ => Operand_Select_I1_n_178,
      \m0_Ex_Result_i_reg[18]\ => Operand_Select_I1_n_175,
      \m0_Ex_Result_i_reg[19]\ => Operand_Select_I1_n_174,
      \m0_Ex_Result_i_reg[20]\ => Operand_Select_I1_n_173,
      \m0_Ex_Result_i_reg[21]\ => Operand_Select_I1_n_172,
      \m0_Ex_Result_i_reg[22]\ => Operand_Select_I1_n_171,
      \m0_Ex_Result_i_reg[23]\ => Operand_Select_I1_n_170,
      \m0_addr_3lsb_reg[2]\ => Data_Flow_Logic_I1_n_0,
      \m0_databus_addr_i_reg[9]\(1 downto 0) => \m0_databus_addr_i_reg[9]\(1 downto 0)
    );
Barrel_Shifter_I: entity work.microblaze_microblaze_0_0_Barrel_Shifter_gti
     port map (
      Clk => Clk,
      D(31) => Operand_Select_I1_n_179,
      D(30 downto 5) => \Use_HW_BS.mem_mux3_reg[1]\(27 downto 2),
      D(4) => Operand_Select_I1_n_180,
      D(3 downto 2) => \Use_HW_BS.mem_mux3_reg[1]\(1 downto 0),
      D(1) => Operand_Select_I1_n_181,
      D(0) => Operand_Select_I1_n_182,
      Q(1 downto 0) => \^q\(4 downto 3),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(31) => ex_op3(0),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(30) => ex_op3(1),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(29) => ex_op3(2),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(28) => ex_op3(3),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(27) => ex_op3(4),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(26) => ex_op3(5),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(25) => ex_op3(6),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(24) => ex_op3(7),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(23) => ex_op3(8),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(22) => ex_op3(9),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(21) => ex_op3(10),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(20) => ex_op3(11),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(19) => ex_op3(12),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(18) => ex_op3(13),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(17) => ex_op3(14),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(16) => ex_op3(15),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(15) => ex_op3(16),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(14) => ex_op3(17),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(13) => ex_op3(18),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(12) => ex_op3(19),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(11) => ex_op3(20),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(10) => ex_op3(21),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(9) => ex_op3(22),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(8) => ex_op3(23),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(7) => ex_op3(24),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(6) => ex_op3(25),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(5) => ex_op3(26),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(4) => ex_op3(27),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(3) => ex_op3(28),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(2) => ex_op3(29),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(1) => ex_op3(30),
      \Use_HW_BS.Using_BitField.mem_Rd_reg[0]_0\(0) => ex_op3(31),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(31) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(18),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(30) => Operand_Select_I1_n_99,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(29) => Operand_Select_I1_n_100,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(28) => Operand_Select_I1_n_101,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(27 downto 24) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(17 downto 14),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(23) => Operand_Select_I1_n_102,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(22) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(13),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(21) => Operand_Select_I1_n_103,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(20 downto 15) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(12 downto 7),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(14) => p_31_out(14),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(13) => Operand_Select_I1_n_105,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(12) => p_31_out(12),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(11 downto 8) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(6 downto 3),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(7 downto 4) => p_31_out(7 downto 4),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(3) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(2),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(2) => p_31_out(2),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]_0\(1 downto 0) => \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(1 downto 0),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[31]_0\ => \Using_FPGA.DSP48E1_I1\,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(30) => Operand_Select_I1_n_68,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(29) => Operand_Select_I1_n_69,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(28) => Operand_Select_I1_n_70,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(27) => Operand_Select_I1_n_71,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(26) => Operand_Select_I1_n_72,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(25) => Operand_Select_I1_n_73,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(24) => Operand_Select_I1_n_74,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(23) => Operand_Select_I1_n_75,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(22) => Operand_Select_I1_n_76,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(21) => Operand_Select_I1_n_77,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(20) => Operand_Select_I1_n_78,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(19) => Operand_Select_I1_n_79,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(18) => Operand_Select_I1_n_80,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(17) => Operand_Select_I1_n_81,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(16) => Operand_Select_I1_n_82,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(15) => Operand_Select_I1_n_83,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(14) => Operand_Select_I1_n_84,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(13) => Operand_Select_I1_n_85,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(12) => Operand_Select_I1_n_86,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(11) => Operand_Select_I1_n_87,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(10) => Operand_Select_I1_n_88,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(9) => Operand_Select_I1_n_89,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(8) => Operand_Select_I1_n_90,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(7) => Operand_Select_I1_n_91,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(6) => Operand_Select_I1_n_92,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(5) => Operand_Select_I1_n_93,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(4) => Operand_Select_I1_n_94,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(3) => Operand_Select_I1_n_95,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(2) => Operand_Select_I1_n_96,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(1) => Operand_Select_I1_n_97,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[0]_0\(0) => Operand_Select_I1_n_98,
      ex_left_shift_i => ex_left_shift_i,
      ex_void_bit => ex_void_bit,
      m0_barrel_result(0 to 31) => m0_barrel_result(0 to 31),
      sync_reset => sync_reset
    );
Byte_Doublet_Handle_I1: entity work.microblaze_microblaze_0_0_Byte_Doublet_Handle_ff
     port map (
      Clk => Clk,
      \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\(1 downto 0) => \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]\(1 downto 0),
      \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_1\ => \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\,
      Q(31) => ex_op3(0),
      Q(30) => ex_op3(1),
      Q(29) => ex_op3(2),
      Q(28) => ex_op3(3),
      Q(27) => ex_op3(4),
      Q(26) => ex_op3(5),
      Q(25) => ex_op3(6),
      Q(24) => ex_op3(7),
      Q(23) => ex_op3(8),
      Q(22) => ex_op3(9),
      Q(21) => ex_op3(10),
      Q(20) => ex_op3(11),
      Q(19) => ex_op3(12),
      Q(18) => ex_op3(13),
      Q(17) => ex_op3(14),
      Q(16) => ex_op3(15),
      Q(15) => ex_op3(16),
      Q(14) => ex_op3(17),
      Q(13) => ex_op3(18),
      Q(12) => ex_op3(19),
      Q(11) => ex_op3(20),
      Q(10) => ex_op3(21),
      Q(9) => ex_op3(22),
      Q(8) => ex_op3(23),
      Q(7) => ex_op3(24),
      Q(6) => ex_op3(25),
      Q(5) => ex_op3(26),
      Q(4) => ex_op3(27),
      Q(3) => ex_op3(28),
      Q(2) => ex_op3(29),
      Q(1) => ex_op3(30),
      Q(0) => ex_op3(31),
      WB_Byte_Access_reg => WB_Byte_Access_reg,
      \WB_DataBus_Byte_Enable_reg[0]_0\(3 downto 0) => \WB_DataBus_Byte_Enable_reg[0]\(3 downto 0),
      \WB_DataBus_Write_Data_reg[0]_0\(31 downto 0) => \WB_DataBus_Write_Data_reg[0]\(31 downto 0),
      ex_alu_result(1 downto 0) => \^ex_alu_result\(1 downto 0),
      \m0_op3_reg[31]_0\ => \Using_FPGA.DSP48E1_I1\,
      m0_piperun => m0_piperun,
      m1_byte_access => m1_byte_access,
      m1_doublet_access => m1_doublet_access,
      \m1_op3_reg[24]_0\(27 downto 0) => \m1_op3_reg[24]\(27 downto 0),
      \m1_op3_reg[8]_0\(7 downto 0) => \m1_op3_reg[8]\(7 downto 0),
      m1_piperun => m1_piperun,
      \m1_unaligned_addr_3lsb_reg[1]_0\ => m1_unaligned_addr_3lsb(1),
      \m1_unaligned_addr_3lsb_reg[2]_0\ => m1_unaligned_addr_3lsb(0),
      m2_piperun => m2_piperun,
      \m3_databus_write_data_i_reg[0]_0\(35 downto 0) => \m3_databus_write_data_i_reg[0]\(35 downto 0),
      m3_piperun => m3_piperun,
      sync_reset => sync_reset,
      wb_byte_access => wb_byte_access
    );
Data_Flow_Logic_I1: entity work.microblaze_microblaze_0_0_Data_Flow_Logic_ff
     port map (
      Clk => Clk,
      D(27 downto 3) => D(31 downto 7),
      D(2 downto 1) => D(5 downto 4),
      D(0) => D(0),
      \EX_Branch_CMP_Op1_reg[28]\ => \EX_Branch_CMP_Op1_reg[28]\,
      \EX_Branch_CMP_Op1_reg[28]_0\ => \EX_Branch_CMP_Op1_reg[28]_0\,
      EX_CarryIn => \^ex_carryin\,
      \EX_Op2_reg[0]\ => \EX_Op2_reg[0]\,
      \EX_Op2_reg[10]\ => \EX_Op2_reg[10]\,
      \EX_Op2_reg[11]\ => \EX_Op2_reg[11]\,
      \EX_Op2_reg[12]\ => \EX_Op2_reg[12]\,
      \EX_Op2_reg[13]\ => \EX_Op2_reg[13]\,
      \EX_Op2_reg[14]\ => \EX_Op2_reg[14]\,
      \EX_Op2_reg[15]\ => \EX_Op2_reg[15]\,
      \EX_Op2_reg[16]\ => \EX_Op2_reg[16]\,
      \EX_Op2_reg[17]\ => \EX_Op2_reg[17]\,
      \EX_Op2_reg[18]\ => \EX_Op2_reg[18]\,
      \EX_Op2_reg[19]\ => \EX_Op2_reg[19]\,
      \EX_Op2_reg[1]\ => \EX_Op2_reg[1]\,
      \EX_Op2_reg[1]_0\ => \EX_Op2_reg[1]_0\,
      \EX_Op2_reg[1]_1\ => \EX_Op2_reg[1]_1\,
      \EX_Op2_reg[20]\ => \EX_Op2_reg[20]\,
      \EX_Op2_reg[21]\ => \EX_Op2_reg[21]\,
      \EX_Op2_reg[22]\ => \EX_Op2_reg[22]\,
      \EX_Op2_reg[23]\ => \EX_Op2_reg[23]\,
      \EX_Op2_reg[24]\ => \EX_Op2_reg[24]\,
      \EX_Op2_reg[25]\ => \EX_Op2_reg[25]_2\,
      \EX_Op2_reg[26]\ => \EX_Op2_reg[26]\,
      \EX_Op2_reg[27]\ => \EX_Op2_reg[27]\,
      \EX_Op2_reg[28]\ => \EX_Op2_reg[28]\,
      \EX_Op2_reg[29]\ => \EX_Op2_reg[29]_0\,
      \EX_Op2_reg[2]\ => \EX_Op2_reg[2]\,
      \EX_Op2_reg[30]\ => \EX_Op2_reg[30]_0\,
      \EX_Op2_reg[3]\ => \EX_Op2_reg[3]\,
      \EX_Op2_reg[4]\ => \EX_Op2_reg[4]\,
      \EX_Op2_reg[5]\ => \EX_Op2_reg[5]\,
      \EX_Op2_reg[6]\ => \EX_Op2_reg[6]\,
      \EX_Op2_reg[7]\ => \EX_Op2_reg[7]\,
      \EX_Op2_reg[8]\ => \EX_Op2_reg[8]\,
      \EX_Op2_reg[9]\ => \EX_Op2_reg[9]\,
      \EX_Op3[29]_i_2_0\ => \EX_Op3[29]_i_2\,
      \EX_Op3[29]_i_2_1\ => \EX_Op3[29]_i_2_0\,
      \EX_Op3_reg[29]\ => \^ex_clz_instr_reg\,
      \EX_Op3_reg[29]_0\ => \EX_Op3_reg[29]\,
      \EX_Op3_reg[30]\ => \EX_Op3_reg[30]\,
      \EX_Op3_reg[30]_0\ => \EX_Op3_reg[30]_0\,
      \EX_Op3_reg[30]_1\ => \EX_Op3_reg[30]_1\,
      GPR_Op1(28) => \^gpr_op1\(0),
      GPR_Op1(27) => \^gpr_op1\(1),
      GPR_Op1(26) => \^gpr_op1\(2),
      GPR_Op1(25) => \^gpr_op1\(3),
      GPR_Op1(24) => \^gpr_op1\(4),
      GPR_Op1(23) => \^gpr_op1\(5),
      GPR_Op1(22) => \^gpr_op1\(6),
      GPR_Op1(21) => \^gpr_op1\(7),
      GPR_Op1(20) => \^gpr_op1\(8),
      GPR_Op1(19) => \^gpr_op1\(9),
      GPR_Op1(18) => \^gpr_op1\(10),
      GPR_Op1(17) => \^gpr_op1\(11),
      GPR_Op1(16) => \^gpr_op1\(12),
      GPR_Op1(15) => \^gpr_op1\(13),
      GPR_Op1(14) => \^gpr_op1\(14),
      GPR_Op1(13) => \^gpr_op1\(15),
      GPR_Op1(12) => \^gpr_op1\(16),
      GPR_Op1(11) => \^gpr_op1\(17),
      GPR_Op1(10) => \^gpr_op1\(18),
      GPR_Op1(9) => \^gpr_op1\(19),
      GPR_Op1(8) => \^gpr_op1\(20),
      GPR_Op1(7) => \^gpr_op1\(21),
      GPR_Op1(6) => \^gpr_op1\(22),
      GPR_Op1(5) => \^gpr_op1\(23),
      GPR_Op1(4) => \^gpr_op1\(24),
      GPR_Op1(3) => \^gpr_op1\(25),
      GPR_Op1(2) => \^gpr_op1\(26),
      GPR_Op1(1) => \^gpr_op1\(27),
      GPR_Op1(0) => \^gpr_op1\(28),
      GPR_Op3(29) => \^gpr_op3\(0),
      GPR_Op3(28) => \^gpr_op3\(1),
      GPR_Op3(27) => \^gpr_op3\(2),
      GPR_Op3(26) => \^gpr_op3\(3),
      GPR_Op3(25) => \^gpr_op3\(4),
      GPR_Op3(24) => \^gpr_op3\(5),
      GPR_Op3(23) => \^gpr_op3\(6),
      GPR_Op3(22) => \^gpr_op3\(7),
      GPR_Op3(21) => \^gpr_op3\(8),
      GPR_Op3(20) => \^gpr_op3\(9),
      GPR_Op3(19) => \^gpr_op3\(10),
      GPR_Op3(18) => \^gpr_op3\(11),
      GPR_Op3(17) => \^gpr_op3\(12),
      GPR_Op3(16) => \^gpr_op3\(13),
      GPR_Op3(15) => \^gpr_op3\(14),
      GPR_Op3(14) => \^gpr_op3\(15),
      GPR_Op3(13) => \^gpr_op3\(16),
      GPR_Op3(12) => \^gpr_op3\(17),
      GPR_Op3(11) => \^gpr_op3\(18),
      GPR_Op3(10) => \^gpr_op3\(19),
      GPR_Op3(9) => \^gpr_op3\(20),
      GPR_Op3(8) => \^gpr_op3\(21),
      GPR_Op3(7) => \^gpr_op3\(22),
      GPR_Op3(6) => \^gpr_op3\(23),
      GPR_Op3(5) => \^gpr_op3\(24),
      GPR_Op3(4) => \^gpr_op3\(25),
      GPR_Op3(3) => \^gpr_op3\(26),
      GPR_Op3(2) => \^gpr_op3\(27),
      GPR_Op3(1) => \^gpr_op3\(28),
      GPR_Op3(0) => \^gpr_op3\(29),
      M1_Sel_Mul_Res_reg => M1_Sel_Mul_Res_reg,
      M1_Sel_Mul_Res_reg_0 => M1_Sel_Mul_Res_reg_0,
      M1_Sel_Mul_Res_reg_1 => M1_Sel_Mul_Res_reg_1,
      M1_Sel_Mul_Res_reg_2 => M1_Sel_Mul_Res_reg_2,
      M1_Sel_Mul_Res_reg_3 => M1_Sel_Mul_Res_reg_3,
      M1_Sel_Mul_Res_reg_4 => M1_Sel_Mul_Res_reg_4,
      M1_Sel_Mul_Res_reg_5 => M1_Sel_Mul_Res_reg_5,
      Q(31) => m3_div_result(0),
      Q(30) => m3_div_result(1),
      Q(29) => m3_div_result(2),
      Q(28) => m3_div_result(3),
      Q(27) => m3_div_result(4),
      Q(26) => m3_div_result(5),
      Q(25) => m3_div_result(6),
      Q(24) => m3_div_result(7),
      Q(23) => m3_div_result(8),
      Q(22) => m3_div_result(9),
      Q(21) => m3_div_result(10),
      Q(20) => m3_div_result(11),
      Q(19) => m3_div_result(12),
      Q(18) => m3_div_result(13),
      Q(17) => m3_div_result(14),
      Q(16) => m3_div_result(15),
      Q(15) => m3_div_result(16),
      Q(14) => m3_div_result(17),
      Q(13) => m3_div_result(18),
      Q(12) => m3_div_result(19),
      Q(11) => m3_div_result(20),
      Q(10) => m3_div_result(21),
      Q(9) => m3_div_result(22),
      Q(8) => m3_div_result(23),
      Q(7) => m3_div_result(24),
      Q(6) => m3_div_result(25),
      Q(5) => m3_div_result(26),
      Q(4) => m3_div_result(27),
      Q(3) => m3_div_result(28),
      Q(2) => m3_div_result(29),
      Q(1) => m3_div_result(30),
      Q(0) => m3_div_result(31),
      \Using_FPGA.Native\ => Data_Flow_Logic_I1_n_0,
      WB_Fwd(0 to 31) => \^wb_fwd\(0 to 31),
      \data_rd_reg_reg[0]\(27 downto 3) => \^wb_pc_i_reg[0]\(31 downto 7),
      \data_rd_reg_reg[0]\(2 downto 1) => \^wb_pc_i_reg[0]\(5 downto 4),
      \data_rd_reg_reg[0]\(0) => \^wb_pc_i_reg[0]\(0),
      \data_rd_reg_reg[31]\ => \data_rd_reg_reg[30]\,
      lopt => \^lopt\,
      lopt_1 => DI_0,
      lopt_2 => ex_use_carry,
      lopt_3 => \^lopt_1\,
      lopt_4 => \^lopt_2\,
      lopt_5 => lopt_3,
      lopt_6 => lopt_4,
      \m0_Ex_Result_i_reg[0]_0\(0) => \m0_Ex_Result_i_reg[0]\,
      \m0_Ex_Result_i_reg[0]_1\(31 downto 16) => \m0_Ex_Result_i_reg[0]_0\(16 downto 1),
      \m0_Ex_Result_i_reg[0]_1\(15 downto 13) => \^ex_enable_sext_shift_reg\(6 downto 4),
      \m0_Ex_Result_i_reg[0]_1\(12) => ex_fwd(19),
      \m0_Ex_Result_i_reg[0]_1\(11 downto 10) => \^ex_enable_sext_shift_reg\(3 downto 2),
      \m0_Ex_Result_i_reg[0]_1\(9) => ex_fwd(22),
      \m0_Ex_Result_i_reg[0]_1\(8) => ex_fwd(23),
      \m0_Ex_Result_i_reg[0]_1\(7) => ex_fwd(24),
      \m0_Ex_Result_i_reg[0]_1\(6) => ex_fwd(25),
      \m0_Ex_Result_i_reg[0]_1\(5) => ex_fwd(26),
      \m0_Ex_Result_i_reg[0]_1\(4) => ex_fwd(27),
      \m0_Ex_Result_i_reg[0]_1\(3) => ex_fwd(28),
      \m0_Ex_Result_i_reg[0]_1\(2) => \^ex_enable_sext_shift_reg\(1),
      \m0_Ex_Result_i_reg[0]_1\(1) => \m0_Ex_Result_i_reg[0]_0\(0),
      \m0_Ex_Result_i_reg[0]_1\(0) => \^ex_enable_sext_shift_reg\(0),
      \m0_Ex_Result_i_reg[10]_0\ => \m0_Ex_Result_i_reg[10]\,
      \m0_Ex_Result_i_reg[11]_0\ => \m0_Ex_Result_i_reg[11]\,
      \m0_Ex_Result_i_reg[12]_0\ => \m0_Ex_Result_i_reg[12]\,
      \m0_Ex_Result_i_reg[13]_0\ => \m0_Ex_Result_i_reg[13]\,
      \m0_Ex_Result_i_reg[14]_0\ => \m0_Ex_Result_i_reg[14]\,
      \m0_Ex_Result_i_reg[15]_0\ => \m0_Ex_Result_i_reg[15]\,
      \m0_Ex_Result_i_reg[1]_0\ => \m0_Ex_Result_i_reg[1]\,
      \m0_Ex_Result_i_reg[29]_0\ => \m0_Ex_Result_i_reg[29]\,
      \m0_Ex_Result_i_reg[2]_0\ => \m0_Ex_Result_i_reg[2]\,
      \m0_Ex_Result_i_reg[30]_0\ => \m0_Ex_Result_i_reg[30]\,
      \m0_Ex_Result_i_reg[31]_0\ => \m0_Ex_Result_i_reg[31]\,
      \m0_Ex_Result_i_reg[31]_1\ => \Using_FPGA.DSP48E1_I1\,
      \m0_Ex_Result_i_reg[3]_0\ => \m0_Ex_Result_i_reg[3]\,
      \m0_Ex_Result_i_reg[4]_0\ => \m0_Ex_Result_i_reg[4]\,
      \m0_Ex_Result_i_reg[5]_0\ => \m0_Ex_Result_i_reg[5]\,
      \m0_Ex_Result_i_reg[6]_0\ => \m0_Ex_Result_i_reg[6]\,
      \m0_Ex_Result_i_reg[7]_0\ => \m0_Ex_Result_i_reg[7]\,
      \m0_Ex_Result_i_reg[8]_0\ => \m0_Ex_Result_i_reg[8]\,
      \m0_Ex_Result_i_reg[9]_0\ => \m0_Ex_Result_i_reg[9]\,
      m0_barrel_result(0 to 31) => m0_barrel_result(0 to 31),
      m0_ex_sel_res_reg_0 => m0_ex_sel_res,
      m0_ex_sel_res_reg_1 => m0_ex_sel_res_reg,
      m0_piperun => m0_piperun,
      m0_sel_barrel_res => m0_sel_barrel_res,
      \m1_M0_Result_i_reg[0]_0\(0) => \m1_M0_Result_i_reg[0]\,
      \m1_M0_Result_i_reg[10]_0\ => \m1_M0_Result_i_reg[10]\,
      \m1_M0_Result_i_reg[11]_0\ => \m1_M0_Result_i_reg[11]\,
      \m1_M0_Result_i_reg[12]_0\ => \m1_M0_Result_i_reg[12]\,
      \m1_M0_Result_i_reg[13]_0\ => \m1_M0_Result_i_reg[13]\,
      \m1_M0_Result_i_reg[14]_0\ => \m1_M0_Result_i_reg[14]\,
      \m1_M0_Result_i_reg[15]_0\ => \m1_M0_Result_i_reg[15]\,
      \m1_M0_Result_i_reg[16]_0\ => \m1_M0_Result_i_reg[16]\,
      \m1_M0_Result_i_reg[1]_0\ => \m1_M0_Result_i_reg[1]\,
      \m1_M0_Result_i_reg[25]_0\ => \m1_M0_Result_i_reg[25]\,
      \m1_M0_Result_i_reg[29]_0\ => \m1_M0_Result_i_reg[29]\,
      \m1_M0_Result_i_reg[2]_0\ => \m1_M0_Result_i_reg[2]\,
      \m1_M0_Result_i_reg[30]_0\ => \m1_M0_Result_i_reg[30]\,
      \m1_M0_Result_i_reg[31]_0\ => \m1_M0_Result_i_reg[31]\,
      \m1_M0_Result_i_reg[3]_0\ => \m1_M0_Result_i_reg[3]\,
      \m1_M0_Result_i_reg[4]_0\ => \m1_M0_Result_i_reg[4]\,
      \m1_M0_Result_i_reg[5]_0\ => \m1_M0_Result_i_reg[5]\,
      \m1_M0_Result_i_reg[6]_0\ => \m1_M0_Result_i_reg[6]\,
      \m1_M0_Result_i_reg[7]_0\ => \m1_M0_Result_i_reg[7]\,
      \m1_M0_Result_i_reg[8]_0\ => \m1_M0_Result_i_reg[8]\,
      \m1_M0_Result_i_reg[9]_0\ => \m1_M0_Result_i_reg[9]\,
      m1_m0_sel_res0 => m1_m0_sel_res0,
      m1_m0_sel_res_reg_0 => m1_m0_sel_res,
      m1_mul_result(0 to 31) => m1_mul_result(0 to 31),
      m1_piperun => m1_piperun,
      m1_sel_mul_res => m1_sel_mul_res,
      \m2_M1_Result_i_reg[29]_0\ => \m2_M1_Result_i_reg[29]\,
      \m2_M1_Result_i_reg[30]_0\ => \m2_M1_Result_i_reg[30]\,
      \m2_M1_Result_i_reg[31]_0\ => \m2_M1_Result_i_reg[31]\,
      m2_is_div_instr => m2_is_div_instr,
      m2_m1_sel_res0 => m2_m1_sel_res0,
      m2_m1_sel_res_reg_0(30) => of_op3(0),
      m2_m1_sel_res_reg_0(29) => of_op3(1),
      m2_m1_sel_res_reg_0(28) => of_op3(2),
      m2_m1_sel_res_reg_0(27) => of_op3(3),
      m2_m1_sel_res_reg_0(26) => of_op3(4),
      m2_m1_sel_res_reg_0(25) => of_op3(5),
      m2_m1_sel_res_reg_0(24) => of_op3(6),
      m2_m1_sel_res_reg_0(23) => of_op3(7),
      m2_m1_sel_res_reg_0(22) => of_op3(8),
      m2_m1_sel_res_reg_0(21) => of_op3(9),
      m2_m1_sel_res_reg_0(20) => of_op3(10),
      m2_m1_sel_res_reg_0(19) => of_op3(11),
      m2_m1_sel_res_reg_0(18) => of_op3(12),
      m2_m1_sel_res_reg_0(17) => of_op3(13),
      m2_m1_sel_res_reg_0(16) => of_op3(14),
      m2_m1_sel_res_reg_0(15) => of_op3(15),
      m2_m1_sel_res_reg_0(14) => of_op3(16),
      m2_m1_sel_res_reg_0(13) => of_op3(17),
      m2_m1_sel_res_reg_0(12) => of_op3(18),
      m2_m1_sel_res_reg_0(11) => of_op3(19),
      m2_m1_sel_res_reg_0(10) => of_op3(20),
      m2_m1_sel_res_reg_0(9) => of_op3(21),
      m2_m1_sel_res_reg_0(8) => of_op3(22),
      m2_m1_sel_res_reg_0(7) => of_op3(23),
      m2_m1_sel_res_reg_0(6) => of_op3(24),
      m2_m1_sel_res_reg_0(5) => of_op3(25),
      m2_m1_sel_res_reg_0(4) => of_op3(26),
      m2_m1_sel_res_reg_0(3) => of_op3(27),
      m2_m1_sel_res_reg_0(2) => of_op3(28),
      m2_m1_sel_res_reg_0(1) => of_op3(29),
      m2_m1_sel_res_reg_0(0) => of_op3(30),
      m2_m1_sel_res_reg_1 => m2_m1_sel_res_reg,
      m2_m1_sel_res_reg_2(30) => of_op2(0),
      m2_m1_sel_res_reg_2(29) => of_op2(1),
      m2_m1_sel_res_reg_2(28) => of_op2(2),
      m2_m1_sel_res_reg_2(27) => of_op2(3),
      m2_m1_sel_res_reg_2(26) => of_op2(4),
      m2_m1_sel_res_reg_2(25) => of_op2(5),
      m2_m1_sel_res_reg_2(24) => of_op2(6),
      m2_m1_sel_res_reg_2(23) => of_op2(7),
      m2_m1_sel_res_reg_2(22) => of_op2(8),
      m2_m1_sel_res_reg_2(21) => of_op2(9),
      m2_m1_sel_res_reg_2(20) => of_op2(10),
      m2_m1_sel_res_reg_2(19) => of_op2(11),
      m2_m1_sel_res_reg_2(18) => of_op2(12),
      m2_m1_sel_res_reg_2(17) => of_op2(13),
      m2_m1_sel_res_reg_2(16) => of_op2(14),
      m2_m1_sel_res_reg_2(15) => of_op2(15),
      m2_m1_sel_res_reg_2(14) => of_op2(16),
      m2_m1_sel_res_reg_2(13) => of_op2(17),
      m2_m1_sel_res_reg_2(12) => of_op2(18),
      m2_m1_sel_res_reg_2(11) => of_op2(19),
      m2_m1_sel_res_reg_2(10) => of_op2(20),
      m2_m1_sel_res_reg_2(9) => of_op2(21),
      m2_m1_sel_res_reg_2(8) => of_op2(22),
      m2_m1_sel_res_reg_2(7) => of_op2(23),
      m2_m1_sel_res_reg_2(6) => of_op2(24),
      m2_m1_sel_res_reg_2(5) => of_op2(25),
      m2_m1_sel_res_reg_2(4) => of_op2(26),
      m2_m1_sel_res_reg_2(3) => of_op2(27),
      m2_m1_sel_res_reg_2(2) => of_op2(28),
      m2_m1_sel_res_reg_2(1) => of_op2(29),
      m2_m1_sel_res_reg_2(0) => of_op2(30),
      m2_m1_sel_res_reg_3 => m2_m1_sel_res_reg_0,
      m2_m1_sel_res_reg_4(28 downto 0) => \^m2_m1_sel_res_reg_1\(28 downto 0),
      m2_m1_sel_res_reg_5 => m2_m1_sel_res_reg_2,
      m2_piperun => m2_piperun,
      m3_m2_sel_res_reg_0 => m3_m2_sel_res,
      m3_piperun => m3_piperun,
      m3_sel_div_res => m3_sel_div_res,
      of_op1_sel(1 downto 0) => of_op1_sel(1 downto 0),
      of_op2_sel(0 to 2) => of_op2_sel(0 to 2),
      of_op3_sel(0 to 2) => of_op3_sel(0 to 2),
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      \trace_new_reg_value_i_reg[0]\(31) => wb_exception_return_addr(0),
      \trace_new_reg_value_i_reg[0]\(30) => wb_exception_return_addr(1),
      \trace_new_reg_value_i_reg[0]\(29) => wb_exception_return_addr(2),
      \trace_new_reg_value_i_reg[0]\(28) => wb_exception_return_addr(3),
      \trace_new_reg_value_i_reg[0]\(27) => wb_exception_return_addr(4),
      \trace_new_reg_value_i_reg[0]\(26) => wb_exception_return_addr(5),
      \trace_new_reg_value_i_reg[0]\(25) => wb_exception_return_addr(6),
      \trace_new_reg_value_i_reg[0]\(24) => wb_exception_return_addr(7),
      \trace_new_reg_value_i_reg[0]\(23) => wb_exception_return_addr(8),
      \trace_new_reg_value_i_reg[0]\(22) => wb_exception_return_addr(9),
      \trace_new_reg_value_i_reg[0]\(21) => wb_exception_return_addr(10),
      \trace_new_reg_value_i_reg[0]\(20) => wb_exception_return_addr(11),
      \trace_new_reg_value_i_reg[0]\(19) => wb_exception_return_addr(12),
      \trace_new_reg_value_i_reg[0]\(18) => wb_exception_return_addr(13),
      \trace_new_reg_value_i_reg[0]\(17) => wb_exception_return_addr(14),
      \trace_new_reg_value_i_reg[0]\(16) => wb_exception_return_addr(15),
      \trace_new_reg_value_i_reg[0]\(15) => wb_exception_return_addr(16),
      \trace_new_reg_value_i_reg[0]\(14) => wb_exception_return_addr(17),
      \trace_new_reg_value_i_reg[0]\(13) => wb_exception_return_addr(18),
      \trace_new_reg_value_i_reg[0]\(12) => wb_exception_return_addr(19),
      \trace_new_reg_value_i_reg[0]\(11) => wb_exception_return_addr(20),
      \trace_new_reg_value_i_reg[0]\(10) => wb_exception_return_addr(21),
      \trace_new_reg_value_i_reg[0]\(9) => wb_exception_return_addr(22),
      \trace_new_reg_value_i_reg[0]\(8) => wb_exception_return_addr(23),
      \trace_new_reg_value_i_reg[0]\(7) => wb_exception_return_addr(24),
      \trace_new_reg_value_i_reg[0]\(6) => wb_exception_return_addr(25),
      \trace_new_reg_value_i_reg[0]\(5) => wb_exception_return_addr(26),
      \trace_new_reg_value_i_reg[0]\(4) => wb_exception_return_addr(27),
      \trace_new_reg_value_i_reg[0]\(3) => wb_exception_return_addr(28),
      \trace_new_reg_value_i_reg[0]\(2) => wb_exception_return_addr(29),
      \trace_new_reg_value_i_reg[0]\(1) => wb_exception_return_addr(30),
      \trace_new_reg_value_i_reg[0]\(0) => wb_exception_return_addr(31),
      \trace_new_reg_value_i_reg[15]\ => \trace_new_reg_value_i_reg[15]\,
      \trace_new_reg_value_i_reg[16]\ => \trace_new_reg_value_i_reg[16]\,
      \trace_new_reg_value_i_reg[17]\ => \trace_new_reg_value_i_reg[17]\,
      \trace_new_reg_value_i_reg[18]\ => \trace_new_reg_value_i_reg[18]\,
      \trace_new_reg_value_i_reg[19]\ => \trace_new_reg_value_i_reg[19]\,
      \trace_new_reg_value_i_reg[20]\ => \trace_new_reg_value_i_reg[20]\,
      \trace_new_reg_value_i_reg[21]\ => \trace_new_reg_value_i_reg[21]\,
      \trace_new_reg_value_i_reg[22]\ => \trace_new_reg_value_i_reg[22]\,
      \trace_new_reg_value_i_reg[23]\ => \trace_new_reg_value_i_reg[23]\,
      \trace_new_reg_value_i_reg[24]\ => \trace_new_reg_value_i_reg[24]\,
      \trace_new_reg_value_i_reg[25]\ => \trace_new_reg_value_i_reg[25]\,
      \trace_new_reg_value_i_reg[26]\ => \trace_new_reg_value_i_reg[26]\,
      \trace_new_reg_value_i_reg[27]\ => \trace_new_reg_value_i_reg[27]\,
      \trace_new_reg_value_i_reg[28]\ => \trace_new_reg_value_i_reg[28]\,
      \trace_new_reg_value_i_reg[29]\ => \trace_new_reg_value_i_reg[29]\,
      \trace_new_reg_value_i_reg[30]\ => \trace_new_reg_value_i_reg[30]\,
      \trace_new_reg_value_i_reg[31]\ => \trace_new_reg_value_i_reg[31]\,
      wb_byte_access => wb_byte_access,
      wb_databus_read_data(15 downto 0) => wb_databus_read_data(15 downto 0),
      wb_exception_taken => wb_exception_taken,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_m3_sel_res0 => wb_m3_sel_res0
    );
MSR_I1: entity work.microblaze_microblaze_0_0_MSR_Reg_ff
     port map (
      Clk => Clk,
      D(3) => D(6),
      D(2 downto 0) => D(3 downto 1),
      D_2 => D_2,
      EX_CarryIn => \^ex_carryin\,
      \Using_FPGA.Native\ => \^using_fpga.native\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_10\ => wb_MSR_i(10),
      \Using_FPGA.Native_11\ => wb_MSR_i(9),
      \Using_FPGA.Native_12\ => wb_MSR_i(8),
      \Using_FPGA.Native_13\ => wb_MSR_i(7),
      \Using_FPGA.Native_14\ => wb_MSR_i(6),
      \Using_FPGA.Native_15\ => wb_MSR_i(5),
      \Using_FPGA.Native_16\ => wb_MSR_i(4),
      \Using_FPGA.Native_17\ => wb_MSR_i(3),
      \Using_FPGA.Native_18\ => wb_MSR_i(2),
      \Using_FPGA.Native_19\ => wb_MSR_i(1),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_20\ => wb_MSR_i(0),
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_22\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_25\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_26\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_27\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_28\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_29\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_3\,
      \Using_FPGA.Native_30\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_31\ => \Using_FPGA.Native_19\,
      \Using_FPGA.Native_32\ => \Using_FPGA.Native_20\,
      \Using_FPGA.Native_33\ => \Using_FPGA.Native_21\,
      \Using_FPGA.Native_34\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_35\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_36\ => \Using_FPGA.Native_24\,
      \Using_FPGA.Native_37\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_38\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_39\ => \Using_FPGA.Native_27\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_40\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_41\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_42\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_43\ => \Using_FPGA.Native_31\,
      \Using_FPGA.Native_44\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_45\ => WB_Div_Zero_Overflow_reg,
      \Using_FPGA.Native_46\ => div_busy_reg,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_6\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_8\ => MSR_I1_n_21,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_8\,
      WB_Fwd(3) => \^wb_fwd\(25),
      WB_Fwd(2) => \^wb_fwd\(28),
      WB_Fwd(1) => \^wb_fwd\(29),
      WB_Fwd(0) => \^wb_fwd\(30),
      \data_rd_reg_reg[25]\(3) => \^wb_pc_i_reg[0]\(6),
      \data_rd_reg_reg[25]\(2 downto 0) => \^wb_pc_i_reg[0]\(3 downto 1),
      \data_rd_reg_reg[30]\ => \data_rd_reg_reg[30]\,
      ex_MSR_i(10 downto 0) => ex_MSR_i(10 downto 0),
      m0_piperun => m0_piperun,
      m1_piperun => m1_piperun,
      m2_piperun => m2_piperun,
      m3_msr(0) => m3_msr(0),
      m3_piperun => m3_piperun,
      \of_MSR_i_reg[17]_0\(14 downto 0) => \of_MSR_i_reg[17]\(14 downto 0),
      \of_MSR_i_reg[22]_0\(4 downto 0) => \of_MSR_i_reg[22]\(4 downto 0),
      \of_MSR_i_reg[22]_1\(3 downto 0) => \of_MSR_i_reg[22]_0\(3 downto 0),
      \of_MSR_i_reg[25]_0\(1 downto 0) => \of_MSR_i_reg[25]\(1 downto 0),
      \of_MSR_i_reg[25]_1\(1 downto 0) => \of_MSR_i_reg[25]_0\(1 downto 0),
      of_piperun => of_piperun,
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      wb_div_zero_overflow => wb_div_zero_overflow,
      \wb_exception_from_m3_reg_rep__0\(1 downto 0) => \wb_exception_from_m3_reg_rep__0\(1 downto 0),
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_msr(3 downto 0) => wb_msr(3 downto 0),
      wb_msr_clear_bip => wb_msr_clear_bip
    );
MUL_Unit_I1: entity work.microblaze_microblaze_0_0_mul_unit_ff
     port map (
      Clk => Clk,
      Q(31) => \^q\(15),
      Q(30) => ex_op2(1),
      Q(29) => ex_op2(2),
      Q(28) => ex_op2(3),
      Q(27) => ex_op2(4),
      Q(26) => ex_op2(5),
      Q(25) => ex_op2(6),
      Q(24) => ex_op2(7),
      Q(23) => ex_op2(8),
      Q(22) => ex_op2(9),
      Q(21) => ex_op2(10),
      Q(20) => ex_op2(11),
      Q(19) => ex_op2(12),
      Q(18) => ex_op2(13),
      Q(17) => ex_op2(14),
      Q(16) => ex_op2(15),
      Q(15) => ex_op2(16),
      Q(14 downto 0) => \^q\(14 downto 0),
      \Using_FPGA.DSP48E1_I1\ => \Using_FPGA.DSP48E1_I1\,
      \Using_FPGA.DSP48E1_I1_0\(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      m0_piperun => m0_piperun,
      m1_mul_result(0 to 31) => m1_mul_result(0 to 31),
      sync_reset => sync_reset
    );
Operand_Select_I1: entity work.microblaze_microblaze_0_0_Operand_Select_ff
     port map (
      CI => D_Carry(32),
      Clk => Clk,
      D(3) => Operand_Select_I1_n_179,
      D(2) => Operand_Select_I1_n_180,
      D(1) => Operand_Select_I1_n_181,
      D(0) => Operand_Select_I1_n_182,
      EX_Bit_Extract_reg(30) => Operand_Select_I1_n_68,
      EX_Bit_Extract_reg(29) => Operand_Select_I1_n_69,
      EX_Bit_Extract_reg(28) => Operand_Select_I1_n_70,
      EX_Bit_Extract_reg(27) => Operand_Select_I1_n_71,
      EX_Bit_Extract_reg(26) => Operand_Select_I1_n_72,
      EX_Bit_Extract_reg(25) => Operand_Select_I1_n_73,
      EX_Bit_Extract_reg(24) => Operand_Select_I1_n_74,
      EX_Bit_Extract_reg(23) => Operand_Select_I1_n_75,
      EX_Bit_Extract_reg(22) => Operand_Select_I1_n_76,
      EX_Bit_Extract_reg(21) => Operand_Select_I1_n_77,
      EX_Bit_Extract_reg(20) => Operand_Select_I1_n_78,
      EX_Bit_Extract_reg(19) => Operand_Select_I1_n_79,
      EX_Bit_Extract_reg(18) => Operand_Select_I1_n_80,
      EX_Bit_Extract_reg(17) => Operand_Select_I1_n_81,
      EX_Bit_Extract_reg(16) => Operand_Select_I1_n_82,
      EX_Bit_Extract_reg(15) => Operand_Select_I1_n_83,
      EX_Bit_Extract_reg(14) => Operand_Select_I1_n_84,
      EX_Bit_Extract_reg(13) => Operand_Select_I1_n_85,
      EX_Bit_Extract_reg(12) => Operand_Select_I1_n_86,
      EX_Bit_Extract_reg(11) => Operand_Select_I1_n_87,
      EX_Bit_Extract_reg(10) => Operand_Select_I1_n_88,
      EX_Bit_Extract_reg(9) => Operand_Select_I1_n_89,
      EX_Bit_Extract_reg(8) => Operand_Select_I1_n_90,
      EX_Bit_Extract_reg(7) => Operand_Select_I1_n_91,
      EX_Bit_Extract_reg(6) => Operand_Select_I1_n_92,
      EX_Bit_Extract_reg(5) => Operand_Select_I1_n_93,
      EX_Bit_Extract_reg(4) => Operand_Select_I1_n_94,
      EX_Bit_Extract_reg(3) => Operand_Select_I1_n_95,
      EX_Bit_Extract_reg(2) => Operand_Select_I1_n_96,
      EX_Bit_Extract_reg(1) => Operand_Select_I1_n_97,
      EX_Bit_Extract_reg(0) => Operand_Select_I1_n_98,
      EX_Bit_Extract_reg_0(12) => Operand_Select_I1_n_99,
      EX_Bit_Extract_reg_0(11) => Operand_Select_I1_n_100,
      EX_Bit_Extract_reg_0(10) => Operand_Select_I1_n_101,
      EX_Bit_Extract_reg_0(9) => Operand_Select_I1_n_102,
      EX_Bit_Extract_reg_0(8) => Operand_Select_I1_n_103,
      EX_Bit_Extract_reg_0(7) => p_31_out(14),
      EX_Bit_Extract_reg_0(6) => Operand_Select_I1_n_105,
      EX_Bit_Extract_reg_0(5) => p_31_out(12),
      EX_Bit_Extract_reg_0(4 downto 1) => p_31_out(7 downto 4),
      EX_Bit_Extract_reg_0(0) => p_31_out(2),
      \EX_Branch_CMP_Op1_reg[0]_0\(29) => \^ex_branch_cmp_op1_reg[0]\(0),
      \EX_Branch_CMP_Op1_reg[0]_0\(28) => ex_branch_cmp_op1(1),
      \EX_Branch_CMP_Op1_reg[0]_0\(27) => ex_branch_cmp_op1(2),
      \EX_Branch_CMP_Op1_reg[0]_0\(26) => ex_branch_cmp_op1(3),
      \EX_Branch_CMP_Op1_reg[0]_0\(25) => ex_branch_cmp_op1(4),
      \EX_Branch_CMP_Op1_reg[0]_0\(24) => ex_branch_cmp_op1(5),
      \EX_Branch_CMP_Op1_reg[0]_0\(23) => ex_branch_cmp_op1(6),
      \EX_Branch_CMP_Op1_reg[0]_0\(22) => ex_branch_cmp_op1(7),
      \EX_Branch_CMP_Op1_reg[0]_0\(21) => ex_branch_cmp_op1(8),
      \EX_Branch_CMP_Op1_reg[0]_0\(20) => ex_branch_cmp_op1(9),
      \EX_Branch_CMP_Op1_reg[0]_0\(19) => ex_branch_cmp_op1(10),
      \EX_Branch_CMP_Op1_reg[0]_0\(18) => ex_branch_cmp_op1(11),
      \EX_Branch_CMP_Op1_reg[0]_0\(17) => ex_branch_cmp_op1(12),
      \EX_Branch_CMP_Op1_reg[0]_0\(16) => ex_branch_cmp_op1(13),
      \EX_Branch_CMP_Op1_reg[0]_0\(15) => ex_branch_cmp_op1(14),
      \EX_Branch_CMP_Op1_reg[0]_0\(14) => ex_branch_cmp_op1(15),
      \EX_Branch_CMP_Op1_reg[0]_0\(13) => ex_branch_cmp_op1(16),
      \EX_Branch_CMP_Op1_reg[0]_0\(12) => ex_branch_cmp_op1(17),
      \EX_Branch_CMP_Op1_reg[0]_0\(11) => ex_branch_cmp_op1(18),
      \EX_Branch_CMP_Op1_reg[0]_0\(10) => ex_branch_cmp_op1(19),
      \EX_Branch_CMP_Op1_reg[0]_0\(9) => ex_branch_cmp_op1(20),
      \EX_Branch_CMP_Op1_reg[0]_0\(8) => ex_branch_cmp_op1(21),
      \EX_Branch_CMP_Op1_reg[0]_0\(7) => ex_branch_cmp_op1(22),
      \EX_Branch_CMP_Op1_reg[0]_0\(6) => ex_branch_cmp_op1(23),
      \EX_Branch_CMP_Op1_reg[0]_0\(5) => ex_branch_cmp_op1(24),
      \EX_Branch_CMP_Op1_reg[0]_0\(4) => ex_branch_cmp_op1(25),
      \EX_Branch_CMP_Op1_reg[0]_0\(3) => ex_branch_cmp_op1(26),
      \EX_Branch_CMP_Op1_reg[0]_0\(2) => ex_branch_cmp_op1(27),
      \EX_Branch_CMP_Op1_reg[0]_0\(1) => ex_branch_cmp_op1(28),
      \EX_Branch_CMP_Op1_reg[0]_0\(0) => ex_branch_cmp_op1(29),
      \EX_Branch_CMP_Op1_reg[0]_1\(31 downto 3) => \^m2_m1_sel_res_reg_1\(28 downto 0),
      \EX_Branch_CMP_Op1_reg[0]_1\(2 downto 0) => \EX_Branch_CMP_Op1_reg[29]\(2 downto 0),
      \EX_Branch_CMP_Op1_reg[30]_0\ => Operand_Select_I1_n_186,
      EX_CLZ_Instr_reg => \^ex_clz_instr_reg\,
      EX_CLZ_Instr_reg_0 => EX_CLZ_Instr_reg_0,
      EX_Div_Unsigned_reg => \Using_FPGA.D_Handle[1].D_Sel_reg\,
      \EX_Logic_Op_reg[0]\ => \EX_Logic_Op_reg[0]\,
      \EX_Logic_Op_reg[1]\ => \EX_Logic_Op_reg[1]\,
      \EX_Op1_reg[0]_0\ => \EX_Op1_reg[0]_0\,
      \EX_Op1_reg[0]_1\ => \EX_Op1_reg[0]_1\,
      \EX_Op1_reg[0]_2\ => \EX_Op1_reg[0]_2\,
      \EX_Op1_reg[0]_3\(31 downto 0) => \EX_Op1_reg[0]_3\(31 downto 0),
      \EX_Op1_reg[10]_0\ => \EX_Op1_reg[10]\,
      \EX_Op1_reg[10]_1\ => \Using_FPGA.D_Handle[10].D_Sel_reg\,
      \EX_Op1_reg[11]_0\ => \Using_FPGA.D_Handle[11].D_Sel_reg\,
      \EX_Op1_reg[12]_0\ => \Using_FPGA.D_Handle[12].D_Sel_reg\,
      \EX_Op1_reg[13]_0\ => \Using_FPGA.D_Handle[13].D_Sel_reg\,
      \EX_Op1_reg[14]_0\ => \Using_FPGA.D_Handle[14].D_Sel_reg\,
      \EX_Op1_reg[15]_0\ => \Using_FPGA.D_Handle[15].D_Sel_reg\,
      \EX_Op1_reg[16]_0\ => \EX_Op1_reg[16]\,
      \EX_Op1_reg[16]_1\ => \Using_FPGA.D_Handle[16].D_Sel_reg\,
      \EX_Op1_reg[16]_2\ => Operand_Select_I1_n_176,
      \EX_Op1_reg[17]_0\ => \Using_FPGA.D_Handle[17].D_Sel_reg\,
      \EX_Op1_reg[17]_1\ => Operand_Select_I1_n_178,
      \EX_Op1_reg[18]_0\ => \Using_FPGA.D_Handle[18].D_Sel_reg\,
      \EX_Op1_reg[18]_1\ => Operand_Select_I1_n_175,
      \EX_Op1_reg[19]_0\ => \Using_FPGA.D_Handle[19].D_Sel_reg\,
      \EX_Op1_reg[19]_1\ => Operand_Select_I1_n_174,
      \EX_Op1_reg[1]_0\ => \EX_Op1_reg[1]\,
      \EX_Op1_reg[20]_0\ => \Using_FPGA.D_Handle[20].D_Sel_reg\,
      \EX_Op1_reg[20]_1\ => Operand_Select_I1_n_173,
      \EX_Op1_reg[21]_0\ => \Using_FPGA.D_Handle[21].D_Sel_reg\,
      \EX_Op1_reg[21]_1\ => Operand_Select_I1_n_172,
      \EX_Op1_reg[22]_0\ => \Using_FPGA.D_Handle[22].D_Sel_reg\,
      \EX_Op1_reg[22]_1\ => Operand_Select_I1_n_171,
      \EX_Op1_reg[23]_0\ => \Using_FPGA.D_Handle[23].D_Sel_reg\,
      \EX_Op1_reg[23]_1\ => Operand_Select_I1_n_170,
      \EX_Op1_reg[24]_0\ => \EX_Op1_reg[24]\,
      \EX_Op1_reg[24]_1\ => \EX_Op1_reg[24]_0\,
      \EX_Op1_reg[24]_2\ => \Using_FPGA.D_Handle[24].D_Sel_reg\,
      \EX_Op1_reg[24]_3\ => \EX_Op1_reg[24]_1\,
      \EX_Op1_reg[25]_0\ => \Using_FPGA.D_Handle[25].D_Sel_reg\,
      \EX_Op1_reg[26]_0\ => \Using_FPGA.D_Handle[26].D_Sel_reg\,
      \EX_Op1_reg[27]_0\ => \Using_FPGA.D_Handle[27].D_Sel_reg\,
      \EX_Op1_reg[28]_0\ => \Using_FPGA.D_Handle[28].D_Sel_reg\,
      \EX_Op1_reg[29]_0\ => \Using_FPGA.D_Handle[29].D_Sel_reg\,
      \EX_Op1_reg[2]_0\ => \Using_FPGA.D_Handle[2].D_Sel_reg\,
      \EX_Op1_reg[30]_0\ => S_0,
      \EX_Op1_reg[3]_0\ => \Using_FPGA.D_Handle[3].D_Sel_reg\,
      \EX_Op1_reg[4]_0\ => \Using_FPGA.D_Handle[4].D_Sel_reg\,
      \EX_Op1_reg[5]_0\ => \Using_FPGA.D_Handle[5].D_Sel_reg\,
      \EX_Op1_reg[6]_0\ => \Using_FPGA.D_Handle[6].D_Sel_reg\,
      \EX_Op1_reg[7]_0\ => \Using_FPGA.D_Handle[7].D_Sel_reg\,
      \EX_Op1_reg[8]_0\ => \EX_Op1_reg[8]\,
      \EX_Op1_reg[8]_1\ => \Using_FPGA.D_Handle[8].D_Sel_reg\,
      \EX_Op1_reg[9]_0\ => \EX_Op1_reg[9]\,
      \EX_Op1_reg[9]_1\ => \Using_FPGA.D_Handle[9].D_Sel_reg\,
      \EX_Op2_reg[0]_0\(31) => \^q\(15),
      \EX_Op2_reg[0]_0\(30) => ex_op2(1),
      \EX_Op2_reg[0]_0\(29) => ex_op2(2),
      \EX_Op2_reg[0]_0\(28) => ex_op2(3),
      \EX_Op2_reg[0]_0\(27) => ex_op2(4),
      \EX_Op2_reg[0]_0\(26) => ex_op2(5),
      \EX_Op2_reg[0]_0\(25) => ex_op2(6),
      \EX_Op2_reg[0]_0\(24) => ex_op2(7),
      \EX_Op2_reg[0]_0\(23) => ex_op2(8),
      \EX_Op2_reg[0]_0\(22) => ex_op2(9),
      \EX_Op2_reg[0]_0\(21) => ex_op2(10),
      \EX_Op2_reg[0]_0\(20) => ex_op2(11),
      \EX_Op2_reg[0]_0\(19) => ex_op2(12),
      \EX_Op2_reg[0]_0\(18) => ex_op2(13),
      \EX_Op2_reg[0]_0\(17) => ex_op2(14),
      \EX_Op2_reg[0]_0\(16) => ex_op2(15),
      \EX_Op2_reg[0]_0\(15) => ex_op2(16),
      \EX_Op2_reg[0]_0\(14 downto 0) => \^q\(14 downto 0),
      \EX_Op2_reg[0]_1\(31) => of_op2(0),
      \EX_Op2_reg[0]_1\(30) => of_op2(1),
      \EX_Op2_reg[0]_1\(29) => of_op2(2),
      \EX_Op2_reg[0]_1\(28) => of_op2(3),
      \EX_Op2_reg[0]_1\(27) => of_op2(4),
      \EX_Op2_reg[0]_1\(26) => of_op2(5),
      \EX_Op2_reg[0]_1\(25) => of_op2(6),
      \EX_Op2_reg[0]_1\(24) => of_op2(7),
      \EX_Op2_reg[0]_1\(23) => of_op2(8),
      \EX_Op2_reg[0]_1\(22) => of_op2(9),
      \EX_Op2_reg[0]_1\(21) => of_op2(10),
      \EX_Op2_reg[0]_1\(20) => of_op2(11),
      \EX_Op2_reg[0]_1\(19) => of_op2(12),
      \EX_Op2_reg[0]_1\(18) => of_op2(13),
      \EX_Op2_reg[0]_1\(17) => of_op2(14),
      \EX_Op2_reg[0]_1\(16) => of_op2(15),
      \EX_Op2_reg[0]_1\(15) => of_op2(16),
      \EX_Op2_reg[0]_1\(14) => of_op2(17),
      \EX_Op2_reg[0]_1\(13) => of_op2(18),
      \EX_Op2_reg[0]_1\(12) => of_op2(19),
      \EX_Op2_reg[0]_1\(11) => of_op2(20),
      \EX_Op2_reg[0]_1\(10) => of_op2(21),
      \EX_Op2_reg[0]_1\(9) => of_op2(22),
      \EX_Op2_reg[0]_1\(8) => of_op2(23),
      \EX_Op2_reg[0]_1\(7) => of_op2(24),
      \EX_Op2_reg[0]_1\(6) => of_op2(25),
      \EX_Op2_reg[0]_1\(5) => of_op2(26),
      \EX_Op2_reg[0]_1\(4) => of_op2(27),
      \EX_Op2_reg[0]_1\(3) => of_op2(28),
      \EX_Op2_reg[0]_1\(2) => of_op2(29),
      \EX_Op2_reg[0]_1\(1) => of_op2(30),
      \EX_Op2_reg[0]_1\(0) => \EX_Op2_reg[31]\(0),
      \EX_Op2_reg[25]_0\ => \EX_Op2_reg[25]\,
      \EX_Op2_reg[25]_1\ => \EX_Op2_reg[25]_0\,
      \EX_Op2_reg[25]_2\ => \EX_Op2_reg[25]_1\,
      \EX_Op2_reg[29]_0\ => \EX_Op2_reg[29]\,
      \EX_Op2_reg[30]_0\ => \EX_Op2_reg[30]\,
      \EX_Op3_reg[0]_0\(31) => ex_op3(0),
      \EX_Op3_reg[0]_0\(30) => ex_op3(1),
      \EX_Op3_reg[0]_0\(29) => ex_op3(2),
      \EX_Op3_reg[0]_0\(28) => ex_op3(3),
      \EX_Op3_reg[0]_0\(27) => ex_op3(4),
      \EX_Op3_reg[0]_0\(26) => ex_op3(5),
      \EX_Op3_reg[0]_0\(25) => ex_op3(6),
      \EX_Op3_reg[0]_0\(24) => ex_op3(7),
      \EX_Op3_reg[0]_0\(23) => ex_op3(8),
      \EX_Op3_reg[0]_0\(22) => ex_op3(9),
      \EX_Op3_reg[0]_0\(21) => ex_op3(10),
      \EX_Op3_reg[0]_0\(20) => ex_op3(11),
      \EX_Op3_reg[0]_0\(19) => ex_op3(12),
      \EX_Op3_reg[0]_0\(18) => ex_op3(13),
      \EX_Op3_reg[0]_0\(17) => ex_op3(14),
      \EX_Op3_reg[0]_0\(16) => ex_op3(15),
      \EX_Op3_reg[0]_0\(15) => ex_op3(16),
      \EX_Op3_reg[0]_0\(14) => ex_op3(17),
      \EX_Op3_reg[0]_0\(13) => ex_op3(18),
      \EX_Op3_reg[0]_0\(12) => ex_op3(19),
      \EX_Op3_reg[0]_0\(11) => ex_op3(20),
      \EX_Op3_reg[0]_0\(10) => ex_op3(21),
      \EX_Op3_reg[0]_0\(9) => ex_op3(22),
      \EX_Op3_reg[0]_0\(8) => ex_op3(23),
      \EX_Op3_reg[0]_0\(7) => ex_op3(24),
      \EX_Op3_reg[0]_0\(6) => ex_op3(25),
      \EX_Op3_reg[0]_0\(5) => ex_op3(26),
      \EX_Op3_reg[0]_0\(4) => ex_op3(27),
      \EX_Op3_reg[0]_0\(3) => ex_op3(28),
      \EX_Op3_reg[0]_0\(2) => ex_op3(29),
      \EX_Op3_reg[0]_0\(1) => ex_op3(30),
      \EX_Op3_reg[0]_0\(0) => ex_op3(31),
      \EX_Op3_reg[0]_1\(31) => of_op3(0),
      \EX_Op3_reg[0]_1\(30) => of_op3(1),
      \EX_Op3_reg[0]_1\(29) => of_op3(2),
      \EX_Op3_reg[0]_1\(28) => of_op3(3),
      \EX_Op3_reg[0]_1\(27) => of_op3(4),
      \EX_Op3_reg[0]_1\(26) => of_op3(5),
      \EX_Op3_reg[0]_1\(25) => of_op3(6),
      \EX_Op3_reg[0]_1\(24) => of_op3(7),
      \EX_Op3_reg[0]_1\(23) => of_op3(8),
      \EX_Op3_reg[0]_1\(22) => of_op3(9),
      \EX_Op3_reg[0]_1\(21) => of_op3(10),
      \EX_Op3_reg[0]_1\(20) => of_op3(11),
      \EX_Op3_reg[0]_1\(19) => of_op3(12),
      \EX_Op3_reg[0]_1\(18) => of_op3(13),
      \EX_Op3_reg[0]_1\(17) => of_op3(14),
      \EX_Op3_reg[0]_1\(16) => of_op3(15),
      \EX_Op3_reg[0]_1\(15) => of_op3(16),
      \EX_Op3_reg[0]_1\(14) => of_op3(17),
      \EX_Op3_reg[0]_1\(13) => of_op3(18),
      \EX_Op3_reg[0]_1\(12) => of_op3(19),
      \EX_Op3_reg[0]_1\(11) => of_op3(20),
      \EX_Op3_reg[0]_1\(10) => of_op3(21),
      \EX_Op3_reg[0]_1\(9) => of_op3(22),
      \EX_Op3_reg[0]_1\(8) => of_op3(23),
      \EX_Op3_reg[0]_1\(7) => of_op3(24),
      \EX_Op3_reg[0]_1\(6) => of_op3(25),
      \EX_Op3_reg[0]_1\(5) => of_op3(26),
      \EX_Op3_reg[0]_1\(4) => of_op3(27),
      \EX_Op3_reg[0]_1\(3) => of_op3(28),
      \EX_Op3_reg[0]_1\(2) => of_op3(29),
      \EX_Op3_reg[0]_1\(1) => of_op3(30),
      \EX_Op3_reg[0]_1\(0) => \EX_Op3_reg[31]\(0),
      EX_Pattern_Cmp_Sel_reg => EX_Pattern_Cmp_Sel_reg,
      EX_Pattern_Cmp_Sel_reg_0 => EX_Pattern_Cmp_Sel_reg_0,
      I0 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0\,
      I2 => \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2\,
      Q(31 downto 0) => \^ex_op1_reg[0]\(31 downto 0),
      S => \Using_FPGA.D_Handle[31].D_Sel_reg\,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\ => \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\ => \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\,
      \Use_HW_BS.mem_mux3_reg[0]\ => \Use_HW_BS.mem_mux3_reg[0]\,
      \Use_HW_BS.mem_mux3_reg[0]_0\ => \Use_HW_BS.mem_mux3_reg[0]_0\,
      \Use_HW_BS.mem_mux3_reg[0]_1\ => \Use_HW_BS.mem_mux3_reg[0]_1\,
      \Use_HW_BS.mem_mux3_reg[27]\ => \Use_HW_BS.mem_mux3_reg[27]\,
      \Use_HW_BS.mem_mux3_reg[30]\ => \Use_HW_BS.mem_mux3_reg[30]\,
      \Use_HW_BS.mem_mux3_reg[30]_0\ => \Use_HW_BS.mem_mux3_reg[30]_0\,
      \Using_FPGA.D_Handle[0].D_Sel_reg\ => \Using_FPGA.D_Handle[0].D_Sel_reg\,
      \Using_FPGA.Native_i_2__8\ => \^using_fpga.native\,
      \Using_FPGA.Native_i_2__8_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      ex_alu_result(0) => \^ex_alu_result\(0),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_arith_shift => ex_arith_shift,
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_databus_addr(3 downto 2) => \^ex_databus_addr\(5 downto 4),
      ex_databus_addr(1 downto 0) => \^ex_databus_addr\(1 downto 0),
      ex_div_unsigned => ex_div_unsigned,
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_left_shift_i => ex_left_shift_i,
      ex_logic_op(0 to 1) => ex_logic_op(0 to 1),
      ex_msrclr => ex_msrclr,
      ex_msrset => ex_msrset,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_sel_alu_reg(6) => ex_fwd(24),
      ex_sel_alu_reg(5) => ex_fwd(25),
      ex_sel_alu_reg(4) => ex_fwd(26),
      ex_sel_alu_reg(3) => ex_fwd(27),
      ex_sel_alu_reg(2) => ex_fwd(28),
      ex_sel_alu_reg(1 downto 0) => \^ex_enable_sext_shift_reg\(1 downto 0),
      ex_sel_alu_reg_0 => ex_sel_alu_reg,
      ex_sel_alu_res => ex_sel_alu_res,
      ex_void_bit => ex_void_bit,
      \imm_reg_reg[0]_0\(15 downto 0) => \imm_reg_reg[0]\(15 downto 0),
      \imm_reg_reg[0]_1\(15 downto 0) => \EX_Op3[1]_i_2\(15 downto 0),
      \imm_reg_reg[15]_0\(0) => \imm_reg_reg[15]\(0),
      in0 => Operand_Select_I1_n_177,
      \m0_Ex_Result_i_reg[17]\(1 downto 0) => \m0_Ex_Result_i_reg[17]\(1 downto 0),
      \m0_Ex_Result_i_reg[24]\ => \m0_Ex_Result_i_reg[24]\,
      \m0_Ex_Result_i_reg[26]\ => ALU_I1_n_38,
      \m0_Ex_Result_i_reg[26]_0\ => \m0_Ex_Result_i_reg[26]\,
      \m0_Ex_Result_i_reg[27]\ => ALU_I1_n_39,
      \m0_Ex_Result_i_reg[27]_0\ => \m0_Ex_Result_i_reg[27]\,
      \m0_Ex_Result_i_reg[28]\ => \m0_Ex_Result_i_reg[28]\,
      \m0_Ex_Result_i_reg[29]\ => \m0_Ex_Result_i_reg[29]_0\,
      \m0_Ex_Result_i_reg[30]\ => \m0_Ex_Result_i_reg[30]_0\,
      \m0_Ex_Result_i_reg[31]\ => \m0_Ex_Result_i_reg[31]_0\,
      m3_div_zero_overflow_ex_hold => m3_div_zero_overflow_ex_hold,
      of_piperun => of_piperun,
      \out\ => I4,
      sync_reset => sync_reset
    );
Register_File_I1: entity work.microblaze_microblaze_0_0_Register_File_gti
     port map (
      ADDRD(4 downto 0) => ADDRD(4 downto 0),
      Clk => Clk,
      \EX_Op3[1]_i_2\(14 downto 0) => \EX_Op3[1]_i_2\(25 downto 11),
      GPR_Op1(0 to 28) => \^gpr_op1\(0 to 28),
      GPR_Op1(29) => GPR_Op1(2),
      GPR_Op1(30) => GPR_Op1(1),
      GPR_Op1(31) => GPR_Op1(0),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(0 to 29) => \^gpr_op3\(0 to 29),
      GPR_Op3(30) => GPR_Op3(1),
      GPR_Op3(31) => GPR_Op3(0),
      WB_Fwd(0 to 31) => \^wb_fwd\(0 to 31),
      wb_gpr_wr => wb_gpr_wr
    );
Shift_Logic_Module_I1: entity work.microblaze_microblaze_0_0_Shift_Logic_Module_gti
     port map (
      \EX_Op1_reg[16]\ => \out\,
      in0 => in0,
      \m0_Ex_Result_i_reg[0]\ => Operand_Select_I1_n_177,
      \out\ => I4
    );
\Using_Div_Unit.Div_Unit_I1\: entity work.microblaze_microblaze_0_0_Div_Unit_ff
     port map (
      CI => D_Carry(32),
      Clk => Clk,
      DI(0) => next_sub,
      E(0) => E(0),
      EX_Op1_Zero => \^ex_op1_zero\,
      M3_Div_By_Zero_reg_0 => M3_Div_By_Zero_reg,
      M3_Div_By_Zero_reg_1 => M3_Div_By_Zero_reg_0,
      O(0) => O(0),
      Q(31) => m3_div_result(0),
      Q(30) => m3_div_result(1),
      Q(29) => m3_div_result(2),
      Q(28) => m3_div_result(3),
      Q(27) => m3_div_result(4),
      Q(26) => m3_div_result(5),
      Q(25) => m3_div_result(6),
      Q(24) => m3_div_result(7),
      Q(23) => m3_div_result(8),
      Q(22) => m3_div_result(9),
      Q(21) => m3_div_result(10),
      Q(20) => m3_div_result(11),
      Q(19) => m3_div_result(12),
      Q(18) => m3_div_result(13),
      Q(17) => m3_div_result(14),
      Q(16) => m3_div_result(15),
      Q(15) => m3_div_result(16),
      Q(14) => m3_div_result(17),
      Q(13) => m3_div_result(18),
      Q(12) => m3_div_result(19),
      Q(11) => m3_div_result(20),
      Q(10) => m3_div_result(21),
      Q(9) => m3_div_result(22),
      Q(8) => m3_div_result(23),
      Q(7) => m3_div_result(24),
      Q(6) => m3_div_result(25),
      Q(5) => m3_div_result(26),
      Q(4) => m3_div_result(27),
      Q(3) => m3_div_result(28),
      Q(2) => m3_div_result(29),
      Q(1) => m3_div_result(30),
      Q(0) => m3_div_result(31),
      \Q_reg[31]_0\(31) => \^q\(15),
      \Q_reg[31]_0\(30) => ex_op2(1),
      \Q_reg[31]_0\(29) => ex_op2(2),
      \Q_reg[31]_0\(28) => ex_op2(3),
      \Q_reg[31]_0\(27) => ex_op2(4),
      \Q_reg[31]_0\(26) => ex_op2(5),
      \Q_reg[31]_0\(25) => ex_op2(6),
      \Q_reg[31]_0\(24) => ex_op2(7),
      \Q_reg[31]_0\(23) => ex_op2(8),
      \Q_reg[31]_0\(22) => ex_op2(9),
      \Q_reg[31]_0\(21) => ex_op2(10),
      \Q_reg[31]_0\(20) => ex_op2(11),
      \Q_reg[31]_0\(19) => ex_op2(12),
      \Q_reg[31]_0\(18) => ex_op2(13),
      \Q_reg[31]_0\(17) => ex_op2(14),
      \Q_reg[31]_0\(16) => ex_op2(15),
      \Q_reg[31]_0\(15) => ex_op2(16),
      \Q_reg[31]_0\(14 downto 0) => \^q\(14 downto 0),
      \R_reg[32]_0\(0) => \R_reg[32]\(0),
      S => \Using_FPGA.D_Handle[31].D_Sel_reg\,
      SR(0) => SR(0),
      \Using_FPGA.D_Handle[0].D_Sel_reg\ => \Using_FPGA.D_Handle[0].D_Sel_reg\,
      \Using_FPGA.D_reg[10]_0\ => \Using_FPGA.D_Handle[10].D_Sel_reg\,
      \Using_FPGA.D_reg[11]_0\ => \Using_FPGA.D_Handle[11].D_Sel_reg\,
      \Using_FPGA.D_reg[12]_0\ => \Using_FPGA.D_Handle[12].D_Sel_reg\,
      \Using_FPGA.D_reg[13]_0\ => \Using_FPGA.D_Handle[13].D_Sel_reg\,
      \Using_FPGA.D_reg[14]_0\ => \Using_FPGA.D_Handle[14].D_Sel_reg\,
      \Using_FPGA.D_reg[15]_0\ => \Using_FPGA.D_Handle[15].D_Sel_reg\,
      \Using_FPGA.D_reg[16]_0\ => \Using_FPGA.D_Handle[16].D_Sel_reg\,
      \Using_FPGA.D_reg[17]_0\ => \Using_FPGA.D_Handle[17].D_Sel_reg\,
      \Using_FPGA.D_reg[18]_0\ => \Using_FPGA.D_Handle[18].D_Sel_reg\,
      \Using_FPGA.D_reg[19]_0\ => \Using_FPGA.D_Handle[19].D_Sel_reg\,
      \Using_FPGA.D_reg[1]_0\ => \Using_FPGA.D_Handle[1].D_Sel_reg\,
      \Using_FPGA.D_reg[20]_0\ => \Using_FPGA.D_Handle[20].D_Sel_reg\,
      \Using_FPGA.D_reg[21]_0\ => \Using_FPGA.D_Handle[21].D_Sel_reg\,
      \Using_FPGA.D_reg[22]_0\ => \Using_FPGA.D_Handle[22].D_Sel_reg\,
      \Using_FPGA.D_reg[23]_0\ => \Using_FPGA.D_Handle[23].D_Sel_reg\,
      \Using_FPGA.D_reg[24]_0\ => \Using_FPGA.D_Handle[24].D_Sel_reg\,
      \Using_FPGA.D_reg[25]_0\ => \Using_FPGA.D_Handle[25].D_Sel_reg\,
      \Using_FPGA.D_reg[26]_0\ => \Using_FPGA.D_Handle[26].D_Sel_reg\,
      \Using_FPGA.D_reg[27]_0\ => \Using_FPGA.D_Handle[27].D_Sel_reg\,
      \Using_FPGA.D_reg[28]_0\ => \Using_FPGA.D_Handle[28].D_Sel_reg\,
      \Using_FPGA.D_reg[29]_0\ => \Using_FPGA.D_Handle[29].D_Sel_reg\,
      \Using_FPGA.D_reg[2]_0\ => \Using_FPGA.D_Handle[2].D_Sel_reg\,
      \Using_FPGA.D_reg[30]_0\ => S_0,
      \Using_FPGA.D_reg[3]_0\ => \Using_FPGA.D_Handle[3].D_Sel_reg\,
      \Using_FPGA.D_reg[4]_0\ => \Using_FPGA.D_Handle[4].D_Sel_reg\,
      \Using_FPGA.D_reg[5]_0\ => \Using_FPGA.D_Handle[5].D_Sel_reg\,
      \Using_FPGA.D_reg[6]_0\ => \Using_FPGA.D_Handle[6].D_Sel_reg\,
      \Using_FPGA.D_reg[7]_0\ => \Using_FPGA.D_Handle[7].D_Sel_reg\,
      \Using_FPGA.D_reg[8]_0\ => \Using_FPGA.D_Handle[8].D_Sel_reg\,
      \Using_FPGA.D_reg[9]_0\ => \Using_FPGA.D_Handle[9].D_Sel_reg\,
      \Using_FPGA.Native\ => \^using_fpga.native_6\,
      \Using_FPGA.Native_0\ => MSR_I1_n_21,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg,
      \cnt_shifts_reg[0]_0\ => \cnt_shifts_reg[0]\,
      div_iterations_early => div_iterations_early,
      div_iterations_early_reg_0 => \^div_iterations_early_reg\,
      ex_div_unsigned => ex_div_unsigned,
      ex_start_div => ex_start_div,
      \floating_hold_div_by_zero__0\ => \floating_hold_div_by_zero__0\,
      floating_hold_div_by_zero_reg_0 => floating_hold_div_by_zero_reg,
      floating_hold_div_overflow_reg_0 => floating_hold_div_overflow_reg,
      floating_hold_div_overflow_reg_1 => floating_hold_div_overflow_reg_0,
      last_cycle_reg_0 => last_cycle,
      m2_is_div_instr => m2_is_div_instr,
      m2_piperun => m2_piperun,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow_i_reg_0 => m3_div_overflow,
      m3_div_overflow_i_reg_1 => m3_div_overflow_i_reg,
      m3_div_overflow_i_reg_2 => m3_div_overflow_i_reg_0,
      m3_div_overflow_i_reg_3 => m3_div_overflow_i_reg_1,
      m3_div_stall_i_reg_0 => m3_div_stall,
      m3_div_stall_i_reg_1 => m3_div_stall_i_reg,
      m3_div_stall_i_reg_2 => m3_div_stall_i_reg_0,
      m3_last_cycle_reg_0 => m3_last_cycle_reg,
      m3_last_cycle_reg_1 => div_busy_reg,
      m3_piperun => m3_piperun,
      m3_sel_div_res => m3_sel_div_res,
      make_result_neg => make_result_neg,
      make_result_neg_reg_0 => make_result_neg_reg,
      negative_operands => negative_operands,
      negative_operands_reg_0 => negative_operands_reg,
      negative_operands_reg_1 => negative_operands_reg_0,
      next_sub_reg_0 => next_sub_reg,
      sync_reset => sync_reset,
      \wb_exception_from_m3_reg_rep__0\ => \^wb_exception_from_m3_reg_rep__0_0\
    );
Zero_Detect_I: entity work.microblaze_microblaze_0_0_Zero_Detect_gti
     port map (
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      EX_Op1_Zero => \^ex_op1_zero\,
      \Using_FPGA.Native\(29) => \^ex_branch_cmp_op1_reg[0]\(0),
      \Using_FPGA.Native\(28) => ex_branch_cmp_op1(1),
      \Using_FPGA.Native\(27) => ex_branch_cmp_op1(2),
      \Using_FPGA.Native\(26) => ex_branch_cmp_op1(3),
      \Using_FPGA.Native\(25) => ex_branch_cmp_op1(4),
      \Using_FPGA.Native\(24) => ex_branch_cmp_op1(5),
      \Using_FPGA.Native\(23) => ex_branch_cmp_op1(6),
      \Using_FPGA.Native\(22) => ex_branch_cmp_op1(7),
      \Using_FPGA.Native\(21) => ex_branch_cmp_op1(8),
      \Using_FPGA.Native\(20) => ex_branch_cmp_op1(9),
      \Using_FPGA.Native\(19) => ex_branch_cmp_op1(10),
      \Using_FPGA.Native\(18) => ex_branch_cmp_op1(11),
      \Using_FPGA.Native\(17) => ex_branch_cmp_op1(12),
      \Using_FPGA.Native\(16) => ex_branch_cmp_op1(13),
      \Using_FPGA.Native\(15) => ex_branch_cmp_op1(14),
      \Using_FPGA.Native\(14) => ex_branch_cmp_op1(15),
      \Using_FPGA.Native\(13) => ex_branch_cmp_op1(16),
      \Using_FPGA.Native\(12) => ex_branch_cmp_op1(17),
      \Using_FPGA.Native\(11) => ex_branch_cmp_op1(18),
      \Using_FPGA.Native\(10) => ex_branch_cmp_op1(19),
      \Using_FPGA.Native\(9) => ex_branch_cmp_op1(20),
      \Using_FPGA.Native\(8) => ex_branch_cmp_op1(21),
      \Using_FPGA.Native\(7) => ex_branch_cmp_op1(22),
      \Using_FPGA.Native\(6) => ex_branch_cmp_op1(23),
      \Using_FPGA.Native\(5) => ex_branch_cmp_op1(24),
      \Using_FPGA.Native\(4) => ex_branch_cmp_op1(25),
      \Using_FPGA.Native\(3) => ex_branch_cmp_op1(26),
      \Using_FPGA.Native\(2) => ex_branch_cmp_op1(27),
      \Using_FPGA.Native\(1) => ex_branch_cmp_op1(28),
      \Using_FPGA.Native\(0) => ex_branch_cmp_op1(29),
      div_busy_reg => Operand_Select_I1_n_186,
      div_busy_reg_0 => \^div_iterations_early_reg\,
      div_busy_reg_1 => div_busy_reg,
      div_iterations_early => div_iterations_early,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_start_div => ex_start_div,
      lopt => lopt_5,
      lopt_1 => lopt_6,
      lopt_2 => lopt_7
    );
exception_registers_I1: entity work.microblaze_microblaze_0_0_exception_registers_ff
     port map (
      Clk => Clk,
      DI(0) => DI(0),
      Q(31) => wb_exception_return_addr(0),
      Q(30) => wb_exception_return_addr(1),
      Q(29) => wb_exception_return_addr(2),
      Q(28) => wb_exception_return_addr(3),
      Q(27) => wb_exception_return_addr(4),
      Q(26) => wb_exception_return_addr(5),
      Q(25) => wb_exception_return_addr(6),
      Q(24) => wb_exception_return_addr(7),
      Q(23) => wb_exception_return_addr(8),
      Q(22) => wb_exception_return_addr(9),
      Q(21) => wb_exception_return_addr(10),
      Q(20) => wb_exception_return_addr(11),
      Q(19) => wb_exception_return_addr(12),
      Q(18) => wb_exception_return_addr(13),
      Q(17) => wb_exception_return_addr(14),
      Q(16) => wb_exception_return_addr(15),
      Q(15) => wb_exception_return_addr(16),
      Q(14) => wb_exception_return_addr(17),
      Q(13) => wb_exception_return_addr(18),
      Q(12) => wb_exception_return_addr(19),
      Q(11) => wb_exception_return_addr(20),
      Q(10) => wb_exception_return_addr(21),
      Q(9) => wb_exception_return_addr(22),
      Q(8) => wb_exception_return_addr(23),
      Q(7) => wb_exception_return_addr(24),
      Q(6) => wb_exception_return_addr(25),
      Q(5) => wb_exception_return_addr(26),
      Q(4) => wb_exception_return_addr(27),
      Q(3) => wb_exception_return_addr(28),
      Q(2) => wb_exception_return_addr(29),
      Q(1) => wb_exception_return_addr(30),
      Q(0) => wb_exception_return_addr(31),
      S(3 downto 0) => S(3 downto 0),
      WB_Exception_Return_Addr0(29 downto 0) => WB_Exception_Return_Addr0(29 downto 0),
      \WB_Exception_Return_Addr_reg[0]_0\(1 downto 0) => \WB_Exception_Return_Addr_reg[0]\(1 downto 0),
      \WB_Exception_Return_Addr_reg[0]_1\(30 downto 0) => \WB_Exception_Return_Addr_reg[0]_0\(30 downto 0),
      \WB_Exception_Return_Addr_reg[10]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[10]\(3 downto 0),
      \WB_Exception_Return_Addr_reg[14]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[14]\(3 downto 0),
      \WB_Exception_Return_Addr_reg[18]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[18]\(3 downto 0),
      \WB_Exception_Return_Addr_reg[22]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[22]\(3 downto 0),
      \WB_Exception_Return_Addr_reg[2]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[2]\(3 downto 0),
      \WB_Exception_Return_Addr_reg[6]_0\(3 downto 0) => \WB_Exception_Return_Addr_reg[6]\(3 downto 0),
      m3_piperun => m3_piperun,
      sync_reset => sync_reset,
      \wb_PC_i_reg[0]_0\(31 downto 0) => \^wb_pc_i_reg[0]\(31 downto 0),
      \wb_PC_i_reg[0]_1\(31 downto 0) => \wb_PC_i_reg[0]_0\(31 downto 0),
      \wb_PC_i_reg[31]_0\(0) => \wb_PC_i_reg[31]\(0)
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_ISide_Logic_ff is
  port (
    if4_ready : out STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    S_0 : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_ISide_Logic_ff : entity is "ISide_Logic_ff";
end microblaze_microblaze_0_0_ISide_Logic_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_ISide_Logic_ff is
  signal if4_ready_tmp1 : STD_LOGIC;
  signal if4_ready_tmp2 : STD_LOGIC;
  signal if4_ready_tmp3 : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
begin
\Using_Ready_FPGA.Rdy_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      if4_ready_tmp2 => if4_ready_tmp2,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt_2,
      lopt_1 => lopt_3
    );
\Using_Ready_FPGA.Rdy_Or1\: entity work.microblaze_microblaze_0_0_carry_or_bb
     port map (
      if4_ready_tmp1 => if4_ready_tmp1,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.Native\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => S_0
    );
\Using_Ready_FPGA.Rdy_Or2\: entity work.microblaze_microblaze_0_0_carry_or_bb_41
     port map (
      S => S,
      if4_ready_tmp1 => if4_ready_tmp1,
      if4_ready_tmp2 => if4_ready_tmp2,
      lopt => lopt,
      lopt_1 => lopt_1
    );
\Using_Ready_FPGA.Rdy_Or3\: entity work.microblaze_microblaze_0_0_carry_or_bb_42
     port map (
      S_0 => S_0,
      if4_ready => if4_ready,
      if4_ready_tmp3 => if4_ready_tmp3,
      lopt => lopt_4,
      lopt_1 => lopt_5
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_decode_conflict_ff is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    S_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    S_2 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    S_3 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_decode_conflict_ff : entity is "decode_conflict_ff";
end microblaze_microblaze_0_0_decode_conflict_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_decode_conflict_ff is
  signal And_OUT : STD_LOGIC;
  signal OF_Op_EX_Stall : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_ex_addr_conflict : STD_LOGIC;
  signal of_ex_use_conflict : STD_LOGIC;
  signal of_m0_addr_conflict : STD_LOGIC;
  signal of_m0_no_stall_conflict : STD_LOGIC;
  signal of_m0_use_conflict : STD_LOGIC;
  signal of_m1_addr_conflict : STD_LOGIC;
  signal of_m1_no_stall_conflict : STD_LOGIC;
  signal of_m1_stall_conflict : STD_LOGIC;
  signal of_m1_use_conflict : STD_LOGIC;
  signal of_m2_addr_conflict : STD_LOGIC;
  signal of_m2_stall_conflict : STD_LOGIC;
  signal of_m2_use_conflict : STD_LOGIC;
  signal of_m3_addr_conflict : STD_LOGIC;
  signal of_m3_stall_conflict : STD_LOGIC;
  signal of_m3_use_conflict : STD_LOGIC;
  signal of_read_ex_write_op_conflict : STD_LOGIC;
  signal of_read_m0_write_op_conflict : STD_LOGIC;
  signal of_read_m1_write_op_conflict : STD_LOGIC;
  signal of_read_m2_write_op_conflict : STD_LOGIC;
  signal of_read_m3_write_op_conflict : STD_LOGIC;
begin
\EX_Simple_Carry.OF_EX_Use\: entity work.microblaze_microblaze_0_0_carry_and_bb_475
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => S,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.Native\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => \Using_FPGA.Native_0\,
      of_ex_use_conflict => of_ex_use_conflict
    );
\M0_Simple_Carry.OF_M0_Use\: entity work.microblaze_microblaze_0_0_carry_and_bb_476
     port map (
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => S_0,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => \Using_FPGA.Native_1\,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => \Using_FPGA.Native_2\,
      of_m0_use_conflict => of_m0_use_conflict
    );
\M1_Simple_Carry.OF_M1_Use\: entity work.microblaze_microblaze_0_0_carry_and_bb_477
     port map (
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => S_1,
      lopt_3 => lopt_14,
      lopt_4 => lopt_15,
      lopt_5 => \Using_FPGA.Native_3\,
      lopt_6 => lopt_16,
      lopt_7 => lopt_17,
      lopt_8 => \Using_FPGA.Native_4\,
      of_m1_use_conflict => of_m1_use_conflict
    );
\M2_Simple_Carry.OF_M2_Use\: entity work.microblaze_microblaze_0_0_carry_and_bb_478
     port map (
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => S_2,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => \Using_FPGA.Native_5\,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => \Using_FPGA.Native_6\,
      of_m2_use_conflict => of_m2_use_conflict
    );
\M3_Simple_Carry.OF_M3_Use\: entity work.microblaze_microblaze_0_0_carry_and_bb_479
     port map (
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => S_3,
      lopt_3 => lopt_26,
      lopt_4 => lopt_27,
      lopt_5 => \Using_FPGA.Native_7\,
      lopt_6 => lopt_28,
      lopt_7 => lopt_29,
      lopt_8 => \Using_FPGA.Native_8\,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_EX_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_480
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
OF_EX_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_481
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_482
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_483
     port map (
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_M0_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_484
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => lopt_8,
      lopt_3 => lopt_9,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
OF_M0_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_485
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      lopt => lopt_10,
      lopt_1 => lopt_11,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_486
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_487
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall => OF_Op_EX_Stall,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M1_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_488
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_14,
      lopt_3 => lopt_15,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
OF_M1_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_489
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_490
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_491
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M2_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_492
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => lopt_20,
      lopt_3 => lopt_21,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
OF_M2_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_493
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_494
     port map (
      And_OUT => And_OUT,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_495
     port map (
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M3_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_496
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => lopt_26,
      lopt_3 => lopt_27,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_M3_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_497
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      lopt => lopt_28,
      lopt_1 => lopt_29,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
OF_M3_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_498
     port map (
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_decode_conflict_ff__parameterized1\ is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    S_0 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    S_2 : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    S_3 : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    \Using_FPGA.Native_12\ : in STD_LOGIC;
    \Using_FPGA.Native_13\ : in STD_LOGIC;
    \Using_FPGA.Native_14\ : in STD_LOGIC;
    \Using_FPGA.Native_15\ : in STD_LOGIC;
    \Using_FPGA.Native_16\ : in STD_LOGIC;
    \Using_FPGA.Native_17\ : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_decode_conflict_ff__parameterized1\ : entity is "decode_conflict_ff";
end \microblaze_microblaze_0_0_decode_conflict_ff__parameterized1\;

architecture STRUCTURE of \microblaze_microblaze_0_0_decode_conflict_ff__parameterized1\ is
  signal And_OUT : STD_LOGIC;
  signal \M0_Advanced_Carry.OF_M0_Use1_n_0\ : STD_LOGIC;
  signal \M0_Advanced_Carry.OF_M0_Use2_n_0\ : STD_LOGIC;
  signal \M1_Advanced_Carry.OF_M1_Use1_n_0\ : STD_LOGIC;
  signal \M1_Advanced_Carry.OF_M1_Use2_n_0\ : STD_LOGIC;
  signal \M2_Advanced_Carry.OF_M2_Use1_n_0\ : STD_LOGIC;
  signal \M2_Advanced_Carry.OF_M2_Use2_n_0\ : STD_LOGIC;
  signal \M3_Advanced_Carry.OF_M3_Use1_n_0\ : STD_LOGIC;
  signal \M3_Advanced_Carry.OF_M3_Use2_n_0\ : STD_LOGIC;
  signal OF_Op_EX_Stall4_in : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_ex_addr_conflict : STD_LOGIC;
  signal of_ex_use_conflict : STD_LOGIC;
  signal of_m0_addr_conflict : STD_LOGIC;
  signal of_m0_no_stall_conflict : STD_LOGIC;
  signal of_m0_use_conflict : STD_LOGIC;
  signal of_m1_addr_conflict : STD_LOGIC;
  signal of_m1_no_stall_conflict : STD_LOGIC;
  signal of_m1_stall_conflict : STD_LOGIC;
  signal of_m1_use_conflict : STD_LOGIC;
  signal of_m2_addr_conflict : STD_LOGIC;
  signal of_m2_stall_conflict : STD_LOGIC;
  signal of_m2_use_conflict : STD_LOGIC;
  signal of_m3_addr_conflict : STD_LOGIC;
  signal of_m3_stall_conflict : STD_LOGIC;
  signal of_m3_use_conflict : STD_LOGIC;
  signal of_read_ex_write_op_conflict : STD_LOGIC;
  signal of_read_m0_write_op_conflict : STD_LOGIC;
  signal of_read_m1_write_op_conflict : STD_LOGIC;
  signal of_read_m2_write_op_conflict : STD_LOGIC;
  signal of_read_m3_write_op_conflict : STD_LOGIC;
  signal part_c : STD_LOGIC;
  signal part_c_or_not_b : STD_LOGIC;
begin
\EX_Advanced_Carry.OF_EX_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_372
     port map (
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \Using_FPGA.Native_9\,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.Native_10\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => S,
      part_c => part_c
    );
\EX_Advanced_Carry.OF_EX_Use2\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_373
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_or_not_b => part_c_or_not_b
    );
\EX_Advanced_Carry.OF_EX_Use3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_374
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_10\,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_or_not_b => part_c_or_not_b
    );
\M0_Advanced_Carry.OF_M0_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_375
     port map (
      \Using_FPGA.Native\ => \M0_Advanced_Carry.OF_M0_Use1_n_0\,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => \Using_FPGA.Native_11\,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => \Using_FPGA.Native_12\,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => S_0
    );
\M0_Advanced_Carry.OF_M0_Use2\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_376
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \M0_Advanced_Carry.OF_M0_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M0_Advanced_Carry.OF_M0_Use2_n_0\,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\M0_Advanced_Carry.OF_M0_Use3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_377
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_0\ => \M0_Advanced_Carry.OF_M0_Use2_n_0\,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      of_m0_use_conflict => of_m0_use_conflict
    );
\M1_Advanced_Carry.OF_M1_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_378
     port map (
      \Using_FPGA.Native\ => \M1_Advanced_Carry.OF_M1_Use1_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => \Using_FPGA.Native_13\,
      lopt_3 => lopt_14,
      lopt_4 => lopt_15,
      lopt_5 => \Using_FPGA.Native_14\,
      lopt_6 => lopt_16,
      lopt_7 => lopt_17,
      lopt_8 => S_1
    );
\M1_Advanced_Carry.OF_M1_Use2\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_379
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_0\ => \M1_Advanced_Carry.OF_M1_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M1_Advanced_Carry.OF_M1_Use2_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13
    );
\M1_Advanced_Carry.OF_M1_Use3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_380
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_14\,
      \Using_FPGA.Native_0\ => \M1_Advanced_Carry.OF_M1_Use2_n_0\,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      of_m1_use_conflict => of_m1_use_conflict
    );
\M2_Advanced_Carry.OF_M2_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_381
     port map (
      \Using_FPGA.Native\ => \M2_Advanced_Carry.OF_M2_Use1_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => \Using_FPGA.Native_15\,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => \Using_FPGA.Native_16\,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => S_2
    );
\M2_Advanced_Carry.OF_M2_Use2\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_382
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_0\ => \M2_Advanced_Carry.OF_M2_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M2_Advanced_Carry.OF_M2_Use2_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19
    );
\M2_Advanced_Carry.OF_M2_Use3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_383
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_0\ => \M2_Advanced_Carry.OF_M2_Use2_n_0\,
      lopt => lopt_20,
      lopt_1 => lopt_21,
      of_m2_use_conflict => of_m2_use_conflict
    );
\M3_Advanced_Carry.OF_M3_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_384
     port map (
      \Using_FPGA.Native\ => \M3_Advanced_Carry.OF_M3_Use1_n_0\,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => \Using_FPGA.Native_17\,
      lopt_3 => lopt_26,
      lopt_4 => lopt_27,
      lopt_5 => \Using_FPGA.Native_18\,
      lopt_6 => lopt_28,
      lopt_7 => lopt_29,
      lopt_8 => S_3
    );
\M3_Advanced_Carry.OF_M3_Use2\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_385
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_17\,
      \Using_FPGA.Native_0\ => \M3_Advanced_Carry.OF_M3_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M3_Advanced_Carry.OF_M3_Use2_n_0\,
      lopt => lopt_24,
      lopt_1 => lopt_25
    );
\M3_Advanced_Carry.OF_M3_Use3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_386
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_0\ => \M3_Advanced_Carry.OF_M3_Use2_n_0\,
      lopt => lopt_26,
      lopt_1 => lopt_27,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_EX_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_387
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      lopt_2 => lopt_30,
      lopt_3 => lopt_31,
      lopt_4 => \Using_FPGA.Native_0\,
      lopt_5 => lopt_32,
      lopt_6 => lopt_33,
      lopt_7 => ex_complete_in_later_stage,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
OF_EX_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_388
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      lopt => lopt_30,
      lopt_1 => lopt_31,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_389
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_390
     port map (
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt_32,
      lopt_1 => lopt_33,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_M0_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_391
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      lopt => lopt_10,
      lopt_1 => lopt_11,
      lopt_2 => lopt_34,
      lopt_3 => lopt_35,
      lopt_4 => \Using_FPGA.Native_2\,
      lopt_5 => lopt_36,
      lopt_6 => lopt_37,
      lopt_7 => m0_complete_in_later_stage,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
OF_M0_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_392
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      lopt => lopt_34,
      lopt_1 => lopt_35,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_393
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_394
     port map (
      And_OUT => And_OUT,
      OF_Op_EX_Stall4_in => OF_Op_EX_Stall4_in,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M1_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_395
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      lopt_2 => lopt_38,
      lopt_3 => lopt_39,
      lopt_4 => \Using_FPGA.Native_4\,
      lopt_5 => lopt_40,
      lopt_6 => lopt_41,
      lopt_7 => m1_m2_complete_in_later_stage,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
OF_M1_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_396
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_397
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_398
     port map (
      lopt => lopt_40,
      lopt_1 => lopt_41,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M2_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_399
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      lopt_2 => lopt_42,
      lopt_3 => lopt_43,
      lopt_4 => \Using_FPGA.Native_6\,
      lopt_5 => lopt_44,
      lopt_6 => lopt_45,
      lopt_7 => m2_complete_in_later_stage,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
OF_M2_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_400
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      lopt => lopt_42,
      lopt_1 => lopt_43,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_401
     port map (
      And_OUT => And_OUT,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_402
     port map (
      lopt => lopt_44,
      lopt_1 => lopt_45,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_stall_conflict => of_m2_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M3_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_403
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      lopt => lopt_28,
      lopt_1 => lopt_29,
      lopt_2 => lopt_46,
      lopt_3 => lopt_47,
      lopt_4 => \Using_FPGA.Native_8\,
      lopt_5 => lopt_48,
      lopt_6 => lopt_49,
      lopt_7 => lopt_50,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_M3_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_404
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      lopt => lopt_46,
      lopt_1 => lopt_47,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
OF_M3_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_405
     port map (
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_50,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity \microblaze_microblaze_0_0_decode_conflict_ff__parameterized3\ is
  port (
    m0_complete_in_later_stage_reg : out STD_LOGIC;
    m2_complete_in_later_stage_reg : out STD_LOGIC;
    S : in STD_LOGIC;
    \Using_FPGA.Native\ : in STD_LOGIC;
    A4_out : in STD_LOGIC;
    S_0 : in STD_LOGIC;
    \Using_FPGA.Native_0\ : in STD_LOGIC;
    A3_out : in STD_LOGIC;
    S_1 : in STD_LOGIC;
    \Using_FPGA.Native_1\ : in STD_LOGIC;
    A2_out : in STD_LOGIC;
    S_2 : in STD_LOGIC;
    \Using_FPGA.Native_2\ : in STD_LOGIC;
    A1_out : in STD_LOGIC;
    S_3 : in STD_LOGIC;
    \Using_FPGA.Native_3\ : in STD_LOGIC;
    A0_out : in STD_LOGIC;
    ex_complete_in_later_stage : in STD_LOGIC;
    m0_complete_in_later_stage : in STD_LOGIC;
    m1_m2_complete_in_later_stage : in STD_LOGIC;
    m2_complete_in_later_stage : in STD_LOGIC;
    Q : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_4\ : in STD_LOGIC;
    \Using_FPGA.Native_5\ : in STD_LOGIC;
    \Using_FPGA.Native_6\ : in STD_LOGIC;
    \Using_FPGA.Native_7\ : in STD_LOGIC;
    \Using_FPGA.Native_8\ : in STD_LOGIC;
    \Using_FPGA.Native_9\ : in STD_LOGIC;
    \Using_FPGA.Native_10\ : in STD_LOGIC;
    \Using_FPGA.Native_11\ : in STD_LOGIC;
    OF_Use_Op_B : in STD_LOGIC;
    S_4 : in STD_LOGIC;
    m3_complete_in_later_stage : in STD_LOGIC;
    m3_div_stall : in STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of \microblaze_microblaze_0_0_decode_conflict_ff__parameterized3\ : entity is "decode_conflict_ff";
end \microblaze_microblaze_0_0_decode_conflict_ff__parameterized3\;

architecture STRUCTURE of \microblaze_microblaze_0_0_decode_conflict_ff__parameterized3\ is
  signal And_OUT : STD_LOGIC;
  signal \M0_Big_Carry.OF_M0_Use1_n_0\ : STD_LOGIC;
  signal \M0_Big_Carry.OF_M0_Use2_n_0\ : STD_LOGIC;
  signal \M1_Big_Carry.OF_M1_Use1_n_0\ : STD_LOGIC;
  signal \M1_Big_Carry.OF_M1_Use2_n_0\ : STD_LOGIC;
  signal \M2_Big_Carry.OF_M2_Use1_n_0\ : STD_LOGIC;
  signal \M2_Big_Carry.OF_M2_Use2_n_0\ : STD_LOGIC;
  signal \M3_Big_Carry.OF_M3_Use1_n_0\ : STD_LOGIC;
  signal \M3_Big_Carry.OF_M3_Use2_n_0\ : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal of_ex_addr_conflict : STD_LOGIC;
  signal of_ex_use_conflict : STD_LOGIC;
  signal of_m0_addr_conflict : STD_LOGIC;
  signal of_m0_no_stall_conflict : STD_LOGIC;
  signal of_m0_use_conflict : STD_LOGIC;
  signal of_m1_addr_conflict : STD_LOGIC;
  signal of_m1_no_stall_conflict : STD_LOGIC;
  signal of_m1_stall_conflict : STD_LOGIC;
  signal of_m1_use_conflict : STD_LOGIC;
  signal of_m2_addr_conflict : STD_LOGIC;
  signal of_m2_no_stall_conflict : STD_LOGIC;
  signal of_m2_use_conflict : STD_LOGIC;
  signal of_m3_addr_conflict : STD_LOGIC;
  signal of_m3_stall_conflict : STD_LOGIC;
  signal of_m3_use_conflict : STD_LOGIC;
  signal of_op3_ex_stall : STD_LOGIC;
  signal of_read_ex_write_op_conflict : STD_LOGIC;
  signal of_read_m0_write_op_conflict : STD_LOGIC;
  signal of_read_m1_write_op_conflict : STD_LOGIC;
  signal of_read_m2_write_op_conflict : STD_LOGIC;
  signal of_read_m3_write_op_conflict : STD_LOGIC;
  signal part_c : STD_LOGIC;
  signal part_c_and_b : STD_LOGIC;
begin
\EX_Big_Carry.OF_EX_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_272
     port map (
      Q(0) => Q(0),
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => \Using_FPGA.Native_4\,
      lopt_3 => lopt_2,
      lopt_4 => lopt_3,
      lopt_5 => \Using_FPGA.Native_5\,
      lopt_6 => lopt_4,
      lopt_7 => lopt_5,
      lopt_8 => S,
      part_c => part_c
    );
\EX_Big_Carry.OF_EX_Use2\: entity work.microblaze_microblaze_0_0_carry_and_bb_273
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_4\,
      lopt => lopt,
      lopt_1 => lopt_1,
      part_c => part_c,
      part_c_and_b => part_c_and_b
    );
\EX_Big_Carry.OF_EX_Use3\: entity work.microblaze_microblaze_0_0_carry_or_bb_274
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_5\,
      lopt => lopt_2,
      lopt_1 => lopt_3,
      of_ex_use_conflict => of_ex_use_conflict,
      part_c_and_b => part_c_and_b
    );
\M0_Big_Carry.OF_M0_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_275
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \M0_Big_Carry.OF_M0_Use1_n_0\,
      lopt => lopt_6,
      lopt_1 => lopt_7,
      lopt_2 => \Using_FPGA.Native_6\,
      lopt_3 => lopt_8,
      lopt_4 => lopt_9,
      lopt_5 => \Using_FPGA.Native_7\,
      lopt_6 => lopt_10,
      lopt_7 => lopt_11,
      lopt_8 => S_0
    );
\M0_Big_Carry.OF_M0_Use2\: entity work.microblaze_microblaze_0_0_carry_and_bb_276
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_0\ => \M0_Big_Carry.OF_M0_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M0_Big_Carry.OF_M0_Use2_n_0\,
      lopt => lopt_6,
      lopt_1 => lopt_7
    );
\M0_Big_Carry.OF_M0_Use3\: entity work.microblaze_microblaze_0_0_carry_or_bb_277
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_7\,
      \Using_FPGA.Native_0\ => \M0_Big_Carry.OF_M0_Use2_n_0\,
      lopt => lopt_8,
      lopt_1 => lopt_9,
      of_m0_use_conflict => of_m0_use_conflict
    );
\M1_Big_Carry.OF_M1_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_278
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \M1_Big_Carry.OF_M1_Use1_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => \Using_FPGA.Native_8\,
      lopt_3 => lopt_14,
      lopt_4 => lopt_15,
      lopt_5 => \Using_FPGA.Native_9\,
      lopt_6 => lopt_16,
      lopt_7 => lopt_17,
      lopt_8 => S_1
    );
\M1_Big_Carry.OF_M1_Use2\: entity work.microblaze_microblaze_0_0_carry_and_bb_279
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_0\ => \M1_Big_Carry.OF_M1_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M1_Big_Carry.OF_M1_Use2_n_0\,
      lopt => lopt_12,
      lopt_1 => lopt_13
    );
\M1_Big_Carry.OF_M1_Use3\: entity work.microblaze_microblaze_0_0_carry_or_bb_280
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_0\ => \M1_Big_Carry.OF_M1_Use2_n_0\,
      lopt => lopt_14,
      lopt_1 => lopt_15,
      of_m1_use_conflict => of_m1_use_conflict
    );
\M2_Big_Carry.OF_M2_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_281
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \M2_Big_Carry.OF_M2_Use1_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19,
      lopt_2 => \Using_FPGA.Native_10\,
      lopt_3 => lopt_20,
      lopt_4 => lopt_21,
      lopt_5 => \Using_FPGA.Native_11\,
      lopt_6 => lopt_22,
      lopt_7 => lopt_23,
      lopt_8 => S_2
    );
\M2_Big_Carry.OF_M2_Use2\: entity work.microblaze_microblaze_0_0_carry_and_bb_282
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_0\ => \M2_Big_Carry.OF_M2_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M2_Big_Carry.OF_M2_Use2_n_0\,
      lopt => lopt_18,
      lopt_1 => lopt_19
    );
\M2_Big_Carry.OF_M2_Use3\: entity work.microblaze_microblaze_0_0_carry_or_bb_283
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_0\ => \M2_Big_Carry.OF_M2_Use2_n_0\,
      lopt => lopt_20,
      lopt_1 => lopt_21,
      of_m2_use_conflict => of_m2_use_conflict
    );
\M3_Big_Carry.OF_M3_Use1\: entity work.microblaze_microblaze_0_0_carry_and_bb_284
     port map (
      Q(0) => Q(0),
      \cur_data_i_reg[15]\ => \M3_Big_Carry.OF_M3_Use1_n_0\,
      lopt => lopt_24,
      lopt_1 => lopt_25,
      lopt_2 => OF_Use_Op_B,
      lopt_3 => lopt_26,
      lopt_4 => lopt_27,
      lopt_5 => S_4,
      lopt_6 => lopt_28,
      lopt_7 => lopt_29,
      lopt_8 => S_3
    );
\M3_Big_Carry.OF_M3_Use2\: entity work.microblaze_microblaze_0_0_carry_and_bb_285
     port map (
      OF_Use_Op_B => OF_Use_Op_B,
      \Using_FPGA.Native\ => \M3_Big_Carry.OF_M3_Use1_n_0\,
      \cur_data_i_reg[26]\ => \M3_Big_Carry.OF_M3_Use2_n_0\,
      lopt => lopt_24,
      lopt_1 => lopt_25
    );
\M3_Big_Carry.OF_M3_Use3\: entity work.microblaze_microblaze_0_0_carry_or_bb_286
     port map (
      S_4 => S_4,
      \Using_FPGA.Native\ => \M3_Big_Carry.OF_M3_Use2_n_0\,
      lopt => lopt_26,
      lopt_1 => lopt_27,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_EX_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool
     port map (
      S => S,
      \Using_FPGA.Native\ => \Using_FPGA.Native\,
      lopt => lopt_4,
      lopt_1 => lopt_5,
      lopt_2 => lopt_30,
      lopt_3 => lopt_31,
      lopt_4 => A4_out,
      lopt_5 => lopt_32,
      lopt_6 => lopt_33,
      lopt_7 => ex_complete_in_later_stage,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_ex_use_conflict => of_ex_use_conflict
    );
OF_EX_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_287
     port map (
      A4_out => A4_out,
      lopt => lopt_30,
      lopt_1 => lopt_31,
      of_ex_addr_conflict => of_ex_addr_conflict,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb
     port map (
      And_OUT => And_OUT,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_EX_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_288
     port map (
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      lopt => lopt_32,
      lopt_1 => lopt_33,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_ex_write_op_conflict => of_read_ex_write_op_conflict
    );
OF_M0_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_289
     port map (
      S_0 => S_0,
      \Using_FPGA.Native\ => \Using_FPGA.Native_0\,
      lopt => lopt_10,
      lopt_1 => lopt_11,
      lopt_2 => lopt_34,
      lopt_3 => lopt_35,
      lopt_4 => A3_out,
      lopt_5 => lopt_36,
      lopt_6 => lopt_37,
      lopt_7 => m0_complete_in_later_stage,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_m0_use_conflict => of_m0_use_conflict
    );
OF_M0_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_290
     port map (
      A3_out => A3_out,
      lopt => lopt_34,
      lopt_1 => lopt_35,
      of_m0_addr_conflict => of_m0_addr_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_291
     port map (
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M0_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_292
     port map (
      And_OUT => And_OUT,
      lopt => lopt_36,
      lopt_1 => lopt_37,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => m0_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_op3_ex_stall => of_op3_ex_stall,
      of_read_m0_write_op_conflict => of_read_m0_write_op_conflict
    );
OF_M1_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_293
     port map (
      S_1 => S_1,
      \Using_FPGA.Native\ => \Using_FPGA.Native_1\,
      lopt => lopt_16,
      lopt_1 => lopt_17,
      lopt_2 => lopt_38,
      lopt_3 => lopt_39,
      lopt_4 => A2_out,
      lopt_5 => lopt_40,
      lopt_6 => lopt_41,
      lopt_7 => m1_m2_complete_in_later_stage,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_m1_use_conflict => of_m1_use_conflict
    );
OF_M1_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_294
     port map (
      A2_out => A2_out,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      of_m1_addr_conflict => of_m1_addr_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_295
     port map (
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M1_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_296
     port map (
      lopt => lopt_40,
      lopt_1 => lopt_41,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      of_m1_stall_conflict => of_m1_stall_conflict,
      of_read_m1_write_op_conflict => of_read_m1_write_op_conflict
    );
OF_M2_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_297
     port map (
      S_2 => S_2,
      \Using_FPGA.Native\ => \Using_FPGA.Native_2\,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      lopt_2 => lopt_42,
      lopt_3 => lopt_43,
      lopt_4 => A1_out,
      lopt_5 => lopt_44,
      lopt_6 => lopt_45,
      lopt_7 => m2_complete_in_later_stage,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_m2_use_conflict => of_m2_use_conflict
    );
OF_M2_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_298
     port map (
      A1_out => A1_out,
      lopt => lopt_42,
      lopt_1 => lopt_43,
      of_m2_addr_conflict => of_m2_addr_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_No_Stall: entity work.microblaze_microblaze_0_0_carry_latch_and_n_bb_299
     port map (
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      of_m2_no_stall_conflict => of_m2_no_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M2_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_300
     port map (
      And_OUT => And_OUT,
      lopt => lopt_44,
      lopt_1 => lopt_45,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => m2_complete_in_later_stage_reg,
      of_m0_no_stall_conflict => of_m0_no_stall_conflict,
      of_m1_no_stall_conflict => of_m1_no_stall_conflict,
      of_m2_no_stall_conflict => of_m2_no_stall_conflict,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m2_write_op_conflict => of_read_m2_write_op_conflict
    );
OF_M3_Cmp: entity work.microblaze_microblaze_0_0_comparator_bool_301
     port map (
      S_3 => S_3,
      \Using_FPGA.Native\ => \Using_FPGA.Native_3\,
      lopt => lopt_28,
      lopt_1 => lopt_29,
      lopt_2 => lopt_46,
      lopt_3 => lopt_47,
      lopt_4 => A0_out,
      lopt_5 => lopt_48,
      lopt_6 => lopt_49,
      lopt_7 => lopt_50,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_m3_use_conflict => of_m3_use_conflict
    );
OF_M3_Conflict: entity work.microblaze_microblaze_0_0_carry_and_bb_302
     port map (
      A0_out => A0_out,
      lopt => lopt_46,
      lopt_1 => lopt_47,
      of_m3_addr_conflict => of_m3_addr_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
OF_M3_Mask_Stall: entity work.microblaze_microblaze_0_0_carry_and_bb_303
     port map (
      lopt => lopt_48,
      lopt_1 => lopt_49,
      lopt_2 => lopt_50,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall,
      of_m3_stall_conflict => of_m3_stall_conflict,
      of_read_m3_write_op_conflict => of_read_m3_write_op_conflict
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_Decode_ff is
  port (
    if0_pause : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg\ : out STD_LOGIC;
    kill_fetch_mmu : out STD_LOGIC;
    of_piperun : out STD_LOGIC;
    Q : out STD_LOGIC_VECTOR ( 25 downto 0 );
    ex_raw_valid_reg_0 : out STD_LOGIC;
    EX_Op1_CMP_Equal : out STD_LOGIC;
    ex_op1_cmp_equal_n : out STD_LOGIC;
    wb_gpr_wr_dbg : out STD_LOGIC;
    m2_is_div_instr : out STD_LOGIC;
    m3_div_zero_overflow_ex_hold : out STD_LOGIC;
    bp1_raw_valid_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native\ : out STD_LOGIC;
    bp1_raw_valid_reg_1 : out STD_LOGIC;
    if2_raw_valid_reg_0 : out STD_LOGIC;
    if1_insert_piperun_i : out STD_LOGIC;
    S_0 : out STD_LOGIC;
    if2_piperun : out STD_LOGIC;
    if3_raw_valid_reg_0 : out STD_LOGIC;
    if3_piperun : out STD_LOGIC;
    if4_raw_valid_reg_0 : out STD_LOGIC;
    if4_piperun : out STD_LOGIC;
    m0_piperun : out STD_LOGIC;
    m1_piperun : out STD_LOGIC;
    m2_piperun : out STD_LOGIC;
    m3_piperun : out STD_LOGIC;
    m2_raw_valid_reg_0 : out STD_LOGIC;
    m3_raw_valid_reg_0 : out STD_LOGIC;
    ex_Interrupt : out STD_LOGIC;
    bp0_raw_valid_reg_0 : out STD_LOGIC;
    active_wakeup : out STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    wb_read_imm_reg : out STD_LOGIC;
    wb_read_imm_reg_1 : out STD_LOGIC;
    wb_pc_valid : out STD_LOGIC;
    D : out STD_LOGIC_VECTOR ( 47 downto 0 );
    EX_Enable_ALU : out STD_LOGIC;
    ex_alu_sel_logic : out STD_LOGIC;
    ex_cmp_op : out STD_LOGIC;
    ex_unsigned_op : out STD_LOGIC;
    ex_use_carry : out STD_LOGIC;
    ex_sel_alu_res : out STD_LOGIC;
    ex_pattern_cmp_sel : out STD_LOGIC;
    ex_clz_instr : out STD_LOGIC;
    ex_enable_sext_shift : out STD_LOGIC;
    ex_sel_barrel_res : out STD_LOGIC;
    ex_arith_shift : out STD_LOGIC;
    ex_bit_insert : out STD_LOGIC;
    ex_bit_extract : out STD_LOGIC;
    m0_sel_barrel_res : out STD_LOGIC;
    ex_div_unsigned : out STD_LOGIC;
    \Using_Mul_Instr.ex_not_mul_op_i_reg_0\ : out STD_LOGIC;
    m0_not_mul_op_i_reg_0 : out STD_LOGIC;
    m1_sel_mul_res : out STD_LOGIC;
    m2_databus_access_i_reg_0 : out STD_LOGIC;
    m3_sel_load_res : out STD_LOGIC;
    wb_databus_access : out STD_LOGIC;
    wb_databus_read : out STD_LOGIC;
    wb_databus_write : out STD_LOGIC;
    m1_byte_access : out STD_LOGIC;
    m1_doublet_access : out STD_LOGIC;
    wb_byte_access : out STD_LOGIC;
    wb_doublet_access : out STD_LOGIC;
    wb_msr_clear_bip : out STD_LOGIC;
    wb_div_zero_overflow : out STD_LOGIC;
    wb_delay_slot : out STD_LOGIC;
    trace_wb_jump_taken : out STD_LOGIC;
    \EX_Logic_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_mbar_decode : out STD_LOGIC;
    if0_raw_valid : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Sleep_Decode : out STD_LOGIC;
    m3_sel_div_res : out STD_LOGIC;
    ex_is_div_instr_i_reg_0 : out STD_LOGIC;
    wb_exception_from_m3_reg_rep_0 : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_0\ : out STD_LOGIC;
    \Serial_Dbg_Intf.control_reg_reg[8]\ : out STD_LOGIC;
    wb_exception_taken : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \p_4_out__0\ : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]_0\ : out STD_LOGIC;
    ex_dbg_pc_hit_i : out STD_LOGIC;
    \Use_DLMB.m2_potential_bubble_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_0\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_1\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_2\ : out STD_LOGIC;
    m1_databus_write_from_m0_reg_0 : out STD_LOGIC;
    m1_databus_write_from_m0_reg_1 : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ : out STD_LOGIC;
    \Use_Async_Reset.sync_reset_reg_3\ : out STD_LOGIC;
    Sleep : out STD_LOGIC;
    \Using_FPGA.Native_0\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    single_Step_N_reg : out STD_LOGIC;
    wb_halted : out STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ : out STD_LOGIC;
    \cur_data_i_reg[26]\ : out STD_LOGIC;
    \m3_PC_i_reg[0]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    S : out STD_LOGIC_VECTOR ( 3 downto 0 );
    EX_Enable_Sext_Shift_reg_0 : out STD_LOGIC;
    EX_Enable_Sext_Shift_reg_1 : out STD_LOGIC;
    EX_Bit_Insert_reg_0 : out STD_LOGIC;
    EX_Bit_Insert_reg_1 : out STD_LOGIC_VECTOR ( 18 downto 0 );
    EX_Bit_Extract_reg_0 : out STD_LOGIC;
    m1_databus_addr_from_m0_reg_0 : out STD_LOGIC;
    m1_databus_access_from_m0_reg_0 : out STD_LOGIC;
    if2_ibus_first_cycle_raw_reg_0 : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_BREADY_I_reg\ : out STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg\ : out STD_LOGIC;
    \Use_ILMB.if2_ilmb_issued_reg\ : out STD_LOGIC;
    \Use_DLMB.m1_dlmb_issued_reg\ : out STD_LOGIC;
    \m3_PC_i_reg[23]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[19]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[15]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[11]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[7]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[3]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    \m3_PC_i_reg[1]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \cur_data_i_reg[31]\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    of_op3_sel : out STD_LOGIC_VECTOR ( 0 to 2 );
    \Using_FPGA.Native_1\ : out STD_LOGIC;
    \m3_gpr_write_addr_reg[3]_0\ : out STD_LOGIC;
    of_op2_sel : out STD_LOGIC_VECTOR ( 0 to 2 );
    \cur_data_i_reg[6]\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    of_is_div_instr : out STD_LOGIC;
    ex_sleep_i0 : out STD_LOGIC;
    \of_MSR_i_reg[22]\ : out STD_LOGIC_VECTOR ( 3 downto 0 );
    ex_msrset : out STD_LOGIC;
    ex_msrclr : out STD_LOGIC;
    bp1_dead_fetch_hold_bt : out STD_LOGIC;
    bp1_dead_fetch_hold_reg_0 : out STD_LOGIC;
    if2_ibus_access_raw0 : out STD_LOGIC;
    ex_start_div : out STD_LOGIC;
    trace_wb_valid_instr : out STD_LOGIC;
    wb_exception_from_m3_reg_0 : out STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_msr_clear_ie : out STD_LOGIC;
    wb_gpr_wr : out STD_LOGIC;
    ADDRD : out STD_LOGIC_VECTOR ( 4 downto 0 );
    \wb_gpr_write_addr_reg[1]_0\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    wb_reset_reg_0 : out STD_LOGIC;
    DI : out STD_LOGIC_VECTOR ( 0 to 0 );
    EX_CLZ_Instr_reg_0 : out STD_LOGIC;
    m2_m1_sel_res_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op3[0]_i_6\ : out STD_LOGIC;
    \EX_Op3[0]_i_7\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[0]\ : out STD_LOGIC;
    EX_Enable_Sext_Shift_reg_2 : out STD_LOGIC_VECTOR ( 16 downto 0 );
    \m1_M0_Result_i_reg[2]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[5]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[8]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[9]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[12]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[13]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[14]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[16]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[18]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[21]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[25]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_0 : out STD_LOGIC;
    ex_sel_alu_reg_0 : out STD_LOGIC;
    m2_m1_sel_res_reg_0 : out STD_LOGIC_VECTOR ( 0 to 0 );
    \EX_Op2[0]_i_6\ : out STD_LOGIC;
    \EX_Op2[0]_i_7\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[20]\ : out STD_LOGIC;
    \WB_Exception_Return_Addr_reg[17]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[1]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[3]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[4]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[6]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[7]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[10]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[11]\ : out STD_LOGIC;
    \m1_M0_Result_i_reg[15]\ : out STD_LOGIC;
    M1_Sel_Mul_Res_reg_1 : out STD_LOGIC;
    \cur_data_i_reg[31]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \m2_M1_Result_i_reg[29]\ : out STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Branch_CMP_Op1[29]_i_3\ : out STD_LOGIC;
    \EX_Branch_CMP_Op1[30]_i_3\ : out STD_LOGIC;
    \cur_data_i_reg[3]\ : out STD_LOGIC;
    \cur_data_i_reg[4]\ : out STD_LOGIC;
    \cur_data_i_reg[5]\ : out STD_LOGIC;
    \cur_data_i_reg[7]\ : out STD_LOGIC;
    \cur_data_i_reg[8]\ : out STD_LOGIC;
    \cur_data_i_reg[9]\ : out STD_LOGIC;
    \cur_data_i_reg[12]\ : out STD_LOGIC;
    floating_hold_div_by_zero_reg : out STD_LOGIC;
    floating_hold_div_by_zero_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_2\ : out STD_LOGIC;
    \Using_FPGA.Native_3\ : out STD_LOGIC;
    \Using_FPGA.Native_4\ : out STD_LOGIC;
    \EX_Op2_reg[17]\ : out STD_LOGIC_VECTOR ( 14 downto 0 );
    \Using_FPGA.Native_5\ : out STD_LOGIC;
    \Using_FPGA.Native_6\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_1\ : out STD_LOGIC;
    \Using_FPGA.Native_7\ : out STD_LOGIC;
    \Using_FPGA.Native_8\ : out STD_LOGIC;
    D_1 : out STD_LOGIC;
    \Using_FPGA.Native_9\ : out STD_LOGIC;
    \Using_FPGA.Native_10\ : out STD_LOGIC;
    \Using_FPGA.Native_11\ : out STD_LOGIC;
    \Using_FPGA.Native_12\ : out STD_LOGIC;
    \Using_FPGA.Native_13\ : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg_0 : out STD_LOGIC;
    \Using_FPGA.Native_14\ : out STD_LOGIC;
    \Using_FPGA.Native_15\ : out STD_LOGIC;
    \Using_FPGA.Native_16\ : out STD_LOGIC;
    SR : out STD_LOGIC_VECTOR ( 0 to 0 );
    wb_exception_from_m3_reg_rep_1 : out STD_LOGIC;
    div_busy_reg : out STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Div_Zero_Overflow_reg_1 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg_2 : out STD_LOGIC;
    WB_Div_Zero_Overflow_reg_3 : out STD_LOGIC;
    \wb_exception_raw_kind_reg[31]_1\ : out STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Div_Zero_Overflow_reg_4 : out STD_LOGIC_VECTOR ( 1 downto 0 );
    \wb_exception_from_m3_reg_rep__0_2\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_3\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_4\ : out STD_LOGIC;
    \wb_exception_from_m3_reg_rep__0_5\ : out STD_LOGIC;
    S_2 : out STD_LOGIC;
    m2_m1_sel_res0 : out STD_LOGIC;
    \EX_Sext_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Doublet_Access_reg_0 : out STD_LOGIC;
    \EX_Op2_reg[29]\ : out STD_LOGIC_VECTOR ( 27 downto 0 );
    EX_Pattern_Cmp_Sel_reg_0 : out STD_LOGIC;
    \EX_Sext_Op_reg[1]_0\ : out STD_LOGIC;
    \EX_Op1_reg[28]\ : out STD_LOGIC;
    \EX_Op1_reg[27]\ : out STD_LOGIC;
    ex_sel_alu_reg_1 : out STD_LOGIC;
    in0 : out STD_LOGIC;
    WB_Doublet_Access_reg_1 : out STD_LOGIC;
    \EX_Op2_reg[31]\ : out STD_LOGIC;
    \EX_Op2_reg[31]_0\ : out STD_LOGIC;
    \EX_Op1_reg[30]\ : out STD_LOGIC;
    \EX_Op1_reg[3]\ : out STD_LOGIC;
    \EX_Op1_reg[1]\ : out STD_LOGIC;
    ex_left_shift_i : out STD_LOGIC;
    \EX_Op1_reg[31]\ : out STD_LOGIC;
    ex_void_bit : out STD_LOGIC;
    DI_3 : out STD_LOGIC;
    \EX_ALU_Op_reg[0]_0\ : out STD_LOGIC_VECTOR ( 1 downto 0 );
    WB_Div_Zero_Overflow_reg_5 : out STD_LOGIC;
    WB_MSR_Clear_BIP_reg_0 : out STD_LOGIC;
    m1_m0_sel_res0 : out STD_LOGIC;
    wb_m3_sel_res0 : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    bp0_dead_fetch_hold : out STD_LOGIC;
    \wb_instr_i_reg[0]_0\ : out STD_LOGIC_VECTOR ( 31 downto 0 );
    \Using_FPGA.Native_17\ : out STD_LOGIC_VECTOR ( 30 downto 0 );
    sync_reset : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Clk : in STD_LOGIC;
    EX_Op1_Zero : in STD_LOGIC;
    \Using_FPGA.Native_18\ : in STD_LOGIC;
    if4_ibus_access_i_reg_0 : in STD_LOGIC;
    if4_ready : in STD_LOGIC;
    \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ : in STD_LOGIC;
    \Using_FPGA.Native_19\ : in STD_LOGIC;
    m3_databus_ready : in STD_LOGIC;
    \Using_FPGA.Native_20\ : in STD_LOGIC;
    WB_MSR_Set_IE_reg_0 : in STD_LOGIC;
    \m0_exception_raw_kind_reg[31]_0\ : in STD_LOGIC;
    p_55_out : in STD_LOGIC;
    p_2_in : in STD_LOGIC;
    M1_Sel_Mul_Res_reg_2 : in STD_LOGIC;
    WB_Div_Zero_Overflow_reg_6 : in STD_LOGIC;
    if2_raw_valid_reg_1 : in STD_LOGIC;
    if3_raw_valid_reg_1 : in STD_LOGIC;
    if4_raw_valid_reg_1 : in STD_LOGIC;
    ex_mbar_decode_reg_0 : in STD_LOGIC;
    bp1_raw_valid_reg_2 : in STD_LOGIC;
    if0_raw_valid_reg_0 : in STD_LOGIC;
    ex_hibernate_i_reg_0 : in STD_LOGIC;
    ex_suspend_i_reg_0 : in STD_LOGIC;
    ex_sleep_i_reg_0 : in STD_LOGIC;
    if2_ibus_access_raw_reg_0 : in STD_LOGIC;
    m3_is_div_instr_i_reg_0 : in STD_LOGIC;
    ex_is_div_instr_i_reg_1 : in STD_LOGIC;
    \Performance_Debug_Control.ex_brki_hit_reg\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ : in STD_LOGIC;
    bp0_raw_valid_reg_1 : in STD_LOGIC;
    bp0_raw_valid_reg_2 : in STD_LOGIC;
    \Performance_Debug_Control.dbg_freeze_nohalt_reg\ : in STD_LOGIC;
    \wb_PC_i_reg[31]\ : in STD_LOGIC;
    m2_potential_bubble : in STD_LOGIC;
    m2_dlmb_dready : in STD_LOGIC;
    m3_active_access : in STD_LOGIC;
    \Use_DLMB.m2_dready_hold_reg\ : in STD_LOGIC;
    \Use_ILMB.if3_iready_hold_reg\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_BVALID : in STD_LOGIC;
    if3_potential_bubble : in STD_LOGIC;
    if3_ilmb_iready : in STD_LOGIC;
    Sleep_Out : in STD_LOGIC;
    normal_stop_i : in STD_LOGIC;
    single_Step_N : in STD_LOGIC;
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ : in STD_LOGIC;
    \Using_FPGA.Native_21\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    ex_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    \Using_FPGA.Native_22\ : in STD_LOGIC;
    \Using_FPGA.Native_23\ : in STD_LOGIC;
    \EX_Op1[29]_i_5\ : in STD_LOGIC;
    \EX_Op1[29]_i_5_0\ : in STD_LOGIC;
    \EX_Op1[29]_i_5_1\ : in STD_LOGIC;
    \EX_Op1[30]_i_5\ : in STD_LOGIC;
    \EX_Op1[30]_i_5_0\ : in STD_LOGIC;
    \EX_Op1[30]_i_5_1\ : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\ : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\ : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\ : in STD_LOGIC;
    \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\ : in STD_LOGIC;
    DWait : in STD_LOGIC;
    m2_allow_dready : in STD_LOGIC;
    m2_dlmb_drop_request : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    if3_allow_iready : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WDATA_reg[23]\ : in STD_LOGIC_VECTOR ( 9 downto 0 );
    if2_ilmb_issued : in STD_LOGIC;
    m1_dlmb_issued : in STD_LOGIC;
    \cur_data_i_reg[31]_1\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    if4_data : in STD_LOGIC_VECTOR ( 0 to 31 );
    \in\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    Interrupt : in STD_LOGIC;
    ex_Interrupt_raw_reg_0 : in STD_LOGIC_VECTOR ( 0 to 0 );
    m3_div_overflow : in STD_LOGIC;
    m3_div_by_zero : in STD_LOGIC;
    \bp0_branch_target_reg[0]_0\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    \bp0_branch_target_reg[0]_1\ : in STD_LOGIC_VECTOR ( 29 downto 0 );
    ex_alu_result : in STD_LOGIC_VECTOR ( 1 downto 0 );
    DReady : in STD_LOGIC;
    \Using_FPGA.Native_24\ : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    m3_div_stall : in STD_LOGIC;
    \EX_Op3_reg[30]\ : in STD_LOGIC;
    GPR_Op3 : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \EX_Op3_reg[31]\ : in STD_LOGIC;
    wb_fwd : in STD_LOGIC_VECTOR ( 8 downto 0 );
    \EX_Op2_reg[31]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]_2\ : in STD_LOGIC;
    \EX_Op2_reg[31]_3\ : in STD_LOGIC;
    \EX_Op2_reg[0]\ : in STD_LOGIC;
    \EX_Op2_reg[0]_0\ : in STD_LOGIC;
    \EX_Op2_reg[2]\ : in STD_LOGIC;
    \EX_Op2_reg[2]_0\ : in STD_LOGIC;
    \EX_Op2_reg[5]\ : in STD_LOGIC;
    \EX_Op2_reg[5]_0\ : in STD_LOGIC;
    \EX_Op2_reg[8]\ : in STD_LOGIC;
    \EX_Op2_reg[8]_0\ : in STD_LOGIC;
    \EX_Op2_reg[9]\ : in STD_LOGIC;
    \EX_Op2_reg[9]_0\ : in STD_LOGIC;
    \EX_Op2_reg[12]\ : in STD_LOGIC;
    \EX_Op2_reg[12]_0\ : in STD_LOGIC;
    \EX_Op2_reg[13]\ : in STD_LOGIC;
    \EX_Op2_reg[13]_0\ : in STD_LOGIC;
    \EX_Op2_reg[14]\ : in STD_LOGIC;
    \EX_Op2_reg[14]_0\ : in STD_LOGIC;
    \EX_Op2_reg[16]\ : in STD_LOGIC;
    \EX_Op2_reg[18]\ : in STD_LOGIC;
    \EX_Op2_reg[21]\ : in STD_LOGIC;
    \EX_Op2_reg[25]\ : in STD_LOGIC;
    \EX_Op2[25]_i_2\ : in STD_LOGIC;
    GPR_Op2 : in STD_LOGIC_VECTOR ( 0 to 31 );
    \EX_Op2_reg[29]_0\ : in STD_LOGIC;
    \EX_Op2_reg[29]_1\ : in STD_LOGIC;
    \EX_Op2_reg[31]_4\ : in STD_LOGIC;
    \EX_Op2_reg[20]\ : in STD_LOGIC;
    \EX_Op2_reg[17]_0\ : in STD_LOGIC;
    \EX_Op2_reg[1]\ : in STD_LOGIC;
    \EX_Op2_reg[1]_0\ : in STD_LOGIC;
    \EX_Op2_reg[3]\ : in STD_LOGIC;
    \EX_Op2_reg[3]_0\ : in STD_LOGIC;
    \EX_Op2_reg[4]\ : in STD_LOGIC;
    \EX_Op2_reg[4]_0\ : in STD_LOGIC;
    \EX_Op2_reg[6]\ : in STD_LOGIC;
    \EX_Op2_reg[6]_0\ : in STD_LOGIC;
    \EX_Op2_reg[7]\ : in STD_LOGIC;
    \EX_Op2_reg[7]_0\ : in STD_LOGIC;
    \EX_Op2_reg[10]\ : in STD_LOGIC;
    \EX_Op2_reg[10]_0\ : in STD_LOGIC;
    \EX_Op2_reg[11]\ : in STD_LOGIC;
    \EX_Op2_reg[11]_0\ : in STD_LOGIC;
    \EX_Op2_reg[15]\ : in STD_LOGIC;
    \EX_Op2_reg[15]_0\ : in STD_LOGIC;
    \EX_Op2[16]_i_2\ : in STD_LOGIC_VECTOR ( 6 downto 0 );
    \EX_Op2_reg[30]\ : in STD_LOGIC;
    \EX_Op1_reg[0]\ : in STD_LOGIC_VECTOR ( 28 downto 0 );
    \of_MSR_i_reg[22]_0\ : in STD_LOGIC_VECTOR ( 4 downto 0 );
    \EX_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Op1_reg[29]_0\ : in STD_LOGIC;
    \EX_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]\ : in STD_LOGIC;
    GPR_Op1 : in STD_LOGIC_VECTOR ( 2 downto 0 );
    \EX_Op1_reg[31]_0\ : in STD_LOGIC;
    \EX_Op1_reg[31]_1\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_0\ : in STD_LOGIC;
    \EX_Branch_CMP_Op1_reg[30]_1\ : in STD_LOGIC;
    \EX_Op2[0]_i_4\ : in STD_LOGIC_VECTOR ( 15 downto 0 );
    \floating_hold_div_by_zero__0\ : in STD_LOGIC;
    floating_hold_div_overflow_reg : in STD_LOGIC;
    last_cycle : in STD_LOGIC;
    floating_hold_div_overflow_reg_0 : in STD_LOGIC;
    m3_div_overflow_i_reg : in STD_LOGIC;
    \of_MSR_i_reg[25]\ : in STD_LOGIC_VECTOR ( 3 downto 0 );
    \Using_FPGA.Native_25\ : in STD_LOGIC;
    \Use_HW_BS.mem_mux3_reg[28]\ : in STD_LOGIC_VECTOR ( 31 downto 0 );
    wb_MSR_i : in STD_LOGIC_VECTOR ( 10 downto 0 );
    EX_CarryIn : in STD_LOGIC;
    LO : in STD_LOGIC;
    \Using_FPGA.Native_26\ : in STD_LOGIC;
    \Using_FPGA.Native_27\ : in STD_LOGIC;
    \Q_reg[32]\ : in STD_LOGIC;
    E : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_28\ : in STD_LOGIC;
    \Using_FPGA.Native_29\ : in STD_LOGIC;
    \Using_FPGA.Native_30\ : in STD_LOGIC;
    \of_MSR_i_reg[25]_0\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \of_MSR_i_reg[25]_1\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_31\ : in STD_LOGIC;
    m3_msr : in STD_LOGIC_VECTOR ( 0 to 0 );
    \Using_FPGA.Native_32\ : in STD_LOGIC;
    \Using_FPGA.Native_33\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]\ : in STD_LOGIC;
    \EX_Op3[30]_i_2\ : in STD_LOGIC;
    \EX_Op3[31]_i_3\ : in STD_LOGIC;
    \EX_Op3[31]_i_3_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]_0\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]_1\ : in STD_LOGIC;
    \m0_Ex_Result_i_reg[30]_2\ : in STD_LOGIC;
    m1_m0_sel_res : in STD_LOGIC;
    \out\ : in STD_LOGIC;
    \trace_new_reg_value_i[24]_i_2\ : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_34\ : in STD_LOGIC;
    \Using_FPGA.Native_35\ : in STD_LOGIC;
    m0_ex_sel_res : in STD_LOGIC;
    m3_m2_sel_res : in STD_LOGIC;
    \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\ : in STD_LOGIC_VECTOR ( 7 downto 0 );
    m1_unaligned_addr_3lsb : in STD_LOGIC_VECTOR ( 1 downto 0 );
    \Using_FPGA.Native_36\ : in STD_LOGIC_VECTOR ( 0 to 0 );
    WB_Exception_Return_Addr0 : in STD_LOGIC_VECTOR ( 29 downto 0 );
    lopt : in STD_LOGIC;
    lopt_1 : out STD_LOGIC;
    lopt_2 : out STD_LOGIC;
    lopt_3 : in STD_LOGIC;
    lopt_4 : out STD_LOGIC;
    lopt_5 : out STD_LOGIC;
    lopt_6 : in STD_LOGIC;
    lopt_7 : out STD_LOGIC;
    lopt_8 : out STD_LOGIC
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_Decode_ff : entity is "Decode_ff";
end microblaze_microblaze_0_0_Decode_ff;

architecture STRUCTURE of microblaze_microblaze_0_0_Decode_ff is
  signal A0_out : STD_LOGIC;
  signal A1_out : STD_LOGIC;
  signal A2_out : STD_LOGIC;
  signal A3_out : STD_LOGIC;
  signal A4_out : STD_LOGIC;
  signal A_N201_out : STD_LOGIC;
  signal Clear_Buffer : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 47 downto 0 );
  signal D_0 : STD_LOGIC;
  signal D_18 : STD_LOGIC;
  signal D_19 : STD_LOGIC;
  signal D_2 : STD_LOGIC;
  signal D_20 : STD_LOGIC;
  signal D_21 : STD_LOGIC;
  signal D_22 : STD_LOGIC;
  signal D_23 : STD_LOGIC;
  signal D_24 : STD_LOGIC;
  signal D_25 : STD_LOGIC;
  signal D_26 : STD_LOGIC;
  signal D_27 : STD_LOGIC;
  signal D_28 : STD_LOGIC;
  signal D_29 : STD_LOGIC;
  signal D_3 : STD_LOGIC;
  signal D_30 : STD_LOGIC;
  signal D_4 : STD_LOGIC;
  signal D_5 : STD_LOGIC;
  signal D_6 : STD_LOGIC;
  signal D_7 : STD_LOGIC;
  signal \^ex_alu_op_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal EX_Bit_Extract0 : STD_LOGIC;
  signal \^ex_bit_extract_reg_0\ : STD_LOGIC;
  signal EX_CMP_Op12_out : STD_LOGIC;
  signal \^ex_enable_sext_shift_reg_0\ : STD_LOGIC;
  signal \^ex_enable_sext_shift_reg_1\ : STD_LOGIC;
  signal \^ex_enable_sext_shift_reg_2\ : STD_LOGIC_VECTOR ( 16 downto 0 );
  signal EX_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal EX_GPR_Write_DFF_n_3 : STD_LOGIC;
  signal EX_GPR_Write_DFF_n_4 : STD_LOGIC;
  signal EX_Jump_handling_n_3 : STD_LOGIC;
  signal EX_Jump_handling_n_4 : STD_LOGIC;
  signal \^ex_logic_op_reg[0]_0\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \EX_Op1[0]_i_3_n_0\ : STD_LOGIC;
  signal \EX_Op1[0]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op1[29]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Op1[30]_i_8_n_0\ : STD_LOGIC;
  signal \^ex_op1_reg[1]\ : STD_LOGIC;
  signal \^ex_op1_reg[30]\ : STD_LOGIC;
  signal \^ex_op1_reg[31]\ : STD_LOGIC;
  signal \^ex_op1_reg[3]\ : STD_LOGIC;
  signal \EX_Op2[10]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[11]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[12]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[13]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[14]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[15]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[1]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[2]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[30]_i_4_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_6_n_0\ : STD_LOGIC;
  signal \EX_Op2[31]_i_7_n_0\ : STD_LOGIC;
  signal \EX_Op2[3]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[4]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[5]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[6]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[7]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[8]_i_5_n_0\ : STD_LOGIC;
  signal \EX_Op2[9]_i_5_n_0\ : STD_LOGIC;
  signal \^ex_op2_reg[17]\ : STD_LOGIC_VECTOR ( 14 downto 0 );
  signal \^ex_op2_reg[31]\ : STD_LOGIC;
  signal \^ex_op2_reg[31]_0\ : STD_LOGIC;
  signal EX_Pattern_Cmp_Sel7_out : STD_LOGIC;
  signal \^ex_sext_op_reg[0]_0\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \^ex_sext_op_reg[1]_0\ : STD_LOGIC;
  signal EX_Unsigned_Op11_out : STD_LOGIC;
  signal EX_Use_Carry10_out : STD_LOGIC;
  signal \^hibernate\ : STD_LOGIC;
  signal Jump_Logic_I1_n_10 : STD_LOGIC;
  signal Jump_Logic_I1_n_6 : STD_LOGIC;
  signal Jump_Logic_I1_n_8 : STD_LOGIC;
  signal Jump_Logic_I1_n_9 : STD_LOGIC;
  signal Kill_Fetch_Carry_n_1 : STD_LOGIC;
  signal Kill_Fetch_Carry_n_2 : STD_LOGIC;
  signal Kill_Fetch_MMU_Carry_n_1 : STD_LOGIC;
  signal Kill_Fetch_MMU_Carry_n_3 : STD_LOGIC;
  signal M0_Div_Exception_Hold_DFF_n_0 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_11 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_3 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_4 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_6 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_7 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_8 : STD_LOGIC;
  signal M0_Exception_From_DFF_n_9 : STD_LOGIC;
  signal M0_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal M0_GPR_Write_DFF_n_3 : STD_LOGIC;
  signal M0_GPR_Write_DFF_n_4 : STD_LOGIC;
  signal M0_Load_Store_Access_DFF_n_0 : STD_LOGIC;
  signal M0_Load_Store_Access_DFF_n_1 : STD_LOGIC;
  signal M0_Load_Store_Access_DFF_n_3 : STD_LOGIC;
  signal M1_Div_Exception_Hold_DFF_n_0 : STD_LOGIC;
  signal M1_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal M1_GPR_Write_DFF_n_3 : STD_LOGIC;
  signal M1_GPR_Write_DFF_n_4 : STD_LOGIC;
  signal M2_Div_Exception_Hold_DFF_n_0 : STD_LOGIC;
  signal M2_Exception_From_DFF_n_1 : STD_LOGIC;
  signal M2_Exception_From_DFF_n_3 : STD_LOGIC;
  signal M2_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal M2_GPR_Write_DFF_n_4 : STD_LOGIC;
  signal M2_GPR_Write_DFF_n_5 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_1 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_10 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_2 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_5 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_7 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_8 : STD_LOGIC;
  signal M3_Exception_From_DFF_n_9 : STD_LOGIC;
  signal M3_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal M3_GPR_Write_DFF_n_4 : STD_LOGIC;
  signal M3_GPR_Write_DFF_n_5 : STD_LOGIC;
  signal \OF_EX_Cmp/comparator_i1/S\ : STD_LOGIC;
  signal \OF_EX_Cmp/comparator_i1/S_12\ : STD_LOGIC;
  signal \OF_EX_Cmp/comparator_i1/S_17\ : STD_LOGIC;
  signal \OF_M0_Cmp/comparator_i1/S\ : STD_LOGIC;
  signal \OF_M0_Cmp/comparator_i1/S_11\ : STD_LOGIC;
  signal \OF_M0_Cmp/comparator_i1/S_16\ : STD_LOGIC;
  signal \OF_M1_Cmp/comparator_i1/S\ : STD_LOGIC;
  signal \OF_M1_Cmp/comparator_i1/S_10\ : STD_LOGIC;
  signal \OF_M1_Cmp/comparator_i1/S_15\ : STD_LOGIC;
  signal \OF_M2_Cmp/comparator_i1/S\ : STD_LOGIC;
  signal \OF_M2_Cmp/comparator_i1/S_14\ : STD_LOGIC;
  signal \OF_M2_Cmp/comparator_i1/S_9\ : STD_LOGIC;
  signal \OF_M3_Cmp/comparator_i1/S\ : STD_LOGIC;
  signal \OF_M3_Cmp/comparator_i1/S_13\ : STD_LOGIC;
  signal \OF_M3_Cmp/comparator_i1/S_8\ : STD_LOGIC;
  signal OF_Use_Op_B : STD_LOGIC;
  signal Op1_Conflict_Stall_n_0 : STD_LOGIC;
  signal Op1_Conflict_Stall_n_1 : STD_LOGIC;
  signal Op2_Conflict_Stall_n_0 : STD_LOGIC;
  signal Op2_Conflict_Stall_n_1 : STD_LOGIC;
  signal Op3_Conflict_Stall_n_0 : STD_LOGIC;
  signal Op3_Conflict_Stall_n_1 : STD_LOGIC;
  signal PC_MODULE_I1_n_95 : STD_LOGIC;
  signal PC_MODULE_I1_n_96 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_101 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_103 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_112 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_128 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_129 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_130 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_131 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_132 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_133 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_134 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_135 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_136 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_137 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_138 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_139 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_140 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_141 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_142 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_143 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_144 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_145 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_146 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_147 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_148 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_149 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_150 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_151 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_152 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_153 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_154 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_155 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_37 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_38 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_40 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_42 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_43 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_44 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_45 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_46 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_47 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_48 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_49 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_50 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_70 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_76 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_79 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_80 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_82 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_83 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_91 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_92 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_94 : STD_LOGIC;
  signal PREFETCH_BUFFER_I1_n_99 : STD_LOGIC;
  signal Pause_Ack0 : STD_LOGIC;
  signal Pause_Ack_i_2_n_0 : STD_LOGIC;
  signal \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\ : STD_LOGIC;
  signal Prefetch_Buffer_Full : STD_LOGIC;
  signal \^q\ : STD_LOGIC_VECTOR ( 25 downto 0 );
  signal \^s_0\ : STD_LOGIC;
  signal \^sleep_decode\ : STD_LOGIC;
  signal \^suspend\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf/p_43_out__4\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf/p_48_out\ : STD_LOGIC;
  signal \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_5_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_6_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_7_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[0]_i_8_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[10]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[10]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[11]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[11]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[12]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[12]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[13]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[13]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[14]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[14]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[15]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[15]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[16]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[16]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[17]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[17]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[18]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[18]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[19]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[19]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_4_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[1]_i_5_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[20]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[20]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[21]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[21]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[22]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[22]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[24]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[25]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[26]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[2]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[2]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[2]_i_4_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[3]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[3]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[3]_i_4_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[4]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[4]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[5]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[5]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[6]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[6]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[7]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[7]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[8]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[8]_i_3_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[9]_i_2_n_0\ : STD_LOGIC;
  signal \Use_HW_BS.mem_mux3[9]_i_3_n_0\ : STD_LOGIC;
  signal \Using_BP0_FPGA.PR_BP0_And1_n_2\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_1\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_2\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_4\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_5\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_6\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_8\ : STD_LOGIC;
  signal \Using_EX_FPGA.PR_EX_And7_n_9\ : STD_LOGIC;
  signal \^using_fpga.native\ : STD_LOGIC;
  signal \^using_fpga.native_7\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__5_n_0\ : STD_LOGIC;
  signal \Using_FPGA.Native_i_2__8_n_0\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\ : STD_LOGIC;
  signal \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\ : STD_LOGIC;
  signal \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1_n_1\ : STD_LOGIC;
  signal \Using_IF2_FPGA.PR_IF2_And2_n_3\ : STD_LOGIC;
  signal \Using_IF3_FPGA.PR_IF3_And3_n_3\ : STD_LOGIC;
  signal \Using_IF4_Push_FPGA.Push_PipeRun_n_1\ : STD_LOGIC;
  signal \Using_M0_FPGA.PR_M0_And5_n_1\ : STD_LOGIC;
  signal \Using_M0_FPGA.PR_M0_And5_n_2\ : STD_LOGIC;
  signal \Using_M1_FPGA.PR_M1_And3_n_7\ : STD_LOGIC;
  signal \Using_M1_FPGA.PR_M1_And3_n_8\ : STD_LOGIC;
  signal \Using_M2_FPGA.PR_M2_And6_n_5\ : STD_LOGIC;
  signal \Using_M2_FPGA.PR_M2_And6_n_6\ : STD_LOGIC;
  signal \Using_M3_FPGA.PR_M3_And5_n_2\ : STD_LOGIC;
  signal \Using_M3_FPGA.PR_M3_And5_n_3\ : STD_LOGIC;
  signal \Using_M3_FPGA.PR_M3_And5_n_5\ : STD_LOGIC;
  signal \^using_mul_instr.ex_not_mul_op_i_reg_0\ : STD_LOGIC;
  signal \Using_OF_FPGA.PR_OF_And11_n_3\ : STD_LOGIC;
  signal \Using_OF_FPGA.PR_OF_And9_n_1\ : STD_LOGIC;
  signal \WB_Big_Carry.OF_WB_Use3/carry_or_i1/S\ : STD_LOGIC;
  signal WB_GPR_Write_DFF_n_2 : STD_LOGIC;
  signal WB_GPR_Write_DFF_n_3 : STD_LOGIC;
  signal WB_PC_Valid_i_1_n_0 : STD_LOGIC;
  signal \^active_wakeup\ : STD_LOGIC;
  signal active_wakeup0 : STD_LOGIC;
  signal bp0_branch_target : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \bp0_branch_target[0]_i_2_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[10]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[11]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[12]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[13]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[14]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[15]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[16]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[17]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[18]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[19]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[1]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[20]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[21]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[22]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[23]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[24]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[25]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[26]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[27]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[28]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[29]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[2]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[30]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[31]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[3]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[4]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[5]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[6]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[7]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[8]_i_1_n_0\ : STD_LOGIC;
  signal \bp0_branch_target[9]_i_1_n_0\ : STD_LOGIC;
  signal \^bp0_dead_fetch_hold\ : STD_LOGIC;
  signal bp0_jump : STD_LOGIC;
  signal bp0_jump0 : STD_LOGIC;
  signal bp0_keep_jump : STD_LOGIC;
  signal bp0_piperun_masked_no1 : STD_LOGIC;
  signal bp0_raw_valid0 : STD_LOGIC;
  signal \^bp0_raw_valid_reg_0\ : STD_LOGIC;
  signal \^bp1_dead_fetch_hold_reg_0\ : STD_LOGIC;
  signal bp1_piperun_masked_no1 : STD_LOGIC;
  signal \^bp1_raw_valid_reg_0\ : STD_LOGIC;
  signal \^bp1_raw_valid_reg_1\ : STD_LOGIC;
  signal \^cur_data_i_reg[31]\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal dbg_clean_stop : STD_LOGIC;
  signal \^ex_interrupt\ : STD_LOGIC;
  signal ex_Interrupt_raw_i_2_n_0 : STD_LOGIC;
  signal ex_MSR_clear_decode : STD_LOGIC;
  signal ex_MSR_clear_decode_reg_n_0 : STD_LOGIC;
  signal ex_MSR_set_decode : STD_LOGIC;
  signal ex_MSR_set_decode_reg_n_0 : STD_LOGIC;
  signal ex_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE : boolean;
  attribute DIRECT_ENABLE of ex_PipeRun_for_ce : signal is std.standard.true;
  signal \^ex_alu_sel_logic\ : STD_LOGIC;
  signal \^ex_arith_shift\ : STD_LOGIC;
  signal ex_atomic_instruction_pair : STD_LOGIC;
  signal ex_atomic_instruction_pair0 : STD_LOGIC;
  signal \^ex_bit_extract\ : STD_LOGIC;
  signal \^ex_bit_insert\ : STD_LOGIC;
  signal ex_branch_with_delayslot : STD_LOGIC;
  signal ex_branch_with_delayslot0 : STD_LOGIC;
  signal ex_byte_access_i : STD_LOGIC;
  signal ex_clear_msr_bip_instr : STD_LOGIC;
  signal \^ex_clz_instr\ : STD_LOGIC;
  signal \^ex_cmp_op\ : STD_LOGIC;
  signal ex_complete_in_later_stage : STD_LOGIC;
  signal ex_databus_access_i_reg_n_0 : STD_LOGIC;
  signal ex_databus_exclusive_i0 : STD_LOGIC;
  signal ex_databus_exclusive_i_reg_n_0 : STD_LOGIC;
  signal ex_databus_read_i0 : STD_LOGIC;
  signal ex_databus_write_i_reg_n_0 : STD_LOGIC;
  signal ex_dead_valid_hold : STD_LOGIC;
  signal ex_delayslot_Instr : STD_LOGIC;
  signal ex_delayslot_Instr0 : STD_LOGIC;
  signal ex_doublet_access_i : STD_LOGIC;
  signal \^ex_enable_sext_shift\ : STD_LOGIC;
  signal ex_exception_kind : STD_LOGIC_VECTOR ( 3 to 3 );
  signal ex_first_cycle : STD_LOGIC;
  signal ex_gpr_write : STD_LOGIC;
  signal ex_gpr_write_addr : STD_LOGIC_VECTOR ( 2 to 4 );
  signal ex_gpr_write_dbg : STD_LOGIC;
  signal \ex_instr_reg_n_0_[11]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[12]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[13]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[14]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[15]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[16]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[17]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[18]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[19]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[20]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[23]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[24]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[27]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[28]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[29]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[30]\ : STD_LOGIC;
  signal \ex_instr_reg_n_0_[31]\ : STD_LOGIC;
  signal \^ex_is_div_instr_i_reg_0\ : STD_LOGIC;
  signal ex_jump : STD_LOGIC;
  signal ex_jump_hold : STD_LOGIC;
  signal ex_jump_nodelay : STD_LOGIC;
  signal ex_jump_nodelay0 : STD_LOGIC;
  signal ex_left_shift : STD_LOGIC;
  signal \^ex_left_shift_i\ : STD_LOGIC;
  signal ex_load_alu_carry2_out : STD_LOGIC;
  signal ex_load_alu_carry_reg_n_0 : STD_LOGIC;
  signal ex_load_shift_carry : STD_LOGIC;
  signal ex_load_shift_carry0 : STD_LOGIC;
  signal ex_m0_complete_in_later_stage : STD_LOGIC;
  signal ex_m2_complete_in_later_stage : STD_LOGIC;
  signal ex_m3_complete_in_later_stage : STD_LOGIC;
  signal \^ex_mbar_decode\ : STD_LOGIC;
  signal ex_mbar_is_sleep : STD_LOGIC;
  signal ex_mbar_is_sleep0 : STD_LOGIC;
  signal ex_mbar_sleep : STD_LOGIC;
  signal ex_mbar_sleep_i_1_n_0 : STD_LOGIC;
  signal ex_mbar_sleep_i_2_n_0 : STD_LOGIC;
  signal ex_mbar_wait_1 : STD_LOGIC;
  signal ex_mbar_wait_10 : STD_LOGIC;
  signal ex_mbar_wait_1_i_2_n_0 : STD_LOGIC;
  signal ex_move_to_MSR_instr : STD_LOGIC;
  signal ex_move_to_MSR_instr35_out : STD_LOGIC;
  signal ex_msr_clear_bip : STD_LOGIC;
  signal ex_msr_set_ie : STD_LOGIC;
  signal \^ex_msrclr\ : STD_LOGIC;
  signal \^ex_msrset\ : STD_LOGIC;
  signal ex_mts_msr : STD_LOGIC;
  signal ex_op1_cmp_eq : STD_LOGIC;
  signal ex_op1_cmp_eq1 : STD_LOGIC;
  signal ex_op1_cmp_eq_n7_out : STD_LOGIC;
  signal ex_opcode : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^ex_pattern_cmp_sel\ : STD_LOGIC;
  signal ex_piperun_masked_no1 : STD_LOGIC;
  signal ex_piperun_masked_no2 : STD_LOGIC;
  signal ex_piperun_masked_no3 : STD_LOGIC;
  signal ex_piperun_masked_no4 : STD_LOGIC;
  signal ex_piperun_masked_no5 : STD_LOGIC;
  signal ex_piperun_masked_no6 : STD_LOGIC;
  signal ex_piperun_raw : STD_LOGIC;
  signal ex_raw_valid_reg_n_0 : STD_LOGIC;
  signal ex_read_imm_reg : STD_LOGIC;
  signal ex_reservation : STD_LOGIC;
  signal \^ex_sel_alu_reg_0\ : STD_LOGIC;
  signal \^ex_sel_alu_res\ : STD_LOGIC;
  signal \^ex_sel_barrel_res\ : STD_LOGIC;
  signal ex_set_bip : STD_LOGIC;
  signal ex_set_bip_reg_n_0 : STD_LOGIC;
  signal ex_set_msr_ee_instr : STD_LOGIC;
  signal ex_set_msr_ie_instr : STD_LOGIC;
  signal ex_shift_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^ex_start_div\ : STD_LOGIC;
  signal ex_start_div_raw : STD_LOGIC;
  signal \^ex_use_carry\ : STD_LOGIC;
  signal ex_valid_keep : STD_LOGIC;
  signal \^ex_void_bit\ : STD_LOGIC;
  signal flush_pipe_for_rst : STD_LOGIC;
  attribute DIRECT_RESET : boolean;
  attribute DIRECT_RESET of flush_pipe_for_rst : signal is std.standard.true;
  signal force12_out : STD_LOGIC;
  signal force_Val10_out : STD_LOGIC;
  signal \^if0_pause\ : STD_LOGIC;
  signal \^if0_raw_valid\ : STD_LOGIC;
  signal \^if1_insert_piperun_i\ : STD_LOGIC;
  signal if2_dead_fetch_hold_reg_n_0 : STD_LOGIC;
  signal \^if2_piperun\ : STD_LOGIC;
  signal if2_piperun_masked_no1 : STD_LOGIC;
  signal if2_piperun_masked_no2 : STD_LOGIC;
  signal \^if2_raw_valid_reg_0\ : STD_LOGIC;
  signal if3_dead_fetch_hold_reg_n_0 : STD_LOGIC;
  signal if3_ibus_access_i_reg_n_0 : STD_LOGIC;
  signal \^if3_piperun\ : STD_LOGIC;
  signal if3_piperun_masked_no1 : STD_LOGIC;
  signal if3_piperun_masked_no2 : STD_LOGIC;
  signal if3_piperun_masked_no3 : STD_LOGIC;
  signal \^if3_raw_valid_reg_0\ : STD_LOGIC;
  signal if4_dead_fetch_hold_reg_n_0 : STD_LOGIC;
  signal if4_ibus_access_i_reg_n_0 : STD_LOGIC;
  signal \^if4_piperun\ : STD_LOGIC;
  signal if4_piperun_masked_no1 : STD_LOGIC;
  signal if4_piperun_masked_no2 : STD_LOGIC;
  signal if4_piperun_masked_no3 : STD_LOGIC;
  signal if4_piperun_masked_no4 : STD_LOGIC;
  signal if4_pre_buffer_addr : STD_LOGIC_VECTOR ( 1 to 1 );
  signal if4_push_instr_fetch : STD_LOGIC;
  signal \^if4_raw_valid_reg_0\ : STD_LOGIC;
  signal if4_sel_input : STD_LOGIC_VECTOR ( 3 to 4 );
  signal keep_jump_taken_with_ds : STD_LOGIC;
  signal kill_fetch : STD_LOGIC;
  signal \^kill_fetch_mmu\ : STD_LOGIC;
  signal lopt_10 : STD_LOGIC;
  signal lopt_100 : STD_LOGIC;
  signal lopt_101 : STD_LOGIC;
  signal lopt_102 : STD_LOGIC;
  signal lopt_103 : STD_LOGIC;
  signal lopt_104 : STD_LOGIC;
  signal lopt_105 : STD_LOGIC;
  signal lopt_106 : STD_LOGIC;
  signal lopt_107 : STD_LOGIC;
  signal lopt_108 : STD_LOGIC;
  signal lopt_109 : STD_LOGIC;
  signal lopt_11 : STD_LOGIC;
  signal lopt_110 : STD_LOGIC;
  signal lopt_111 : STD_LOGIC;
  signal lopt_112 : STD_LOGIC;
  signal lopt_113 : STD_LOGIC;
  signal lopt_114 : STD_LOGIC;
  signal lopt_115 : STD_LOGIC;
  signal lopt_116 : STD_LOGIC;
  signal lopt_117 : STD_LOGIC;
  signal lopt_118 : STD_LOGIC;
  signal lopt_119 : STD_LOGIC;
  signal lopt_12 : STD_LOGIC;
  signal lopt_120 : STD_LOGIC;
  signal lopt_121 : STD_LOGIC;
  signal lopt_122 : STD_LOGIC;
  signal lopt_123 : STD_LOGIC;
  signal lopt_124 : STD_LOGIC;
  signal lopt_13 : STD_LOGIC;
  signal lopt_14 : STD_LOGIC;
  signal lopt_15 : STD_LOGIC;
  signal lopt_16 : STD_LOGIC;
  signal lopt_17 : STD_LOGIC;
  signal lopt_18 : STD_LOGIC;
  signal lopt_19 : STD_LOGIC;
  signal lopt_20 : STD_LOGIC;
  signal lopt_21 : STD_LOGIC;
  signal lopt_22 : STD_LOGIC;
  signal lopt_23 : STD_LOGIC;
  signal lopt_24 : STD_LOGIC;
  signal lopt_25 : STD_LOGIC;
  signal lopt_26 : STD_LOGIC;
  signal lopt_27 : STD_LOGIC;
  signal lopt_28 : STD_LOGIC;
  signal lopt_29 : STD_LOGIC;
  signal \^lopt_3\ : STD_LOGIC;
  signal lopt_30 : STD_LOGIC;
  signal lopt_31 : STD_LOGIC;
  signal lopt_32 : STD_LOGIC;
  signal lopt_33 : STD_LOGIC;
  signal lopt_34 : STD_LOGIC;
  signal lopt_35 : STD_LOGIC;
  signal lopt_36 : STD_LOGIC;
  signal lopt_37 : STD_LOGIC;
  signal lopt_38 : STD_LOGIC;
  signal lopt_39 : STD_LOGIC;
  signal \^lopt_4\ : STD_LOGIC;
  signal lopt_40 : STD_LOGIC;
  signal lopt_41 : STD_LOGIC;
  signal lopt_42 : STD_LOGIC;
  signal lopt_43 : STD_LOGIC;
  signal lopt_44 : STD_LOGIC;
  signal lopt_45 : STD_LOGIC;
  signal lopt_46 : STD_LOGIC;
  signal lopt_47 : STD_LOGIC;
  signal lopt_48 : STD_LOGIC;
  signal lopt_49 : STD_LOGIC;
  signal \^lopt_5\ : STD_LOGIC;
  signal lopt_50 : STD_LOGIC;
  signal lopt_51 : STD_LOGIC;
  signal lopt_52 : STD_LOGIC;
  signal lopt_53 : STD_LOGIC;
  signal lopt_54 : STD_LOGIC;
  signal lopt_55 : STD_LOGIC;
  signal lopt_56 : STD_LOGIC;
  signal lopt_57 : STD_LOGIC;
  signal lopt_58 : STD_LOGIC;
  signal lopt_59 : STD_LOGIC;
  signal \^lopt_6\ : STD_LOGIC;
  signal lopt_60 : STD_LOGIC;
  signal lopt_61 : STD_LOGIC;
  signal lopt_62 : STD_LOGIC;
  signal lopt_63 : STD_LOGIC;
  signal lopt_64 : STD_LOGIC;
  signal lopt_65 : STD_LOGIC;
  signal lopt_66 : STD_LOGIC;
  signal lopt_67 : STD_LOGIC;
  signal lopt_68 : STD_LOGIC;
  signal lopt_69 : STD_LOGIC;
  signal \^lopt_7\ : STD_LOGIC;
  signal lopt_70 : STD_LOGIC;
  signal lopt_71 : STD_LOGIC;
  signal lopt_72 : STD_LOGIC;
  signal lopt_73 : STD_LOGIC;
  signal lopt_74 : STD_LOGIC;
  signal lopt_75 : STD_LOGIC;
  signal lopt_76 : STD_LOGIC;
  signal lopt_77 : STD_LOGIC;
  signal lopt_78 : STD_LOGIC;
  signal lopt_79 : STD_LOGIC;
  signal \^lopt_8\ : STD_LOGIC;
  signal lopt_80 : STD_LOGIC;
  signal lopt_81 : STD_LOGIC;
  signal lopt_82 : STD_LOGIC;
  signal lopt_83 : STD_LOGIC;
  signal lopt_84 : STD_LOGIC;
  signal lopt_85 : STD_LOGIC;
  signal lopt_86 : STD_LOGIC;
  signal lopt_87 : STD_LOGIC;
  signal lopt_88 : STD_LOGIC;
  signal lopt_89 : STD_LOGIC;
  signal lopt_9 : STD_LOGIC;
  signal lopt_90 : STD_LOGIC;
  signal lopt_91 : STD_LOGIC;
  signal lopt_92 : STD_LOGIC;
  signal lopt_93 : STD_LOGIC;
  signal lopt_94 : STD_LOGIC;
  signal lopt_95 : STD_LOGIC;
  signal lopt_96 : STD_LOGIC;
  signal lopt_97 : STD_LOGIC;
  signal lopt_98 : STD_LOGIC;
  signal lopt_99 : STD_LOGIC;
  signal \m0_Ex_Result_i[0]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[10]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[11]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[12]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[13]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[14]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[15]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[1]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[2]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[30]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[3]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[4]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[5]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[6]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[7]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[8]_i_2_n_0\ : STD_LOGIC;
  signal \m0_Ex_Result_i[9]_i_2_n_0\ : STD_LOGIC;
  signal m0_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m0_PipeRun_for_ce : signal is std.standard.true;
  signal m0_byte_access_i : STD_LOGIC;
  signal m0_complete_in_later_stage : STD_LOGIC;
  signal m0_databus_read_i0 : STD_LOGIC;
  signal m0_databus_read_i_reg_n_0 : STD_LOGIC;
  signal m0_databus_write_i0 : STD_LOGIC;
  signal m0_databus_write_i_reg_n_0 : STD_LOGIC;
  signal m0_dead_valid_hold : STD_LOGIC;
  signal m0_delay_slot : STD_LOGIC;
  signal m0_doublet_access_i : STD_LOGIC;
  signal m0_exception_from_ex : STD_LOGIC;
  signal m0_exception_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m0_exception_raw_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m0_gpr_write : STD_LOGIC;
  signal m0_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal m0_gpr_write_dbg : STD_LOGIC;
  signal m0_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m0_is_div_instr_i : STD_LOGIC;
  signal m0_jump_taken : STD_LOGIC;
  signal m0_m2_complete_in_later_stage : STD_LOGIC;
  signal m0_m3_complete_in_later_stage : STD_LOGIC;
  signal m0_msr_clear_bip_i : STD_LOGIC;
  signal m0_msr_set_ie_i : STD_LOGIC;
  signal m0_piperun_masked_no1 : STD_LOGIC;
  signal m0_piperun_masked_no2 : STD_LOGIC;
  signal m0_piperun_masked_no3 : STD_LOGIC;
  signal m0_piperun_masked_no4 : STD_LOGIC;
  signal m0_piperun_raw : STD_LOGIC;
  signal m0_raw_valid_reg_n_0 : STD_LOGIC;
  signal m0_read_imm_reg : STD_LOGIC;
  signal m0_rtid_instr : STD_LOGIC;
  signal m0_rtid_instr_i_2_n_0 : STD_LOGIC;
  signal m0_rtid_instr_i_3_n_0 : STD_LOGIC;
  signal \^m0_sel_barrel_res\ : STD_LOGIC;
  signal m0_sel_mul_res : STD_LOGIC;
  signal m1_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m1_PipeRun_for_ce : signal is std.standard.true;
  signal \^m1_byte_access\ : STD_LOGIC;
  signal m1_databus_access : STD_LOGIC;
  signal m1_databus_access_from_m00 : STD_LOGIC;
  signal m1_dead_valid_hold : STD_LOGIC;
  signal m1_delay_slot : STD_LOGIC;
  signal \^m1_doublet_access\ : STD_LOGIC;
  signal m1_exception_from_m0 : STD_LOGIC;
  signal m1_exception_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m1_exception_raw_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m1_gpr_write : STD_LOGIC;
  signal m1_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal m1_gpr_write_dbg : STD_LOGIC;
  signal m1_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m1_is_div_instr_i : STD_LOGIC;
  signal m1_jump_taken : STD_LOGIC;
  signal m1_m2_complete_in_later_stage : STD_LOGIC;
  signal m1_m3_complete_in_later_stage : STD_LOGIC;
  signal m1_msr_clear_bip_i : STD_LOGIC;
  signal m1_msr_set_ie_i : STD_LOGIC;
  signal m1_piperun_masked_no1 : STD_LOGIC;
  signal m1_piperun_masked_no2 : STD_LOGIC;
  signal m1_piperun_raw : STD_LOGIC;
  signal m1_raw_valid_reg_n_0 : STD_LOGIC;
  signal m1_read_imm_reg : STD_LOGIC;
  signal m1_rtid_instr : STD_LOGIC;
  signal \^m1_sel_mul_res\ : STD_LOGIC;
  signal m2_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m2_PipeRun_for_ce : signal is std.standard.true;
  signal m2_byte_access_i : STD_LOGIC;
  signal m2_complete_in_later_stage : STD_LOGIC;
  signal m2_databus_access_i0 : STD_LOGIC;
  signal \^m2_databus_access_i_reg_0\ : STD_LOGIC;
  signal m2_databus_read_i_reg_n_0 : STD_LOGIC;
  signal m2_databus_write : STD_LOGIC;
  signal m2_dead_valid_hold : STD_LOGIC;
  signal m2_delay_slot : STD_LOGIC;
  signal m2_doublet_access_i : STD_LOGIC;
  signal m2_exception_from_m1 : STD_LOGIC;
  signal m2_exception_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m2_exception_raw_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m2_exception_taken : STD_LOGIC;
  signal m2_gpr_write : STD_LOGIC;
  signal m2_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal m2_gpr_write_dbg : STD_LOGIC;
  signal m2_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^m2_is_div_instr\ : STD_LOGIC;
  signal m2_jump_taken : STD_LOGIC;
  signal m2_m3_complete_in_later_stage : STD_LOGIC;
  signal m2_msr_clear_bip_i : STD_LOGIC;
  signal m2_msr_set_ie_i : STD_LOGIC;
  signal m2_piperun_masked_no1 : STD_LOGIC;
  signal m2_piperun_masked_no2 : STD_LOGIC;
  signal m2_piperun_masked_no3 : STD_LOGIC;
  signal m2_piperun_masked_no4 : STD_LOGIC;
  signal m2_piperun_masked_no5 : STD_LOGIC;
  signal m2_piperun_raw : STD_LOGIC;
  signal \^m2_raw_valid_reg_0\ : STD_LOGIC;
  signal m2_read_imm_reg : STD_LOGIC;
  signal m2_rtid_instr : STD_LOGIC;
  signal m3_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of m3_PipeRun_for_ce : signal is std.standard.true;
  signal m3_byte_access_i_reg_n_0 : STD_LOGIC;
  signal m3_complete_in_later_stage : STD_LOGIC;
  signal m3_databus_access_i0 : STD_LOGIC;
  signal m3_databus_read_i_reg_n_0 : STD_LOGIC;
  signal m3_databus_write_i_reg_n_0 : STD_LOGIC;
  signal m3_dead_valid_hold : STD_LOGIC;
  signal m3_delay_slot_i_reg_n_0 : STD_LOGIC;
  signal m3_doublet_access_i_reg_n_0 : STD_LOGIC;
  signal m3_exception_from_m2 : STD_LOGIC;
  signal m3_exception_kind : STD_LOGIC_VECTOR ( 28 to 28 );
  signal m3_exception_raw_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal m3_exception_taken : STD_LOGIC;
  signal m3_gpr_write : STD_LOGIC;
  signal m3_gpr_write_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal m3_gpr_write_dbg : STD_LOGIC;
  signal m3_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m3_jump_taken : STD_LOGIC;
  signal m3_msr_clear_bip_i : STD_LOGIC;
  signal m3_msr_set_ie_i : STD_LOGIC;
  signal m3_piperun_data_raw : STD_LOGIC;
  signal m3_piperun_masked_no1 : STD_LOGIC;
  signal m3_piperun_masked_no2 : STD_LOGIC;
  signal m3_piperun_masked_no3 : STD_LOGIC;
  signal m3_piperun_raw : STD_LOGIC;
  signal \^m3_raw_valid_reg_0\ : STD_LOGIC;
  signal m3_read_imm_reg_i_reg_n_0 : STD_LOGIC;
  signal m3_rtid_instr : STD_LOGIC;
  signal \^m3_sel_div_res\ : STD_LOGIC;
  signal \^m3_sel_load_res\ : STD_LOGIC;
  signal of_Interrupt : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_19_n_0 : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_20_n_0 : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_21_n_0 : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_22_n_0 : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_23_n_0 : STD_LOGIC;
  signal of_MSR_cmb_pipemove_inferred_i_24_n_0 : STD_LOGIC;
  signal \^of_msr_i_reg[22]\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal of_PipeRun_for_ce : STD_LOGIC;
  attribute DIRECT_ENABLE of of_PipeRun_for_ce : signal is std.standard.true;
  signal of_byte_access : STD_LOGIC;
  signal of_clear_msr_bip_hold0 : STD_LOGIC;
  signal of_clear_msr_bip_hold_reg_n_0 : STD_LOGIC;
  signal of_dead_valid_hold : STD_LOGIC;
  signal of_doublet_access : STD_LOGIC;
  signal of_ex_complete_in_later_stage : STD_LOGIC;
  signal of_gpr_write : STD_LOGIC;
  attribute RTL_KEEP : string;
  attribute RTL_KEEP of of_gpr_write : signal is "true";
  signal of_gpr_write_dbg : STD_LOGIC;
  attribute RTL_KEEP of of_gpr_write_dbg : signal is "true";
  signal of_instr : STD_LOGIC_VECTOR ( 0 to 5 );
  signal of_is_bsifi : STD_LOGIC;
  signal of_m0_complete_in_later_stage : STD_LOGIC;
  signal of_m1_complete_in_later_stage : STD_LOGIC;
  signal of_msr : STD_LOGIC_VECTOR ( 28 to 28 );
  signal of_next_ex_valid : STD_LOGIC;
  signal of_op1_sel_spr_pc : STD_LOGIC;
  signal of_piperun_masked_no1 : STD_LOGIC;
  signal of_piperun_masked_no10 : STD_LOGIC;
  signal of_piperun_masked_no2 : STD_LOGIC;
  signal of_piperun_masked_no3 : STD_LOGIC;
  signal of_piperun_masked_no4 : STD_LOGIC;
  signal of_piperun_masked_no5 : STD_LOGIC;
  signal of_piperun_masked_no6 : STD_LOGIC;
  signal of_piperun_masked_no7 : STD_LOGIC;
  signal of_piperun_masked_no8 : STD_LOGIC;
  signal of_piperun_masked_no9 : STD_LOGIC;
  signal of_piperun_raw : STD_LOGIC;
  signal of_predecode : STD_LOGIC_VECTOR ( 9 to 9 );
  signal of_raw_valid : STD_LOGIC;
  signal of_read_imm_reg : STD_LOGIC;
  signal of_read_imm_reg_raw : STD_LOGIC;
  signal of_set_msr_ee_hold0 : STD_LOGIC;
  signal of_set_msr_ee_hold_i_2_n_0 : STD_LOGIC;
  signal of_set_msr_ee_hold_reg_n_0 : STD_LOGIC;
  signal of_set_msr_ie : STD_LOGIC;
  signal of_set_msr_ie_hold0 : STD_LOGIC;
  signal of_set_msr_ie_hold_reg_n_0 : STD_LOGIC;
  signal p_104_in : STD_LOGIC;
  signal reset_bool_for_rst : STD_LOGIC;
  attribute DIRECT_RESET of reset_bool_for_rst : signal is std.standard.true;
  signal use_Reg_Neg_DI1_out : STD_LOGIC;
  signal use_Reg_Neg_S3_out : STD_LOGIC;
  signal wb_abort_div : STD_LOGIC;
  signal \^wb_byte_access\ : STD_LOGIC;
  signal \^wb_div_zero_overflow\ : STD_LOGIC;
  signal \^wb_doublet_access\ : STD_LOGIC;
  signal \^wb_exception_from_m3_reg_rep_0\ : STD_LOGIC;
  signal \^wb_exception_from_m3_reg_rep__0_0\ : STD_LOGIC;
  signal wb_exception_raw_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal \^wb_exception_taken\ : STD_LOGIC;
  signal \^wb_gpr_write_addr_reg[1]_0\ : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal \wb_gpr_write_addr_reg_n_0_[0]\ : STD_LOGIC;
  signal \wb_gpr_write_addr_reg_n_0_[4]\ : STD_LOGIC;
  signal \^wb_halted\ : STD_LOGIC;
  signal wb_ie_rising : STD_LOGIC;
  signal \^wb_msr_clear_bip\ : STD_LOGIC;
  signal \^wb_msr_clear_ie\ : STD_LOGIC;
  signal wb_msr_set_ie : STD_LOGIC;
  signal wb_piperun_i_reg_n_0 : STD_LOGIC;
  signal wb_raw_valid_reg_n_0 : STD_LOGIC;
  signal \^wb_read_imm_reg\ : STD_LOGIC;
  signal wb_reset : STD_LOGIC;
  signal wb_rtid_instr : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of \Byte_Doublet_Handle_I1/Data_Addr[30]_INST_0\ : label is "soft_lutpair238";
  attribute SOFT_HLUTNM of \Byte_Doublet_Handle_I1/Data_Addr[31]_INST_0\ : label is "soft_lutpair239";
  attribute SOFT_HLUTNM of \Byte_Doublet_Handle_I1/Data_Write[8]_INST_0\ : label is "soft_lutpair238";
  attribute SOFT_HLUTNM of \Byte_Doublet_Handle_I1/Data_Write[9]_INST_0\ : label is "soft_lutpair239";
  attribute SOFT_HLUTNM of \EX_Op1[30]_i_7\ : label is "soft_lutpair204";
  attribute SOFT_HLUTNM of \EX_Op2[29]_i_5\ : label is "soft_lutpair259";
  attribute SOFT_HLUTNM of \EX_Op2[31]_i_7\ : label is "soft_lutpair259";
  attribute SOFT_HLUTNM of \LOCKSTEP_Master_Out[10]_INST_0\ : label is "soft_lutpair216";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.dbg_brki_hit_i_1\ : label is "soft_lutpair216";
  attribute SOFT_HLUTNM of \Performance_Debug_Control.ex_dbg_pc_hit_i_i_1\ : label is "soft_lutpair209";
  attribute SOFT_HLUTNM of \Q[0]_i_2\ : label is "soft_lutpair258";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[0]_i_1\ : label is "soft_lutpair218";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[16]_i_1\ : label is "soft_lutpair237";
  attribute SOFT_HLUTNM of \Use_HW_BS.Using_BitField.mem_mask0[2]_i_3\ : label is "soft_lutpair237";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_left_shift_i_1\ : label is "soft_lutpair217";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_10\ : label is "soft_lutpair219";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_5\ : label is "soft_lutpair222";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_6\ : label is "soft_lutpair207";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_7\ : label is "soft_lutpair225";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_8\ : label is "soft_lutpair215";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[0]_i_9\ : label is "soft_lutpair226";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[10]_i_1\ : label is "soft_lutpair253";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[10]_i_3\ : label is "soft_lutpair212";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[11]_i_1\ : label is "soft_lutpair254";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[11]_i_3\ : label is "soft_lutpair213";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[12]_i_1\ : label is "soft_lutpair253";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[12]_i_3\ : label is "soft_lutpair220";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[13]_i_1\ : label is "soft_lutpair250";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[13]_i_3\ : label is "soft_lutpair227";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[14]_i_1\ : label is "soft_lutpair252";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[14]_i_3\ : label is "soft_lutpair223";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[15]_i_1\ : label is "soft_lutpair254";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[15]_i_3\ : label is "soft_lutpair208";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[16]_i_1\ : label is "soft_lutpair256";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[16]_i_3\ : label is "soft_lutpair224";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[17]_i_1\ : label is "soft_lutpair250";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[17]_i_3\ : label is "soft_lutpair207";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[18]_i_1\ : label is "soft_lutpair252";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[18]_i_3\ : label is "soft_lutpair215";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[19]_i_1\ : label is "soft_lutpair247";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[19]_i_3\ : label is "soft_lutpair222";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_1\ : label is "soft_lutpair256";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_4\ : label is "soft_lutpair224";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[1]_i_5\ : label is "soft_lutpair205";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[20]_i_1\ : label is "soft_lutpair255";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[20]_i_3\ : label is "soft_lutpair225";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[21]_i_1\ : label is "soft_lutpair244";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[21]_i_3\ : label is "soft_lutpair226";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[22]_i_1\ : label is "soft_lutpair248";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[22]_i_3\ : label is "soft_lutpair205";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[23]_i_1\ : label is "soft_lutpair247";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[24]_i_1\ : label is "soft_lutpair255";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[25]_i_1\ : label is "soft_lutpair244";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[26]_i_1\ : label is "soft_lutpair248";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[27]_i_2\ : label is "soft_lutpair217";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[2]_i_1\ : label is "soft_lutpair249";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[2]_i_4\ : label is "soft_lutpair208";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[30]_i_2\ : label is "soft_lutpair219";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[3]_i_1\ : label is "soft_lutpair246";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[3]_i_4\ : label is "soft_lutpair223";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[4]_i_1\ : label is "soft_lutpair245";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[4]_i_3\ : label is "soft_lutpair227";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[5]_i_1\ : label is "soft_lutpair251";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[5]_i_3\ : label is "soft_lutpair220";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[6]_i_1\ : label is "soft_lutpair249";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[6]_i_3\ : label is "soft_lutpair213";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[7]_i_1\ : label is "soft_lutpair246";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[7]_i_3\ : label is "soft_lutpair212";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[8]_i_1\ : label is "soft_lutpair245";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[8]_i_3\ : label is "soft_lutpair221";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[9]_i_1\ : label is "soft_lutpair251";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_mux3[9]_i_3\ : label is "soft_lutpair221";
  attribute SOFT_HLUTNM of \Use_HW_BS.mem_void_bit_i_1\ : label is "soft_lutpair218";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_1__140\ : label is "soft_lutpair240";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__5\ : label is "soft_lutpair210";
  attribute SOFT_HLUTNM of \Using_FPGA.Native_i_2__6\ : label is "soft_lutpair242";
  attribute SOFT_HLUTNM of \cnt_shifts_reg[1]_srl31_i_1\ : label is "soft_lutpair258";
  attribute SOFT_HLUTNM of ex_Interrupt_raw_i_3 : label is "soft_lutpair214";
  attribute SOFT_HLUTNM of ex_clear_msr_bip_instr_i_1 : label is "soft_lutpair257";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[10]_i_2\ : label is "soft_lutpair233";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[11]_i_2\ : label is "soft_lutpair233";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[12]_i_2\ : label is "soft_lutpair234";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[13]_i_2\ : label is "soft_lutpair234";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[14]_i_2\ : label is "soft_lutpair235";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[15]_i_2\ : label is "soft_lutpair235";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[1]_i_2\ : label is "soft_lutpair236";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[24]_i_2\ : label is "soft_lutpair203";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[29]_i_9\ : label is "soft_lutpair203";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[2]_i_2\ : label is "soft_lutpair228";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[30]_i_1\ : label is "soft_lutpair204";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[3]_i_2\ : label is "soft_lutpair228";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[4]_i_2\ : label is "soft_lutpair231";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[5]_i_2\ : label is "soft_lutpair231";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[6]_i_2\ : label is "soft_lutpair230";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[7]_i_2\ : label is "soft_lutpair230";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[8]_i_2\ : label is "soft_lutpair229";
  attribute SOFT_HLUTNM of \m0_Ex_Result_i[9]_i_2\ : label is "soft_lutpair229";
  attribute SOFT_HLUTNM of \m0_exception_raw_kind[28]_i_1\ : label is "soft_lutpair210";
  attribute SOFT_HLUTNM of m0_msr_clear_bip_i_i_1 : label is "soft_lutpair214";
  attribute SOFT_HLUTNM of m0_msr_set_ie_i_i_1 : label is "soft_lutpair211";
  attribute SOFT_HLUTNM of m0_rtid_instr_i_1 : label is "soft_lutpair257";
  attribute SOFT_HLUTNM of of_MSR_cmb_pipemove_inferred_i_16 : label is "soft_lutpair241";
  attribute SOFT_HLUTNM of of_MSR_cmb_pipemove_inferred_i_17 : label is "soft_lutpair242";
  attribute SOFT_HLUTNM of of_MSR_cmb_pipemove_inferred_i_18 : label is "soft_lutpair241";
  attribute SOFT_HLUTNM of of_MSR_cmb_pipestall_inferred_i_4 : label is "soft_lutpair211";
  attribute SOFT_HLUTNM of of_set_msr_ee_hold_i_2 : label is "soft_lutpair240";
  attribute SOFT_HLUTNM of sign_byte_inferred_i_1 : label is "soft_lutpair236";
  attribute SOFT_HLUTNM of \trace_exception_kind_i[1]_i_1\ : label is "soft_lutpair232";
  attribute SOFT_HLUTNM of \trace_exception_kind_i[3]_i_1\ : label is "soft_lutpair206";
  attribute SOFT_HLUTNM of trace_exception_taken_i_i_1 : label is "soft_lutpair209";
  attribute SOFT_HLUTNM of \trace_new_reg_value_i[0]_i_2\ : label is "soft_lutpair243";
  attribute SOFT_HLUTNM of \trace_new_reg_value_i[24]_i_4\ : label is "soft_lutpair243";
  attribute SOFT_HLUTNM of trace_reg_write_i_i_1 : label is "soft_lutpair232";
  attribute SOFT_HLUTNM of trace_valid_instr_i_i_1 : label is "soft_lutpair206";
  attribute ORIG_CELL_NAME : string;
  attribute ORIG_CELL_NAME of wb_exception_from_m3_reg : label is "wb_exception_from_m3_reg";
  attribute ORIG_CELL_NAME of wb_exception_from_m3_reg_rep : label is "wb_exception_from_m3_reg";
  attribute ORIG_CELL_NAME of \wb_exception_from_m3_reg_rep__0\ : label is "wb_exception_from_m3_reg";
begin
  D(47 downto 0) <= \^d\(47 downto 0);
  \EX_ALU_Op_reg[0]_0\(1 downto 0) <= \^ex_alu_op_reg[0]_0\(1 downto 0);
  EX_Bit_Extract_reg_0 <= \^ex_bit_extract_reg_0\;
  EX_Enable_Sext_Shift_reg_0 <= \^ex_enable_sext_shift_reg_0\;
  EX_Enable_Sext_Shift_reg_1 <= \^ex_enable_sext_shift_reg_1\;
  EX_Enable_Sext_Shift_reg_2(16 downto 0) <= \^ex_enable_sext_shift_reg_2\(16 downto 0);
  \EX_Logic_Op_reg[0]_0\(3 downto 0) <= \^ex_logic_op_reg[0]_0\(3 downto 0);
  \EX_Op1_reg[1]\ <= \^ex_op1_reg[1]\;
  \EX_Op1_reg[30]\ <= \^ex_op1_reg[30]\;
  \EX_Op1_reg[31]\ <= \^ex_op1_reg[31]\;
  \EX_Op1_reg[3]\ <= \^ex_op1_reg[3]\;
  \EX_Op2_reg[17]\(14 downto 0) <= \^ex_op2_reg[17]\(14 downto 0);
  \EX_Op2_reg[31]\ <= \^ex_op2_reg[31]\;
  \EX_Op2_reg[31]_0\ <= \^ex_op2_reg[31]_0\;
  \EX_Sext_Op_reg[0]_0\(1 downto 0) <= \^ex_sext_op_reg[0]_0\(1 downto 0);
  \EX_Sext_Op_reg[1]_0\ <= \^ex_sext_op_reg[1]_0\;
  Hibernate <= \^hibernate\;
  Q(25 downto 0) <= \^q\(25 downto 0);
  S_0 <= \^s_0\;
  Sleep_Decode <= \^sleep_decode\;
  Suspend <= \^suspend\;
  \Use_Async_Reset.sync_reset_reg\ <= flush_pipe_for_rst;
  \Using_FPGA.Native\ <= \^using_fpga.native\;
  \Using_FPGA.Native_7\ <= \^using_fpga.native_7\;
  \Using_Mul_Instr.ex_not_mul_op_i_reg_0\ <= \^using_mul_instr.ex_not_mul_op_i_reg_0\;
  active_wakeup <= \^active_wakeup\;
  bp0_dead_fetch_hold <= \^bp0_dead_fetch_hold\;
  bp0_raw_valid_reg_0 <= \^bp0_raw_valid_reg_0\;
  bp1_dead_fetch_hold_reg_0 <= \^bp1_dead_fetch_hold_reg_0\;
  bp1_raw_valid_reg_0 <= \^bp1_raw_valid_reg_0\;
  bp1_raw_valid_reg_1 <= \^bp1_raw_valid_reg_1\;
  \cur_data_i_reg[31]\(31 downto 0) <= \^cur_data_i_reg[31]\(31 downto 0);
  ex_Interrupt <= \^ex_interrupt\;
  ex_alu_sel_logic <= \^ex_alu_sel_logic\;
  ex_arith_shift <= \^ex_arith_shift\;
  ex_bit_extract <= \^ex_bit_extract\;
  ex_bit_insert <= \^ex_bit_insert\;
  ex_clz_instr <= \^ex_clz_instr\;
  ex_cmp_op <= \^ex_cmp_op\;
  ex_enable_sext_shift <= \^ex_enable_sext_shift\;
  ex_is_div_instr_i_reg_0 <= \^ex_is_div_instr_i_reg_0\;
  ex_left_shift_i <= \^ex_left_shift_i\;
  ex_mbar_decode <= \^ex_mbar_decode\;
  ex_msrclr <= \^ex_msrclr\;
  ex_msrset <= \^ex_msrset\;
  ex_pattern_cmp_sel <= \^ex_pattern_cmp_sel\;
  ex_raw_valid_reg_0 <= ex_PipeRun_for_ce;
  ex_sel_alu_reg_0 <= \^ex_sel_alu_reg_0\;
  ex_sel_alu_res <= \^ex_sel_alu_res\;
  ex_sel_barrel_res <= \^ex_sel_barrel_res\;
  ex_start_div <= \^ex_start_div\;
  ex_use_carry <= \^ex_use_carry\;
  ex_void_bit <= \^ex_void_bit\;
  if0_pause <= \^if0_pause\;
  if0_raw_valid <= \^if0_raw_valid\;
  if1_insert_piperun_i <= \^if1_insert_piperun_i\;
  if2_piperun <= \^if2_piperun\;
  if2_raw_valid_reg_0 <= \^if2_raw_valid_reg_0\;
  if3_piperun <= \^if3_piperun\;
  if3_raw_valid_reg_0 <= \^if3_raw_valid_reg_0\;
  if4_piperun <= \^if4_piperun\;
  if4_raw_valid_reg_0 <= \^if4_raw_valid_reg_0\;
  kill_fetch_mmu <= \^kill_fetch_mmu\;
  lopt_4 <= lopt_42;
  lopt_41 <= lopt_3;
  lopt_44 <= lopt_6;
  lopt_5 <= lopt_43;
  lopt_7 <= lopt_45;
  lopt_8 <= lopt_46;
  m0_piperun <= m0_PipeRun_for_ce;
  m0_sel_barrel_res <= \^m0_sel_barrel_res\;
  m1_byte_access <= \^m1_byte_access\;
  m1_doublet_access <= \^m1_doublet_access\;
  m1_piperun <= m1_PipeRun_for_ce;
  m1_sel_mul_res <= \^m1_sel_mul_res\;
  m2_databus_access_i_reg_0 <= \^m2_databus_access_i_reg_0\;
  m2_is_div_instr <= \^m2_is_div_instr\;
  m2_piperun <= m2_PipeRun_for_ce;
  m2_raw_valid_reg_0 <= \^m2_raw_valid_reg_0\;
  m3_piperun <= m3_PipeRun_for_ce;
  m3_raw_valid_reg_0 <= \^m3_raw_valid_reg_0\;
  m3_sel_div_res <= \^m3_sel_div_res\;
  m3_sel_load_res <= \^m3_sel_load_res\;
  \of_MSR_i_reg[22]\(3 downto 0) <= \^of_msr_i_reg[22]\(3 downto 0);
  of_piperun <= of_PipeRun_for_ce;
  reset_bool_for_rst <= sync_reset;
  wb_byte_access <= \^wb_byte_access\;
  wb_div_zero_overflow <= \^wb_div_zero_overflow\;
  wb_doublet_access <= \^wb_doublet_access\;
  wb_exception_from_m3_reg_rep_0 <= \^wb_exception_from_m3_reg_rep_0\;
  \wb_exception_from_m3_reg_rep__0_0\ <= \^wb_exception_from_m3_reg_rep__0_0\;
  wb_exception_taken <= \^wb_exception_taken\;
  \wb_gpr_write_addr_reg[1]_0\(2 downto 0) <= \^wb_gpr_write_addr_reg[1]_0\(2 downto 0);
  wb_halted <= \^wb_halted\;
  wb_msr_clear_bip <= \^wb_msr_clear_bip\;
  wb_msr_clear_ie <= \^wb_msr_clear_ie\;
  wb_read_imm_reg <= \^wb_read_imm_reg\;
\Byte_Doublet_Handle_I1/Data_Addr[30]_INST_0\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"E0"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \^m1_doublet_access\,
      I2 => m1_unaligned_addr_3lsb(1),
      O => \^d\(12)
    );
\Byte_Doublet_Handle_I1/Data_Addr[31]_INST_0\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => m1_unaligned_addr_3lsb(0),
      O => \^d\(11)
    );
\Byte_Doublet_Handle_I1/Data_Write[10]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(7),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(5),
      O => \^d\(8)
    );
\Byte_Doublet_Handle_I1/Data_Write[11]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(6),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(4),
      O => \^d\(7)
    );
\Byte_Doublet_Handle_I1/Data_Write[12]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(5),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(3),
      O => \^d\(6)
    );
\Byte_Doublet_Handle_I1/Data_Write[13]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(4),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(2),
      O => \^d\(5)
    );
\Byte_Doublet_Handle_I1/Data_Write[14]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(3),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(1),
      O => \^d\(4)
    );
\Byte_Doublet_Handle_I1/Data_Write[15]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(2),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(0),
      O => \^d\(3)
    );
\Byte_Doublet_Handle_I1/Data_Write[8]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(9),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(7),
      O => \^d\(10)
    );
\Byte_Doublet_Handle_I1/Data_Write[9]_INST_0\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"CDC8"
    )
        port map (
      I0 => \^m1_byte_access\,
      I1 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(8),
      I2 => \^m1_doublet_access\,
      I3 => \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(6),
      O => \^d\(9)
    );
Dbg_Clean_Stop_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_38,
      Q => dbg_clean_stop,
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_82,
      Q => \^ex_alu_op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\EX_ALU_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_83,
      Q => \^ex_alu_op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
EX_ALU_Sel_Logic_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_45,
      Q => \^ex_alu_sel_logic\,
      S => reset_bool_for_rst
    );
EX_Arith_Shift_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(9),
      Q => \^ex_arith_shift\,
      R => reset_bool_for_rst
    );
EX_Bit_Extract_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Bit_Extract0,
      Q => \^ex_bit_extract\,
      R => reset_bool_for_rst
    );
EX_Bit_Insert_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_is_bsifi,
      Q => \^ex_bit_insert\,
      R => reset_bool_for_rst
    );
EX_CLZ_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_94,
      Q => \^ex_clz_instr\,
      R => reset_bool_for_rst
    );
EX_CMP_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_CMP_Op12_out,
      Q => \^ex_cmp_op\,
      R => reset_bool_for_rst
    );
EX_Div_Exception_Hold_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd
     port map (
      Clk => Clk,
      E(0) => ex_PipeRun_for_ce,
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      m3_div_zero_overflow_ex_hold => m3_div_zero_overflow_ex_hold,
      sync_reset => reset_bool_for_rst
    );
EX_Div_Unsigned_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(1),
      Q => ex_div_unsigned,
      R => reset_bool_for_rst
    );
EX_Enable_ALU_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_128,
      Q => EX_Enable_ALU,
      R => reset_bool_for_rst
    );
EX_Enable_Sext_Shift_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_79,
      Q => \^ex_enable_sext_shift\,
      R => reset_bool_for_rst
    );
EX_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_55
     port map (
      Clk => Clk,
      D => D_29,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      ex_gpr_write_dbg => ex_gpr_write_dbg
    );
EX_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_56
     port map (
      A4_out => A4_out,
      Clk => Clk,
      D => D_30,
      \Using_FPGA.Native\ => EX_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_0\ => EX_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_1\ => flush_pipe_for_rst,
      \Using_FPGA.Native_2\ => ex_raw_valid_reg_n_0,
      ex_gpr_write => ex_gpr_write,
      ex_raw_valid_reg => EX_GPR_Write_DFF_n_2
    );
EX_Jump_handling: entity work.microblaze_microblaze_0_0_two_piperun_fd_57
     port map (
      Clk => Clk,
      \Using_FPGA.Native\ => \Using_EX_FPGA.PR_EX_And7_n_1\,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      ex_first_cycle => ex_first_cycle,
      ex_hibernate_i_reg => \^ex_mbar_decode\,
      ex_hibernate_i_reg_0 => \Using_FPGA.Native_i_2__5_n_0\,
      ex_jump_hold => ex_jump_hold,
      ex_mbar_decode_reg => EX_Jump_handling_n_3,
      ex_mbar_decode_reg_0 => EX_Jump_handling_n_4,
      ex_mbar_sleep => ex_mbar_sleep,
      ex_mbar_wait_1 => ex_mbar_wait_1,
      ex_sleep_i0 => ex_sleep_i0,
      flush_pipe_for_rst => flush_pipe_for_rst,
      sync_reset => reset_bool_for_rst
    );
EX_Left_Shift_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(10),
      Q => ex_left_shift,
      R => reset_bool_for_rst
    );
\EX_Logic_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(4),
      Q => \^ex_logic_op_reg[0]_0\(3),
      R => reset_bool_for_rst
    );
\EX_Logic_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(5),
      Q => \^ex_logic_op_reg[0]_0\(2),
      R => reset_bool_for_rst
    );
\EX_Op1[0]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAEA3A2ACAEA0A2"
    )
        port map (
      I0 => \EX_Op1[0]_i_5_n_0\,
      I1 => ex_load_alu_carry_reg_n_0,
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_load_shift_carry,
      I4 => LO,
      I5 => \Use_HW_BS.mem_mux3_reg[28]\(0),
      O => \EX_Op1[0]_i_3_n_0\
    );
\EX_Op1[0]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF1F0010"
    )
        port map (
      I0 => m0_databus_read_i0,
      I1 => ex_reservation,
      I2 => ex_databus_exclusive_i_reg_n_0,
      I3 => \Using_FPGA.Native_i_2__5_n_0\,
      I4 => EX_CarryIn,
      O => \EX_Op1[0]_i_5_n_0\
    );
\EX_Op1[29]_i_7\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101510151515151"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \^ex_enable_sext_shift_reg_0\,
      I2 => \^ex_clz_instr\,
      I3 => \EX_Op1[29]_i_5\,
      I4 => \EX_Op1[29]_i_5_0\,
      I5 => \EX_Op1[29]_i_5_1\,
      O => \EX_Op1[29]_i_7_n_0\
    );
\EX_Op1[30]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => ex_alu_result(1),
      O => \EX_Op1[30]_i_7_n_0\
    );
\EX_Op1[30]_i_8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101510151515151"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \^ex_enable_sext_shift_reg_1\,
      I2 => \^ex_clz_instr\,
      I3 => \EX_Op1[30]_i_5\,
      I4 => \EX_Op1[30]_i_5_0\,
      I5 => \EX_Op1[30]_i_5_1\,
      O => \EX_Op1[30]_i_8_n_0\
    );
\EX_Op2[10]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(19),
      I1 => \m0_Ex_Result_i[10]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[10]_i_5_n_0\
    );
\EX_Op2[11]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(18),
      I1 => \m0_Ex_Result_i[11]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[11]_i_5_n_0\
    );
\EX_Op2[12]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(17),
      I1 => \m0_Ex_Result_i[12]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[12]_i_5_n_0\
    );
\EX_Op2[13]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(16),
      I1 => \m0_Ex_Result_i[13]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[13]_i_5_n_0\
    );
\EX_Op2[14]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(15),
      I1 => \m0_Ex_Result_i[14]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[14]_i_5_n_0\
    );
\EX_Op2[15]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(14),
      I1 => \m0_Ex_Result_i[15]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[15]_i_5_n_0\
    );
\EX_Op2[1]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(28),
      I1 => \m0_Ex_Result_i[1]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[1]_i_5_n_0\
    );
\EX_Op2[29]_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => \bp0_branch_target_reg[0]_1\(0),
      O => \^ex_sel_alu_reg_0\
    );
\EX_Op2[2]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(27),
      I1 => \m0_Ex_Result_i[2]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[2]_i_5_n_0\
    );
\EX_Op2[30]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFF0000D0DF"
    )
        port map (
      I0 => \EX_Op1[30]_i_5_1\,
      I1 => \EX_Op3[30]_i_2\,
      I2 => \^ex_clz_instr\,
      I3 => \^ex_enable_sext_shift_reg_1\,
      I4 => \^ex_pattern_cmp_sel\,
      I5 => \m0_Ex_Result_i[30]_i_2_n_0\,
      O => \EX_Op2[30]_i_4_n_0\
    );
\EX_Op2[31]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BABFAAAA"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => \EX_Op3[31]_i_3\,
      I2 => \^ex_logic_op_reg[0]_0\(3),
      I3 => \EX_Op3[31]_i_3_0\,
      I4 => \^ex_pattern_cmp_sel\,
      O => \EX_Op2[31]_i_6_n_0\
    );
\EX_Op2[31]_i_7\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => ex_alu_result(0),
      O => \EX_Op2[31]_i_7_n_0\
    );
\EX_Op2[3]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(26),
      I1 => \m0_Ex_Result_i[3]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[3]_i_5_n_0\
    );
\EX_Op2[4]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(25),
      I1 => \m0_Ex_Result_i[4]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[4]_i_5_n_0\
    );
\EX_Op2[5]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(24),
      I1 => \m0_Ex_Result_i[5]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[5]_i_5_n_0\
    );
\EX_Op2[6]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(23),
      I1 => \m0_Ex_Result_i[6]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[6]_i_5_n_0\
    );
\EX_Op2[7]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(22),
      I1 => \m0_Ex_Result_i[7]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[7]_i_5_n_0\
    );
\EX_Op2[8]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(21),
      I1 => \m0_Ex_Result_i[8]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[8]_i_5_n_0\
    );
\EX_Op2[9]_i_5\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"5C5F5C5F5C5F5F5F"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_1\(20),
      I1 => \m0_Ex_Result_i[9]_i_2_n_0\,
      I2 => \^ex_sel_alu_res\,
      I3 => \^ex_enable_sext_shift\,
      I4 => \out\,
      I5 => \^ex_sext_op_reg[0]_0\(1),
      O => \EX_Op2[9]_i_5_n_0\
    );
EX_Pattern_Cmp_Sel_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Pattern_Cmp_Sel7_out,
      Q => \^ex_pattern_cmp_sel\,
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_91,
      Q => \^ex_sext_op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\EX_Sext_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_92,
      Q => \^ex_sext_op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(6),
      Q => ex_shift_op(0),
      R => reset_bool_for_rst
    );
\EX_Shift_Op_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(5),
      Q => ex_shift_op(1),
      R => reset_bool_for_rst
    );
EX_Unsigned_Op_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Unsigned_Op11_out,
      Q => ex_unsigned_op,
      R => reset_bool_for_rst
    );
EX_Use_Carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => EX_Use_Carry10_out,
      Q => \^ex_use_carry\,
      R => reset_bool_for_rst
    );
Jump_Logic_I1: entity work.microblaze_microblaze_0_0_Jump_Logic_ff
     port map (
      Clear_Buffer => Clear_Buffer,
      Clk => Clk,
      E(0) => ex_PipeRun_for_ce,
      EX_Op1_CMP_Equal => EX_Op1_CMP_Equal,
      EX_Op1_Zero => EX_Op1_Zero,
      Q(2) => wb_exception_raw_kind(28),
      Q(1) => wb_exception_raw_kind(30),
      Q(0) => wb_exception_raw_kind(31),
      \Using_FPGA.Native\ => \Using_FPGA.Native_18\,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_1\ => ex_raw_valid_reg_n_0,
      \Using_FPGA.Native_2\ => EX_Jump_handling_n_3,
      \Using_FPGA.Native_3\(0) => \Using_FPGA.Native_36\(0),
      \bp0_branch_target_reg[31]\ => EX_Jump_handling_n_4,
      bp0_jump0 => bp0_jump0,
      bp0_keep_jump => bp0_keep_jump,
      bp0_keep_jump_reg => Jump_Logic_I1_n_10,
      bp0_keep_jump_reg_0 => \^bp1_raw_valid_reg_1\,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot_reg => Jump_Logic_I1_n_6,
      ex_delayslot_Instr0 => ex_delayslot_Instr0,
      ex_jump => ex_jump,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq1 => ex_op1_cmp_eq1,
      ex_op1_cmp_eq_n7_out => ex_op1_cmp_eq_n7_out,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      force_Val2_N_reg_0 => PREFETCH_BUFFER_I1_n_76,
      keep_jump_taken_with_ds => keep_jump_taken_with_ds,
      keep_jump_taken_with_ds_reg => Jump_Logic_I1_n_8,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => \^lopt_3\,
      lopt_4 => \^lopt_4\,
      lopt_5 => \^lopt_5\,
      lopt_6 => \^lopt_6\,
      lopt_7 => \^lopt_7\,
      m0_jump_taken => m0_jump_taken,
      of_raw_valid => of_raw_valid,
      sync_reset => reset_bool_for_rst,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      use_Reg_Neg_S_reg_0 => of_PipeRun_for_ce,
      wb_abort_div => wb_abort_div,
      \wb_exception_raw_kind_reg[31]\(0) => Jump_Logic_I1_n_9
    );
Kill_Fetch_Carry: entity work.microblaze_microblaze_0_0_carry_or_bb_58
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => Kill_Fetch_Carry_n_1,
      \Using_FPGA.Native\ => \^ex_mbar_decode\,
      \Using_FPGA.Native_0\ => ex_raw_valid_reg_n_0,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_23\,
      \Using_FPGA.Native_3\ => if4_dead_fetch_hold_reg_n_0,
      \Using_FPGA.Native_4\ => if4_ibus_access_i_reg_n_0,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(0) => ex_gpr_write_addr(4),
      ex_jump => ex_jump,
      if2_dead_fetch_hold_reg => \^s_0\,
      if2_dead_fetch_hold_reg_0 => \^if1_insert_piperun_i\,
      if2_raw_valid_reg => Kill_Fetch_Carry_n_2,
      kill_fetch => kill_fetch,
      lopt => \^lopt_3\,
      lopt_1 => \^lopt_4\,
      lopt_2 => \^lopt_5\
    );
Kill_Fetch_MMU_Carry: entity work.microblaze_microblaze_0_0_carry_or_bb_59
     port map (
      DI(0) => \^bp0_raw_valid_reg_0\,
      \Using_FPGA.Native\ => \^kill_fetch_mmu\,
      bp0_dead_fetch_hold => \^bp0_dead_fetch_hold\,
      bp0_dead_fetch_hold_reg => Kill_Fetch_MMU_Carry_n_3,
      bp0_dead_fetch_hold_reg_0 => \^bp1_raw_valid_reg_1\,
      bp1_dead_fetch_hold_reg => Kill_Fetch_MMU_Carry_n_1,
      if2_ibus_access_raw0 => if2_ibus_access_raw0,
      if2_ibus_first_cycle_raw_reg => \^bp1_dead_fetch_hold_reg_0\,
      if2_ibus_first_cycle_raw_reg_0 => \^bp1_raw_valid_reg_0\,
      if2_ibus_first_cycle_raw_reg_1 => \^if1_insert_piperun_i\,
      kill_fetch => kill_fetch,
      lopt => \^lopt_6\,
      lopt_1 => \^lopt_7\,
      sync_reset => reset_bool_for_rst
    );
\LOCKSTEP_Master_Out[10]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => bp0_raw_valid_reg_2,
      I1 => wb_exception_raw_kind(30),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(31),
      O => \^d\(47)
    );
\LOCKSTEP_Master_Out[5]_INST_0\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFAAAAEAAA"
    )
        port map (
      I0 => bp0_raw_valid_reg_1,
      I1 => wb_exception_raw_kind(31),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(30),
      I5 => bp0_raw_valid_reg_2,
      O => LOCKSTEP_Master_Out(1)
    );
\LOCKSTEP_Master_Out[7]_INST_0\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => \wb_PC_i_reg[31]\,
      I1 => wb_exception_raw_kind(30),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep_0\,
      I4 => wb_exception_raw_kind(31),
      O => LOCKSTEP_Master_Out(0)
    );
M0_DIV_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_60
     port map (
      Clk => Clk,
      D => D_18,
      m0_is_div_instr_i => m0_is_div_instr_i,
      sync_reset => reset_bool_for_rst
    );
M0_Div_Exception_Hold_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_61
     port map (
      Clk => Clk,
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_26\,
      in0 => m0_PipeRun_for_ce,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => M0_Div_Exception_Hold_DFF_n_0
    );
M0_Exception_From_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_62
     port map (
      A_N201_out => A_N201_out,
      Clk => Clk,
      D(2) => m0_exception_kind(28),
      D(1) => m0_exception_kind(30),
      D(0) => m0_exception_kind(31),
      D_0 => D_2,
      D_1 => D_0,
      D_2 => D_19,
      E(0) => ex_PipeRun_for_ce,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => M2_Exception_From_DFF_n_1,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => \^wb_halted\,
      \Use_Async_Reset.sync_reset_reg\ => M0_Exception_From_DFF_n_3,
      \Using_FPGA.Native\ => M0_Exception_From_DFF_n_11,
      \Using_FPGA.Native_0\ => M0_Load_Store_Access_DFF_n_1,
      \Using_FPGA.Native_1\ => M0_Load_Store_Access_DFF_n_3,
      \Using_FPGA.Native_2\(0) => m1_PipeRun_for_ce,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_dead_valid_hold_reg => M0_Exception_From_DFF_n_8,
      ex_first_cycle_reg => \^wb_exception_from_m3_reg_rep_0\,
      ex_jump => ex_jump,
      ex_jump_nodelay => ex_jump_nodelay,
      ex_raw_valid_reg => of_PipeRun_for_ce,
      ex_raw_valid_reg_0 => ex_raw_valid_reg_n_0,
      in0 => m0_PipeRun_for_ce,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m0_exception_from_ex => m0_exception_from_ex,
      m0_exception_raw_kind(2) => m0_exception_raw_kind(28),
      m0_exception_raw_kind(1) => m0_exception_raw_kind(30),
      m0_exception_raw_kind(0) => m0_exception_raw_kind(31),
      m0_raw_valid_reg => M0_Exception_From_DFF_n_6,
      m1_databus_addr_from_m0_reg => M0_Load_Store_Access_DFF_n_0,
      m1_databus_addr_from_m0_reg_0 => \^wb_exception_from_m3_reg_rep__0_0\,
      m1_databus_addr_from_m0_reg_1 => m0_raw_valid_reg_n_0,
      m1_databus_addr_from_m0_reg_2 => M3_Exception_From_DFF_n_2,
      m1_exception_from_m0 => m1_exception_from_m0,
      m3_exception_taken => m3_exception_taken,
      of_dead_valid_hold => of_dead_valid_hold,
      of_next_ex_valid => of_next_ex_valid,
      of_raw_valid => of_raw_valid,
      of_read_imm_reg_raw_reg => \wb_PC_i_reg[31]\,
      of_read_imm_reg_raw_reg_0 => \m0_exception_raw_kind_reg[31]_0\,
      of_read_imm_reg_raw_reg_1 => \^ex_interrupt\,
      \p_43_out__4\ => \Use_Debug_Logic.Master_Core.Debug_Perf/p_43_out__4\,
      p_48_out => \Use_Debug_Logic.Master_Core.Debug_Perf/p_48_out\,
      single_Step_N => single_Step_N,
      single_Step_N_reg => single_Step_N_reg,
      sync_reset => reset_bool_for_rst,
      wb_exception_from_m3_reg_rep => M0_Exception_From_DFF_n_4,
      wb_exception_from_m3_reg_rep_0 => M0_Exception_From_DFF_n_9,
      \wb_exception_from_m3_reg_rep__0\ => M0_Exception_From_DFF_n_7,
      wb_exception_taken => \^wb_exception_taken\
    );
M0_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_63
     port map (
      Clk => Clk,
      D => D_21,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      m0_gpr_write_dbg => m0_gpr_write_dbg
    );
M0_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_64
     port map (
      A3_out => A3_out,
      Clk => Clk,
      D => D_20,
      \Using_FPGA.Native\ => M0_GPR_Write_DFF_n_2,
      \Using_FPGA.Native_0\ => flush_pipe_for_rst,
      \Using_FPGA.Native_1\ => m0_raw_valid_reg_n_0,
      m0_gpr_write => m0_gpr_write,
      m0_raw_valid_reg => M0_GPR_Write_DFF_n_3,
      m0_raw_valid_reg_0 => M0_GPR_Write_DFF_n_4
    );
M0_Load_Store_Access_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_65
     port map (
      Clk => Clk,
      D => D_2,
      \Using_FPGA.Native\ => M0_Load_Store_Access_DFF_n_0,
      \Using_FPGA.Native_0\ => \^ex_interrupt\,
      \Using_FPGA.Native_1\ => \m0_exception_raw_kind_reg[31]_0\,
      \Using_FPGA.Native_2\ => ex_raw_valid_reg_n_0,
      \Using_FPGA.Native_3\ => ex_databus_exclusive_i_reg_n_0,
      \Using_FPGA.Native_4\ => ex_databus_access_i_reg_n_0,
      ex_Interrupt_raw_reg => M0_Load_Store_Access_DFF_n_1,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_reservation => ex_reservation,
      ex_reservation_reg => M0_Load_Store_Access_DFF_n_3,
      m0_databus_read_i0 => m0_databus_read_i0,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m1_databus_access_from_m00 => m1_databus_access_from_m00,
      m1_databus_access_from_m0_reg => \^wb_exception_from_m3_reg_rep__0_0\,
      m1_databus_access_from_m0_reg_0 => M0_Exception_From_DFF_n_6,
      sync_reset => reset_bool_for_rst
    );
M0_Sel_Mul_Res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => p_2_in,
      Q => m0_sel_mul_res,
      R => reset_bool_for_rst
    );
M1_DIV_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_66
     port map (
      Clk => Clk,
      D => D_24,
      m1_is_div_instr_i => m1_is_div_instr_i,
      sync_reset => reset_bool_for_rst
    );
M1_Div_Exception_Hold_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_67
     port map (
      Clk => Clk,
      E(0) => m1_PipeRun_for_ce,
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_30\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => M1_Div_Exception_Hold_DFF_n_0
    );
M1_Exception_From_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_68
     port map (
      A_N201_out => A_N201_out,
      Clk => Clk,
      D(2) => m1_exception_kind(28),
      D(1) => m1_exception_kind(30),
      D(0) => m1_exception_kind(31),
      D_0 => D_3,
      D_1 => D_0,
      E(0) => m1_PipeRun_for_ce,
      Q(2) => m1_exception_raw_kind(28),
      Q(1) => m1_exception_raw_kind(30),
      Q(0) => m1_exception_raw_kind(31),
      \Using_FPGA.Native\ => M2_Exception_From_DFF_n_3,
      \Using_FPGA.Native_0\(0) => m2_PipeRun_for_ce,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m1_exception_from_m0 => m1_exception_from_m0,
      m1_raw_valid_reg => m0_raw_valid_reg_n_0,
      m1_raw_valid_reg_0 => \^wb_exception_from_m3_reg_rep__0_0\,
      m2_exception_from_m1 => m2_exception_from_m1,
      sync_reset => reset_bool_for_rst
    );
M1_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_69
     port map (
      Clk => Clk,
      D => D_23,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      m1_gpr_write_dbg => m1_gpr_write_dbg
    );
M1_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_70
     port map (
      A2_out => A2_out,
      Clk => Clk,
      D => D_22,
      \Using_FPGA.Native\ => M1_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_0\ => M1_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_1\ => flush_pipe_for_rst,
      \Using_FPGA.Native_2\ => m1_raw_valid_reg_n_0,
      m1_gpr_write => m1_gpr_write,
      m1_raw_valid_reg => M1_GPR_Write_DFF_n_2
    );
M1_Sel_Mul_Res_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => M1_Sel_Mul_Res_reg_2,
      Q => \^m1_sel_mul_res\,
      R => reset_bool_for_rst
    );
M2_DIV_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_71
     port map (
      Clk => Clk,
      D => D_25,
      E(0) => m2_PipeRun_for_ce,
      EX_Op1_Zero => EX_Op1_Zero,
      \Using_FPGA.Native\ => \^m2_is_div_instr\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_2\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_3\,
      \floating_hold_div_by_zero__0\ => \floating_hold_div_by_zero__0\,
      floating_hold_div_by_zero_reg => floating_hold_div_by_zero_reg,
      floating_hold_div_by_zero_reg_0 => floating_hold_div_by_zero_reg_0,
      floating_hold_div_by_zero_reg_1 => \^ex_start_div\,
      floating_hold_div_by_zero_reg_2 => flush_pipe_for_rst,
      floating_hold_div_overflow_reg => floating_hold_div_overflow_reg,
      floating_hold_div_overflow_reg_0 => floating_hold_div_overflow_reg_0,
      last_cycle => last_cycle,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow_i_reg => m3_PipeRun_for_ce,
      m3_div_overflow_i_reg_0 => m3_div_overflow_i_reg,
      sync_reset => reset_bool_for_rst
    );
M2_Div_Exception_Hold_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_72
     port map (
      Clk => Clk,
      E(0) => m2_PipeRun_for_ce,
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_29\,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => M2_Div_Exception_Hold_DFF_n_0
    );
M2_Exception_From_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_73
     port map (
      Clk => Clk,
      D(2) => m2_exception_kind(28),
      D(1) => m2_exception_kind(30),
      D(0) => m2_exception_kind(31),
      D_0 => D_4,
      D_1 => D_3,
      E(0) => m2_PipeRun_for_ce,
      Q(2) => m2_exception_raw_kind(28),
      Q(1) => m2_exception_raw_kind(30),
      Q(0) => m2_exception_raw_kind(31),
      \Using_FPGA.Native\ => M2_Exception_From_DFF_n_1,
      \Using_FPGA.Native_0\ => M3_Exception_From_DFF_n_1,
      \Using_FPGA.Native_1\ => m3_PipeRun_for_ce,
      m1_databus_access => m1_databus_access,
      m1_databus_addr_from_m0_i_3 => \^m2_raw_valid_reg_0\,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_exception_from_m0 => m1_exception_from_m0,
      m2_databus_access_i0 => m2_databus_access_i0,
      m2_databus_access_i_reg => \^wb_exception_from_m3_reg_rep__0_0\,
      m2_databus_access_i_reg_0 => \^m3_raw_valid_reg_0\,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_exception_from_m1 => m2_exception_from_m1,
      m2_exception_taken => m2_exception_taken,
      m2_raw_valid_reg => m1_raw_valid_reg_n_0,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_exception_from_m2 => m3_exception_from_m2,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => M2_Exception_From_DFF_n_3
    );
M2_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_74
     port map (
      Clk => Clk,
      D => D_5,
      D_0 => D_26,
      E(0) => m2_PipeRun_for_ce,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      \Using_FPGA.Native_0\ => m3_PipeRun_for_ce,
      m2_gpr_write_dbg => m2_gpr_write_dbg,
      m3_gpr_write_dbg => m3_gpr_write_dbg
    );
M2_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_75
     port map (
      A1_out => A1_out,
      Clk => Clk,
      D => D_6,
      D_0 => D_27,
      E(0) => m2_PipeRun_for_ce,
      \Using_FPGA.Native\ => M2_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_0\ => M2_GPR_Write_DFF_n_5,
      \Using_FPGA.Native_1\ => flush_pipe_for_rst,
      \Using_FPGA.Native_2\ => \^m2_raw_valid_reg_0\,
      \Using_FPGA.Native_3\ => m3_PipeRun_for_ce,
      m2_gpr_write => m2_gpr_write,
      m2_raw_valid_reg => M2_GPR_Write_DFF_n_2,
      m3_gpr_write => m3_gpr_write
    );
M3_Exception_From_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_76
     port map (
      Clk => Clk,
      D(2) => m3_exception_kind(28),
      D(1) => M3_Exception_From_DFF_n_7,
      D(0) => M3_Exception_From_DFF_n_8,
      D_0 => D_4,
      Q(2) => m3_exception_raw_kind(28),
      Q(1) => m3_exception_raw_kind(30),
      Q(0) => m3_exception_raw_kind(31),
      m1_databus_addr_from_m0_i_2 => m1_raw_valid_reg_n_0,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_exception_from_m0 => m1_exception_from_m0,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_exception_from_m1 => m2_exception_from_m1,
      m2_exception_taken => m2_exception_taken,
      m3_databus_access_i0 => m3_databus_access_i0,
      m3_databus_access_i_reg => \^wb_exception_from_m3_reg_rep__0_0\,
      m3_databus_access_i_reg_0 => \^m2_raw_valid_reg_0\,
      m3_databus_access_i_reg_1 => \^m2_databus_access_i_reg_0\,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_exception_from_m2 => m3_exception_from_m2,
      m3_exception_taken => m3_exception_taken,
      sync_reset => reset_bool_for_rst,
      wb_abort_div => wb_abort_div,
      wb_exception_from_m3_reg => M3_Exception_From_DFF_n_5,
      wb_exception_from_m3_reg_0 => M3_Exception_From_DFF_n_9,
      wb_exception_from_m3_reg_1 => M3_Exception_From_DFF_n_10,
      wb_exception_from_m3_reg_2 => \^m3_raw_valid_reg_0\,
      wb_exception_from_m3_reg_3 => m3_PipeRun_for_ce,
      \wb_exception_from_m3_reg_rep__0\ => M3_Exception_From_DFF_n_1,
      \wb_exception_from_m3_reg_rep__0_0\ => M3_Exception_From_DFF_n_2
    );
M3_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_77
     port map (
      Clk => Clk,
      D => D_5,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      m3_gpr_write_dbg => m3_gpr_write_dbg
    );
M3_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_78
     port map (
      A0_out => A0_out,
      Clk => Clk,
      D => D_7,
      D_0 => D_6,
      \Using_FPGA.Native\ => M3_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_0\ => M3_GPR_Write_DFF_n_5,
      \Using_FPGA.Native_1\ => flush_pipe_for_rst,
      \Using_FPGA.Native_2\ => \^m3_raw_valid_reg_0\,
      \Using_FPGA.Native_3\ => m3_PipeRun_for_ce,
      m3_gpr_write => m3_gpr_write,
      m3_raw_valid_reg => M3_GPR_Write_DFF_n_2
    );
OF_Div_Exception_Hold_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_79
     port map (
      Clk => Clk,
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_1\ => of_PipeRun_for_ce,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      \of_MSR_i_reg[25]\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \of_MSR_i_reg[25]_0\ => \Using_FPGA.Native_i_2__8_n_0\,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\(0) => \^ex_op2_reg[17]\(6)
    );
Op1_Conflict_Stall: entity work.microblaze_microblaze_0_0_decode_conflict_ff
     port map (
      S => \OF_EX_Cmp/comparator_i1/S_17\,
      S_0 => \OF_M0_Cmp/comparator_i1/S_16\,
      S_1 => \OF_M1_Cmp/comparator_i1/S_15\,
      S_2 => \OF_M2_Cmp/comparator_i1/S_14\,
      S_3 => \OF_M3_Cmp/comparator_i1/S_13\,
      \Using_FPGA.Native\ => PREFETCH_BUFFER_I1_n_129,
      \Using_FPGA.Native_0\ => EX_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_1\ => PREFETCH_BUFFER_I1_n_130,
      \Using_FPGA.Native_2\ => M0_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_3\ => PREFETCH_BUFFER_I1_n_131,
      \Using_FPGA.Native_4\ => M1_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_5\ => PREFETCH_BUFFER_I1_n_132,
      \Using_FPGA.Native_6\ => M2_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_7\ => PREFETCH_BUFFER_I1_n_133,
      \Using_FPGA.Native_8\ => M3_GPR_Write_DFF_n_4,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => Op1_Conflict_Stall_n_0,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => Op1_Conflict_Stall_n_1,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall
    );
Op2_Conflict_Stall: entity work.\microblaze_microblaze_0_0_decode_conflict_ff__parameterized1\
     port map (
      S => \OF_EX_Cmp/comparator_i1/S_12\,
      S_0 => \OF_M0_Cmp/comparator_i1/S_11\,
      S_1 => \OF_M1_Cmp/comparator_i1/S_10\,
      S_2 => \OF_M2_Cmp/comparator_i1/S_9\,
      S_3 => \OF_M3_Cmp/comparator_i1/S_8\,
      \Using_FPGA.Native\ => PREFETCH_BUFFER_I1_n_134,
      \Using_FPGA.Native_0\ => EX_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_1\ => PREFETCH_BUFFER_I1_n_135,
      \Using_FPGA.Native_10\ => PREFETCH_BUFFER_I1_n_139,
      \Using_FPGA.Native_11\ => PREFETCH_BUFFER_I1_n_47,
      \Using_FPGA.Native_12\ => PREFETCH_BUFFER_I1_n_140,
      \Using_FPGA.Native_13\ => PREFETCH_BUFFER_I1_n_48,
      \Using_FPGA.Native_14\ => PREFETCH_BUFFER_I1_n_141,
      \Using_FPGA.Native_15\ => PREFETCH_BUFFER_I1_n_49,
      \Using_FPGA.Native_16\ => PREFETCH_BUFFER_I1_n_142,
      \Using_FPGA.Native_17\ => PREFETCH_BUFFER_I1_n_50,
      \Using_FPGA.Native_18\ => PREFETCH_BUFFER_I1_n_70,
      \Using_FPGA.Native_2\ => M0_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_3\ => PREFETCH_BUFFER_I1_n_136,
      \Using_FPGA.Native_4\ => M1_GPR_Write_DFF_n_4,
      \Using_FPGA.Native_5\ => PREFETCH_BUFFER_I1_n_137,
      \Using_FPGA.Native_6\ => M2_GPR_Write_DFF_n_5,
      \Using_FPGA.Native_7\ => PREFETCH_BUFFER_I1_n_138,
      \Using_FPGA.Native_8\ => M3_GPR_Write_DFF_n_5,
      \Using_FPGA.Native_9\ => PREFETCH_BUFFER_I1_n_46,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => Op2_Conflict_Stall_n_0,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => Op2_Conflict_Stall_n_1,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall
    );
Op3_Conflict_Stall: entity work.\microblaze_microblaze_0_0_decode_conflict_ff__parameterized3\
     port map (
      A0_out => A0_out,
      A1_out => A1_out,
      A2_out => A2_out,
      A3_out => A3_out,
      A4_out => A4_out,
      OF_Use_Op_B => OF_Use_Op_B,
      Q(0) => \^q\(15),
      S => \OF_EX_Cmp/comparator_i1/S\,
      S_0 => \OF_M0_Cmp/comparator_i1/S\,
      S_1 => \OF_M1_Cmp/comparator_i1/S\,
      S_2 => \OF_M2_Cmp/comparator_i1/S\,
      S_3 => \OF_M3_Cmp/comparator_i1/S\,
      S_4 => \WB_Big_Carry.OF_WB_Use3/carry_or_i1/S\,
      \Using_FPGA.Native\ => PREFETCH_BUFFER_I1_n_143,
      \Using_FPGA.Native_0\ => PREFETCH_BUFFER_I1_n_144,
      \Using_FPGA.Native_1\ => PREFETCH_BUFFER_I1_n_145,
      \Using_FPGA.Native_10\ => PREFETCH_BUFFER_I1_n_154,
      \Using_FPGA.Native_11\ => PREFETCH_BUFFER_I1_n_155,
      \Using_FPGA.Native_2\ => PREFETCH_BUFFER_I1_n_146,
      \Using_FPGA.Native_3\ => PREFETCH_BUFFER_I1_n_147,
      \Using_FPGA.Native_4\ => PREFETCH_BUFFER_I1_n_148,
      \Using_FPGA.Native_5\ => PREFETCH_BUFFER_I1_n_149,
      \Using_FPGA.Native_6\ => PREFETCH_BUFFER_I1_n_150,
      \Using_FPGA.Native_7\ => PREFETCH_BUFFER_I1_n_151,
      \Using_FPGA.Native_8\ => PREFETCH_BUFFER_I1_n_152,
      \Using_FPGA.Native_9\ => PREFETCH_BUFFER_I1_n_153,
      ex_complete_in_later_stage => ex_complete_in_later_stage,
      m0_complete_in_later_stage => m0_complete_in_later_stage,
      m0_complete_in_later_stage_reg => Op3_Conflict_Stall_n_0,
      m1_m2_complete_in_later_stage => m1_m2_complete_in_later_stage,
      m2_complete_in_later_stage => m2_complete_in_later_stage,
      m2_complete_in_later_stage_reg => Op3_Conflict_Stall_n_1,
      m3_complete_in_later_stage => m3_complete_in_later_stage,
      m3_div_stall => m3_div_stall
    );
PC_MODULE_I1: entity work.microblaze_microblaze_0_0_PC_Module_ff
     port map (
      Clk => Clk,
      D(31 downto 0) => \^d\(44 downto 13),
      DI(0) => \^bp0_raw_valid_reg_0\,
      E(0) => \^using_fpga.native\,
      \EX_Op1_reg[29]\ => \EX_Op1[0]_i_3_n_0\,
      \EX_Op1_reg[30]\(0) => \of_MSR_i_reg[22]_0\(0),
      \EX_Op1_reg[30]_0\ => \Using_FPGA.Native_i_2__5_n_0\,
      Prefetch_Buffer_Full => Prefetch_Buffer_Full,
      Q(31 downto 0) => \m3_PC_i_reg[0]\(31 downto 0),
      S(3 downto 0) => S(3 downto 0),
      \Using_FPGA.Native\(30 downto 0) => \Using_FPGA.Native_17\(30 downto 0),
      WB_Exception_Return_Addr0(29 downto 0) => WB_Exception_Return_Addr0(29 downto 0),
      \WB_Exception_Return_Addr_reg[0]\(0) => m3_exception_raw_kind(28),
      bp0_jump => bp0_jump,
      \bp1_PC_i_reg[0]_0\ => \^bp1_raw_valid_reg_1\,
      \bp1_PC_i_reg[0]_1\(31) => bp0_branch_target(0),
      \bp1_PC_i_reg[0]_1\(30) => bp0_branch_target(1),
      \bp1_PC_i_reg[0]_1\(29) => bp0_branch_target(2),
      \bp1_PC_i_reg[0]_1\(28) => bp0_branch_target(3),
      \bp1_PC_i_reg[0]_1\(27) => bp0_branch_target(4),
      \bp1_PC_i_reg[0]_1\(26) => bp0_branch_target(5),
      \bp1_PC_i_reg[0]_1\(25) => bp0_branch_target(6),
      \bp1_PC_i_reg[0]_1\(24) => bp0_branch_target(7),
      \bp1_PC_i_reg[0]_1\(23) => bp0_branch_target(8),
      \bp1_PC_i_reg[0]_1\(22) => bp0_branch_target(9),
      \bp1_PC_i_reg[0]_1\(21) => bp0_branch_target(10),
      \bp1_PC_i_reg[0]_1\(20) => bp0_branch_target(11),
      \bp1_PC_i_reg[0]_1\(19) => bp0_branch_target(12),
      \bp1_PC_i_reg[0]_1\(18) => bp0_branch_target(13),
      \bp1_PC_i_reg[0]_1\(17) => bp0_branch_target(14),
      \bp1_PC_i_reg[0]_1\(16) => bp0_branch_target(15),
      \bp1_PC_i_reg[0]_1\(15) => bp0_branch_target(16),
      \bp1_PC_i_reg[0]_1\(14) => bp0_branch_target(17),
      \bp1_PC_i_reg[0]_1\(13) => bp0_branch_target(18),
      \bp1_PC_i_reg[0]_1\(12) => bp0_branch_target(19),
      \bp1_PC_i_reg[0]_1\(11) => bp0_branch_target(20),
      \bp1_PC_i_reg[0]_1\(10) => bp0_branch_target(21),
      \bp1_PC_i_reg[0]_1\(9) => bp0_branch_target(22),
      \bp1_PC_i_reg[0]_1\(8) => bp0_branch_target(23),
      \bp1_PC_i_reg[0]_1\(7) => bp0_branch_target(24),
      \bp1_PC_i_reg[0]_1\(6) => bp0_branch_target(25),
      \bp1_PC_i_reg[0]_1\(5) => bp0_branch_target(26),
      \bp1_PC_i_reg[0]_1\(4) => bp0_branch_target(27),
      \bp1_PC_i_reg[0]_1\(3) => bp0_branch_target(28),
      \bp1_PC_i_reg[0]_1\(2) => bp0_branch_target(29),
      \bp1_PC_i_reg[0]_1\(1) => bp0_branch_target(30),
      \bp1_PC_i_reg[0]_1\(0) => bp0_branch_target(31),
      \cur_data_i_reg[1]\ => PC_MODULE_I1_n_96,
      \cur_data_i_reg[2]\ => PC_MODULE_I1_n_95,
      \cur_data_i_reg[30]\ => \Using_IF4_Push_FPGA.Push_PipeRun_n_1\,
      \cur_data_i_reg[31]\(31 downto 0) => \^cur_data_i_reg[31]\(31 downto 0),
      \cur_data_i_reg[31]_0\(31 downto 0) => \cur_data_i_reg[31]_1\(31 downto 0),
      \ex_PC_i_reg[0]_0\ => of_PipeRun_for_ce,
      ex_set_msr_ie_instr => ex_set_msr_ie_instr,
      if4_pre_buffer_addr(0) => if4_pre_buffer_addr(1),
      if4_push_instr_fetch => if4_push_instr_fetch,
      if4_sel_input(0) => if4_sel_input(3),
      in0 => m0_PipeRun_for_ce,
      \m0_PC_i_reg[0]_0\(0) => ex_PipeRun_for_ce,
      \m2_PC_i_reg[0]_0\(0) => m1_PipeRun_for_ce,
      \m3_PC_i_reg[0]_0\(0) => m2_PipeRun_for_ce,
      \m3_PC_i_reg[11]_0\(3 downto 0) => \m3_PC_i_reg[11]\(3 downto 0),
      \m3_PC_i_reg[15]_0\(3 downto 0) => \m3_PC_i_reg[15]\(3 downto 0),
      \m3_PC_i_reg[19]_0\(3 downto 0) => \m3_PC_i_reg[19]\(3 downto 0),
      \m3_PC_i_reg[1]_0\(1 downto 0) => \m3_PC_i_reg[1]\(1 downto 0),
      \m3_PC_i_reg[23]_0\(3 downto 0) => \m3_PC_i_reg[23]\(3 downto 0),
      \m3_PC_i_reg[29]_0\(0) => DI(0),
      \m3_PC_i_reg[3]_0\(3 downto 0) => \m3_PC_i_reg[3]\(3 downto 0),
      \m3_PC_i_reg[7]_0\(3 downto 0) => \m3_PC_i_reg[7]\(3 downto 0),
      m3_exception_from_m2 => m3_exception_from_m2,
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      sync_reset => reset_bool_for_rst
    );
PREFETCH_BUFFER_I1: entity work.microblaze_microblaze_0_0_PreFetch_Buffer_ff
     port map (
      Clear_Buffer => Clear_Buffer,
      Clk => Clk,
      D(1) => PREFETCH_BUFFER_I1_n_82,
      D(0) => PREFETCH_BUFFER_I1_n_83,
      EX_Bit_Extract0 => EX_Bit_Extract0,
      \EX_Branch_CMP_Op1[29]_i_3\ => \EX_Branch_CMP_Op1[29]_i_3\,
      \EX_Branch_CMP_Op1[30]_i_3\ => \EX_Branch_CMP_Op1[30]_i_3\,
      \EX_Branch_CMP_Op1[30]_i_3_0\ => \^m3_raw_valid_reg_0\,
      \EX_Branch_CMP_Op1[30]_i_3_1\ => m1_raw_valid_reg_n_0,
      \EX_Branch_CMP_Op1[30]_i_7\ => \^m2_raw_valid_reg_0\,
      \EX_Branch_CMP_Op1[30]_i_8\ => m0_raw_valid_reg_n_0,
      \EX_Branch_CMP_Op1_reg[29]\ => \EX_Branch_CMP_Op1_reg[29]\,
      \EX_Branch_CMP_Op1_reg[29]_0\ => \EX_Branch_CMP_Op1_reg[29]_0\,
      \EX_Branch_CMP_Op1_reg[30]\ => \EX_Branch_CMP_Op1_reg[30]\,
      \EX_Branch_CMP_Op1_reg[30]_0\ => \EX_Op1[30]_i_8_n_0\,
      \EX_Branch_CMP_Op1_reg[30]_1\ => \m0_Ex_Result_i[30]_i_2_n_0\,
      \EX_Branch_CMP_Op1_reg[30]_2\ => \EX_Branch_CMP_Op1_reg[30]_0\,
      \EX_Branch_CMP_Op1_reg[30]_3\ => \EX_Branch_CMP_Op1_reg[30]_1\,
      EX_CLZ_Instr_reg => EX_CLZ_Instr_reg_0,
      EX_CMP_Op12_out => EX_CMP_Op12_out,
      \EX_Op1_reg[0]\(29 downto 1) => \^cur_data_i_reg[31]\(31 downto 3),
      \EX_Op1_reg[0]\(0) => \^cur_data_i_reg[31]\(0),
      \EX_Op1_reg[0]_0\ => \EX_Op1[0]_i_3_n_0\,
      \EX_Op1_reg[0]_1\(28 downto 0) => \EX_Op1_reg[0]\(28 downto 0),
      \EX_Op1_reg[23]\ => \Using_FPGA.Native_i_2__5_n_0\,
      \EX_Op1_reg[25]\(0) => \of_MSR_i_reg[22]_0\(2),
      \EX_Op1_reg[29]\ => PC_MODULE_I1_n_95,
      \EX_Op1_reg[29]_0\ => \EX_Op1_reg[29]\,
      \EX_Op1_reg[29]_1\ => \EX_Op1_reg[29]_0\,
      \EX_Op1_reg[29]_2\ => \EX_Op1[29]_i_7_n_0\,
      \EX_Op1_reg[29]_3\(0) => \bp0_branch_target_reg[0]_1\(0),
      \EX_Op1_reg[29]_4\ => \^ex_sel_alu_res\,
      \EX_Op1_reg[30]\ => \EX_Op1[30]_i_7_n_0\,
      \EX_Op1_reg[30]_0\ => PC_MODULE_I1_n_96,
      \EX_Op1_reg[30]_1\ => \EX_Op1_reg[30]_0\,
      \EX_Op1_reg[31]\ => \EX_Op1_reg[31]_0\,
      \EX_Op1_reg[31]_0\ => \EX_Op1_reg[31]_1\,
      \EX_Op2[0]_i_12\ => WB_GPR_Write_DFF_n_2,
      \EX_Op2[0]_i_4\(15 downto 0) => \EX_Op2[0]_i_4\(15 downto 0),
      \EX_Op2[0]_i_6\ => \EX_Op2[0]_i_6\,
      \EX_Op2[0]_i_7\ => \EX_Op2[0]_i_7\,
      \EX_Op2[16]_i_2\(6 downto 0) => \EX_Op2[16]_i_2\(6 downto 0),
      \EX_Op2[25]_i_2\ => \EX_Op2[25]_i_2\,
      \EX_Op2_reg[0]\ => \EX_Op2_reg[0]\,
      \EX_Op2_reg[0]_0\ => \EX_Op2_reg[0]_0\,
      \EX_Op2_reg[0]_1\(0) => \^ex_enable_sext_shift_reg_2\(16),
      \EX_Op2_reg[10]\ => \EX_Op2_reg[10]\,
      \EX_Op2_reg[10]_0\ => \EX_Op2_reg[10]_0\,
      \EX_Op2_reg[10]_1\ => \EX_Op2[10]_i_5_n_0\,
      \EX_Op2_reg[11]\ => \EX_Op2_reg[11]\,
      \EX_Op2_reg[11]_0\ => \EX_Op2_reg[11]_0\,
      \EX_Op2_reg[11]_1\ => \EX_Op2[11]_i_5_n_0\,
      \EX_Op2_reg[12]\ => \EX_Op2_reg[12]\,
      \EX_Op2_reg[12]_0\ => \EX_Op2_reg[12]_0\,
      \EX_Op2_reg[12]_1\ => \EX_Op2[12]_i_5_n_0\,
      \EX_Op2_reg[13]\ => \EX_Op2_reg[13]\,
      \EX_Op2_reg[13]_0\ => \EX_Op2_reg[13]_0\,
      \EX_Op2_reg[13]_1\ => \EX_Op2[13]_i_5_n_0\,
      \EX_Op2_reg[14]\ => \EX_Op2_reg[14]\,
      \EX_Op2_reg[14]_0\ => \EX_Op2_reg[14]_0\,
      \EX_Op2_reg[14]_1\ => \EX_Op2[14]_i_5_n_0\,
      \EX_Op2_reg[15]\ => \EX_Op2_reg[15]\,
      \EX_Op2_reg[15]_0\ => \EX_Op2_reg[15]_0\,
      \EX_Op2_reg[15]_1\ => \EX_Op2[15]_i_5_n_0\,
      \EX_Op2_reg[16]\ => \EX_Op2_reg[16]\,
      \EX_Op2_reg[17]\ => \EX_Op2_reg[17]_0\,
      \EX_Op2_reg[18]\ => \EX_Op2_reg[18]\,
      \EX_Op2_reg[1]\ => \EX_Op2_reg[1]\,
      \EX_Op2_reg[1]_0\ => \EX_Op2_reg[1]_0\,
      \EX_Op2_reg[1]_1\ => \EX_Op2[1]_i_5_n_0\,
      \EX_Op2_reg[20]\ => \EX_Op2_reg[20]\,
      \EX_Op2_reg[21]\ => \EX_Op2_reg[21]\,
      \EX_Op2_reg[25]\ => \EX_Op2_reg[25]\,
      \EX_Op2_reg[29]\ => \EX_Op2_reg[29]_0\,
      \EX_Op2_reg[29]_0\ => \EX_Op2_reg[29]_1\,
      \EX_Op2_reg[29]_1\ => \^ex_sel_alu_reg_0\,
      \EX_Op2_reg[2]\ => \EX_Op2_reg[2]\,
      \EX_Op2_reg[2]_0\ => \EX_Op2_reg[2]_0\,
      \EX_Op2_reg[2]_1\ => \EX_Op2[2]_i_5_n_0\,
      \EX_Op2_reg[30]\ => \EX_Op2[30]_i_4_n_0\,
      \EX_Op2_reg[30]_0\ => \EX_Op2_reg[30]\,
      \EX_Op2_reg[31]\ => \EX_Op2_reg[31]_1\,
      \EX_Op2_reg[31]_0\ => \EX_Op2_reg[31]_2\,
      \EX_Op2_reg[31]_1\ => \EX_Op2_reg[31]_3\,
      \EX_Op2_reg[31]_2\ => \EX_Op2[31]_i_6_n_0\,
      \EX_Op2_reg[31]_3\ => \EX_Op2[31]_i_7_n_0\,
      \EX_Op2_reg[31]_4\ => \EX_Op2_reg[31]_4\,
      \EX_Op2_reg[3]\ => \EX_Op2_reg[3]\,
      \EX_Op2_reg[3]_0\ => \EX_Op2_reg[3]_0\,
      \EX_Op2_reg[3]_1\ => \EX_Op2[3]_i_5_n_0\,
      \EX_Op2_reg[4]\ => \EX_Op2_reg[4]\,
      \EX_Op2_reg[4]_0\ => \EX_Op2_reg[4]_0\,
      \EX_Op2_reg[4]_1\ => \EX_Op2[4]_i_5_n_0\,
      \EX_Op2_reg[5]\ => \EX_Op2_reg[5]\,
      \EX_Op2_reg[5]_0\ => \EX_Op2_reg[5]_0\,
      \EX_Op2_reg[5]_1\ => \EX_Op2[5]_i_5_n_0\,
      \EX_Op2_reg[6]\ => \EX_Op2_reg[6]\,
      \EX_Op2_reg[6]_0\ => \EX_Op2_reg[6]_0\,
      \EX_Op2_reg[6]_1\ => \EX_Op2[6]_i_5_n_0\,
      \EX_Op2_reg[7]\ => \EX_Op2_reg[7]\,
      \EX_Op2_reg[7]_0\ => \EX_Op2_reg[7]_0\,
      \EX_Op2_reg[7]_1\ => \EX_Op2[7]_i_5_n_0\,
      \EX_Op2_reg[8]\ => \EX_Op2_reg[8]\,
      \EX_Op2_reg[8]_0\ => \EX_Op2_reg[8]_0\,
      \EX_Op2_reg[8]_1\ => \EX_Op2[8]_i_5_n_0\,
      \EX_Op2_reg[9]\ => \EX_Op2_reg[9]\,
      \EX_Op2_reg[9]_0\ => \EX_Op2_reg[9]_0\,
      \EX_Op2_reg[9]_1\ => \EX_Op2[9]_i_5_n_0\,
      \EX_Op3[0]_i_12\(4) => \wb_gpr_write_addr_reg_n_0_[0]\,
      \EX_Op3[0]_i_12\(3 downto 1) => \^wb_gpr_write_addr_reg[1]_0\(2 downto 0),
      \EX_Op3[0]_i_12\(0) => \wb_gpr_write_addr_reg_n_0_[4]\,
      \EX_Op3[0]_i_15\(4) => m0_gpr_write_addr(0),
      \EX_Op3[0]_i_15\(3) => m0_gpr_write_addr(1),
      \EX_Op3[0]_i_15\(2) => m0_gpr_write_addr(2),
      \EX_Op3[0]_i_15\(1) => m0_gpr_write_addr(3),
      \EX_Op3[0]_i_15\(0) => m0_gpr_write_addr(4),
      \EX_Op3[0]_i_16\(4) => m1_gpr_write_addr(0),
      \EX_Op3[0]_i_16\(3) => m1_gpr_write_addr(1),
      \EX_Op3[0]_i_16\(2) => m1_gpr_write_addr(2),
      \EX_Op3[0]_i_16\(1) => m1_gpr_write_addr(3),
      \EX_Op3[0]_i_16\(0) => m1_gpr_write_addr(4),
      \EX_Op3[0]_i_17\(4) => m2_gpr_write_addr(0),
      \EX_Op3[0]_i_17\(3) => m2_gpr_write_addr(1),
      \EX_Op3[0]_i_17\(2) => m2_gpr_write_addr(2),
      \EX_Op3[0]_i_17\(1) => m2_gpr_write_addr(3),
      \EX_Op3[0]_i_17\(0) => m2_gpr_write_addr(4),
      \EX_Op3[0]_i_18\(4) => m3_gpr_write_addr(0),
      \EX_Op3[0]_i_18\(3) => m3_gpr_write_addr(1),
      \EX_Op3[0]_i_18\(2) => m3_gpr_write_addr(2),
      \EX_Op3[0]_i_18\(1) => m3_gpr_write_addr(3),
      \EX_Op3[0]_i_18\(0) => m3_gpr_write_addr(4),
      \EX_Op3[0]_i_4\ => EX_GPR_Write_DFF_n_2,
      \EX_Op3[0]_i_6\ => \EX_Op3[0]_i_6\,
      \EX_Op3[0]_i_6_0\ => WB_GPR_Write_DFF_n_3,
      \EX_Op3[0]_i_7\ => \EX_Op3[0]_i_7\,
      \EX_Op3[0]_i_7_0\ => M3_GPR_Write_DFF_n_2,
      \EX_Op3[0]_i_7_1\ => M2_GPR_Write_DFF_n_2,
      \EX_Op3[0]_i_7_2\ => M1_GPR_Write_DFF_n_2,
      \EX_Op3[0]_i_7_3\ => M0_GPR_Write_DFF_n_2,
      \EX_Op3[29]_i_3\ => ex_raw_valid_reg_n_0,
      \EX_Op3_reg[30]\ => \EX_Op3_reg[30]\,
      \EX_Op3_reg[31]\ => \EX_Op3_reg[31]\,
      EX_Pattern_Cmp_Sel7_out => EX_Pattern_Cmp_Sel7_out,
      EX_Unsigned_Op11_out => EX_Unsigned_Op11_out,
      EX_Use_Carry10_out => EX_Use_Carry10_out,
      GPR_Op1(2 downto 0) => GPR_Op1(2 downto 0),
      GPR_Op2(0 to 31) => GPR_Op2(0 to 31),
      GPR_Op3(1 downto 0) => GPR_Op3(1 downto 0),
      M1_Sel_Mul_Res_reg => M1_Sel_Mul_Res_reg_0,
      M1_Sel_Mul_Res_reg_0 => M1_Sel_Mul_Res_reg_1,
      OF_Use_Op_B => OF_Use_Op_B,
      \Performance_Debug_Control.ex_brki_hit_reg\(0) => \Performance_Debug_Control.ex_brki_hit_reg\(0),
      \Performance_Debug_Control.ex_brki_hit_reg_0\ => M0_Exception_From_DFF_n_8,
      Prefetch_Buffer_Full => Prefetch_Buffer_Full,
      Q(31) => of_instr(0),
      Q(30) => of_instr(1),
      Q(29) => of_instr(2),
      Q(28) => of_instr(3),
      Q(27) => of_instr(4),
      Q(26) => of_instr(5),
      Q(25 downto 0) => \^q\(25 downto 0),
      S => \WB_Big_Carry.OF_WB_Use3/carry_or_i1/S\,
      S_0 => \OF_EX_Cmp/comparator_i1/S_17\,
      S_1 => \OF_M0_Cmp/comparator_i1/S_16\,
      S_10 => \OF_EX_Cmp/comparator_i1/S\,
      S_11 => \OF_M0_Cmp/comparator_i1/S\,
      S_12 => \OF_M1_Cmp/comparator_i1/S\,
      S_13 => \OF_M2_Cmp/comparator_i1/S\,
      S_14 => \OF_M3_Cmp/comparator_i1/S\,
      S_2 => \OF_M1_Cmp/comparator_i1/S_15\,
      S_3 => \OF_M2_Cmp/comparator_i1/S_14\,
      S_4 => \OF_M3_Cmp/comparator_i1/S_13\,
      S_5 => \OF_EX_Cmp/comparator_i1/S_12\,
      S_6 => \OF_M0_Cmp/comparator_i1/S_11\,
      S_7 => \OF_M1_Cmp/comparator_i1/S_10\,
      S_8 => \OF_M2_Cmp/comparator_i1/S_9\,
      S_9 => \OF_M3_Cmp/comparator_i1/S_8\,
      \Serial_Dbg_Intf.control_reg_reg[8]\ => \Serial_Dbg_Intf.control_reg_reg[8]\,
      \Use_Async_Reset.sync_reset_reg\ => PREFETCH_BUFFER_I1_n_101,
      \Using_FPGA.Native\(0) => \Using_FPGA.Native_0\(0),
      \Using_FPGA.Native_0\ => of_op3_sel(2),
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_1\,
      \Using_FPGA.Native_2\ => PREFETCH_BUFFER_I1_n_80,
      \Using_FPGA.Native_3\ => PREFETCH_BUFFER_I1_n_112,
      \Using_FPGA.Native_4\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_5\ => \^m3_sel_div_res\,
      \Using_FPGA.Native_6\ => \Using_OF_FPGA.PR_OF_And9_n_1\,
      \Using_FPGA.Native_7\ => \^if3_raw_valid_reg_0\,
      \Using_FPGA.Native_8\ => \^if4_raw_valid_reg_0\,
      \Using_FPGA.Native_9\(1 downto 0) => \^ex_logic_op_reg[0]_0\(1 downto 0),
      \WB_Exception_Return_Addr_reg[16]\ => \WB_Exception_Return_Addr_reg[16]\,
      \WB_Exception_Return_Addr_reg[17]\ => \WB_Exception_Return_Addr_reg[17]\,
      \WB_Exception_Return_Addr_reg[18]\ => \WB_Exception_Return_Addr_reg[18]\,
      \WB_Exception_Return_Addr_reg[20]\ => \WB_Exception_Return_Addr_reg[20]\,
      \WB_Exception_Return_Addr_reg[21]\ => \WB_Exception_Return_Addr_reg[21]\,
      \WB_Exception_Return_Addr_reg[25]\ => \WB_Exception_Return_Addr_reg[25]\,
      \cur_data_i_reg[0]\ => of_op2_sel(1),
      \cur_data_i_reg[0]_0\ => of_PipeRun_for_ce,
      \cur_data_i_reg[10]\ => PREFETCH_BUFFER_I1_n_44,
      \cur_data_i_reg[10]_0\ => \Using_IF4_Push_FPGA.Push_PipeRun_n_1\,
      \cur_data_i_reg[12]\ => \cur_data_i_reg[12]\,
      \cur_data_i_reg[1]\(0) => of_predecode(9),
      \cur_data_i_reg[1]_0\ => of_op2_sel(2),
      \cur_data_i_reg[26]\ => \cur_data_i_reg[26]\,
      \cur_data_i_reg[26]_0\ => PREFETCH_BUFFER_I1_n_46,
      \cur_data_i_reg[26]_1\ => PREFETCH_BUFFER_I1_n_47,
      \cur_data_i_reg[26]_2\ => PREFETCH_BUFFER_I1_n_48,
      \cur_data_i_reg[26]_3\ => PREFETCH_BUFFER_I1_n_49,
      \cur_data_i_reg[26]_4\ => PREFETCH_BUFFER_I1_n_50,
      \cur_data_i_reg[26]_5\ => of_op2_sel(0),
      \cur_data_i_reg[26]_6\ => PREFETCH_BUFFER_I1_n_148,
      \cur_data_i_reg[26]_7\ => PREFETCH_BUFFER_I1_n_150,
      \cur_data_i_reg[26]_8\ => PREFETCH_BUFFER_I1_n_152,
      \cur_data_i_reg[26]_9\ => PREFETCH_BUFFER_I1_n_154,
      \cur_data_i_reg[27]\ => PREFETCH_BUFFER_I1_n_37,
      \cur_data_i_reg[28]\ => PREFETCH_BUFFER_I1_n_42,
      \cur_data_i_reg[28]_0\ => PREFETCH_BUFFER_I1_n_45,
      \cur_data_i_reg[28]_1\ => PREFETCH_BUFFER_I1_n_70,
      \cur_data_i_reg[28]_2\ => PREFETCH_BUFFER_I1_n_139,
      \cur_data_i_reg[28]_3\ => PREFETCH_BUFFER_I1_n_140,
      \cur_data_i_reg[28]_4\ => PREFETCH_BUFFER_I1_n_141,
      \cur_data_i_reg[28]_5\ => PREFETCH_BUFFER_I1_n_142,
      \cur_data_i_reg[30]\ => PREFETCH_BUFFER_I1_n_128,
      \cur_data_i_reg[31]\ => PREFETCH_BUFFER_I1_n_76,
      \cur_data_i_reg[31]_0\ => PREFETCH_BUFFER_I1_n_103,
      \cur_data_i_reg[31]_1\ => PREFETCH_BUFFER_I1_n_149,
      \cur_data_i_reg[31]_2\ => PREFETCH_BUFFER_I1_n_151,
      \cur_data_i_reg[31]_3\ => PREFETCH_BUFFER_I1_n_153,
      \cur_data_i_reg[31]_4\ => PREFETCH_BUFFER_I1_n_155,
      \cur_data_i_reg[31]_5\(31 downto 0) => \cur_data_i_reg[31]_0\(31 downto 0),
      \cur_data_i_reg[3]\ => PREFETCH_BUFFER_I1_n_134,
      \cur_data_i_reg[3]_0\ => \cur_data_i_reg[3]\,
      \cur_data_i_reg[4]\ => \cur_data_i_reg[4]\,
      \cur_data_i_reg[5]\(1) => PREFETCH_BUFFER_I1_n_91,
      \cur_data_i_reg[5]\(0) => PREFETCH_BUFFER_I1_n_92,
      \cur_data_i_reg[5]_0\ => PREFETCH_BUFFER_I1_n_94,
      \cur_data_i_reg[5]_1\ => \cur_data_i_reg[5]\,
      \cur_data_i_reg[6]\ => \cur_data_i_reg[6]\(0),
      \cur_data_i_reg[6]_0\ => \cur_data_i_reg[6]\(1),
      \cur_data_i_reg[7]\ => PREFETCH_BUFFER_I1_n_79,
      \cur_data_i_reg[7]_0\ => \cur_data_i_reg[7]\,
      \cur_data_i_reg[8]\ => PREFETCH_BUFFER_I1_n_129,
      \cur_data_i_reg[8]_0\ => \cur_data_i_reg[8]\,
      \cur_data_i_reg[9]\ => \cur_data_i_reg[9]\,
      ex_MSR_clear_decode => ex_MSR_clear_decode,
      ex_MSR_set_decode => ex_MSR_set_decode,
      ex_alu_result(1 downto 0) => ex_alu_result(1 downto 0),
      ex_atomic_instruction_pair0 => ex_atomic_instruction_pair0,
      ex_branch_with_delayslot => ex_branch_with_delayslot,
      ex_branch_with_delayslot0 => ex_branch_with_delayslot0,
      ex_databus_access_i_reg => M0_Exception_From_DFF_n_4,
      ex_databus_exclusive_i0 => ex_databus_exclusive_i0,
      ex_databus_read_i0 => ex_databus_read_i0,
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_addr(2) => ex_gpr_write_addr(2),
      ex_gpr_write_addr(1) => ex_gpr_write_addr(3),
      ex_gpr_write_addr(0) => ex_gpr_write_addr(4),
      \ex_gpr_write_addr_reg[2]\ => PREFETCH_BUFFER_I1_n_143,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_jump_nodelay => ex_jump_nodelay,
      ex_jump_nodelay0 => ex_jump_nodelay0,
      ex_jump_nodelay_reg => PREFETCH_BUFFER_I1_n_38,
      ex_jump_nodelay_reg_0 => PREFETCH_BUFFER_I1_n_40,
      ex_jump_nodelay_reg_1 => PREFETCH_BUFFER_I1_n_43,
      ex_load_alu_carry2_out => ex_load_alu_carry2_out,
      ex_load_shift_carry0 => ex_load_shift_carry0,
      ex_mbar_is_sleep0 => ex_mbar_is_sleep0,
      ex_move_to_MSR_instr35_out => ex_move_to_MSR_instr35_out,
      ex_op1_cmp_eq => ex_op1_cmp_eq,
      ex_op1_cmp_eq1 => ex_op1_cmp_eq1,
      ex_op1_cmp_eq_n7_out => ex_op1_cmp_eq_n7_out,
      ex_set_bip => ex_set_bip,
      ex_set_msr_ee_instr => ex_set_msr_ee_instr,
      force12_out => force12_out,
      force_Val10_out => force_Val10_out,
      if0_pause => \^if0_pause\,
      if4_data(0 to 31) => if4_data(0 to 31),
      if4_pre_buffer_addr(0) => if4_pre_buffer_addr(1),
      if4_push_instr_fetch => if4_push_instr_fetch,
      if4_sel_input(1) => if4_sel_input(3),
      if4_sel_input(0) => if4_sel_input(4),
      \in\(0) => \in\(0),
      in0 => of_gpr_write,
      m0_gpr_write => m0_gpr_write,
      \m0_gpr_write_addr_reg[2]\ => PREFETCH_BUFFER_I1_n_130,
      \m0_gpr_write_addr_reg[2]_0\ => PREFETCH_BUFFER_I1_n_135,
      \m0_gpr_write_addr_reg[2]_1\ => PREFETCH_BUFFER_I1_n_144,
      m0_is_div_instr_i => m0_is_div_instr_i,
      \m1_M0_Result_i_reg[0]\ => \m1_M0_Result_i_reg[0]\,
      \m1_M0_Result_i_reg[10]\ => \m1_M0_Result_i_reg[10]\,
      \m1_M0_Result_i_reg[11]\ => \m1_M0_Result_i_reg[11]\,
      \m1_M0_Result_i_reg[12]\ => \m1_M0_Result_i_reg[12]\,
      \m1_M0_Result_i_reg[13]\ => \m1_M0_Result_i_reg[13]\,
      \m1_M0_Result_i_reg[14]\ => \m1_M0_Result_i_reg[14]\,
      \m1_M0_Result_i_reg[15]\ => \m1_M0_Result_i_reg[15]\,
      \m1_M0_Result_i_reg[1]\ => \m1_M0_Result_i_reg[1]\,
      \m1_M0_Result_i_reg[2]\ => \m1_M0_Result_i_reg[2]\,
      \m1_M0_Result_i_reg[3]\ => \m1_M0_Result_i_reg[3]\,
      \m1_M0_Result_i_reg[4]\ => \m1_M0_Result_i_reg[4]\,
      \m1_M0_Result_i_reg[5]\ => \m1_M0_Result_i_reg[5]\,
      \m1_M0_Result_i_reg[6]\ => \m1_M0_Result_i_reg[6]\,
      \m1_M0_Result_i_reg[7]\ => \m1_M0_Result_i_reg[7]\,
      \m1_M0_Result_i_reg[8]\ => \m1_M0_Result_i_reg[8]\,
      \m1_M0_Result_i_reg[9]\ => \m1_M0_Result_i_reg[9]\,
      m1_gpr_write => m1_gpr_write,
      \m1_gpr_write_addr_reg[2]\ => PREFETCH_BUFFER_I1_n_131,
      \m1_gpr_write_addr_reg[2]_0\ => PREFETCH_BUFFER_I1_n_136,
      \m1_gpr_write_addr_reg[2]_1\ => PREFETCH_BUFFER_I1_n_145,
      m1_is_div_instr_i => m1_is_div_instr_i,
      \m2_M1_Result_i_reg[29]\(2 downto 0) => \m2_M1_Result_i_reg[29]\(2 downto 0),
      m2_gpr_write => m2_gpr_write,
      \m2_gpr_write_addr_reg[2]\ => PREFETCH_BUFFER_I1_n_132,
      \m2_gpr_write_addr_reg[2]_0\ => PREFETCH_BUFFER_I1_n_137,
      \m2_gpr_write_addr_reg[2]_1\ => PREFETCH_BUFFER_I1_n_146,
      m2_is_div_instr => \^m2_is_div_instr\,
      m2_m1_sel_res_reg(0) => m2_m1_sel_res_reg(0),
      m2_m1_sel_res_reg_0(0) => m2_m1_sel_res_reg_0(0),
      m3_gpr_write => m3_gpr_write,
      \m3_gpr_write_addr_reg[2]\ => PREFETCH_BUFFER_I1_n_133,
      \m3_gpr_write_addr_reg[2]_0\ => PREFETCH_BUFFER_I1_n_138,
      \m3_gpr_write_addr_reg[2]_1\ => PREFETCH_BUFFER_I1_n_147,
      \m3_gpr_write_addr_reg[3]\ => \m3_gpr_write_addr_reg[3]_0\,
      m3_is_div_instr_i_reg => PREFETCH_BUFFER_I1_n_99,
      of_byte_access => of_byte_access,
      of_doublet_access => of_doublet_access,
      of_ex_complete_in_later_stage => of_ex_complete_in_later_stage,
      of_gpr_write_dbg => of_gpr_write_dbg,
      of_is_bsifi => of_is_bsifi,
      of_is_div_instr => of_is_div_instr,
      of_m0_complete_in_later_stage => of_m0_complete_in_later_stage,
      of_m1_complete_in_later_stage => of_m1_complete_in_later_stage,
      of_msr(0) => of_msr(28),
      of_op1_sel_spr_pc => of_op1_sel_spr_pc,
      of_op3_sel(0) => of_op3_sel(0),
      of_raw_valid => of_raw_valid,
      of_read_imm_reg => of_read_imm_reg,
      p_104_in => p_104_in,
      sync_reset => reset_bool_for_rst,
      use_Reg_Neg_DI1_out => use_Reg_Neg_DI1_out,
      use_Reg_Neg_S3_out => use_Reg_Neg_S3_out,
      wb_fwd(8 downto 0) => wb_fwd(8 downto 0),
      \wb_gpr_write_addr_reg[3]\ => of_op3_sel(1)
    );
Pause_Ack_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000200000000"
    )
        port map (
      I0 => Pause_Ack_i_2_n_0,
      I1 => \^if0_raw_valid\,
      I2 => \^s_0\,
      I3 => \^if4_raw_valid_reg_0\,
      I4 => \^if3_raw_valid_reg_0\,
      I5 => \^if0_pause\,
      O => Pause_Ack0
    );
Pause_Ack_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000000000005545"
    )
        port map (
      I0 => WB_PC_Valid_i_1_n_0,
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => m1_raw_valid_reg_n_0,
      I3 => m1_dead_valid_hold,
      I4 => A_N201_out,
      I5 => M3_Exception_From_DFF_n_1,
      O => Pause_Ack_i_2_n_0
    );
Pause_Ack_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause_Ack0,
      Q => Pause_Ack,
      R => reset_bool_for_rst
    );
\Performance_Debug_Control.dbg_brki_hit_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => wb_exception_raw_kind(31),
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => wb_exception_raw_kind(28),
      I3 => wb_exception_raw_kind(30),
      O => \^wb_halted\
    );
\Performance_Debug_Control.dbg_freeze_nohalt_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF4000"
    )
        port map (
      I0 => wb_exception_raw_kind(30),
      I1 => wb_exception_raw_kind(28),
      I2 => \^wb_exception_from_m3_reg_rep_0\,
      I3 => wb_exception_raw_kind(31),
      I4 => \Performance_Debug_Control.dbg_freeze_nohalt_reg\,
      O => \p_4_out__0\
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF4000"
    )
        port map (
      I0 => wb_exception_raw_kind(30),
      I1 => wb_exception_raw_kind(28),
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => wb_exception_raw_kind(31),
      I4 => reset_bool_for_rst,
      O => ex_dbg_pc_hit_i
    );
\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => dbg_clean_stop,
      I1 => normal_stop_i,
      O => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\
    );
\Q[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFF888"
    )
        port map (
      I0 => \^ex_start_div\,
      I1 => EX_Op1_Zero,
      I2 => \Q_reg[32]\,
      I3 => \^m3_sel_div_res\,
      I4 => reset_bool_for_rst,
      O => SR(0)
    );
\Q[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^ex_start_div\,
      I1 => E(0),
      O => div_busy_reg(0)
    );
Sleep_INST_0: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^sleep_decode\,
      I1 => Sleep_Out,
      O => Sleep
    );
Trace_WB_Jump_Taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_jump_taken,
      Q => trace_wb_jump_taken,
      R => reset_bool_for_rst
    );
\Use_HW_BS.Using_BitField.mem_mask0[0]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"B"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      O => EX_Bit_Insert_reg_1(18)
    );
\Use_HW_BS.Using_BitField.mem_mask0[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB4B444B4B"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(12)
    );
\Use_HW_BS.Using_BitField.mem_mask0[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF0FFF0F00E555E5"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(8),
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Using_FPGA.Native_21\(2),
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(11)
    );
\Use_HW_BS.Using_BitField.mem_mask0[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB4444444B"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(10)
    );
\Use_HW_BS.Using_BitField.mem_mask0[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB4444444B"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(9)
    );
\Use_HW_BS.Using_BitField.mem_mask0[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB444444B4"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(8)
    );
\Use_HW_BS.Using_BitField.mem_mask0[16]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0FDD"
    )
        port map (
      I0 => \^ex_bit_extract\,
      I1 => \Using_FPGA.Native_21\(10),
      I2 => \Using_FPGA.Native_21\(4),
      I3 => \^ex_bit_insert\,
      O => EX_Bit_Insert_reg_1(7)
    );
\Use_HW_BS.Using_BitField.mem_mask0[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"558FFF8F00F000F0"
    )
        port map (
      I0 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(8),
      I2 => \^ex_bit_extract\,
      I3 => \^ex_bit_insert\,
      I4 => \Using_FPGA.Native_21\(2),
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(6)
    );
\Use_HW_BS.Using_BitField.mem_mask0[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"44BB44444BBB4444"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I4 => \^ex_bit_extract_reg_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      O => EX_Bit_Insert_reg_1(5)
    );
\Use_HW_BS.Using_BitField.mem_mask0[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"4B4B4BBB44444444"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(4)
    );
\Use_HW_BS.Using_BitField.mem_mask0[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"44B4B4B44444B4B4"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \^ex_bit_extract_reg_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\,
      O => EX_Bit_Insert_reg_1(3)
    );
\Use_HW_BS.Using_BitField.mem_mask0[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3030303077473030"
    )
        port map (
      I0 => \Using_FPGA.Native_21\(2),
      I1 => \^ex_bit_insert\,
      I2 => \^ex_bit_extract\,
      I3 => \Using_FPGA.Native_21\(8),
      I4 => \^ex_bit_extract_reg_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      O => EX_Bit_Insert_reg_1(2)
    );
\Use_HW_BS.Using_BitField.mem_mask0[2]_i_3\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0F77"
    )
        port map (
      I0 => \^ex_bit_extract\,
      I1 => \Using_FPGA.Native_21\(10),
      I2 => \Using_FPGA.Native_21\(4),
      I3 => \^ex_bit_insert\,
      O => \^ex_bit_extract_reg_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"44444444444444B4"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \^ex_bit_extract_reg_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      O => EX_Bit_Insert_reg_1(1)
    );
\Use_HW_BS.Using_BitField.mem_mask0[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"444444444444B444"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \^ex_bit_extract_reg_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      O => EX_Bit_Insert_reg_1(0)
    );
\Use_HW_BS.Using_BitField.mem_mask0[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBB40FFFFFF40FF"
    )
        port map (
      I0 => \^ex_bit_extract_reg_0\,
      I1 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I2 => \Using_FPGA.Native_21\(8),
      I3 => \^ex_bit_extract\,
      I4 => \^ex_bit_insert\,
      I5 => \Using_FPGA.Native_21\(2),
      O => EX_Bit_Insert_reg_1(17)
    );
\Use_HW_BS.Using_BitField.mem_mask0[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"E2C0"
    )
        port map (
      I0 => \^ex_bit_extract\,
      I1 => \^ex_bit_insert\,
      I2 => \Using_FPGA.Native_21\(3),
      I3 => \Using_FPGA.Native_21\(9),
      O => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\
    );
\Use_HW_BS.Using_BitField.mem_mask0[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB44BB4BBB"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(16)
    );
\Use_HW_BS.Using_BitField.mem_mask0[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"B4BBB4BBB4BBBBBB"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \^ex_bit_extract_reg_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I5 => \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\,
      O => EX_Bit_Insert_reg_1(15)
    );
\Use_HW_BS.Using_BitField.mem_mask0[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB44B4BBBB"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(14)
    );
\Use_HW_BS.Using_BitField.mem_mask0[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"BBBBBBBB444B4B4B"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Use_HW_BS.Using_BitField.mem_mask0[4]_i_2_n_0\,
      I3 => \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\,
      I4 => \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\,
      I5 => \^ex_bit_extract_reg_0\,
      O => EX_Bit_Insert_reg_1(13)
    );
\Use_HW_BS.Using_BitField.mem_mask1[5]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0CE2"
    )
        port map (
      I0 => \^ex_bit_insert\,
      I1 => \^ex_bit_extract\,
      I2 => \Using_FPGA.Native_21\(6),
      I3 => \Using_FPGA.Native_21\(7),
      O => EX_Bit_Insert_reg_0
    );
\Use_HW_BS.mem_left_shift_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"54"
    )
        port map (
      I0 => \^ex_bit_extract\,
      I1 => ex_left_shift,
      I2 => \^ex_bit_insert\,
      O => \^ex_left_shift_i\
    );
\Use_HW_BS.mem_mux3[0]_i_10\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(30),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(1),
      O => \^ex_op1_reg[1]\
    );
\Use_HW_BS.mem_mux3[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[0]_i_5_n_0\,
      I1 => \Use_HW_BS.mem_mux3[0]_i_6_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[0]_i_7_n_0\,
      I5 => \Use_HW_BS.mem_mux3[0]_i_8_n_0\,
      O => \^ex_op2_reg[31]\
    );
\Use_HW_BS.mem_mux3[0]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(26),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(5),
      O => \Use_HW_BS.mem_mux3[0]_i_5_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_6\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(24),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(7),
      O => \Use_HW_BS.mem_mux3[0]_i_6_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(27),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(4),
      O => \Use_HW_BS.mem_mux3[0]_i_7_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_8\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(25),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(6),
      O => \Use_HW_BS.mem_mux3[0]_i_8_n_0\
    );
\Use_HW_BS.mem_mux3[0]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(28),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(3),
      O => \^ex_op1_reg[3]\
    );
\Use_HW_BS.mem_mux3[10]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[10]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[6]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(18)
    );
\Use_HW_BS.mem_mux3[10]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[8]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[9]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[7]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[10]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[10]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[10]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(14),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(17),
      O => \Use_HW_BS.mem_mux3[10]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[11]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[11]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[7]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(17)
    );
\Use_HW_BS.mem_mux3[11]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[9]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[11]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[8]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[10]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[11]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[11]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(13),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(18),
      O => \Use_HW_BS.mem_mux3[11]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[12]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[12]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[8]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(16)
    );
\Use_HW_BS.mem_mux3[12]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[10]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[11]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[9]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[12]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[12]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[12]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(12),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(19),
      O => \Use_HW_BS.mem_mux3[12]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[13]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[13]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[9]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(15)
    );
\Use_HW_BS.mem_mux3[13]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[11]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[12]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[10]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[13]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[13]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[13]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(11),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(20),
      O => \Use_HW_BS.mem_mux3[13]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[14]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[14]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[10]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(14)
    );
\Use_HW_BS.mem_mux3[14]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[12]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[14]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[11]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[13]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[14]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[14]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(10),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(21),
      O => \Use_HW_BS.mem_mux3[14]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[15]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[15]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[11]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(13)
    );
\Use_HW_BS.mem_mux3[15]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[13]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[15]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[12]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[14]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[15]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[15]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(9),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(22),
      O => \Use_HW_BS.mem_mux3[15]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[16]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[16]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[12]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(12)
    );
\Use_HW_BS.mem_mux3[16]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[14]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[16]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[13]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[15]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[16]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[16]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(8),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(23),
      O => \Use_HW_BS.mem_mux3[16]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[17]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[17]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[13]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(11)
    );
\Use_HW_BS.mem_mux3[17]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[15]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[17]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[14]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[16]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[17]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[17]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(7),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(24),
      O => \Use_HW_BS.mem_mux3[17]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[18]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[18]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[14]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(10)
    );
\Use_HW_BS.mem_mux3[18]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[16]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[18]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[15]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[17]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[18]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[18]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(6),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(25),
      O => \Use_HW_BS.mem_mux3[18]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[19]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[19]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[15]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(9)
    );
\Use_HW_BS.mem_mux3[19]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[17]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[18]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[16]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[19]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[19]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[19]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(5),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(26),
      O => \Use_HW_BS.mem_mux3[19]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[1]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[1]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(27)
    );
\Use_HW_BS.mem_mux3[1]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0035F0350F35FF35"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[0]_i_5_n_0\,
      I1 => \Use_HW_BS.mem_mux3[0]_i_8_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[1]_i_4_n_0\,
      I5 => \Use_HW_BS.mem_mux3[0]_i_6_n_0\,
      O => \Use_HW_BS.mem_mux3[1]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00350F35F035FF35"
    )
        port map (
      I0 => \^ex_op1_reg[1]\,
      I1 => \Use_HW_BS.mem_mux3[1]_i_5_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \^ex_op1_reg[3]\,
      I5 => \Use_HW_BS.mem_mux3[0]_i_7_n_0\,
      O => \Use_HW_BS.mem_mux3[1]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(23),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(8),
      O => \Use_HW_BS.mem_mux3[1]_i_4_n_0\
    );
\Use_HW_BS.mem_mux3[1]_i_5\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(29),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(2),
      O => \Use_HW_BS.mem_mux3[1]_i_5_n_0\
    );
\Use_HW_BS.mem_mux3[20]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[20]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[16]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(8)
    );
\Use_HW_BS.mem_mux3[20]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[18]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[20]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[17]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[19]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[20]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[20]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(4),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(27),
      O => \Use_HW_BS.mem_mux3[20]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[21]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[21]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[17]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(7)
    );
\Use_HW_BS.mem_mux3[21]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[19]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[21]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[18]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[20]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[21]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[21]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(3),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(28),
      O => \Use_HW_BS.mem_mux3[21]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[22]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[22]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[18]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(6)
    );
\Use_HW_BS.mem_mux3[22]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[20]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[22]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[19]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[21]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[22]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[22]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(2),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(29),
      O => \Use_HW_BS.mem_mux3[22]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[23]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \^ex_op2_reg[31]_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[19]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(5)
    );
\Use_HW_BS.mem_mux3[23]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[21]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[22]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[20]_i_3_n_0\,
      I5 => \^ex_op1_reg[30]\,
      O => \^ex_op2_reg[31]_0\
    );
\Use_HW_BS.mem_mux3[24]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[24]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[20]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(4)
    );
\Use_HW_BS.mem_mux3[24]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[22]_i_3_n_0\,
      I1 => \^ex_op1_reg[30]\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[21]_i_3_n_0\,
      I5 => \^ex_op1_reg[31]\,
      O => \Use_HW_BS.mem_mux3[24]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[25]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[25]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[21]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(3)
    );
\Use_HW_BS.mem_mux3[25]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"C005CF05C0F5CFF5"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[22]_i_3_n_0\,
      I1 => \^ex_void_bit\,
      I2 => \Using_FPGA.Native_21\(1),
      I3 => \Using_FPGA.Native_21\(0),
      I4 => \^ex_op1_reg[30]\,
      I5 => \^ex_op1_reg[31]\,
      O => \Use_HW_BS.mem_mux3[25]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[26]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[26]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[22]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(2)
    );
\Use_HW_BS.mem_mux3[26]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A0A3ACAF"
    )
        port map (
      I0 => \^ex_void_bit\,
      I1 => \Using_FPGA.Native_21\(0),
      I2 => \Using_FPGA.Native_21\(1),
      I3 => \^ex_op1_reg[30]\,
      I4 => \^ex_op1_reg[31]\,
      O => \Use_HW_BS.mem_mux3[26]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[27]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(0),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      O => \^ex_op1_reg[31]\
    );
\Use_HW_BS.mem_mux3[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08FF0800"
    )
        port map (
      I0 => \^ex_arith_shift\,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      I2 => \^ex_left_shift_i\,
      I3 => \Using_FPGA.Native_21\(2),
      I4 => \Use_HW_BS.mem_mux3[24]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(1)
    );
\Use_HW_BS.mem_mux3[29]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"08FF0800"
    )
        port map (
      I0 => \^ex_arith_shift\,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      I2 => \^ex_left_shift_i\,
      I3 => \Using_FPGA.Native_21\(2),
      I4 => \Use_HW_BS.mem_mux3[25]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(0)
    );
\Use_HW_BS.mem_mux3[2]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[2]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[2]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(26)
    );
\Use_HW_BS.mem_mux3[2]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[0]_i_6_n_0\,
      I1 => \Use_HW_BS.mem_mux3[2]_i_4_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[0]_i_8_n_0\,
      I5 => \Use_HW_BS.mem_mux3[1]_i_4_n_0\,
      O => \Use_HW_BS.mem_mux3[2]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[2]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00350F35F035FF35"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[1]_i_5_n_0\,
      I1 => \^ex_op1_reg[3]\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[0]_i_7_n_0\,
      I5 => \Use_HW_BS.mem_mux3[0]_i_5_n_0\,
      O => \Use_HW_BS.mem_mux3[2]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[2]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(22),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(9),
      O => \Use_HW_BS.mem_mux3[2]_i_4_n_0\
    );
\Use_HW_BS.mem_mux3[30]_i_2\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(1),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(30),
      O => \^ex_op1_reg[30]\
    );
\Use_HW_BS.mem_mux3[3]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[3]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[3]_i_3_n_0\,
      O => \EX_Op2_reg[29]\(25)
    );
\Use_HW_BS.mem_mux3[3]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[1]_i_4_n_0\,
      I1 => \Use_HW_BS.mem_mux3[3]_i_4_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[0]_i_6_n_0\,
      I5 => \Use_HW_BS.mem_mux3[2]_i_4_n_0\,
      O => \Use_HW_BS.mem_mux3[3]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[3]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0053F0530F53FF53"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[0]_i_7_n_0\,
      I1 => \^ex_op1_reg[3]\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[0]_i_8_n_0\,
      I5 => \Use_HW_BS.mem_mux3[0]_i_5_n_0\,
      O => \Use_HW_BS.mem_mux3[3]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[3]_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(21),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(10),
      O => \Use_HW_BS.mem_mux3[3]_i_4_n_0\
    );
\Use_HW_BS.mem_mux3[4]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[4]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \^ex_op2_reg[31]\,
      O => \EX_Op2_reg[29]\(24)
    );
\Use_HW_BS.mem_mux3[4]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[2]_i_4_n_0\,
      I1 => \Use_HW_BS.mem_mux3[4]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[1]_i_4_n_0\,
      I5 => \Use_HW_BS.mem_mux3[3]_i_4_n_0\,
      O => \Use_HW_BS.mem_mux3[4]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[4]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(20),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(11),
      O => \Use_HW_BS.mem_mux3[4]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[5]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[5]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[1]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(23)
    );
\Use_HW_BS.mem_mux3[5]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[3]_i_4_n_0\,
      I1 => \Use_HW_BS.mem_mux3[5]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[2]_i_4_n_0\,
      I5 => \Use_HW_BS.mem_mux3[4]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[5]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[5]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(19),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(12),
      O => \Use_HW_BS.mem_mux3[5]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[6]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[6]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[2]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(22)
    );
\Use_HW_BS.mem_mux3[6]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[4]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[6]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[3]_i_4_n_0\,
      I5 => \Use_HW_BS.mem_mux3[5]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[6]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[6]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(18),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(13),
      O => \Use_HW_BS.mem_mux3[6]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[7]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[7]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[3]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(21)
    );
\Use_HW_BS.mem_mux3[7]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"3050305F3F503F5F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[5]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[7]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[4]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[6]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[7]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[7]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(17),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(14),
      O => \Use_HW_BS.mem_mux3[7]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[8]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[8]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[4]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(20)
    );
\Use_HW_BS.mem_mux3[8]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[6]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[7]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[5]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[8]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[8]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[8]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(16),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(15),
      O => \Use_HW_BS.mem_mux3[8]_i_3_n_0\
    );
\Use_HW_BS.mem_mux3[9]_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"B8"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[9]_i_2_n_0\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => \Use_HW_BS.mem_mux3[5]_i_2_n_0\,
      O => \EX_Op2_reg[29]\(19)
    );
\Use_HW_BS.mem_mux3[9]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0350035FF350F35F"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3[7]_i_3_n_0\,
      I1 => \Use_HW_BS.mem_mux3[8]_i_3_n_0\,
      I2 => \Using_FPGA.Native_21\(0),
      I3 => \Using_FPGA.Native_21\(1),
      I4 => \Use_HW_BS.mem_mux3[6]_i_3_n_0\,
      I5 => \Use_HW_BS.mem_mux3[9]_i_3_n_0\,
      O => \Use_HW_BS.mem_mux3[9]_i_2_n_0\
    );
\Use_HW_BS.mem_mux3[9]_i_3\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"1110DDDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(15),
      I1 => \^ex_bit_extract\,
      I2 => ex_left_shift,
      I3 => \^ex_bit_insert\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(16),
      O => \Use_HW_BS.mem_mux3[9]_i_3_n_0\
    );
\Use_HW_BS.mem_void_bit_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"80808088"
    )
        port map (
      I0 => \^ex_arith_shift\,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      I2 => \^ex_bit_extract\,
      I3 => ex_left_shift,
      I4 => \^ex_bit_insert\,
      O => \^ex_void_bit\
    );
\Using_BP0_FPGA.PR_BP0_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_80
     port map (
      E(0) => \^using_fpga.native\,
      bp0_dead_fetch_hold => \^bp0_dead_fetch_hold\,
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      bp1_dead_fetch_hold_bt => bp1_dead_fetch_hold_bt,
      bp1_dead_fetch_hold_reg => \Using_BP0_FPGA.PR_BP0_And1_n_2\,
      bp1_dead_fetch_hold_reg_0 => \^bp1_dead_fetch_hold_reg_0\,
      bp1_dead_fetch_hold_reg_1 => \^bp1_raw_valid_reg_0\,
      bp1_raw_valid_reg => \^bp1_raw_valid_reg_1\,
      kill_fetch_mmu => \^kill_fetch_mmu\,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      lopt_2 => lopt_40,
      sync_reset => reset_bool_for_rst
    );
\Using_BP0_FPGA.PR_BP0_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb
     port map (
      E(0) => \^using_fpga.native\,
      bp0_piperun_masked_no1 => bp0_piperun_masked_no1,
      \bp1_PC_i_reg[0]\ => \^bp1_raw_valid_reg_0\,
      lopt => lopt_38,
      lopt_1 => lopt_39,
      lopt_2 => lopt_40
    );
\Using_BP1_FPGA.PR_BP1_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_81
     port map (
      E(0) => \^using_fpga.native\,
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      lopt => lopt_35,
      lopt_1 => lopt_36,
      lopt_2 => lopt_37
    );
\Using_BP1_FPGA.PR_BP1_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_82
     port map (
      \Using_FPGA.Native\ => \^if0_raw_valid\,
      \Using_FPGA.Native_0\ => \^s_0\,
      bp1_piperun_masked_no1 => bp1_piperun_masked_no1,
      \if0_PC_i_reg[0]\ => \^if2_raw_valid_reg_0\,
      lopt => lopt_32,
      lopt_1 => lopt_33,
      lopt_2 => lopt_34
    );
\Using_EX_FPGA.PR_EX_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_83
     port map (
      \Using_FPGA.Native\ => Jump_Logic_I1_n_6,
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_raw => ex_piperun_raw,
      lopt => lopt_90,
      lopt_1 => lopt_91
    );
\Using_EX_FPGA.PR_EX_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_84
     port map (
      ex_piperun_masked_no1 => ex_piperun_masked_no1,
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      lopt => lopt_92,
      lopt_1 => lopt_93,
      lopt_2 => lopt_94
    );
\Using_EX_FPGA.PR_EX_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_85
     port map (
      ex_piperun_masked_no2 => ex_piperun_masked_no2,
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      lopt => lopt_95,
      lopt_1 => lopt_96,
      lopt_2 => lopt_97,
      lopt_3 => lopt_98,
      lopt_4 => lopt_99,
      lopt_5 => lopt_100,
      lopt_6 => lopt_101,
      lopt_7 => lopt_102,
      lopt_8 => lopt_103
    );
\Using_EX_FPGA.PR_EX_And4\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_86
     port map (
      ex_piperun_masked_no3 => ex_piperun_masked_no3,
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      lopt => lopt_95,
      lopt_1 => lopt_96,
      lopt_2 => lopt_97
    );
\Using_EX_FPGA.PR_EX_And5\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_87
     port map (
      ex_piperun_masked_no4 => ex_piperun_masked_no4,
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      lopt => lopt_98,
      lopt_1 => lopt_99,
      lopt_2 => lopt_100
    );
\Using_EX_FPGA.PR_EX_And6\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_88
     port map (
      ex_piperun_masked_no5 => ex_piperun_masked_no5,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      lopt => lopt_101,
      lopt_1 => lopt_102,
      lopt_2 => lopt_103
    );
\Using_EX_FPGA.PR_EX_And7\: entity work.microblaze_microblaze_0_0_carry_and_bb
     port map (
      D => D_19,
      D_0 => D_18,
      D_1 => D_1,
      EX_CarryIn => EX_CarryIn,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Using_EX_FPGA.PR_EX_And7_n_2\,
      \Use_Async_Reset.sync_reset_reg\ => \Using_EX_FPGA.PR_EX_And7_n_8\,
      \Using_FPGA.Native\ => \Using_EX_FPGA.PR_EX_And7_n_1\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_4\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_5\,
      \Using_FPGA.Native_10\ => \Using_FPGA.Native_15\,
      \Using_FPGA.Native_11\ => \Using_FPGA.Native_16\,
      \Using_FPGA.Native_12\ => \m0_exception_raw_kind_reg[31]_0\,
      \Using_FPGA.Native_13\ => \^ex_interrupt\,
      \Using_FPGA.Native_14\ => \^wb_exception_from_m3_reg_rep_0\,
      \Using_FPGA.Native_15\ => \^ex_is_div_instr_i_reg_0\,
      \Using_FPGA.Native_16\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_17\(2 downto 0) => \of_MSR_i_reg[25]\(3 downto 1),
      \Using_FPGA.Native_18\(13 downto 6) => \^ex_op2_reg[17]\(14 downto 7),
      \Using_FPGA.Native_18\(5 downto 0) => \^ex_op2_reg[17]\(5 downto 0),
      \Using_FPGA.Native_19\ => \Using_FPGA.Native_25\,
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_6\,
      \Using_FPGA.Native_20\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_21\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_22\ => \^wb_div_zero_overflow\,
      \Using_FPGA.Native_23\ => \Using_FPGA.Native_26\,
      \Using_FPGA.Native_24\ => \Using_FPGA.Native_i_2__8_n_0\,
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_8\,
      \Using_FPGA.Native_4\ => \Using_FPGA.Native_9\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_10\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_11\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_12\,
      \Using_FPGA.Native_8\ => \Using_FPGA.Native_13\,
      \Using_FPGA.Native_9\ => \Using_FPGA.Native_14\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg_0,
      ex_MSR_i(10 downto 0) => ex_MSR_i(10 downto 0),
      ex_PipeRun_for_ce(0) => ex_PipeRun_for_ce,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_gpr_write_addr(1) => ex_gpr_write_addr(2),
      ex_gpr_write_addr(0) => ex_gpr_write_addr(3),
      \ex_gpr_write_addr_reg[2]\ => \Using_EX_FPGA.PR_EX_And7_n_5\,
      \ex_gpr_write_addr_reg[3]\ => \Using_EX_FPGA.PR_EX_And7_n_4\,
      ex_jump => ex_jump,
      ex_jump_hold => ex_jump_hold,
      ex_piperun_masked_no6 => ex_piperun_masked_no6,
      ex_raw_valid_reg => \Using_EX_FPGA.PR_EX_And7_n_9\,
      ex_reservation => ex_reservation,
      ex_reservation_reg => ex_databus_write_i_reg_n_0,
      ex_reservation_reg_0 => ex_databus_exclusive_i_reg_n_0,
      in0 => m0_PipeRun_for_ce,
      lopt => lopt_104,
      lopt_1 => lopt_105,
      lopt_2 => lopt_106,
      lopt_3 => lopt_107,
      lopt_4 => lopt_108,
      lopt_5 => Op1_Conflict_Stall_n_0,
      lopt_6 => lopt_109,
      lopt_7 => lopt_110,
      lopt_8 => Op1_Conflict_Stall_n_1,
      \m0_PC_i_reg[0]\ => ex_raw_valid_reg_n_0,
      m0_exception_from_ex => m0_exception_from_ex,
      m0_exception_raw_kind(0) => m0_exception_raw_kind(30),
      \m0_exception_raw_kind_reg[30]\ => \Using_FPGA.Native_i_2__5_n_0\,
      m0_is_div_instr_i => m0_is_div_instr_i,
      of_clear_msr_bip_hold_reg => of_set_msr_ee_hold_i_2_n_0,
      of_clear_msr_bip_hold_reg_0 => m0_rtid_instr_i_2_n_0,
      of_clear_msr_bip_hold_reg_1 => of_clear_msr_bip_hold_reg_n_0,
      of_set_msr_ee_hold_reg => of_set_msr_ee_hold_reg_n_0,
      of_set_msr_ie => of_set_msr_ie,
      of_set_msr_ie_hold_reg => of_PipeRun_for_ce,
      of_set_msr_ie_hold_reg_0 => of_set_msr_ie_hold_reg_n_0,
      sync_reset => reset_bool_for_rst,
      wb_MSR_i(10 downto 0) => wb_MSR_i(10 downto 0),
      wb_exception_from_m3_reg_rep => \Using_EX_FPGA.PR_EX_And7_n_6\,
      \wb_exception_from_m3_reg_rep__0\ => \wb_exception_from_m3_reg_rep__0_1\,
      wb_exception_taken => \^wb_exception_taken\,
      wb_msr_clear_bip => \^wb_msr_clear_bip\
    );
\Using_EX_FPGA.PR_EX_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_89
     port map (
      \Using_FPGA.Native\ => m0_raw_valid_reg_n_0,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      ex_piperun_raw => ex_piperun_raw,
      in0 => m0_PipeRun_for_ce,
      lopt => lopt_87,
      lopt_1 => lopt_88,
      lopt_2 => lopt_89,
      m0_dead_valid_hold => m0_dead_valid_hold
    );
\Using_FPGA.Native_i_1__133\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FFB8"
    )
        port map (
      I0 => \of_MSR_i_reg[25]\(0),
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => m3_msr(0),
      I3 => wb_msr_set_ie,
      I4 => \^wb_msr_clear_ie\,
      O => \^using_fpga.native_7\
    );
\Using_FPGA.Native_i_1__135\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4155"
    )
        port map (
      I0 => \^ex_alu_sel_logic\,
      I1 => \Using_FPGA.Native_21\(15),
      I2 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      I3 => \^ex_cmp_op\,
      O => S_2
    );
\Using_FPGA.Native_i_1__137\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => \^ex_alu_op_reg[0]_0\(0),
      I1 => \^ex_alu_op_reg[0]_0\(1),
      I2 => \^ex_use_carry\,
      I3 => \^ex_alu_sel_logic\,
      O => DI_3
    );
\Using_FPGA.Native_i_1__138\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"FFE0"
    )
        port map (
      I0 => \^wb_div_zero_overflow\,
      I1 => \of_MSR_i_reg[25]\(3),
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => \Using_FPGA.Native_34\,
      O => WB_Div_Zero_Overflow_reg_5
    );
\Using_FPGA.Native_i_1__140\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"4450"
    )
        port map (
      I0 => \^wb_msr_clear_bip\,
      I1 => \of_MSR_i_reg[25]\(2),
      I2 => \Using_FPGA.Native_35\,
      I3 => \^wb_exception_from_m3_reg_rep_0\,
      O => WB_MSR_Clear_BIP_reg_0
    );
\Using_FPGA.Native_i_1__205\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000FF7F"
    )
        port map (
      I0 => wb_exception_raw_kind(31),
      I1 => \^wb_exception_from_m3_reg_rep_0\,
      I2 => wb_exception_raw_kind(28),
      I3 => wb_exception_raw_kind(30),
      I4 => \wb_PC_i_reg[31]\,
      O => \wb_exception_raw_kind_reg[31]_0\
    );
\Using_FPGA.Native_i_2__5\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"EF"
    )
        port map (
      I0 => ex_dead_valid_hold,
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => ex_raw_valid_reg_n_0,
      O => \Using_FPGA.Native_i_2__5_n_0\
    );
\Using_FPGA.Native_i_2__6\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => ex_raw_valid_reg_n_0,
      I1 => ex_start_div_raw,
      O => \^ex_start_div\
    );
\Using_FPGA.Native_i_2__7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]_0\(2),
      I1 => wb_exception_raw_kind(31),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(30),
      O => ADDRD(3)
    );
\Using_FPGA.Native_i_2__8\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFBF00000080"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(6),
      I1 => ex_move_to_MSR_instr,
      I2 => ex_raw_valid_reg_n_0,
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => ex_dead_valid_hold,
      I5 => \Using_FPGA.Native_27\,
      O => \Using_FPGA.Native_i_2__8_n_0\
    );
\Using_FPGA.Native_i_3__1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]_0\(1),
      I1 => wb_exception_raw_kind(31),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(30),
      O => ADDRD(2)
    );
\Using_FPGA.Native_i_4\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"BAAAAAAA"
    )
        port map (
      I0 => \^wb_gpr_write_addr_reg[1]_0\(0),
      I1 => wb_exception_raw_kind(31),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(30),
      O => ADDRD(1)
    );
\Using_Fast_Interrupt.Interrupt_Ack[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"000000EA"
    )
        port map (
      I0 => wb_ie_rising,
      I1 => wb_rtid_instr,
      I2 => wb_raw_valid_reg_n_0,
      I3 => reset_bool_for_rst,
      I4 => \^wb_msr_clear_ie\,
      O => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack[1]_i_1\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"BFAA"
    )
        port map (
      I0 => \^wb_msr_clear_ie\,
      I1 => wb_raw_valid_reg_n_0,
      I2 => wb_rtid_instr,
      I3 => wb_ie_rising,
      O => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[0]_i_1_n_0\,
      Q => Interrupt_Ack(0),
      R => '0'
    );
\Using_Fast_Interrupt.Interrupt_Ack_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_Fast_Interrupt.Interrupt_Ack[1]_i_1_n_0\,
      Q => Interrupt_Ack(1),
      R => reset_bool_for_rst
    );
\Using_Fast_Interrupt.wb_ie_rising_reg\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => p_55_out,
      Q => wb_ie_rising,
      R => '0'
    );
\Using_IF1_FPGA_No_MMU.PR_IF1_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_90
     port map (
      if0_raw_valid_reg => \^if1_insert_piperun_i\,
      if2_raw_valid_reg => \^if2_raw_valid_reg_0\,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31
    );
\Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_91
     port map (
      if2_dead_fetch_hold_reg => \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1_n_1\,
      if2_dead_fetch_hold_reg_0 => \^s_0\,
      if2_dead_fetch_hold_reg_1 => \^if2_piperun\,
      if2_dead_fetch_hold_reg_2 => if2_dead_fetch_hold_reg_n_0,
      if2_dead_fetch_hold_reg_3 => Kill_Fetch_Carry_n_2,
      if2_dead_fetch_hold_reg_4 => \^bp1_dead_fetch_hold_reg_0\,
      if2_raw_valid_reg => \^if1_insert_piperun_i\,
      kill_fetch_mmu => \^kill_fetch_mmu\,
      lopt => lopt_29,
      lopt_1 => lopt_30,
      lopt_2 => lopt_31,
      lopt_3 => lopt_32,
      lopt_4 => lopt_33,
      lopt_5 => lopt_34,
      lopt_6 => lopt_35,
      lopt_7 => lopt_36,
      lopt_8 => lopt_37,
      sync_reset => reset_bool_for_rst
    );
\Using_IF2_FPGA.PR_IF2_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_92
     port map (
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_ibus_access_i_reg => PREFETCH_BUFFER_I1_n_112,
      lopt => lopt_24,
      lopt_1 => lopt_25
    );
\Using_IF2_FPGA.PR_IF2_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_93
     port map (
      IWAIT => IWAIT,
      \Use_ILMB.if2_ilmb_issued_reg\ => \Use_ILMB.if2_ilmb_issued_reg\,
      \Use_ILMB.if2_ilmb_issued_reg_0\ => \^d\(45),
      \Using_FPGA.Native\ => \^if2_piperun\,
      if2_ibus_first_cycle_raw_reg => if2_ibus_first_cycle_raw_reg_0,
      if2_ilmb_issued => if2_ilmb_issued,
      if2_piperun_masked_no2 => if2_piperun_masked_no2,
      if3_allow_iready => if3_allow_iready,
      if3_dead_fetch_hold_reg => \Using_IF2_FPGA.PR_IF2_And2_n_3\,
      if3_dead_fetch_hold_reg_0 => \^if3_piperun\,
      if3_dead_fetch_hold_reg_1 => if3_dead_fetch_hold_reg_n_0,
      if3_dead_fetch_hold_reg_2 => \^if3_raw_valid_reg_0\,
      if3_dead_fetch_hold_reg_3 => if2_dead_fetch_hold_reg_n_0,
      kill_fetch => kill_fetch,
      lopt => lopt_26,
      lopt_1 => lopt_27,
      lopt_2 => lopt_28,
      sync_reset => reset_bool_for_rst
    );
\Using_IF2_FPGA.PR_IF2_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_94
     port map (
      \Using_FPGA.Native\ => \^if3_raw_valid_reg_0\,
      \Using_FPGA.Native_0\ => \^if3_piperun\,
      if2_piperun_masked_no1 => if2_piperun_masked_no1,
      lopt => lopt_22,
      lopt_1 => lopt_23
    );
\Using_IF3_FPGA.PR_IF3_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_95
     port map (
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      lopt => lopt_17,
      lopt_1 => lopt_18,
      lopt_2 => lopt_19
    );
\Using_IF3_FPGA.PR_IF3_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_96
     port map (
      if3_piperun_masked_no2 => if3_piperun_masked_no2,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if4_ibus_access_i_reg => if4_ibus_access_i_reg_0,
      lopt => lopt_20,
      lopt_1 => lopt_21
    );
\Using_IF3_FPGA.PR_IF3_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_97
     port map (
      D(0) => \^d\(45),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg_2\,
      \Use_Async_Reset.sync_reset_reg_0\ => \Use_Async_Reset.sync_reset_reg_3\,
      \Use_ILMB.if3_iready_hold_reg\ => \Use_ILMB.if3_iready_hold_reg\,
      \Use_ILMB.if3_potential_bubble_reg\ => \^if2_piperun\,
      \Using_FPGA.Native\ => \^if3_piperun\,
      if3_ilmb_iready => if3_ilmb_iready,
      if3_piperun_masked_no3 => if3_piperun_masked_no3,
      if3_potential_bubble => if3_potential_bubble,
      if4_dead_fetch_hold_reg => \Using_IF3_FPGA.PR_IF3_And3_n_3\,
      if4_dead_fetch_hold_reg_0 => \^if4_piperun\,
      if4_dead_fetch_hold_reg_1 => if4_dead_fetch_hold_reg_n_0,
      if4_dead_fetch_hold_reg_2 => \^if4_raw_valid_reg_0\,
      if4_dead_fetch_hold_reg_3 => if3_dead_fetch_hold_reg_n_0,
      kill_fetch => kill_fetch,
      lopt => lopt_22,
      lopt_1 => lopt_23,
      lopt_2 => \^if3_raw_valid_reg_0\,
      lopt_3 => lopt_24,
      lopt_4 => lopt_25,
      lopt_5 => PREFETCH_BUFFER_I1_n_112,
      lopt_6 => lopt_26,
      lopt_7 => lopt_27,
      lopt_8 => lopt_28,
      sync_reset => reset_bool_for_rst
    );
\Using_IF3_FPGA.PR_IF3_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_98
     port map (
      \Using_FPGA.Native\ => \^if4_raw_valid_reg_0\,
      \Using_FPGA.Native_0\ => \^if4_piperun\,
      if3_piperun_masked_no1 => if3_piperun_masked_no1,
      lopt => lopt_15,
      lopt_1 => lopt_16
    );
\Using_IF4_FPGA.PR_IF4_And1\: entity work.microblaze_microblaze_0_0_carry_and_bb_99
     port map (
      \Using_FPGA.Native\ => \^if4_raw_valid_reg_0\,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      lopt => lopt_10,
      lopt_1 => lopt_11
    );
\Using_IF4_FPGA.PR_IF4_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_100
     port map (
      if4_piperun_masked_no3 => if4_piperun_masked_no3,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt_12,
      lopt_1 => lopt_13,
      lopt_2 => lopt_14
    );
\Using_IF4_FPGA.PR_IF4_Or1\: entity work.microblaze_microblaze_0_0_carry_or_bb_101
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_ready => if4_ready,
      lopt => \^lopt_8\,
      lopt_1 => lopt_9,
      lopt_2 => lopt_10,
      lopt_3 => lopt_11,
      lopt_4 => \^if4_raw_valid_reg_0\,
      lopt_5 => lopt_12,
      lopt_6 => lopt_13,
      lopt_7 => lopt_14
    );
\Using_IF4_FPGA.PR_IF4_Or2\: entity work.microblaze_microblaze_0_0_carry_or_bb_102
     port map (
      if4_piperun_masked_no1 => if4_piperun_masked_no1,
      if4_piperun_masked_no2 => if4_piperun_masked_no2,
      lopt => \^lopt_8\,
      lopt_1 => lopt_9
    );
\Using_IF4_FPGA.PR_IF4_Or3\: entity work.microblaze_microblaze_0_0_carry_or_bb_103
     port map (
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \^if4_piperun\,
      \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ => \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\,
      if4_piperun_masked_no4 => if4_piperun_masked_no4,
      lopt => lopt_15,
      lopt_1 => lopt_16,
      lopt_2 => \^if4_raw_valid_reg_0\,
      lopt_3 => lopt_17,
      lopt_4 => lopt_18,
      lopt_5 => lopt_19,
      lopt_6 => lopt_20,
      lopt_7 => lopt_21,
      lopt_8 => if4_ibus_access_i_reg_0
    );
\Using_IF4_Push_FPGA.Push_PipeRun\: entity work.microblaze_microblaze_0_0_carry_latch_and_bb
     port map (
      \Using_FPGA.Native\ => \Using_IF4_Push_FPGA.Push_PipeRun_n_1\,
      \Using_FPGA.Native_0\ => \^if4_piperun\,
      \Using_FPGA.Native_1\ => Kill_Fetch_Carry_n_1,
      if4_push_instr_fetch => if4_push_instr_fetch,
      if4_sel_input(0) => if4_sel_input(4)
    );
\Using_M0_FPGA.PR_M0_And1\: entity work.microblaze_microblaze_0_0_carry_and_bb_104
     port map (
      \Using_FPGA.Native\ => m0_raw_valid_reg_n_0,
      lopt => lopt_78,
      lopt_1 => lopt_79,
      lopt_2 => lopt_80,
      lopt_3 => lopt_81,
      lopt_4 => lopt_82,
      lopt_5 => lopt_83,
      lopt_6 => lopt_84,
      lopt_7 => lopt_85,
      lopt_8 => lopt_86,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_raw => m0_piperun_raw
    );
\Using_M0_FPGA.PR_M0_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_105
     port map (
      lopt => lopt_78,
      lopt_1 => lopt_79,
      lopt_2 => lopt_80,
      m0_piperun_masked_no1 => m0_piperun_masked_no1,
      m0_piperun_masked_no2 => m0_piperun_masked_no2
    );
\Using_M0_FPGA.PR_M0_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_106
     port map (
      lopt => lopt_81,
      lopt_1 => lopt_82,
      lopt_2 => lopt_83,
      m0_piperun_masked_no2 => m0_piperun_masked_no2,
      m0_piperun_masked_no3 => m0_piperun_masked_no3
    );
\Using_M0_FPGA.PR_M0_And4\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_107
     port map (
      lopt => lopt_84,
      lopt_1 => lopt_85,
      lopt_2 => lopt_86,
      m0_piperun_masked_no3 => m0_piperun_masked_no3,
      m0_piperun_masked_no4 => m0_piperun_masked_no4
    );
\Using_M0_FPGA.PR_M0_And5\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_108
     port map (
      D => D_21,
      D_0 => D_20,
      \Using_FPGA.Native\(0) => ex_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_1\ => \^wb_div_zero_overflow\,
      \Using_FPGA.Native_2\(0) => \of_MSR_i_reg[25]\(3),
      \Using_FPGA.Native_3\ => \Using_FPGA.Native_30\,
      \Using_FPGA.Native_4\ => M0_Div_Exception_Hold_DFF_n_0,
      \Using_FPGA.Native_5\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_22\,
      \Using_FPGA.Native_7\ => \Using_FPGA.Native_32\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg_3,
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      in0 => m0_PipeRun_for_ce,
      lopt => lopt_87,
      lopt_1 => lopt_88,
      lopt_2 => lopt_89,
      lopt_3 => lopt_90,
      lopt_4 => lopt_91,
      lopt_5 => Jump_Logic_I1_n_6,
      lopt_6 => lopt_92,
      lopt_7 => lopt_93,
      lopt_8 => lopt_94,
      m0_dead_valid_hold => m0_dead_valid_hold,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_piperun_masked_no4 => m0_piperun_masked_no4,
      m0_raw_valid_reg => \Using_M0_FPGA.PR_M0_And5_n_1\,
      m0_raw_valid_reg_0 => \Using_FPGA.Native_i_2__5_n_0\,
      m0_raw_valid_reg_1 => m0_raw_valid_reg_n_0,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => \Using_M0_FPGA.PR_M0_And5_n_2\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_3\
    );
\Using_M0_FPGA.PR_M0_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_109
     port map (
      \Using_FPGA.Native\(0) => m1_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => m1_raw_valid_reg_n_0,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      lopt => lopt_75,
      lopt_1 => lopt_76,
      lopt_2 => lopt_77,
      m0_piperun_raw => m0_piperun_raw,
      m1_dead_valid_hold => m1_dead_valid_hold
    );
\Using_M1_FPGA.PR_M1_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_110
     port map (
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_2 => lopt_72,
      lopt_3 => lopt_73,
      lopt_4 => lopt_74,
      lopt_5 => m1_raw_valid_reg_n_0,
      lopt_6 => lopt_75,
      lopt_7 => lopt_76,
      lopt_8 => lopt_77,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_raw => m1_piperun_raw
    );
\Using_M1_FPGA.PR_M1_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_111
     port map (
      lopt => lopt_70,
      lopt_1 => lopt_71,
      lopt_2 => lopt_72,
      m1_piperun_masked_no1 => m1_piperun_masked_no1,
      m1_piperun_masked_no2 => m1_piperun_masked_no2
    );
\Using_M1_FPGA.PR_M1_And3\: entity work.microblaze_microblaze_0_0_carry_and_bb_112
     port map (
      A_N201_out => A_N201_out,
      D(1 downto 0) => \^d\(2 downto 1),
      DWait => DWait,
      D_0 => D_24,
      D_1 => D_23,
      D_2 => D_22,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ => \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ => \^d\(0),
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ => \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\,
      \Use_DAXI.m2_active_access_unmasked_reg\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      \Use_DLMB.m1_dlmb_issued_reg\ => \Use_DLMB.m1_dlmb_issued_reg\,
      \Using_FPGA.Native\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_0\ => \^wb_div_zero_overflow\,
      \Using_FPGA.Native_1\(0) => \of_MSR_i_reg[25]\(3),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_29\,
      \Using_FPGA.Native_3\ => M1_Div_Exception_Hold_DFF_n_0,
      \Using_FPGA.Native_4\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_32\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_33\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg_2,
      in0 => m0_PipeRun_for_ce,
      lopt => lopt_73,
      lopt_1 => lopt_74,
      m0_gpr_write => m0_gpr_write,
      m0_gpr_write_dbg => m0_gpr_write_dbg,
      m0_is_div_instr_i => m0_is_div_instr_i,
      m1_PipeRun_for_ce(0) => m1_PipeRun_for_ce,
      m1_databus_access => m1_databus_access,
      m1_databus_access_from_m0_reg => m1_databus_access_from_m0_reg_0,
      m1_databus_addr_from_m0_reg => m1_databus_addr_from_m0_reg_0,
      m1_databus_write_from_m0_reg => m1_databus_write_from_m0_reg_0,
      m1_databus_write_from_m0_reg_0 => m1_databus_write_from_m0_reg_1,
      m1_dead_valid_hold => m1_dead_valid_hold,
      m1_dlmb_issued => m1_dlmb_issued,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m1_piperun_masked_no2 => m1_piperun_masked_no2,
      m1_raw_valid_reg => \Using_M1_FPGA.PR_M1_And3_n_7\,
      \m2_PC_i_reg[0]\ => m1_raw_valid_reg_n_0,
      m2_allow_dready => m2_allow_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => \Using_M1_FPGA.PR_M1_And3_n_8\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_4\
    );
\Using_M1_FPGA.PR_M1_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_113
     port map (
      \Using_FPGA.Native\(0) => m2_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_1\ => \^m2_raw_valid_reg_0\,
      lopt => lopt_67,
      lopt_1 => lopt_68,
      lopt_2 => lopt_69,
      m1_piperun_raw => m1_piperun_raw,
      m2_dead_valid_hold => m2_dead_valid_hold
    );
\Using_M2_FPGA.PR_M2_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_114
     port map (
      DReady => DReady,
      DWait => DWait,
      \Using_FPGA.Native\ => \^m2_databus_access_i_reg_0\,
      \Using_FPGA.Native_0\ => \^m2_raw_valid_reg_0\,
      \Using_FPGA.Native_1\ => \Using_FPGA.Native_24\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_56,
      m2_allow_dready => m2_allow_dready,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_raw => m2_piperun_raw
    );
\Using_M2_FPGA.PR_M2_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_115
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_19\,
      lopt => lopt_57,
      lopt_1 => lopt_58,
      m2_piperun_masked_no1 => m2_piperun_masked_no1,
      m2_piperun_masked_no2 => m2_piperun_masked_no2
    );
\Using_M2_FPGA.PR_M2_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_116
     port map (
      lopt => lopt_59,
      lopt_1 => lopt_60,
      lopt_2 => lopt_61,
      m2_piperun_masked_no2 => m2_piperun_masked_no2,
      m2_piperun_masked_no3 => m2_piperun_masked_no3
    );
\Using_M2_FPGA.PR_M2_And4\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_117
     port map (
      lopt => lopt_62,
      lopt_1 => lopt_63,
      lopt_2 => lopt_64,
      lopt_3 => lopt_65,
      lopt_4 => lopt_66,
      lopt_5 => \^m2_raw_valid_reg_0\,
      lopt_6 => lopt_67,
      lopt_7 => lopt_68,
      lopt_8 => lopt_69,
      m2_piperun_masked_no3 => m2_piperun_masked_no3,
      m2_piperun_masked_no4 => m2_piperun_masked_no4
    );
\Using_M2_FPGA.PR_M2_And5\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_118
     port map (
      lopt => lopt_62,
      lopt_1 => lopt_63,
      lopt_2 => lopt_64,
      m2_piperun_masked_no4 => m2_piperun_masked_no4,
      m2_piperun_masked_no5 => m2_piperun_masked_no5
    );
\Using_M2_FPGA.PR_M2_And6\: entity work.microblaze_microblaze_0_0_carry_and_bb_119
     port map (
      D(0) => \^d\(2),
      D_0 => D_27,
      D_1 => D_26,
      D_2 => D_25,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg_1\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg\ => \Use_DAXI.M_AXI_DP_BREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\(1 downto 0) => \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(1 downto 0),
      \Use_DAXI.M_AXI_DP_RREADY_I_reg\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg\,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ => \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\,
      \Use_DLMB.m2_dready_hold_reg\(0) => m1_PipeRun_for_ce,
      \Use_DLMB.m2_dready_hold_reg_0\ => \Use_DLMB.m2_dready_hold_reg\,
      \Use_DLMB.m2_potential_bubble_reg\ => \Use_DLMB.m2_potential_bubble_reg\,
      \Use_DLMB.m2_potential_bubble_reg_0\ => \^d\(0),
      \Using_FPGA.Native\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_0\ => \^wb_div_zero_overflow\,
      \Using_FPGA.Native_1\(0) => \of_MSR_i_reg[25]\(3),
      \Using_FPGA.Native_2\ => \Using_FPGA.Native_28\,
      \Using_FPGA.Native_3\ => M2_Div_Exception_Hold_DFF_n_0,
      \Using_FPGA.Native_4\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_5\ => \Using_FPGA.Native_33\,
      \Using_FPGA.Native_6\ => \Using_FPGA.Native_31\,
      WB_Div_Zero_Overflow_reg => WB_Div_Zero_Overflow_reg_1,
      lopt => lopt_65,
      lopt_1 => lopt_66,
      m1_gpr_write => m1_gpr_write,
      m1_gpr_write_dbg => m1_gpr_write_dbg,
      m1_is_div_instr_i => m1_is_div_instr_i,
      m2_PipeRun_for_ce(0) => m2_PipeRun_for_ce,
      m2_databus_write => m2_databus_write,
      m2_dead_valid_hold => m2_dead_valid_hold,
      m2_dead_valid_hold_reg => \^m2_raw_valid_reg_0\,
      m2_dlmb_dready => m2_dlmb_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_gpr_write => m2_gpr_write,
      m2_gpr_write_dbg => m2_gpr_write_dbg,
      m2_is_div_instr => \^m2_is_div_instr\,
      m2_piperun_masked_no5 => m2_piperun_masked_no5,
      m2_potential_bubble => m2_potential_bubble,
      m2_raw_valid_reg => \Using_M2_FPGA.PR_M2_And6_n_5\,
      m2_raw_valid_reg_0 => M2_Exception_From_DFF_n_3,
      sync_reset => reset_bool_for_rst,
      \wb_exception_from_m3_reg_rep__0\ => \Using_M2_FPGA.PR_M2_And6_n_6\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_5\
    );
\Using_M2_FPGA.PR_M2_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_120
     port map (
      \Using_FPGA.Native\ => m3_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      \Using_FPGA.Native_1\ => \^m3_raw_valid_reg_0\,
      lopt => lopt_54,
      lopt_1 => lopt_55,
      lopt_2 => lopt_56,
      lopt_3 => lopt_57,
      lopt_4 => lopt_58,
      lopt_5 => \Using_FPGA.Native_19\,
      lopt_6 => lopt_59,
      lopt_7 => lopt_60,
      lopt_8 => lopt_61,
      m2_piperun_raw => m2_piperun_raw,
      m3_dead_valid_hold => m3_dead_valid_hold
    );
\Using_M3_FPGA.PR_M3_And1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_121
     port map (
      \Using_FPGA.Native\ => \^m3_raw_valid_reg_0\,
      \Using_FPGA.Native_0\ => \^m3_sel_load_res\,
      lopt => lopt_41,
      lopt_1 => lopt_42,
      lopt_2 => lopt_43,
      m3_databus_ready => m3_databus_ready,
      m3_piperun_data_raw => m3_piperun_data_raw
    );
\Using_M3_FPGA.PR_M3_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_122
     port map (
      \Using_FPGA.Native\ => \Using_FPGA.Native_20\,
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_49,
      lopt_3 => lopt_50,
      lopt_4 => lopt_51,
      lopt_5 => WB_MSR_Set_IE_reg_0,
      lopt_6 => lopt_52,
      lopt_7 => lopt_53,
      lopt_8 => \^m3_raw_valid_reg_0\,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_raw => m3_piperun_raw
    );
\Using_M3_FPGA.PR_M3_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_123
     port map (
      lopt => lopt_47,
      lopt_1 => lopt_48,
      lopt_2 => lopt_49,
      m3_piperun_masked_no1 => m3_piperun_masked_no1,
      m3_piperun_masked_no2 => m3_piperun_masked_no2
    );
\Using_M3_FPGA.PR_M3_And4\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_124
     port map (
      WB_MSR_Set_IE_reg => WB_MSR_Set_IE_reg_0,
      lopt => lopt_50,
      lopt_1 => lopt_51,
      m3_piperun_masked_no2 => m3_piperun_masked_no2,
      m3_piperun_masked_no3 => m3_piperun_masked_no3
    );
\Using_M3_FPGA.PR_M3_And5\: entity work.microblaze_microblaze_0_0_carry_and_bb_125
     port map (
      D => D_28,
      Q(2) => wb_exception_raw_kind(28),
      Q(1) => wb_exception_raw_kind(30),
      Q(0) => wb_exception_raw_kind(31),
      \Use_Async_Reset.sync_reset_reg\ => \Use_Async_Reset.sync_reset_reg_0\,
      \Using_FPGA.Native\ => \^using_fpga.native_7\,
      \Using_FPGA.Native_0\ => \Using_FPGA.Native_31\,
      lopt => lopt_52,
      lopt_1 => lopt_53,
      m3_PipeRun_for_ce => m3_PipeRun_for_ce,
      m3_active_access => m3_active_access,
      m3_dead_valid_hold => m3_dead_valid_hold,
      m3_dead_valid_hold_reg => \^m3_raw_valid_reg_0\,
      m3_dead_valid_hold_reg_0 => \^wb_exception_from_m3_reg_rep__0_0\,
      m3_gpr_write_dbg => m3_gpr_write_dbg,
      m3_msr(0) => m3_msr(0),
      m3_piperun_masked_no3 => m3_piperun_masked_no3,
      m3_raw_valid_reg => \Using_M3_FPGA.PR_M3_And5_n_2\,
      m3_raw_valid_reg_0 => M3_Exception_From_DFF_n_1,
      m3_raw_valid_reg_1(0) => m2_PipeRun_for_ce,
      sync_reset => reset_bool_for_rst,
      \wb_PC_i_reg[31]\ => \^wb_exception_from_m3_reg_rep_0\,
      \wb_PC_i_reg[31]_0\ => \wb_PC_i_reg[31]\,
      \wb_exception_from_m3_reg_rep__0\ => \Using_M3_FPGA.PR_M3_And5_n_5\,
      \wb_exception_from_m3_reg_rep__0_0\ => \wb_exception_from_m3_reg_rep__0_2\,
      \wb_exception_raw_kind_reg[31]\(0) => \wb_exception_raw_kind_reg[31]_1\(0),
      wb_piperun_i_reg => \Using_M3_FPGA.PR_M3_And5_n_3\,
      wb_raw_valid_reg => wb_piperun_i_reg_n_0,
      wb_raw_valid_reg_0 => WB_PC_Valid_i_1_n_0,
      wb_raw_valid_reg_1 => wb_raw_valid_reg_n_0
    );
\Using_M3_FPGA.PR_M3_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_126
     port map (
      \Using_FPGA.Native\ => \^m3_raw_valid_reg_0\,
      \Using_FPGA.Native_0\ => \^m3_sel_load_res\,
      lopt => lopt_44,
      lopt_1 => lopt_45,
      lopt_2 => lopt_46,
      m3_piperun_data_raw => m3_piperun_data_raw,
      m3_piperun_raw => m3_piperun_raw
    );
\Using_Mul_Instr.ex_not_mul_op_i_reg\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_103,
      Q => \^using_mul_instr.ex_not_mul_op_i_reg_0\,
      S => reset_bool_for_rst
    );
\Using_OF_FPGA.PR_OF_And1\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_127
     port map (
      \Using_FPGA.Native\ => Op1_Conflict_Stall_n_0,
      lopt => lopt_107,
      lopt_1 => lopt_108,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_raw => of_piperun_raw
    );
\Using_OF_FPGA.PR_OF_And10\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_128
     port map (
      lopt => lopt_122,
      lopt_1 => lopt_123,
      lopt_2 => lopt_124,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
\Using_OF_FPGA.PR_OF_And11\: entity work.microblaze_microblaze_0_0_carry_and_bb_129
     port map (
      D => D_30,
      D_0 => D_29,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => M0_Exception_From_DFF_n_8,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => PREFETCH_BUFFER_I1_n_80,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_2\(0) => \Performance_Debug_Control.ex_brki_hit_reg\(0),
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_3\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_4\ => \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_5\ => \m0_exception_raw_kind_reg[31]_0\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\,
      \Use_Async_Reset.sync_reset_reg\ => \Using_OF_FPGA.PR_OF_And11_n_3\,
      \Using_FPGA.Native\(0) => ex_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => of_gpr_write_dbg,
      WB_Div_Zero_Overflow_reg(1 downto 0) => WB_Div_Zero_Overflow_reg_4(1 downto 0),
      ex_gpr_write => ex_gpr_write,
      ex_gpr_write_dbg => ex_gpr_write_dbg,
      \of_MSR_i_reg[25]\(1 downto 0) => \of_MSR_i_reg[25]_0\(1 downto 0),
      \of_MSR_i_reg[25]_0\(1 downto 0) => \of_MSR_i_reg[25]_1\(1 downto 0),
      \of_MSR_i_reg[25]_1\ => \^wb_div_zero_overflow\,
      \of_MSR_i_reg[25]_2\(0) => \of_MSR_i_reg[25]\(3),
      \of_MSR_i_reg[30]\ => \^using_fpga.native_7\,
      \of_MSR_i_reg[30]_0\ => \^wb_exception_from_m3_reg_rep__0_0\,
      of_PipeRun_for_ce => of_PipeRun_for_ce,
      of_dead_valid_hold => of_dead_valid_hold,
      of_dead_valid_hold_reg => \^wb_exception_from_m3_reg_rep_0\,
      of_piperun_masked_no10 => of_piperun_masked_no10,
      of_raw_valid => of_raw_valid,
      \out\ => of_gpr_write,
      \p_43_out__4\ => \Use_Debug_Logic.Master_Core.Debug_Perf/p_43_out__4\,
      p_48_out => \Use_Debug_Logic.Master_Core.Debug_Perf/p_48_out\,
      sync_reset => reset_bool_for_rst
    );
\Using_OF_FPGA.PR_OF_And2\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_130
     port map (
      \Using_FPGA.Native\ => Op1_Conflict_Stall_n_1,
      lopt => lopt_109,
      lopt_1 => lopt_110,
      of_piperun_masked_no1 => of_piperun_masked_no1,
      of_piperun_masked_no2 => of_piperun_masked_no2
    );
\Using_OF_FPGA.PR_OF_And3\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_131
     port map (
      \Using_FPGA.Native\ => Op2_Conflict_Stall_n_0,
      lopt => lopt_111,
      lopt_1 => lopt_112,
      lopt_2 => Op2_Conflict_Stall_n_1,
      lopt_3 => lopt_113,
      lopt_4 => lopt_114,
      lopt_5 => Op3_Conflict_Stall_n_0,
      lopt_6 => lopt_115,
      lopt_7 => lopt_116,
      lopt_8 => Op3_Conflict_Stall_n_1,
      of_piperun_masked_no2 => of_piperun_masked_no2,
      of_piperun_masked_no3 => of_piperun_masked_no3
    );
\Using_OF_FPGA.PR_OF_And4\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_132
     port map (
      \Using_FPGA.Native\ => Op2_Conflict_Stall_n_1,
      lopt => lopt_111,
      lopt_1 => lopt_112,
      of_piperun_masked_no3 => of_piperun_masked_no3,
      of_piperun_masked_no4 => of_piperun_masked_no4
    );
\Using_OF_FPGA.PR_OF_And5\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_133
     port map (
      \Using_FPGA.Native\ => Op3_Conflict_Stall_n_0,
      lopt => lopt_113,
      lopt_1 => lopt_114,
      of_piperun_masked_no4 => of_piperun_masked_no4,
      of_piperun_masked_no5 => of_piperun_masked_no5
    );
\Using_OF_FPGA.PR_OF_And6\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_134
     port map (
      \Using_FPGA.Native\ => Op3_Conflict_Stall_n_1,
      lopt => lopt_115,
      lopt_1 => lopt_116,
      of_piperun_masked_no5 => of_piperun_masked_no5,
      of_piperun_masked_no6 => of_piperun_masked_no6
    );
\Using_OF_FPGA.PR_OF_And7\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_135
     port map (
      lopt => lopt_117,
      lopt_1 => lopt_118,
      lopt_2 => lopt_119,
      lopt_3 => lopt_120,
      lopt_4 => lopt_121,
      lopt_5 => PREFETCH_BUFFER_I1_n_99,
      lopt_6 => lopt_122,
      lopt_7 => lopt_123,
      lopt_8 => lopt_124,
      of_piperun_masked_no6 => of_piperun_masked_no6,
      of_piperun_masked_no7 => of_piperun_masked_no7
    );
\Using_OF_FPGA.PR_OF_And8\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_136
     port map (
      lopt => lopt_117,
      lopt_1 => lopt_118,
      lopt_2 => lopt_119,
      of_piperun_masked_no7 => of_piperun_masked_no7,
      of_piperun_masked_no8 => of_piperun_masked_no8
    );
\Using_OF_FPGA.PR_OF_And9\: entity work.microblaze_microblaze_0_0_carry_and_n_bb_137
     port map (
      \Using_FPGA.Native\ => PREFETCH_BUFFER_I1_n_99,
      \Using_FPGA.Native_i_1__8\ => \^ex_is_div_instr_i_reg_0\,
      \Using_FPGA.Native_i_1__8_0\ => ex_raw_valid_reg_n_0,
      \Using_FPGA.Native_i_1__8_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      ex_is_div_instr_i_reg => \Using_OF_FPGA.PR_OF_And9_n_1\,
      lopt => lopt_120,
      lopt_1 => lopt_121,
      of_piperun_masked_no8 => of_piperun_masked_no8,
      of_piperun_masked_no9 => of_piperun_masked_no9
    );
\Using_OF_FPGA.PR_OF_Or1\: entity work.microblaze_microblaze_0_0_carry_or_n_bb_138
     port map (
      \Using_FPGA.Native\(0) => ex_PipeRun_for_ce,
      \Using_FPGA.Native_0\ => ex_raw_valid_reg_n_0,
      \Using_FPGA.Native_1\ => \^wb_exception_from_m3_reg_rep__0_0\,
      ex_dead_valid_hold => ex_dead_valid_hold,
      lopt => lopt_104,
      lopt_1 => lopt_105,
      lopt_2 => lopt_106,
      of_piperun_raw => of_piperun_raw
    );
WB_Byte_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_byte_access_i_reg_n_0,
      Q => \^wb_byte_access\,
      R => reset_bool_for_rst
    );
WB_DataBus_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => \^m3_sel_load_res\,
      Q => wb_databus_access,
      R => reset_bool_for_rst
    );
WB_DataBus_Read_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_databus_read_i_reg_n_0,
      Q => wb_databus_read,
      R => reset_bool_for_rst
    );
WB_DataBus_Write_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_databus_write_i_reg_n_0,
      Q => wb_databus_write,
      R => reset_bool_for_rst
    );
WB_Delay_Slot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_delay_slot_i_reg_n_0,
      Q => wb_delay_slot,
      R => reset_bool_for_rst
    );
WB_Div_Zero_Overflow_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => WB_Div_Zero_Overflow_reg_6,
      Q => \^wb_div_zero_overflow\,
      R => reset_bool_for_rst
    );
WB_Doublet_Access_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_doublet_access_i_reg_n_0,
      Q => \^wb_doublet_access\,
      R => reset_bool_for_rst
    );
WB_GPR_Dbg_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_139
     port map (
      Clk => Clk,
      D => D_28,
      \Using_FPGA.Native\ => flush_pipe_for_rst,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg
    );
WB_GPR_Write_DFF: entity work.microblaze_microblaze_0_0_two_piperun_fd_140
     port map (
      Clk => Clk,
      D => D_7,
      \EX_Op2[0]_i_20\(0) => of_predecode(9),
      Q(0) => \^wb_gpr_write_addr_reg[1]_0\(0),
      \Using_FPGA.Native\ => WB_GPR_Write_DFF_n_3,
      \Using_FPGA.Native_0\ => flush_pipe_for_rst,
      \Using_FPGA.Native_1\ => \^wb_msr_clear_ie\,
      trace_reg_write_i_reg => \^wb_exception_from_m3_reg_rep__0_0\,
      trace_reg_write_i_reg_0 => wb_raw_valid_reg_n_0,
      wb_gpr_wr => wb_gpr_wr,
      wb_raw_valid_reg => WB_GPR_Write_DFF_n_2,
      wb_reset => wb_reset,
      wb_reset_reg => wb_reset_reg_0
    );
WB_MSR_Clear_BIP_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_msr_clear_bip_i,
      Q => \^wb_msr_clear_bip\,
      R => reset_bool_for_rst
    );
WB_MSR_Set_IE_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_msr_set_ie_i,
      Q => wb_msr_set_ie,
      R => reset_bool_for_rst
    );
WB_PC_Valid_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep__0_0\,
      I1 => \^m3_raw_valid_reg_0\,
      I2 => m3_dead_valid_hold,
      O => WB_PC_Valid_i_1_n_0
    );
WB_PC_Valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => WB_PC_Valid_i_1_n_0,
      Q => wb_pc_valid,
      R => reset_bool_for_rst
    );
WB_Read_Imm_Reg_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => \^wb_read_imm_reg\,
      Q => wb_read_imm_reg_1,
      R => reset_bool_for_rst
    );
active_wakeup_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFEFFFEFFFEAAAA"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep_0\,
      I1 => \^suspend\,
      I2 => \^sleep_decode\,
      I3 => \^hibernate\,
      I4 => wakeup_i(0),
      I5 => wakeup_i(1),
      O => active_wakeup0
    );
active_wakeup_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => active_wakeup0,
      Q => \^active_wakeup\,
      R => reset_bool_for_rst
    );
\bp0_branch_target[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(31),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(29),
      O => \bp0_branch_target[0]_i_2_n_0\
    );
\bp0_branch_target[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(21),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(19),
      O => \bp0_branch_target[10]_i_1_n_0\
    );
\bp0_branch_target[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(20),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(18),
      O => \bp0_branch_target[11]_i_1_n_0\
    );
\bp0_branch_target[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(19),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(17),
      O => \bp0_branch_target[12]_i_1_n_0\
    );
\bp0_branch_target[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(18),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(16),
      O => \bp0_branch_target[13]_i_1_n_0\
    );
\bp0_branch_target[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(17),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(15),
      O => \bp0_branch_target[14]_i_1_n_0\
    );
\bp0_branch_target[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(16),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(14),
      O => \bp0_branch_target[15]_i_1_n_0\
    );
\bp0_branch_target[16]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(15),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(13),
      O => \bp0_branch_target[16]_i_1_n_0\
    );
\bp0_branch_target[17]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(14),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(12),
      O => \bp0_branch_target[17]_i_1_n_0\
    );
\bp0_branch_target[18]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(13),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(11),
      O => \bp0_branch_target[18]_i_1_n_0\
    );
\bp0_branch_target[19]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(12),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(10),
      O => \bp0_branch_target[19]_i_1_n_0\
    );
\bp0_branch_target[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(30),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(28),
      O => \bp0_branch_target[1]_i_1_n_0\
    );
\bp0_branch_target[20]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(11),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(9),
      O => \bp0_branch_target[20]_i_1_n_0\
    );
\bp0_branch_target[21]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(10),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(8),
      O => \bp0_branch_target[21]_i_1_n_0\
    );
\bp0_branch_target[22]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(9),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(7),
      O => \bp0_branch_target[22]_i_1_n_0\
    );
\bp0_branch_target[23]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(8),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(6),
      O => \bp0_branch_target[23]_i_1_n_0\
    );
\bp0_branch_target[24]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(7),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(5),
      O => \bp0_branch_target[24]_i_1_n_0\
    );
\bp0_branch_target[25]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(6),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(4),
      O => \bp0_branch_target[25]_i_1_n_0\
    );
\bp0_branch_target[26]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(5),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(3),
      O => \bp0_branch_target[26]_i_1_n_0\
    );
\bp0_branch_target[27]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(4),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(2),
      O => \bp0_branch_target[27]_i_1_n_0\
    );
\bp0_branch_target[28]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(3),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(1),
      O => \bp0_branch_target[28]_i_1_n_0\
    );
\bp0_branch_target[29]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(2),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(0),
      O => \bp0_branch_target[29]_i_1_n_0\
    );
\bp0_branch_target[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(29),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(27),
      O => \bp0_branch_target[2]_i_1_n_0\
    );
\bp0_branch_target[30]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(1),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => ex_alu_result(1),
      O => \bp0_branch_target[30]_i_1_n_0\
    );
\bp0_branch_target[31]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(0),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => ex_alu_result(0),
      O => \bp0_branch_target[31]_i_1_n_0\
    );
\bp0_branch_target[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(28),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(26),
      O => \bp0_branch_target[3]_i_1_n_0\
    );
\bp0_branch_target[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(27),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(25),
      O => \bp0_branch_target[4]_i_1_n_0\
    );
\bp0_branch_target[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(26),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(24),
      O => \bp0_branch_target[5]_i_1_n_0\
    );
\bp0_branch_target[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(25),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(23),
      O => \bp0_branch_target[6]_i_1_n_0\
    );
\bp0_branch_target[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(24),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(22),
      O => \bp0_branch_target[7]_i_1_n_0\
    );
\bp0_branch_target[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(23),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(21),
      O => \bp0_branch_target[8]_i_1_n_0\
    );
\bp0_branch_target[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBFFF00008000"
    )
        port map (
      I0 => \bp0_branch_target_reg[0]_0\(22),
      I1 => wb_exception_raw_kind(30),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(31),
      I5 => \bp0_branch_target_reg[0]_1\(20),
      O => \bp0_branch_target[9]_i_1_n_0\
    );
\bp0_branch_target_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[0]_i_2_n_0\,
      Q => bp0_branch_target(0),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[10]_i_1_n_0\,
      Q => bp0_branch_target(10),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[11]_i_1_n_0\,
      Q => bp0_branch_target(11),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[12]_i_1_n_0\,
      Q => bp0_branch_target(12),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[13]_i_1_n_0\,
      Q => bp0_branch_target(13),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[14]_i_1_n_0\,
      Q => bp0_branch_target(14),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[15]_i_1_n_0\,
      Q => bp0_branch_target(15),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[16]_i_1_n_0\,
      Q => bp0_branch_target(16),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[17]_i_1_n_0\,
      Q => bp0_branch_target(17),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[18]_i_1_n_0\,
      Q => bp0_branch_target(18),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[19]_i_1_n_0\,
      Q => bp0_branch_target(19),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[1]_i_1_n_0\,
      Q => bp0_branch_target(1),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[20]_i_1_n_0\,
      Q => bp0_branch_target(20),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[21]_i_1_n_0\,
      Q => bp0_branch_target(21),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[22]_i_1_n_0\,
      Q => bp0_branch_target(22),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[23]_i_1_n_0\,
      Q => bp0_branch_target(23),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[24]_i_1_n_0\,
      Q => bp0_branch_target(24),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[25]_i_1_n_0\,
      Q => bp0_branch_target(25),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[26]_i_1_n_0\,
      Q => bp0_branch_target(26),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[27]_i_1_n_0\,
      Q => bp0_branch_target(27),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[28]_i_1_n_0\,
      Q => bp0_branch_target(28),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[29]_i_1_n_0\,
      Q => bp0_branch_target(29),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[2]_i_1_n_0\,
      Q => bp0_branch_target(2),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[30]_i_1_n_0\,
      Q => bp0_branch_target(30),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[31]_i_1_n_0\,
      Q => bp0_branch_target(31),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[3]_i_1_n_0\,
      Q => bp0_branch_target(3),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[4]_i_1_n_0\,
      Q => bp0_branch_target(4),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[5]_i_1_n_0\,
      Q => bp0_branch_target(5),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[6]_i_1_n_0\,
      Q => bp0_branch_target(6),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[7]_i_1_n_0\,
      Q => bp0_branch_target(7),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[8]_i_1_n_0\,
      Q => bp0_branch_target(8),
      R => reset_bool_for_rst
    );
\bp0_branch_target_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Jump_Logic_I1_n_9,
      D => \bp0_branch_target[9]_i_1_n_0\,
      Q => bp0_branch_target(9),
      R => reset_bool_for_rst
    );
bp0_dead_fetch_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Kill_Fetch_MMU_Carry_n_3,
      Q => \^bp0_dead_fetch_hold\,
      R => '0'
    );
bp0_jump_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^bp1_raw_valid_reg_1\,
      D => bp0_jump0,
      Q => bp0_jump,
      R => reset_bool_for_rst
    );
bp0_keep_jump_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Jump_Logic_I1_n_10,
      Q => bp0_keep_jump,
      R => '0'
    );
bp0_raw_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0101010101000101"
    )
        port map (
      I0 => bp0_raw_valid_reg_2,
      I1 => \^wb_halted\,
      I2 => bp0_raw_valid_reg_1,
      I3 => ex_gpr_write_addr(4),
      I4 => \^ex_mbar_decode\,
      I5 => \Using_FPGA.Native_i_2__5_n_0\,
      O => bp0_raw_valid0
    );
bp0_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^bp1_raw_valid_reg_1\,
      D => bp0_raw_valid0,
      Q => \^bp0_raw_valid_reg_0\,
      R => reset_bool_for_rst
    );
bp1_dead_fetch_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_BP0_FPGA.PR_BP0_And1_n_2\,
      Q => \^bp1_dead_fetch_hold_reg_0\,
      R => '0'
    );
bp1_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => bp1_raw_valid_reg_2,
      Q => \^bp1_raw_valid_reg_0\,
      R => '0'
    );
\cnt_shifts_reg[1]_srl31_i_1\: unisim.vcomponents.LUT3
    generic map(
      INIT => X"04"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep_0\,
      I1 => \^ex_start_div\,
      I2 => EX_Op1_Zero,
      O => wb_exception_from_m3_reg_rep_1
    );
ex_Interrupt_raw_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000080"
    )
        port map (
      I0 => ex_Interrupt_raw_i_2_n_0,
      I1 => \^of_msr_i_reg[22]\(0),
      I2 => Interrupt,
      I3 => of_msr(28),
      I4 => ex_Interrupt_raw_reg_0(0),
      O => of_Interrupt
    );
ex_Interrupt_raw_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"55555555FFFF5557"
    )
        port map (
      I0 => ex_valid_keep,
      I1 => ex_MSR_clear_decode_reg_n_0,
      I2 => ex_MSR_set_decode_reg_n_0,
      I3 => ex_move_to_MSR_instr,
      I4 => M0_Load_Store_Access_DFF_n_1,
      I5 => ex_atomic_instruction_pair,
      O => ex_Interrupt_raw_i_2_n_0
    );
ex_Interrupt_raw_i_3: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8AAAAAA"
    )
        port map (
      I0 => \of_MSR_i_reg[22]_0\(1),
      I1 => ex_dead_valid_hold,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_raw_valid_reg_n_0,
      I4 => ex_clear_msr_bip_instr,
      O => of_msr(28)
    );
ex_Interrupt_raw_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_Interrupt,
      Q => \^ex_interrupt\,
      R => reset_bool_for_rst
    );
ex_Is_BS_Instr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_37,
      Q => \^ex_sel_barrel_res\,
      R => reset_bool_for_rst
    );
ex_MSR_clear_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_MSR_clear_decode,
      Q => ex_MSR_clear_decode_reg_n_0,
      R => reset_bool_for_rst
    );
ex_MSR_set_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_MSR_set_decode,
      Q => ex_MSR_set_decode_reg_n_0,
      R => reset_bool_for_rst
    );
ex_atomic_instruction_pair_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_atomic_instruction_pair0,
      Q => ex_atomic_instruction_pair,
      R => reset_bool_for_rst
    );
ex_branch_with_delayslot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_branch_with_delayslot0,
      Q => ex_branch_with_delayslot,
      R => reset_bool_for_rst
    );
ex_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_byte_access,
      Q => ex_byte_access_i,
      R => reset_bool_for_rst
    );
ex_clear_msr_bip_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => of_clear_msr_bip_hold_reg_n_0,
      I1 => m0_rtid_instr_i_2_n_0,
      I2 => ex_gpr_write_addr(3),
      O => of_clear_msr_bip_hold0
    );
ex_clear_msr_bip_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_clear_msr_bip_hold0,
      Q => ex_clear_msr_bip_instr,
      R => flush_pipe_for_rst
    );
ex_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_ex_complete_in_later_stage,
      Q => ex_complete_in_later_stage,
      R => reset_bool_for_rst
    );
ex_databus_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => p_104_in,
      Q => ex_databus_access_i_reg_n_0,
      R => reset_bool_for_rst
    );
ex_databus_exclusive_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_databus_exclusive_i0,
      Q => ex_databus_exclusive_i_reg_n_0,
      R => reset_bool_for_rst
    );
ex_databus_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_databus_read_i0,
      Q => m0_databus_read_i0,
      R => reset_bool_for_rst
    );
ex_databus_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_43,
      Q => ex_databus_write_i_reg_n_0,
      R => reset_bool_for_rst
    );
ex_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_9\,
      Q => ex_dead_valid_hold,
      R => '0'
    );
ex_delayslot_Instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_delayslot_Instr0,
      Q => ex_delayslot_Instr,
      R => reset_bool_for_rst
    );
ex_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_doublet_access,
      Q => ex_doublet_access_i,
      R => reset_bool_for_rst
    );
ex_first_cycle_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M0_Exception_From_DFF_n_9,
      Q => ex_first_cycle,
      R => '0'
    );
\ex_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(23),
      Q => ex_gpr_write_addr(2),
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(22),
      Q => ex_gpr_write_addr(3),
      R => reset_bool_for_rst
    );
\ex_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(21),
      Q => ex_gpr_write_addr(4),
      R => reset_bool_for_rst
    );
ex_hibernate_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_hibernate_i_reg_0,
      Q => \^hibernate\,
      R => '0'
    );
\ex_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(20),
      Q => \ex_instr_reg_n_0_[11]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(19),
      Q => \ex_instr_reg_n_0_[12]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(18),
      Q => \ex_instr_reg_n_0_[13]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(17),
      Q => \ex_instr_reg_n_0_[14]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(16),
      Q => \ex_instr_reg_n_0_[15]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(15),
      Q => \ex_instr_reg_n_0_[16]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(14),
      Q => \ex_instr_reg_n_0_[17]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(13),
      Q => \ex_instr_reg_n_0_[18]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(12),
      Q => \ex_instr_reg_n_0_[19]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(11),
      Q => \ex_instr_reg_n_0_[20]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(8),
      Q => \ex_instr_reg_n_0_[23]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(7),
      Q => \ex_instr_reg_n_0_[24]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(4),
      Q => \ex_instr_reg_n_0_[27]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(3),
      Q => \ex_instr_reg_n_0_[28]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(2),
      Q => \ex_instr_reg_n_0_[29]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(1),
      Q => \ex_instr_reg_n_0_[30]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(0),
      Q => \ex_instr_reg_n_0_[31]\,
      R => reset_bool_for_rst
    );
\ex_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(25),
      Q => \^ex_logic_op_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\ex_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => \^q\(24),
      Q => \^ex_logic_op_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
ex_is_div_instr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_is_div_instr_i_reg_1,
      Q => \^ex_is_div_instr_i_reg_0\,
      R => '0'
    );
ex_jump_nodelay_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_jump_nodelay0,
      Q => ex_jump_nodelay,
      R => '0'
    );
ex_load_alu_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_load_alu_carry2_out,
      Q => ex_load_alu_carry_reg_n_0,
      R => reset_bool_for_rst
    );
ex_load_shift_carry_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_load_shift_carry0,
      Q => ex_load_shift_carry,
      R => reset_bool_for_rst
    );
ex_m0_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_m0_complete_in_later_stage,
      Q => ex_m0_complete_in_later_stage,
      R => reset_bool_for_rst
    );
ex_m1_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_m1_complete_in_later_stage,
      Q => ex_m2_complete_in_later_stage,
      R => reset_bool_for_rst
    );
ex_m3_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_42,
      Q => ex_m3_complete_in_later_stage,
      R => reset_bool_for_rst
    );
ex_mbar_decode_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_decode_reg_0,
      Q => \^ex_mbar_decode\,
      R => '0'
    );
ex_mbar_is_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_mbar_is_sleep0,
      Q => ex_mbar_is_sleep,
      R => reset_bool_for_rst
    );
ex_mbar_sleep_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000BAAAAAAA"
    )
        port map (
      I0 => ex_mbar_sleep,
      I1 => \Using_FPGA.Native_i_2__5_n_0\,
      I2 => \^ex_mbar_decode\,
      I3 => ex_mbar_is_sleep,
      I4 => ex_first_cycle,
      I5 => ex_mbar_sleep_i_2_n_0,
      O => ex_mbar_sleep_i_1_n_0
    );
ex_mbar_sleep_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => reset_bool_for_rst,
      I1 => \^active_wakeup\,
      O => ex_mbar_sleep_i_2_n_0
    );
ex_mbar_sleep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_sleep_i_1_n_0,
      Q => ex_mbar_sleep,
      R => '0'
    );
ex_mbar_wait_1_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"1F1F1F111F1F1F1F"
    )
        port map (
      I0 => Pause_Ack_i_2_n_0,
      I1 => ex_gpr_write_addr(3),
      I2 => ex_gpr_write_addr(4),
      I3 => \^bp1_raw_valid_reg_0\,
      I4 => \^bp0_raw_valid_reg_0\,
      I5 => ex_mbar_wait_1_i_2_n_0,
      O => ex_mbar_wait_10
    );
ex_mbar_wait_1_i_2: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0001"
    )
        port map (
      I0 => \^if0_raw_valid\,
      I1 => \^s_0\,
      I2 => \^if4_raw_valid_reg_0\,
      I3 => \^if3_raw_valid_reg_0\,
      O => ex_mbar_wait_1_i_2_n_0
    );
ex_mbar_wait_1_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_mbar_wait_10,
      Q => ex_mbar_wait_1,
      R => reset_bool_for_rst
    );
ex_move_to_MSR_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_move_to_MSR_instr35_out,
      Q => ex_move_to_MSR_instr,
      R => reset_bool_for_rst
    );
\ex_opcode_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(0),
      Q => ex_opcode(0),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(1),
      Q => ex_opcode(1),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(2),
      Q => ex_opcode(2),
      R => reset_bool_for_rst
    );
\ex_opcode_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_instr(3),
      Q => ex_opcode(3),
      R => reset_bool_for_rst
    );
ex_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M0_Exception_From_DFF_n_3,
      Q => ex_raw_valid_reg_n_0,
      R => '0'
    );
ex_read_imm_reg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000AAAA2AAA"
    )
        port map (
      I0 => of_read_imm_reg_raw,
      I1 => wb_exception_raw_kind(31),
      I2 => wb_abort_div,
      I3 => wb_exception_raw_kind(28),
      I4 => wb_exception_raw_kind(30),
      I5 => \wb_PC_i_reg[31]\,
      O => of_read_imm_reg
    );
ex_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_read_imm_reg,
      Q => ex_read_imm_reg,
      R => reset_bool_for_rst
    );
ex_reservation_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_8\,
      Q => ex_reservation,
      R => '0'
    );
ex_sel_alu_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_44,
      Q => \^ex_sel_alu_res\,
      S => reset_bool_for_rst
    );
ex_set_bip_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => ex_set_bip,
      Q => ex_set_bip_reg_n_0,
      R => reset_bool_for_rst
    );
ex_set_msr_ee_instr_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"BA"
    )
        port map (
      I0 => of_set_msr_ee_hold_reg_n_0,
      I1 => m0_rtid_instr_i_2_n_0,
      I2 => ex_gpr_write_addr(2),
      O => of_set_msr_ee_hold0
    );
ex_set_msr_ee_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_set_msr_ee_hold0,
      Q => ex_set_msr_ee_instr,
      R => flush_pipe_for_rst
    );
ex_set_msr_ie_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => of_set_msr_ie_hold_reg_n_0,
      I1 => of_set_msr_ie,
      O => of_set_msr_ie_hold0
    );
ex_set_msr_ie_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_set_msr_ie_hold0,
      Q => ex_set_msr_ie_instr,
      R => flush_pipe_for_rst
    );
ex_sleep_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_sleep_i_reg_0,
      Q => \^sleep_decode\,
      R => '0'
    );
ex_start_div_raw_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => PREFETCH_BUFFER_I1_n_101,
      Q => ex_start_div_raw,
      R => '0'
    );
ex_suspend_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => ex_suspend_i_reg_0,
      Q => \^suspend\,
      R => '0'
    );
ex_valid_keep_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => of_next_ex_valid,
      Q => ex_valid_keep,
      R => flush_pipe_for_rst
    );
if0_pause_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Pause,
      Q => \^if0_pause\,
      R => reset_bool_for_rst
    );
if0_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if0_raw_valid_reg_0,
      Q => \^if0_raw_valid\,
      R => reset_bool_for_rst
    );
if2_dead_fetch_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1_n_1\,
      Q => if2_dead_fetch_hold_reg_n_0,
      R => '0'
    );
if2_ibus_access_raw_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if2_ibus_access_raw_reg_0,
      Q => \^d\(46),
      R => '0'
    );
if2_ibus_first_cycle_raw_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Kill_Fetch_MMU_Carry_n_1,
      Q => \^d\(45),
      R => '0'
    );
if2_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if2_raw_valid_reg_1,
      Q => \^s_0\,
      R => '0'
    );
if3_dead_fetch_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_IF2_FPGA.PR_IF2_And2_n_3\,
      Q => if3_dead_fetch_hold_reg_n_0,
      R => '0'
    );
if3_ibus_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^if2_piperun\,
      D => \^d\(46),
      Q => if3_ibus_access_i_reg_n_0,
      R => reset_bool_for_rst
    );
if3_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if3_raw_valid_reg_1,
      Q => \^if3_raw_valid_reg_0\,
      R => '0'
    );
if4_dead_fetch_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_IF3_FPGA.PR_IF3_And3_n_3\,
      Q => if4_dead_fetch_hold_reg_n_0,
      R => '0'
    );
if4_ibus_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => \^if3_piperun\,
      D => if3_ibus_access_i_reg_n_0,
      Q => if4_ibus_access_i_reg_n_0,
      R => reset_bool_for_rst
    );
if4_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => if4_raw_valid_reg_1,
      Q => \^if4_raw_valid_reg_0\,
      R => '0'
    );
keep_jump_taken_with_ds_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => Jump_Logic_I1_n_8,
      Q => keep_jump_taken_with_ds,
      R => '0'
    );
\m0_Ex_Result_i[0]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF000044404440"
    )
        port map (
      I0 => \m0_Ex_Result_i[0]_i_2_n_0\,
      I1 => \^ex_enable_sext_shift\,
      I2 => \out\,
      I3 => \^ex_sext_op_reg[0]_0\(1),
      I4 => \bp0_branch_target_reg[0]_1\(29),
      I5 => \^ex_sel_alu_res\,
      O => \^ex_enable_sext_shift_reg_2\(16)
    );
\m0_Ex_Result_i[0]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"A202A2A2A222A222"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => ex_shift_op(0),
      I4 => EX_CarryIn,
      I5 => ex_shift_op(1),
      O => \m0_Ex_Result_i[0]_i_2_n_0\
    );
\m0_Ex_Result_i[10]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[10]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(19),
      O => \^ex_enable_sext_shift_reg_2\(6)
    );
\m0_Ex_Result_i[10]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(21),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(22),
      O => \m0_Ex_Result_i[10]_i_2_n_0\
    );
\m0_Ex_Result_i[11]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[11]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(18),
      O => \^ex_enable_sext_shift_reg_2\(5)
    );
\m0_Ex_Result_i[11]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(20),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(21),
      O => \m0_Ex_Result_i[11]_i_2_n_0\
    );
\m0_Ex_Result_i[12]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[12]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(17),
      O => \^ex_enable_sext_shift_reg_2\(4)
    );
\m0_Ex_Result_i[12]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(19),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(20),
      O => \m0_Ex_Result_i[12]_i_2_n_0\
    );
\m0_Ex_Result_i[13]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[13]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(16),
      O => \^ex_enable_sext_shift_reg_2\(3)
    );
\m0_Ex_Result_i[13]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(18),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(19),
      O => \m0_Ex_Result_i[13]_i_2_n_0\
    );
\m0_Ex_Result_i[14]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[14]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(15),
      O => \^ex_enable_sext_shift_reg_2\(2)
    );
\m0_Ex_Result_i[14]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(17),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(18),
      O => \m0_Ex_Result_i[14]_i_2_n_0\
    );
\m0_Ex_Result_i[15]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[15]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(14),
      O => \^ex_enable_sext_shift_reg_2\(1)
    );
\m0_Ex_Result_i[15]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(16),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(17),
      O => \m0_Ex_Result_i[15]_i_2_n_0\
    );
\m0_Ex_Result_i[1]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[1]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(28),
      O => \^ex_enable_sext_shift_reg_2\(15)
    );
\m0_Ex_Result_i[1]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(30),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(31),
      O => \m0_Ex_Result_i[1]_i_2_n_0\
    );
\m0_Ex_Result_i[24]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(0),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      O => \^ex_sext_op_reg[1]_0\
    );
\m0_Ex_Result_i[26]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEAAAEAEAEAAAAAA"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => \^ex_enable_sext_shift\,
      I2 => \^ex_clz_instr\,
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(6),
      I4 => \^ex_sext_op_reg[1]_0\,
      I5 => \Use_HW_BS.mem_mux3_reg[28]\(5),
      O => ex_sel_alu_reg_1
    );
\m0_Ex_Result_i[27]_i_3\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FF1FFFDF"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(4),
      I1 => \^ex_sext_op_reg[1]_0\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_clz_instr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(5),
      I5 => \^ex_sel_alu_res\,
      O => \EX_Op1_reg[27]\
    );
\m0_Ex_Result_i[28]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"0000EA2A00000000"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(3),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(4),
      I4 => \^ex_clz_instr\,
      I5 => \^ex_enable_sext_shift\,
      O => \EX_Op1_reg[28]\
    );
\m0_Ex_Result_i[29]_i_9\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5777F777"
    )
        port map (
      I0 => \^ex_enable_sext_shift\,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(2),
      I2 => \^ex_sext_op_reg[0]_0\(1),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(3),
      O => \^ex_enable_sext_shift_reg_0\
    );
\m0_Ex_Result_i[2]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[2]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(27),
      O => \^ex_enable_sext_shift_reg_2\(14)
    );
\m0_Ex_Result_i[2]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(29),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(30),
      O => \m0_Ex_Result_i[2]_i_2_n_0\
    );
\m0_Ex_Result_i[30]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AB00ABAB"
    )
        port map (
      I0 => \m0_Ex_Result_i[30]_i_2_n_0\,
      I1 => \^ex_pattern_cmp_sel\,
      I2 => \m0_Ex_Result_i_reg[30]\,
      I3 => ex_alu_result(1),
      I4 => \^ex_sel_alu_res\,
      O => \^ex_enable_sext_shift_reg_2\(0)
    );
\m0_Ex_Result_i[30]_i_2\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AAAAAABAAABAAABA"
    )
        port map (
      I0 => \^ex_sel_alu_res\,
      I1 => \m0_Ex_Result_i_reg[30]_0\,
      I2 => \^ex_pattern_cmp_sel\,
      I3 => \^ex_logic_op_reg[0]_0\(3),
      I4 => \m0_Ex_Result_i_reg[30]_1\,
      I5 => \m0_Ex_Result_i_reg[30]_2\,
      O => \m0_Ex_Result_i[30]_i_2_n_0\
    );
\m0_Ex_Result_i[30]_i_7\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"5777F777"
    )
        port map (
      I0 => \^ex_enable_sext_shift\,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(1),
      I2 => \^ex_sext_op_reg[0]_0\(1),
      I3 => \^ex_sext_op_reg[0]_0\(0),
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(2),
      O => \^ex_enable_sext_shift_reg_1\
    );
\m0_Ex_Result_i[31]_i_4\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AEAAAEAEAEAAAAAA"
    )
        port map (
      I0 => \^ex_pattern_cmp_sel\,
      I1 => \^ex_enable_sext_shift\,
      I2 => \^ex_clz_instr\,
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(1),
      I4 => \^ex_sext_op_reg[1]_0\,
      I5 => \Use_HW_BS.mem_mux3_reg[28]\(0),
      O => EX_Pattern_Cmp_Sel_reg_0
    );
\m0_Ex_Result_i[3]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[3]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(26),
      O => \^ex_enable_sext_shift_reg_2\(13)
    );
\m0_Ex_Result_i[3]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(28),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(29),
      O => \m0_Ex_Result_i[3]_i_2_n_0\
    );
\m0_Ex_Result_i[4]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[4]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(25),
      O => \^ex_enable_sext_shift_reg_2\(12)
    );
\m0_Ex_Result_i[4]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(27),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(28),
      O => \m0_Ex_Result_i[4]_i_2_n_0\
    );
\m0_Ex_Result_i[5]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[5]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(24),
      O => \^ex_enable_sext_shift_reg_2\(11)
    );
\m0_Ex_Result_i[5]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(26),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(27),
      O => \m0_Ex_Result_i[5]_i_2_n_0\
    );
\m0_Ex_Result_i[6]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[6]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(23),
      O => \^ex_enable_sext_shift_reg_2\(10)
    );
\m0_Ex_Result_i[6]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(25),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(26),
      O => \m0_Ex_Result_i[6]_i_2_n_0\
    );
\m0_Ex_Result_i[7]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[7]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(22),
      O => \^ex_enable_sext_shift_reg_2\(9)
    );
\m0_Ex_Result_i[7]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(24),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(25),
      O => \m0_Ex_Result_i[7]_i_2_n_0\
    );
\m0_Ex_Result_i[8]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[8]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(21),
      O => \^ex_enable_sext_shift_reg_2\(8)
    );
\m0_Ex_Result_i[8]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(23),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(24),
      O => \m0_Ex_Result_i[8]_i_2_n_0\
    );
\m0_Ex_Result_i[9]_i_1\: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FF00FFE0000000E0"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \out\,
      I2 => \^ex_enable_sext_shift\,
      I3 => \^ex_sel_alu_res\,
      I4 => \m0_Ex_Result_i[9]_i_2_n_0\,
      I5 => \bp0_branch_target_reg[0]_1\(20),
      O => \^ex_enable_sext_shift_reg_2\(7)
    );
\m0_Ex_Result_i[9]_i_2\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"02A2"
    )
        port map (
      I0 => \^ex_sext_op_reg[0]_0\(1),
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(22),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(23),
      O => \m0_Ex_Result_i[9]_i_2_n_0\
    );
m0_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_byte_access_i,
      Q => m0_byte_access_i,
      R => reset_bool_for_rst
    );
m0_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_m0_complete_in_later_stage,
      Q => m0_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m0_databus_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => m0_databus_read_i0,
      Q => m0_databus_read_i_reg_n_0,
      R => reset_bool_for_rst
    );
m0_databus_write_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"AA8A"
    )
        port map (
      I0 => ex_databus_write_i_reg_n_0,
      I1 => ex_reservation,
      I2 => ex_databus_exclusive_i_reg_n_0,
      I3 => m0_databus_read_i0,
      O => m0_databus_write_i0
    );
m0_databus_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => m0_databus_write_i0,
      Q => m0_databus_write_i_reg_n_0,
      R => reset_bool_for_rst
    );
m0_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M0_FPGA.PR_M0_And5_n_2\,
      Q => m0_dead_valid_hold,
      R => '0'
    );
m0_delay_slot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_delayslot_Instr,
      Q => m0_delay_slot,
      R => reset_bool_for_rst
    );
m0_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_doublet_access_i,
      Q => m0_doublet_access_i,
      R => reset_bool_for_rst
    );
\m0_exception_raw_kind[28]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABAAAAAA"
    )
        port map (
      I0 => \m0_exception_raw_kind_reg[31]_0\,
      I1 => ex_dead_valid_hold,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_raw_valid_reg_n_0,
      I4 => \^ex_interrupt\,
      O => ex_exception_kind(3)
    );
\m0_exception_raw_kind_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_exception_kind(3),
      Q => m0_exception_raw_kind(28),
      R => reset_bool_for_rst
    );
\m0_exception_raw_kind_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_2\,
      Q => m0_exception_raw_kind(30),
      R => '0'
    );
\m0_exception_raw_kind_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \m0_exception_raw_kind_reg[31]_0\,
      Q => m0_exception_raw_kind(31),
      R => reset_bool_for_rst
    );
\m0_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(1),
      Q => m0_gpr_write_addr(0),
      R => flush_pipe_for_rst
    );
\m0_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(0),
      Q => m0_gpr_write_addr(1),
      R => flush_pipe_for_rst
    );
\m0_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(2),
      Q => m0_gpr_write_addr(2),
      R => flush_pipe_for_rst
    );
\m0_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(3),
      Q => m0_gpr_write_addr(3),
      R => flush_pipe_for_rst
    );
\m0_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(4),
      Q => m0_gpr_write_addr(4),
      R => flush_pipe_for_rst
    );
\m0_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_opcode(0),
      Q => m0_instr(0),
      R => reset_bool_for_rst
    );
\m0_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(4),
      Q => m0_instr(10),
      R => reset_bool_for_rst
    );
\m0_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[11]\,
      Q => m0_instr(11),
      R => reset_bool_for_rst
    );
\m0_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[12]\,
      Q => m0_instr(12),
      R => reset_bool_for_rst
    );
\m0_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[13]\,
      Q => m0_instr(13),
      R => reset_bool_for_rst
    );
\m0_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[14]\,
      Q => m0_instr(14),
      R => reset_bool_for_rst
    );
\m0_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[15]\,
      Q => m0_instr(15),
      R => reset_bool_for_rst
    );
\m0_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[16]\,
      Q => m0_instr(16),
      R => reset_bool_for_rst
    );
\m0_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[17]\,
      Q => m0_instr(17),
      R => reset_bool_for_rst
    );
\m0_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[18]\,
      Q => m0_instr(18),
      R => reset_bool_for_rst
    );
\m0_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[19]\,
      Q => m0_instr(19),
      R => reset_bool_for_rst
    );
\m0_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_opcode(1),
      Q => m0_instr(1),
      R => reset_bool_for_rst
    );
\m0_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[20]\,
      Q => m0_instr(20),
      R => reset_bool_for_rst
    );
\m0_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_left_shift,
      Q => m0_instr(21),
      R => reset_bool_for_rst
    );
\m0_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_arith_shift\,
      Q => m0_instr(22),
      R => reset_bool_for_rst
    );
\m0_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[23]\,
      Q => m0_instr(23),
      R => reset_bool_for_rst
    );
\m0_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[24]\,
      Q => m0_instr(24),
      R => reset_bool_for_rst
    );
\m0_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_shift_op(0),
      Q => m0_instr(25),
      R => reset_bool_for_rst
    );
\m0_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_shift_op(1),
      Q => m0_instr(26),
      R => reset_bool_for_rst
    );
\m0_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[27]\,
      Q => m0_instr(27),
      R => reset_bool_for_rst
    );
\m0_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[28]\,
      Q => m0_instr(28),
      R => reset_bool_for_rst
    );
\m0_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[29]\,
      Q => m0_instr(29),
      R => reset_bool_for_rst
    );
\m0_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_opcode(2),
      Q => m0_instr(2),
      R => reset_bool_for_rst
    );
\m0_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[30]\,
      Q => m0_instr(30),
      R => reset_bool_for_rst
    );
\m0_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \ex_instr_reg_n_0_[31]\,
      Q => m0_instr(31),
      R => reset_bool_for_rst
    );
\m0_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_opcode(3),
      Q => m0_instr(3),
      R => reset_bool_for_rst
    );
\m0_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(3),
      Q => m0_instr(4),
      R => reset_bool_for_rst
    );
\m0_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(2),
      Q => m0_instr(5),
      R => reset_bool_for_rst
    );
\m0_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(1),
      Q => m0_instr(6),
      R => reset_bool_for_rst
    );
\m0_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_logic_op_reg[0]_0\(0),
      Q => m0_instr(7),
      R => reset_bool_for_rst
    );
\m0_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(2),
      Q => m0_instr(8),
      R => reset_bool_for_rst
    );
\m0_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_gpr_write_addr(3),
      Q => m0_instr(9),
      R => reset_bool_for_rst
    );
m0_is_bs_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^ex_sel_barrel_res\,
      Q => \^m0_sel_barrel_res\,
      R => reset_bool_for_rst
    );
m0_m1_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_m2_complete_in_later_stage,
      Q => m0_m2_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m0_m3_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_m3_complete_in_later_stage,
      Q => m0_m3_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m0_msr_clear_bip_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_clear_msr_bip_instr,
      I1 => ex_raw_valid_reg_n_0,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_dead_valid_hold,
      O => ex_msr_clear_bip
    );
m0_msr_clear_bip_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_msr_clear_bip,
      Q => m0_msr_clear_bip_i,
      R => reset_bool_for_rst
    );
m0_msr_set_ie_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_set_msr_ie_instr,
      I1 => ex_raw_valid_reg_n_0,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_dead_valid_hold,
      O => ex_msr_set_ie
    );
m0_msr_set_ie_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_msr_set_ie,
      Q => m0_msr_set_ie_i,
      R => reset_bool_for_rst
    );
m0_not_mul_op_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => \^using_mul_instr.ex_not_mul_op_i_reg_0\,
      Q => m0_not_mul_op_i_reg_0,
      S => reset_bool_for_rst
    );
m0_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M0_FPGA.PR_M0_And5_n_1\,
      Q => m0_raw_valid_reg_n_0,
      R => '0'
    );
m0_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => ex_read_imm_reg,
      Q => m0_read_imm_reg,
      R => reset_bool_for_rst
    );
m0_rtid_instr_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => ex_gpr_write_addr(4),
      I1 => m0_rtid_instr_i_2_n_0,
      O => of_set_msr_ie
    );
m0_rtid_instr_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFFFFFEFFFFF"
    )
        port map (
      I0 => \Using_FPGA.Native_i_2__5_n_0\,
      I1 => m0_rtid_instr_i_3_n_0,
      I2 => ex_opcode(3),
      I3 => ex_opcode(1),
      I4 => ex_opcode(0),
      I5 => \^ex_logic_op_reg[0]_0\(3),
      O => m0_rtid_instr_i_2_n_0
    );
m0_rtid_instr_i_3: unisim.vcomponents.LUT4
    generic map(
      INIT => X"EFFF"
    )
        port map (
      I0 => \^ex_interrupt\,
      I1 => \m0_exception_raw_kind_reg[31]_0\,
      I2 => ex_opcode(2),
      I3 => \^ex_logic_op_reg[0]_0\(2),
      O => m0_rtid_instr_i_3_n_0
    );
m0_rtid_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => ex_PipeRun_for_ce,
      D => of_set_msr_ie,
      Q => m0_rtid_instr,
      R => '0'
    );
m1_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_byte_access_i,
      Q => \^m1_byte_access\,
      R => reset_bool_for_rst
    );
m1_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_m2_complete_in_later_stage,
      Q => m1_m2_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m1_databus_access_from_m0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m1_databus_access_from_m00,
      Q => m1_databus_access,
      R => reset_bool_for_rst
    );
m1_databus_addr_from_m0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M0_Exception_From_DFF_n_11,
      Q => \^d\(2),
      R => '0'
    );
m1_databus_read_from_m0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_databus_read_i_reg_n_0,
      Q => \^d\(1),
      R => reset_bool_for_rst
    );
m1_databus_write_from_m0_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_databus_write_i_reg_n_0,
      Q => \^d\(0),
      R => reset_bool_for_rst
    );
m1_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M1_FPGA.PR_M1_And3_n_8\,
      Q => m1_dead_valid_hold,
      R => '0'
    );
m1_delay_slot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_delay_slot,
      Q => m1_delay_slot,
      R => reset_bool_for_rst
    );
m1_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_doublet_access_i,
      Q => \^m1_doublet_access\,
      R => reset_bool_for_rst
    );
\m1_exception_raw_kind_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_exception_kind(28),
      Q => m1_exception_raw_kind(28),
      R => reset_bool_for_rst
    );
\m1_exception_raw_kind_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_exception_kind(30),
      Q => m1_exception_raw_kind(30),
      R => reset_bool_for_rst
    );
\m1_exception_raw_kind_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_exception_kind(31),
      Q => m1_exception_raw_kind(31),
      R => reset_bool_for_rst
    );
\m1_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_gpr_write_addr(0),
      Q => m1_gpr_write_addr(0),
      R => flush_pipe_for_rst
    );
\m1_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_gpr_write_addr(1),
      Q => m1_gpr_write_addr(1),
      R => flush_pipe_for_rst
    );
\m1_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_gpr_write_addr(2),
      Q => m1_gpr_write_addr(2),
      R => flush_pipe_for_rst
    );
\m1_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_gpr_write_addr(3),
      Q => m1_gpr_write_addr(3),
      R => flush_pipe_for_rst
    );
\m1_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_gpr_write_addr(4),
      Q => m1_gpr_write_addr(4),
      R => flush_pipe_for_rst
    );
\m1_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(0),
      Q => m1_instr(0),
      R => reset_bool_for_rst
    );
\m1_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(10),
      Q => m1_instr(10),
      R => reset_bool_for_rst
    );
\m1_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(11),
      Q => m1_instr(11),
      R => reset_bool_for_rst
    );
\m1_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(12),
      Q => m1_instr(12),
      R => reset_bool_for_rst
    );
\m1_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(13),
      Q => m1_instr(13),
      R => reset_bool_for_rst
    );
\m1_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(14),
      Q => m1_instr(14),
      R => reset_bool_for_rst
    );
\m1_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(15),
      Q => m1_instr(15),
      R => reset_bool_for_rst
    );
\m1_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(16),
      Q => m1_instr(16),
      R => reset_bool_for_rst
    );
\m1_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(17),
      Q => m1_instr(17),
      R => reset_bool_for_rst
    );
\m1_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(18),
      Q => m1_instr(18),
      R => reset_bool_for_rst
    );
\m1_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(19),
      Q => m1_instr(19),
      R => reset_bool_for_rst
    );
\m1_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(1),
      Q => m1_instr(1),
      R => reset_bool_for_rst
    );
\m1_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(20),
      Q => m1_instr(20),
      R => reset_bool_for_rst
    );
\m1_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(21),
      Q => m1_instr(21),
      R => reset_bool_for_rst
    );
\m1_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(22),
      Q => m1_instr(22),
      R => reset_bool_for_rst
    );
\m1_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(23),
      Q => m1_instr(23),
      R => reset_bool_for_rst
    );
\m1_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(24),
      Q => m1_instr(24),
      R => reset_bool_for_rst
    );
\m1_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(25),
      Q => m1_instr(25),
      R => reset_bool_for_rst
    );
\m1_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(26),
      Q => m1_instr(26),
      R => reset_bool_for_rst
    );
\m1_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(27),
      Q => m1_instr(27),
      R => reset_bool_for_rst
    );
\m1_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(28),
      Q => m1_instr(28),
      R => reset_bool_for_rst
    );
\m1_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(29),
      Q => m1_instr(29),
      R => reset_bool_for_rst
    );
\m1_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(2),
      Q => m1_instr(2),
      R => reset_bool_for_rst
    );
\m1_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(30),
      Q => m1_instr(30),
      R => reset_bool_for_rst
    );
\m1_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(31),
      Q => m1_instr(31),
      R => reset_bool_for_rst
    );
\m1_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(3),
      Q => m1_instr(3),
      R => reset_bool_for_rst
    );
\m1_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(4),
      Q => m1_instr(4),
      R => reset_bool_for_rst
    );
\m1_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(5),
      Q => m1_instr(5),
      R => reset_bool_for_rst
    );
\m1_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(6),
      Q => m1_instr(6),
      R => reset_bool_for_rst
    );
\m1_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(7),
      Q => m1_instr(7),
      R => reset_bool_for_rst
    );
\m1_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(8),
      Q => m1_instr(8),
      R => reset_bool_for_rst
    );
\m1_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_instr(9),
      Q => m1_instr(9),
      R => reset_bool_for_rst
    );
m1_jump_taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_jump_taken,
      Q => m1_jump_taken,
      R => reset_bool_for_rst
    );
m1_m0_sel_res_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => \^m0_sel_barrel_res\,
      I1 => m0_ex_sel_res,
      I2 => m0_sel_mul_res,
      O => m1_m0_sel_res0
    );
m1_m3_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_m3_complete_in_later_stage,
      Q => m1_m3_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m1_msr_clear_bip_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_msr_clear_bip_i,
      Q => m1_msr_clear_bip_i,
      R => reset_bool_for_rst
    );
m1_msr_set_ie_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_msr_set_ie_i,
      Q => m1_msr_set_ie_i,
      R => reset_bool_for_rst
    );
m1_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M1_FPGA.PR_M1_And3_n_7\,
      Q => m1_raw_valid_reg_n_0,
      R => '0'
    );
m1_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_read_imm_reg,
      Q => m1_read_imm_reg,
      R => reset_bool_for_rst
    );
m1_rtid_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m0_PipeRun_for_ce,
      D => m0_rtid_instr,
      Q => m1_rtid_instr,
      R => '0'
    );
m2_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => \^m1_byte_access\,
      Q => m2_byte_access_i,
      R => reset_bool_for_rst
    );
m2_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_m2_complete_in_later_stage,
      Q => m2_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m2_databus_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m2_databus_access_i0,
      Q => \^m2_databus_access_i_reg_0\,
      R => reset_bool_for_rst
    );
m2_databus_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => \^d\(1),
      Q => m2_databus_read_i_reg_n_0,
      R => reset_bool_for_rst
    );
m2_databus_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => \^d\(0),
      Q => m2_databus_write,
      R => reset_bool_for_rst
    );
m2_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M2_FPGA.PR_M2_And6_n_6\,
      Q => m2_dead_valid_hold,
      R => '0'
    );
m2_delay_slot_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_delay_slot,
      Q => m2_delay_slot,
      R => reset_bool_for_rst
    );
m2_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => \^m1_doublet_access\,
      Q => m2_doublet_access_i,
      R => reset_bool_for_rst
    );
\m2_exception_raw_kind_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_exception_kind(28),
      Q => m2_exception_raw_kind(28),
      R => reset_bool_for_rst
    );
\m2_exception_raw_kind_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_exception_kind(30),
      Q => m2_exception_raw_kind(30),
      R => reset_bool_for_rst
    );
\m2_exception_raw_kind_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_exception_kind(31),
      Q => m2_exception_raw_kind(31),
      R => reset_bool_for_rst
    );
\m2_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_gpr_write_addr(0),
      Q => m2_gpr_write_addr(0),
      R => flush_pipe_for_rst
    );
\m2_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_gpr_write_addr(1),
      Q => m2_gpr_write_addr(1),
      R => flush_pipe_for_rst
    );
\m2_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_gpr_write_addr(2),
      Q => m2_gpr_write_addr(2),
      R => flush_pipe_for_rst
    );
\m2_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_gpr_write_addr(3),
      Q => m2_gpr_write_addr(3),
      R => flush_pipe_for_rst
    );
\m2_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_gpr_write_addr(4),
      Q => m2_gpr_write_addr(4),
      R => flush_pipe_for_rst
    );
\m2_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(0),
      Q => m2_instr(0),
      R => reset_bool_for_rst
    );
\m2_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(10),
      Q => m2_instr(10),
      R => reset_bool_for_rst
    );
\m2_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(11),
      Q => m2_instr(11),
      R => reset_bool_for_rst
    );
\m2_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(12),
      Q => m2_instr(12),
      R => reset_bool_for_rst
    );
\m2_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(13),
      Q => m2_instr(13),
      R => reset_bool_for_rst
    );
\m2_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(14),
      Q => m2_instr(14),
      R => reset_bool_for_rst
    );
\m2_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(15),
      Q => m2_instr(15),
      R => reset_bool_for_rst
    );
\m2_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(16),
      Q => m2_instr(16),
      R => reset_bool_for_rst
    );
\m2_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(17),
      Q => m2_instr(17),
      R => reset_bool_for_rst
    );
\m2_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(18),
      Q => m2_instr(18),
      R => reset_bool_for_rst
    );
\m2_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(19),
      Q => m2_instr(19),
      R => reset_bool_for_rst
    );
\m2_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(1),
      Q => m2_instr(1),
      R => reset_bool_for_rst
    );
\m2_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(20),
      Q => m2_instr(20),
      R => reset_bool_for_rst
    );
\m2_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(21),
      Q => m2_instr(21),
      R => reset_bool_for_rst
    );
\m2_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(22),
      Q => m2_instr(22),
      R => reset_bool_for_rst
    );
\m2_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(23),
      Q => m2_instr(23),
      R => reset_bool_for_rst
    );
\m2_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(24),
      Q => m2_instr(24),
      R => reset_bool_for_rst
    );
\m2_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(25),
      Q => m2_instr(25),
      R => reset_bool_for_rst
    );
\m2_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(26),
      Q => m2_instr(26),
      R => reset_bool_for_rst
    );
\m2_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(27),
      Q => m2_instr(27),
      R => reset_bool_for_rst
    );
\m2_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(28),
      Q => m2_instr(28),
      R => reset_bool_for_rst
    );
\m2_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(29),
      Q => m2_instr(29),
      R => reset_bool_for_rst
    );
\m2_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(2),
      Q => m2_instr(2),
      R => reset_bool_for_rst
    );
\m2_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(30),
      Q => m2_instr(30),
      R => reset_bool_for_rst
    );
\m2_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(31),
      Q => m2_instr(31),
      R => reset_bool_for_rst
    );
\m2_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(3),
      Q => m2_instr(3),
      R => reset_bool_for_rst
    );
\m2_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(4),
      Q => m2_instr(4),
      R => reset_bool_for_rst
    );
\m2_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(5),
      Q => m2_instr(5),
      R => reset_bool_for_rst
    );
\m2_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(6),
      Q => m2_instr(6),
      R => reset_bool_for_rst
    );
\m2_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(7),
      Q => m2_instr(7),
      R => reset_bool_for_rst
    );
\m2_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(8),
      Q => m2_instr(8),
      R => reset_bool_for_rst
    );
\m2_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_instr(9),
      Q => m2_instr(9),
      R => reset_bool_for_rst
    );
m2_jump_taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_jump_taken,
      Q => m2_jump_taken,
      R => reset_bool_for_rst
    );
m2_m1_sel_res_i_1: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^m1_sel_mul_res\,
      I1 => m1_m0_sel_res,
      O => m2_m1_sel_res0
    );
m2_m3_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_m3_complete_in_later_stage,
      Q => m2_m3_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m2_msr_clear_bip_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_msr_clear_bip_i,
      Q => m2_msr_clear_bip_i,
      R => reset_bool_for_rst
    );
m2_msr_set_ie_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_msr_set_ie_i,
      Q => m2_msr_set_ie_i,
      R => reset_bool_for_rst
    );
m2_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M2_FPGA.PR_M2_And6_n_5\,
      Q => \^m2_raw_valid_reg_0\,
      R => '0'
    );
m2_read_imm_reg_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_read_imm_reg,
      Q => m2_read_imm_reg,
      R => reset_bool_for_rst
    );
m2_rtid_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m1_PipeRun_for_ce,
      D => m1_rtid_instr,
      Q => m2_rtid_instr,
      R => '0'
    );
m3_byte_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_byte_access_i,
      Q => m3_byte_access_i_reg_n_0,
      R => reset_bool_for_rst
    );
m3_complete_in_later_stage_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_m3_complete_in_later_stage,
      Q => m3_complete_in_later_stage,
      R => reset_bool_for_rst
    );
m3_databus_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m3_databus_access_i0,
      Q => \^m3_sel_load_res\,
      R => reset_bool_for_rst
    );
m3_databus_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_databus_read_i_reg_n_0,
      Q => m3_databus_read_i_reg_n_0,
      R => reset_bool_for_rst
    );
m3_databus_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_databus_write,
      Q => m3_databus_write_i_reg_n_0,
      R => reset_bool_for_rst
    );
m3_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M3_FPGA.PR_M3_And5_n_5\,
      Q => m3_dead_valid_hold,
      R => '0'
    );
m3_delay_slot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_delay_slot,
      Q => m3_delay_slot_i_reg_n_0,
      R => reset_bool_for_rst
    );
m3_doublet_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_doublet_access_i,
      Q => m3_doublet_access_i_reg_n_0,
      R => reset_bool_for_rst
    );
\m3_exception_raw_kind_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_exception_kind(28),
      Q => m3_exception_raw_kind(28),
      R => reset_bool_for_rst
    );
\m3_exception_raw_kind_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_exception_kind(30),
      Q => m3_exception_raw_kind(30),
      R => reset_bool_for_rst
    );
\m3_exception_raw_kind_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_exception_kind(31),
      Q => m3_exception_raw_kind(31),
      R => reset_bool_for_rst
    );
\m3_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_gpr_write_addr(0),
      Q => m3_gpr_write_addr(0),
      R => flush_pipe_for_rst
    );
\m3_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_gpr_write_addr(1),
      Q => m3_gpr_write_addr(1),
      R => flush_pipe_for_rst
    );
\m3_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_gpr_write_addr(2),
      Q => m3_gpr_write_addr(2),
      R => flush_pipe_for_rst
    );
\m3_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_gpr_write_addr(3),
      Q => m3_gpr_write_addr(3),
      R => flush_pipe_for_rst
    );
\m3_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_gpr_write_addr(4),
      Q => m3_gpr_write_addr(4),
      R => flush_pipe_for_rst
    );
\m3_instr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(0),
      Q => m3_instr(0),
      R => reset_bool_for_rst
    );
\m3_instr_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(10),
      Q => m3_instr(10),
      R => reset_bool_for_rst
    );
\m3_instr_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(11),
      Q => m3_instr(11),
      R => reset_bool_for_rst
    );
\m3_instr_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(12),
      Q => m3_instr(12),
      R => reset_bool_for_rst
    );
\m3_instr_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(13),
      Q => m3_instr(13),
      R => reset_bool_for_rst
    );
\m3_instr_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(14),
      Q => m3_instr(14),
      R => reset_bool_for_rst
    );
\m3_instr_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(15),
      Q => m3_instr(15),
      R => reset_bool_for_rst
    );
\m3_instr_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(16),
      Q => m3_instr(16),
      R => reset_bool_for_rst
    );
\m3_instr_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(17),
      Q => m3_instr(17),
      R => reset_bool_for_rst
    );
\m3_instr_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(18),
      Q => m3_instr(18),
      R => reset_bool_for_rst
    );
\m3_instr_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(19),
      Q => m3_instr(19),
      R => reset_bool_for_rst
    );
\m3_instr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(1),
      Q => m3_instr(1),
      R => reset_bool_for_rst
    );
\m3_instr_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(20),
      Q => m3_instr(20),
      R => reset_bool_for_rst
    );
\m3_instr_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(21),
      Q => m3_instr(21),
      R => reset_bool_for_rst
    );
\m3_instr_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(22),
      Q => m3_instr(22),
      R => reset_bool_for_rst
    );
\m3_instr_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(23),
      Q => m3_instr(23),
      R => reset_bool_for_rst
    );
\m3_instr_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(24),
      Q => m3_instr(24),
      R => reset_bool_for_rst
    );
\m3_instr_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(25),
      Q => m3_instr(25),
      R => reset_bool_for_rst
    );
\m3_instr_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(26),
      Q => m3_instr(26),
      R => reset_bool_for_rst
    );
\m3_instr_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(27),
      Q => m3_instr(27),
      R => reset_bool_for_rst
    );
\m3_instr_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(28),
      Q => m3_instr(28),
      R => reset_bool_for_rst
    );
\m3_instr_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(29),
      Q => m3_instr(29),
      R => reset_bool_for_rst
    );
\m3_instr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(2),
      Q => m3_instr(2),
      R => reset_bool_for_rst
    );
\m3_instr_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(30),
      Q => m3_instr(30),
      R => reset_bool_for_rst
    );
\m3_instr_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(31),
      Q => m3_instr(31),
      R => reset_bool_for_rst
    );
\m3_instr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(3),
      Q => m3_instr(3),
      R => reset_bool_for_rst
    );
\m3_instr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(4),
      Q => m3_instr(4),
      R => reset_bool_for_rst
    );
\m3_instr_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(5),
      Q => m3_instr(5),
      R => reset_bool_for_rst
    );
\m3_instr_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(6),
      Q => m3_instr(6),
      R => reset_bool_for_rst
    );
\m3_instr_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(7),
      Q => m3_instr(7),
      R => reset_bool_for_rst
    );
\m3_instr_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(8),
      Q => m3_instr(8),
      R => reset_bool_for_rst
    );
\m3_instr_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_instr(9),
      Q => m3_instr(9),
      R => reset_bool_for_rst
    );
m3_is_div_instr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_is_div_instr_i_reg_0,
      Q => \^m3_sel_div_res\,
      R => reset_bool_for_rst
    );
m3_jump_taken_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_jump_taken,
      Q => m3_jump_taken,
      R => reset_bool_for_rst
    );
m3_msr_clear_bip_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_msr_clear_bip_i,
      Q => m3_msr_clear_bip_i,
      R => reset_bool_for_rst
    );
m3_msr_set_ie_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_msr_set_ie_i,
      Q => m3_msr_set_ie_i,
      R => reset_bool_for_rst
    );
m3_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M3_FPGA.PR_M3_And5_n_2\,
      Q => \^m3_raw_valid_reg_0\,
      R => '0'
    );
m3_read_imm_reg_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_read_imm_reg,
      Q => m3_read_imm_reg_i_reg_n_0,
      R => reset_bool_for_rst
    );
m3_rtid_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m2_PipeRun_for_ce,
      D => m2_rtid_instr,
      Q => m3_rtid_instr,
      R => '0'
    );
of_MSR_cmb_pipemove_inferred_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(14),
      I2 => ex_MSR_i(10),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(14),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(14)
    );
of_MSR_cmb_pipemove_inferred_i_10: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(5),
      I2 => ex_MSR_i(2),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(5),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(5)
    );
of_MSR_cmb_pipemove_inferred_i_11: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(4),
      I2 => ex_MSR_i(1),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(4),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(4)
    );
of_MSR_cmb_pipemove_inferred_i_12: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFBABB0000AAAA"
    )
        port map (
      I0 => ex_set_bip_reg_n_0,
      I1 => ex_clear_msr_bip_instr,
      I2 => \Use_HW_BS.mem_mux3_reg[28]\(3),
      I3 => ex_move_to_MSR_instr,
      I4 => \Using_FPGA.Native_i_2__5_n_0\,
      I5 => of_MSR_cmb_pipemove_inferred_i_21_n_0,
      O => \^ex_op2_reg[17]\(3)
    );
of_MSR_cmb_pipemove_inferred_i_13: unisim.vcomponents.LUT6
    generic map(
      INIT => X"AFAEA3A2ACAEA0A2"
    )
        port map (
      I0 => of_MSR_cmb_pipemove_inferred_i_22_n_0,
      I1 => ex_load_alu_carry_reg_n_0,
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_load_shift_carry,
      I4 => LO,
      I5 => \Use_HW_BS.mem_mux3_reg[28]\(0),
      O => \^ex_op2_reg[17]\(2)
    );
of_MSR_cmb_pipemove_inferred_i_14: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFAFAEAA"
    )
        port map (
      I0 => of_MSR_cmb_pipemove_inferred_i_23_n_0,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(1),
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_move_to_MSR_instr,
      I4 => ex_set_msr_ie_instr,
      O => \^ex_op2_reg[17]\(1)
    );
of_MSR_cmb_pipemove_inferred_i_15: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(0),
      I2 => ex_MSR_i(0),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(0),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(0)
    );
of_MSR_cmb_pipemove_inferred_i_16: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_MSR_set_decode_reg_n_0,
      I1 => ex_raw_valid_reg_n_0,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_dead_valid_hold,
      O => \^ex_msrset\
    );
of_MSR_cmb_pipemove_inferred_i_17: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_MSR_clear_decode_reg_n_0,
      I1 => ex_raw_valid_reg_n_0,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_dead_valid_hold,
      O => \^ex_msrclr\
    );
of_MSR_cmb_pipemove_inferred_i_18: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0008"
    )
        port map (
      I0 => ex_move_to_MSR_instr,
      I1 => ex_raw_valid_reg_n_0,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_dead_valid_hold,
      O => ex_mts_msr
    );
of_MSR_cmb_pipemove_inferred_i_19: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFCCFFCCFCCC4C"
    )
        port map (
      I0 => ex_MSR_clear_decode_reg_n_0,
      I1 => ex_MSR_i(5),
      I2 => \Using_FPGA.Native_21\(9),
      I3 => \Using_FPGA.Native_i_2__5_n_0\,
      I4 => ex_MSR_set_decode_reg_n_0,
      I5 => ex_move_to_MSR_instr,
      O => of_MSR_cmb_pipemove_inferred_i_19_n_0
    );
of_MSR_cmb_pipemove_inferred_i_2: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(13),
      I2 => ex_MSR_i(9),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(13),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(13)
    );
of_MSR_cmb_pipemove_inferred_i_20: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F5F10400F5F50400"
    )
        port map (
      I0 => ex_move_to_MSR_instr,
      I1 => \Using_FPGA.Native_21\(8),
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_MSR_set_decode_reg_n_0,
      I4 => ex_MSR_i(4),
      I5 => ex_MSR_clear_decode_reg_n_0,
      O => of_MSR_cmb_pipemove_inferred_i_20_n_0
    );
of_MSR_cmb_pipemove_inferred_i_21: unisim.vcomponents.LUT6
    generic map(
      INIT => X"CCFFCCFFCCFCCC4C"
    )
        port map (
      I0 => ex_MSR_clear_decode_reg_n_0,
      I1 => \Using_FPGA.Native_25\,
      I2 => \Using_FPGA.Native_21\(3),
      I3 => \Using_FPGA.Native_i_2__5_n_0\,
      I4 => ex_MSR_set_decode_reg_n_0,
      I5 => ex_move_to_MSR_instr,
      O => of_MSR_cmb_pipemove_inferred_i_21_n_0
    );
of_MSR_cmb_pipemove_inferred_i_22: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FF1F0010"
    )
        port map (
      I0 => m0_databus_read_i0,
      I1 => ex_reservation,
      I2 => ex_databus_exclusive_i_reg_n_0,
      I3 => \Using_FPGA.Native_i_2__5_n_0\,
      I4 => of_MSR_cmb_pipemove_inferred_i_24_n_0,
      O => of_MSR_cmb_pipemove_inferred_i_22_n_0
    );
of_MSR_cmb_pipemove_inferred_i_23: unisim.vcomponents.LUT6
    generic map(
      INIT => X"F5F10400F5F50400"
    )
        port map (
      I0 => ex_move_to_MSR_instr,
      I1 => \Using_FPGA.Native_21\(1),
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_MSR_set_decode_reg_n_0,
      I4 => \Using_FPGA.Native_22\,
      I5 => ex_MSR_clear_decode_reg_n_0,
      O => of_MSR_cmb_pipemove_inferred_i_23_n_0
    );
of_MSR_cmb_pipemove_inferred_i_24: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(2),
      I2 => EX_CarryIn,
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(2),
      I5 => ex_mts_msr,
      O => of_MSR_cmb_pipemove_inferred_i_24_n_0
    );
of_MSR_cmb_pipemove_inferred_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(12),
      I2 => ex_MSR_i(8),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(12),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(12)
    );
of_MSR_cmb_pipemove_inferred_i_4: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(11),
      I2 => ex_MSR_i(7),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(11),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(11)
    );
of_MSR_cmb_pipemove_inferred_i_5: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(10),
      I2 => ex_MSR_i(6),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(10),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(10)
    );
of_MSR_cmb_pipemove_inferred_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8888AA8A"
    )
        port map (
      I0 => of_MSR_cmb_pipemove_inferred_i_19_n_0,
      I1 => \Using_FPGA.Native_i_2__5_n_0\,
      I2 => ex_move_to_MSR_instr,
      I3 => \Use_HW_BS.mem_mux3_reg[28]\(9),
      I4 => ex_set_msr_ee_instr,
      O => \^ex_op2_reg[17]\(9)
    );
of_MSR_cmb_pipemove_inferred_i_7: unisim.vcomponents.LUT5
    generic map(
      INIT => X"AFAFAEAA"
    )
        port map (
      I0 => of_MSR_cmb_pipemove_inferred_i_20_n_0,
      I1 => \Use_HW_BS.mem_mux3_reg[28]\(8),
      I2 => \Using_FPGA.Native_i_2__5_n_0\,
      I3 => ex_move_to_MSR_instr,
      I4 => ex_set_msr_ee_instr,
      O => \^ex_op2_reg[17]\(8)
    );
of_MSR_cmb_pipemove_inferred_i_8: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF0000B8F8B8F8"
    )
        port map (
      I0 => \^ex_msrset\,
      I1 => \Using_FPGA.Native_21\(7),
      I2 => ex_MSR_i(3),
      I3 => \^ex_msrclr\,
      I4 => \Use_HW_BS.mem_mux3_reg[28]\(7),
      I5 => ex_mts_msr,
      O => \^ex_op2_reg[17]\(7)
    );
of_MSR_cmb_pipestall_inferred_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"A8AAAAAA"
    )
        port map (
      I0 => \of_MSR_i_reg[22]_0\(4),
      I1 => ex_dead_valid_hold,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_raw_valid_reg_n_0,
      I4 => ex_set_msr_ee_instr,
      O => \^of_msr_i_reg[22]\(3)
    );
of_MSR_cmb_pipestall_inferred_i_2: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFF1000"
    )
        port map (
      I0 => ex_dead_valid_hold,
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => ex_raw_valid_reg_n_0,
      I3 => ex_set_msr_ee_instr,
      I4 => \of_MSR_i_reg[22]_0\(3),
      O => \^of_msr_i_reg[22]\(2)
    );
of_MSR_cmb_pipestall_inferred_i_3: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFFFFBF000000A0"
    )
        port map (
      I0 => ex_set_bip_reg_n_0,
      I1 => ex_clear_msr_bip_instr,
      I2 => ex_raw_valid_reg_n_0,
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => ex_dead_valid_hold,
      I5 => \of_MSR_i_reg[22]_0\(1),
      O => \^of_msr_i_reg[22]\(1)
    );
of_MSR_cmb_pipestall_inferred_i_4: unisim.vcomponents.LUT5
    generic map(
      INIT => X"ABAAAAAA"
    )
        port map (
      I0 => \of_MSR_i_reg[22]_0\(0),
      I1 => ex_dead_valid_hold,
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => ex_raw_valid_reg_n_0,
      I4 => ex_set_msr_ie_instr,
      O => \^of_msr_i_reg[22]\(0)
    );
of_clear_msr_bip_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_4\,
      Q => of_clear_msr_bip_hold_reg_n_0,
      R => '0'
    );
of_dead_valid_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_OF_FPGA.PR_OF_And11_n_3\,
      Q => of_dead_valid_hold,
      R => '0'
    );
of_read_imm_reg_raw_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => of_PipeRun_for_ce,
      D => PREFETCH_BUFFER_I1_n_40,
      Q => of_read_imm_reg_raw,
      R => M0_Exception_From_DFF_n_7
    );
of_set_msr_ee_hold_i_2: unisim.vcomponents.LUT2
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => \^wb_exception_from_m3_reg_rep_0\,
      I1 => reset_bool_for_rst,
      O => of_set_msr_ee_hold_i_2_n_0
    );
of_set_msr_ee_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_5\,
      Q => of_set_msr_ee_hold_reg_n_0,
      R => '0'
    );
of_set_msr_ie_hold_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_EX_FPGA.PR_EX_And7_n_6\,
      Q => of_set_msr_ie_hold_reg_n_0,
      R => '0'
    );
sign_byte_inferred_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"02"
    )
        port map (
      I0 => \Use_HW_BS.mem_mux3_reg[28]\(7),
      I1 => \^ex_sext_op_reg[0]_0\(1),
      I2 => \^ex_sext_op_reg[0]_0\(0),
      O => in0
    );
\trace_exception_kind_i[1]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_raw_kind(28),
      O => wb_exception_from_m3_reg_0(2)
    );
\trace_exception_kind_i[3]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_raw_kind(30),
      O => wb_exception_from_m3_reg_0(1)
    );
\trace_exception_kind_i[4]_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"8"
    )
        port map (
      I0 => wb_abort_div,
      I1 => wb_exception_raw_kind(31),
      O => wb_exception_from_m3_reg_0(0)
    );
trace_exception_taken_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"B0F0"
    )
        port map (
      I0 => wb_exception_raw_kind(30),
      I1 => wb_exception_raw_kind(28),
      I2 => \^wb_exception_from_m3_reg_rep__0_0\,
      I3 => wb_exception_raw_kind(31),
      O => \^wb_exception_taken\
    );
\trace_new_reg_value_i[0]_i_2\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"E"
    )
        port map (
      I0 => \^wb_doublet_access\,
      I1 => \^wb_byte_access\,
      O => WB_Doublet_Access_reg_0
    );
\trace_new_reg_value_i[24]_i_4\: unisim.vcomponents.LUT4
    generic map(
      INIT => X"00EA"
    )
        port map (
      I0 => \^wb_doublet_access\,
      I1 => \^wb_byte_access\,
      I2 => \trace_new_reg_value_i[24]_i_2\(0),
      I3 => \trace_new_reg_value_i[24]_i_2\(1),
      O => WB_Doublet_Access_reg_1
    );
\trace_reg_addr_i[0]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8AAAAAAA"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg_n_0_[0]\,
      I1 => wb_exception_raw_kind(31),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(30),
      O => ADDRD(4)
    );
\trace_reg_addr_i[4]_i_1\: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8AAAAAAA"
    )
        port map (
      I0 => \wb_gpr_write_addr_reg_n_0_[4]\,
      I1 => wb_exception_raw_kind(31),
      I2 => wb_exception_raw_kind(28),
      I3 => \^wb_exception_from_m3_reg_rep__0_0\,
      I4 => wb_exception_raw_kind(30),
      O => ADDRD(0)
    );
trace_reg_write_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"0080"
    )
        port map (
      I0 => wb_exception_raw_kind(30),
      I1 => \^wb_exception_from_m3_reg_rep__0_0\,
      I2 => wb_exception_raw_kind(28),
      I3 => wb_exception_raw_kind(31),
      O => \^wb_msr_clear_ie\
    );
trace_valid_instr_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"8AAAAAAA"
    )
        port map (
      I0 => wb_raw_valid_reg_n_0,
      I1 => wb_exception_raw_kind(30),
      I2 => wb_exception_raw_kind(28),
      I3 => wb_abort_div,
      I4 => wb_exception_raw_kind(31),
      O => trace_wb_valid_instr
    );
wb_exception_from_m3_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M3_Exception_From_DFF_n_5,
      Q => wb_abort_div,
      R => '0'
    );
wb_exception_from_m3_reg_rep: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M3_Exception_From_DFF_n_9,
      Q => \^wb_exception_from_m3_reg_rep_0\,
      R => '0'
    );
\wb_exception_from_m3_reg_rep__0\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => M3_Exception_From_DFF_n_10,
      Q => \^wb_exception_from_m3_reg_rep__0_0\,
      R => '0'
    );
\wb_exception_raw_kind_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_exception_kind(28),
      Q => wb_exception_raw_kind(28),
      R => reset_bool_for_rst
    );
\wb_exception_raw_kind_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => M3_Exception_From_DFF_n_7,
      Q => wb_exception_raw_kind(30),
      R => reset_bool_for_rst
    );
\wb_exception_raw_kind_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => M3_Exception_From_DFF_n_8,
      Q => wb_exception_raw_kind(31),
      R => reset_bool_for_rst
    );
\wb_gpr_write_addr_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_gpr_write_addr(0),
      Q => \wb_gpr_write_addr_reg_n_0_[0]\,
      R => flush_pipe_for_rst
    );
\wb_gpr_write_addr_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_gpr_write_addr(1),
      Q => \^wb_gpr_write_addr_reg[1]_0\(2),
      R => flush_pipe_for_rst
    );
\wb_gpr_write_addr_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_gpr_write_addr(2),
      Q => \^wb_gpr_write_addr_reg[1]_0\(1),
      R => flush_pipe_for_rst
    );
\wb_gpr_write_addr_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_gpr_write_addr(3),
      Q => \^wb_gpr_write_addr_reg[1]_0\(0),
      R => flush_pipe_for_rst
    );
\wb_gpr_write_addr_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_gpr_write_addr(4),
      Q => \wb_gpr_write_addr_reg_n_0_[4]\,
      R => flush_pipe_for_rst
    );
\wb_instr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(0),
      Q => \wb_instr_i_reg[0]_0\(31),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(10),
      Q => \wb_instr_i_reg[0]_0\(21),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(11),
      Q => \wb_instr_i_reg[0]_0\(20),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(12),
      Q => \wb_instr_i_reg[0]_0\(19),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(13),
      Q => \wb_instr_i_reg[0]_0\(18),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(14),
      Q => \wb_instr_i_reg[0]_0\(17),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(15),
      Q => \wb_instr_i_reg[0]_0\(16),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(16),
      Q => \wb_instr_i_reg[0]_0\(15),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(17),
      Q => \wb_instr_i_reg[0]_0\(14),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(18),
      Q => \wb_instr_i_reg[0]_0\(13),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(19),
      Q => \wb_instr_i_reg[0]_0\(12),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(1),
      Q => \wb_instr_i_reg[0]_0\(30),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(20),
      Q => \wb_instr_i_reg[0]_0\(11),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(21),
      Q => \wb_instr_i_reg[0]_0\(10),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(22),
      Q => \wb_instr_i_reg[0]_0\(9),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(23),
      Q => \wb_instr_i_reg[0]_0\(8),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(24),
      Q => \wb_instr_i_reg[0]_0\(7),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(25),
      Q => \wb_instr_i_reg[0]_0\(6),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(26),
      Q => \wb_instr_i_reg[0]_0\(5),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(27),
      Q => \wb_instr_i_reg[0]_0\(4),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(28),
      Q => \wb_instr_i_reg[0]_0\(3),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(29),
      Q => \wb_instr_i_reg[0]_0\(2),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(2),
      Q => \wb_instr_i_reg[0]_0\(29),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(30),
      Q => \wb_instr_i_reg[0]_0\(1),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(31),
      Q => \wb_instr_i_reg[0]_0\(0),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(3),
      Q => \wb_instr_i_reg[0]_0\(28),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(4),
      Q => \wb_instr_i_reg[0]_0\(27),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(5),
      Q => \wb_instr_i_reg[0]_0\(26),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(6),
      Q => \wb_instr_i_reg[0]_0\(25),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(7),
      Q => \wb_instr_i_reg[0]_0\(24),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(8),
      Q => \wb_instr_i_reg[0]_0\(23),
      R => reset_bool_for_rst
    );
\wb_instr_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_instr(9),
      Q => \wb_instr_i_reg[0]_0\(22),
      R => reset_bool_for_rst
    );
wb_m3_sel_res_i_1: unisim.vcomponents.LUT3
    generic map(
      INIT => X"0E"
    )
        port map (
      I0 => m3_m2_sel_res,
      I1 => \^m3_sel_div_res\,
      I2 => \^m3_sel_load_res\,
      O => wb_m3_sel_res0
    );
wb_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_PipeRun_for_ce,
      Q => wb_piperun_i_reg_n_0,
      R => reset_bool_for_rst
    );
wb_raw_valid_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \Using_M3_FPGA.PR_M3_And5_n_3\,
      Q => wb_raw_valid_reg_n_0,
      R => '0'
    );
wb_read_imm_reg_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_read_imm_reg_i_reg_n_0,
      Q => \^wb_read_imm_reg\,
      R => reset_bool_for_rst
    );
wb_reset_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => reset_bool_for_rst,
      Q => wb_reset,
      R => '0'
    );
wb_rtid_instr_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => m3_PipeRun_for_ce,
      D => m3_rtid_instr,
      Q => wb_rtid_instr,
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MicroBlaze_FF is
  port (
    D : out STD_LOGIC_VECTOR ( 366 downto 0 );
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 38 downto 0 );
    Sleep : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_2_sp_1 : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Pause_Ack : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    sync_reset : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Data_Read_Reg_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Config_Reg_En : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    wakeup_i : in STD_LOGIC_VECTOR ( 0 to 1 );
    Dbg_TDI : in STD_LOGIC;
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MicroBlaze_FF : entity is "MicroBlaze_FF";
end microblaze_microblaze_0_0_MicroBlaze_FF;

architecture STRUCTURE of microblaze_microblaze_0_0_MicroBlaze_FF is
  signal \ALU_I1/DI\ : STD_LOGIC;
  signal \ALU_I1/Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\ : STD_LOGIC;
  signal \Barrel_Shifter_I/ex_left_shift_i\ : STD_LOGIC;
  signal \Barrel_Shifter_I/ex_void_bit\ : STD_LOGIC;
  signal \Barrel_Shifter_I/p_31_out\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \Byte_Doublet_Handle_I1/m1_op3\ : STD_LOGIC_VECTOR ( 8 to 15 );
  signal \Byte_Doublet_Handle_I1/m1_unaligned_addr_3lsb\ : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal \Byte_Doublet_Handle_I1/p_0_in\ : STD_LOGIC;
  signal \^d\ : STD_LOGIC_VECTOR ( 366 downto 0 );
  signal DATA_FLOW_I1_n_137 : STD_LOGIC;
  signal DATA_FLOW_I1_n_142 : STD_LOGIC;
  signal DATA_FLOW_I1_n_145 : STD_LOGIC;
  signal DATA_FLOW_I1_n_146 : STD_LOGIC;
  signal DATA_FLOW_I1_n_147 : STD_LOGIC;
  signal DATA_FLOW_I1_n_148 : STD_LOGIC;
  signal DATA_FLOW_I1_n_149 : STD_LOGIC;
  signal DATA_FLOW_I1_n_150 : STD_LOGIC;
  signal DATA_FLOW_I1_n_151 : STD_LOGIC;
  signal DATA_FLOW_I1_n_152 : STD_LOGIC;
  signal DATA_FLOW_I1_n_153 : STD_LOGIC;
  signal DATA_FLOW_I1_n_154 : STD_LOGIC;
  signal DATA_FLOW_I1_n_155 : STD_LOGIC;
  signal DATA_FLOW_I1_n_156 : STD_LOGIC;
  signal DATA_FLOW_I1_n_157 : STD_LOGIC;
  signal DATA_FLOW_I1_n_158 : STD_LOGIC;
  signal DATA_FLOW_I1_n_159 : STD_LOGIC;
  signal DATA_FLOW_I1_n_16 : STD_LOGIC;
  signal DATA_FLOW_I1_n_160 : STD_LOGIC;
  signal DATA_FLOW_I1_n_161 : STD_LOGIC;
  signal DATA_FLOW_I1_n_162 : STD_LOGIC;
  signal DATA_FLOW_I1_n_163 : STD_LOGIC;
  signal DATA_FLOW_I1_n_164 : STD_LOGIC;
  signal DATA_FLOW_I1_n_165 : STD_LOGIC;
  signal DATA_FLOW_I1_n_166 : STD_LOGIC;
  signal DATA_FLOW_I1_n_167 : STD_LOGIC;
  signal DATA_FLOW_I1_n_168 : STD_LOGIC;
  signal DATA_FLOW_I1_n_169 : STD_LOGIC;
  signal DATA_FLOW_I1_n_17 : STD_LOGIC;
  signal DATA_FLOW_I1_n_170 : STD_LOGIC;
  signal DATA_FLOW_I1_n_171 : STD_LOGIC;
  signal DATA_FLOW_I1_n_172 : STD_LOGIC;
  signal DATA_FLOW_I1_n_173 : STD_LOGIC;
  signal DATA_FLOW_I1_n_174 : STD_LOGIC;
  signal DATA_FLOW_I1_n_175 : STD_LOGIC;
  signal DATA_FLOW_I1_n_176 : STD_LOGIC;
  signal DATA_FLOW_I1_n_18 : STD_LOGIC;
  signal DATA_FLOW_I1_n_19 : STD_LOGIC;
  signal DATA_FLOW_I1_n_20 : STD_LOGIC;
  signal DATA_FLOW_I1_n_21 : STD_LOGIC;
  signal DATA_FLOW_I1_n_22 : STD_LOGIC;
  signal DATA_FLOW_I1_n_23 : STD_LOGIC;
  signal DATA_FLOW_I1_n_24 : STD_LOGIC;
  signal DATA_FLOW_I1_n_241 : STD_LOGIC;
  signal DATA_FLOW_I1_n_242 : STD_LOGIC;
  signal DATA_FLOW_I1_n_243 : STD_LOGIC;
  signal DATA_FLOW_I1_n_244 : STD_LOGIC;
  signal DATA_FLOW_I1_n_245 : STD_LOGIC;
  signal DATA_FLOW_I1_n_246 : STD_LOGIC;
  signal DATA_FLOW_I1_n_247 : STD_LOGIC;
  signal DATA_FLOW_I1_n_248 : STD_LOGIC;
  signal DATA_FLOW_I1_n_249 : STD_LOGIC;
  signal DATA_FLOW_I1_n_25 : STD_LOGIC;
  signal DATA_FLOW_I1_n_250 : STD_LOGIC;
  signal DATA_FLOW_I1_n_251 : STD_LOGIC;
  signal DATA_FLOW_I1_n_253 : STD_LOGIC;
  signal DATA_FLOW_I1_n_254 : STD_LOGIC;
  signal DATA_FLOW_I1_n_255 : STD_LOGIC;
  signal DATA_FLOW_I1_n_256 : STD_LOGIC;
  signal DATA_FLOW_I1_n_26 : STD_LOGIC;
  signal DATA_FLOW_I1_n_266 : STD_LOGIC;
  signal DATA_FLOW_I1_n_267 : STD_LOGIC;
  signal DATA_FLOW_I1_n_268 : STD_LOGIC;
  signal DATA_FLOW_I1_n_269 : STD_LOGIC;
  signal DATA_FLOW_I1_n_27 : STD_LOGIC;
  signal DATA_FLOW_I1_n_270 : STD_LOGIC;
  signal DATA_FLOW_I1_n_271 : STD_LOGIC;
  signal DATA_FLOW_I1_n_272 : STD_LOGIC;
  signal DATA_FLOW_I1_n_273 : STD_LOGIC;
  signal DATA_FLOW_I1_n_274 : STD_LOGIC;
  signal DATA_FLOW_I1_n_275 : STD_LOGIC;
  signal DATA_FLOW_I1_n_276 : STD_LOGIC;
  signal DATA_FLOW_I1_n_277 : STD_LOGIC;
  signal DATA_FLOW_I1_n_28 : STD_LOGIC;
  signal DATA_FLOW_I1_n_29 : STD_LOGIC;
  signal DATA_FLOW_I1_n_30 : STD_LOGIC;
  signal DATA_FLOW_I1_n_31 : STD_LOGIC;
  signal DATA_FLOW_I1_n_310 : STD_LOGIC;
  signal DATA_FLOW_I1_n_311 : STD_LOGIC;
  signal DATA_FLOW_I1_n_312 : STD_LOGIC;
  signal DATA_FLOW_I1_n_314 : STD_LOGIC;
  signal DATA_FLOW_I1_n_315 : STD_LOGIC;
  signal DATA_FLOW_I1_n_32 : STD_LOGIC;
  signal DATA_FLOW_I1_n_33 : STD_LOGIC;
  signal DATA_FLOW_I1_n_34 : STD_LOGIC;
  signal DATA_FLOW_I1_n_346 : STD_LOGIC;
  signal DATA_FLOW_I1_n_347 : STD_LOGIC;
  signal DATA_FLOW_I1_n_348 : STD_LOGIC;
  signal DATA_FLOW_I1_n_349 : STD_LOGIC;
  signal DATA_FLOW_I1_n_35 : STD_LOGIC;
  signal DATA_FLOW_I1_n_350 : STD_LOGIC;
  signal DATA_FLOW_I1_n_351 : STD_LOGIC;
  signal DATA_FLOW_I1_n_352 : STD_LOGIC;
  signal DATA_FLOW_I1_n_353 : STD_LOGIC;
  signal DATA_FLOW_I1_n_354 : STD_LOGIC;
  signal DATA_FLOW_I1_n_355 : STD_LOGIC;
  signal DATA_FLOW_I1_n_356 : STD_LOGIC;
  signal DATA_FLOW_I1_n_357 : STD_LOGIC;
  signal DATA_FLOW_I1_n_358 : STD_LOGIC;
  signal DATA_FLOW_I1_n_359 : STD_LOGIC;
  signal DATA_FLOW_I1_n_36 : STD_LOGIC;
  signal DATA_FLOW_I1_n_360 : STD_LOGIC;
  signal DATA_FLOW_I1_n_361 : STD_LOGIC;
  signal DATA_FLOW_I1_n_362 : STD_LOGIC;
  signal DATA_FLOW_I1_n_363 : STD_LOGIC;
  signal DATA_FLOW_I1_n_364 : STD_LOGIC;
  signal DATA_FLOW_I1_n_365 : STD_LOGIC;
  signal DATA_FLOW_I1_n_366 : STD_LOGIC;
  signal DATA_FLOW_I1_n_367 : STD_LOGIC;
  signal DATA_FLOW_I1_n_368 : STD_LOGIC;
  signal DATA_FLOW_I1_n_369 : STD_LOGIC;
  signal DATA_FLOW_I1_n_37 : STD_LOGIC;
  signal DATA_FLOW_I1_n_370 : STD_LOGIC;
  signal DATA_FLOW_I1_n_371 : STD_LOGIC;
  signal DATA_FLOW_I1_n_372 : STD_LOGIC;
  signal DATA_FLOW_I1_n_373 : STD_LOGIC;
  signal DATA_FLOW_I1_n_374 : STD_LOGIC;
  signal DATA_FLOW_I1_n_375 : STD_LOGIC;
  signal DATA_FLOW_I1_n_376 : STD_LOGIC;
  signal DATA_FLOW_I1_n_377 : STD_LOGIC;
  signal DATA_FLOW_I1_n_378 : STD_LOGIC;
  signal DATA_FLOW_I1_n_379 : STD_LOGIC;
  signal DATA_FLOW_I1_n_38 : STD_LOGIC;
  signal DATA_FLOW_I1_n_380 : STD_LOGIC;
  signal DATA_FLOW_I1_n_381 : STD_LOGIC;
  signal DATA_FLOW_I1_n_382 : STD_LOGIC;
  signal DATA_FLOW_I1_n_383 : STD_LOGIC;
  signal DATA_FLOW_I1_n_384 : STD_LOGIC;
  signal DATA_FLOW_I1_n_385 : STD_LOGIC;
  signal DATA_FLOW_I1_n_386 : STD_LOGIC;
  signal DATA_FLOW_I1_n_387 : STD_LOGIC;
  signal DATA_FLOW_I1_n_388 : STD_LOGIC;
  signal DATA_FLOW_I1_n_389 : STD_LOGIC;
  signal DATA_FLOW_I1_n_39 : STD_LOGIC;
  signal DATA_FLOW_I1_n_390 : STD_LOGIC;
  signal DATA_FLOW_I1_n_391 : STD_LOGIC;
  signal DATA_FLOW_I1_n_392 : STD_LOGIC;
  signal DATA_FLOW_I1_n_393 : STD_LOGIC;
  signal DATA_FLOW_I1_n_394 : STD_LOGIC;
  signal DATA_FLOW_I1_n_395 : STD_LOGIC;
  signal DATA_FLOW_I1_n_396 : STD_LOGIC;
  signal DATA_FLOW_I1_n_397 : STD_LOGIC;
  signal DATA_FLOW_I1_n_40 : STD_LOGIC;
  signal DATA_FLOW_I1_n_41 : STD_LOGIC;
  signal DATA_FLOW_I1_n_42 : STD_LOGIC;
  signal DATA_FLOW_I1_n_43 : STD_LOGIC;
  signal DATA_FLOW_I1_n_44 : STD_LOGIC;
  signal DATA_FLOW_I1_n_45 : STD_LOGIC;
  signal DATA_FLOW_I1_n_46 : STD_LOGIC;
  signal DATA_FLOW_I1_n_47 : STD_LOGIC;
  signal DATA_FLOW_I1_n_48 : STD_LOGIC;
  signal DATA_FLOW_I1_n_49 : STD_LOGIC;
  signal DATA_FLOW_I1_n_50 : STD_LOGIC;
  signal DATA_FLOW_I1_n_51 : STD_LOGIC;
  signal DATA_FLOW_I1_n_52 : STD_LOGIC;
  signal DATA_FLOW_I1_n_520 : STD_LOGIC;
  signal DATA_FLOW_I1_n_64 : STD_LOGIC;
  signal DATA_FLOW_I1_n_65 : STD_LOGIC;
  signal DATA_FLOW_I1_n_67 : STD_LOGIC;
  signal DATA_FLOW_I1_n_68 : STD_LOGIC;
  signal DATA_FLOW_I1_n_69 : STD_LOGIC;
  signal DATA_FLOW_I1_n_70 : STD_LOGIC;
  signal DATA_FLOW_I1_n_71 : STD_LOGIC;
  signal DATA_FLOW_I1_n_72 : STD_LOGIC;
  signal DATA_FLOW_I1_n_73 : STD_LOGIC;
  signal DATA_FLOW_I1_n_74 : STD_LOGIC;
  signal DATA_FLOW_I1_n_93 : STD_LOGIC;
  signal DAXI_interface_I1_n_72 : STD_LOGIC;
  signal DAXI_interface_I1_n_73 : STD_LOGIC;
  signal DAXI_interface_I1_n_74 : STD_LOGIC;
  signal DAXI_interface_I1_n_75 : STD_LOGIC;
  signal DAXI_interface_I1_n_76 : STD_LOGIC;
  signal DAXI_interface_I1_n_78 : STD_LOGIC;
  signal DAXI_interface_I1_n_79 : STD_LOGIC;
  signal DECODE_I1_n_1 : STD_LOGIC;
  signal DECODE_I1_n_123 : STD_LOGIC;
  signal DECODE_I1_n_124 : STD_LOGIC;
  signal DECODE_I1_n_126 : STD_LOGIC;
  signal DECODE_I1_n_149 : STD_LOGIC;
  signal DECODE_I1_n_150 : STD_LOGIC;
  signal DECODE_I1_n_151 : STD_LOGIC;
  signal DECODE_I1_n_152 : STD_LOGIC;
  signal DECODE_I1_n_157 : STD_LOGIC;
  signal DECODE_I1_n_159 : STD_LOGIC;
  signal DECODE_I1_n_160 : STD_LOGIC;
  signal DECODE_I1_n_161 : STD_LOGIC;
  signal DECODE_I1_n_162 : STD_LOGIC;
  signal DECODE_I1_n_163 : STD_LOGIC;
  signal DECODE_I1_n_164 : STD_LOGIC;
  signal DECODE_I1_n_165 : STD_LOGIC;
  signal DECODE_I1_n_166 : STD_LOGIC;
  signal DECODE_I1_n_169 : STD_LOGIC;
  signal DECODE_I1_n_171 : STD_LOGIC;
  signal DECODE_I1_n_172 : STD_LOGIC;
  signal DECODE_I1_n_205 : STD_LOGIC;
  signal DECODE_I1_n_206 : STD_LOGIC;
  signal DECODE_I1_n_207 : STD_LOGIC;
  signal DECODE_I1_n_208 : STD_LOGIC;
  signal DECODE_I1_n_209 : STD_LOGIC;
  signal DECODE_I1_n_210 : STD_LOGIC;
  signal DECODE_I1_n_211 : STD_LOGIC;
  signal DECODE_I1_n_213 : STD_LOGIC;
  signal DECODE_I1_n_215 : STD_LOGIC;
  signal DECODE_I1_n_216 : STD_LOGIC;
  signal DECODE_I1_n_217 : STD_LOGIC;
  signal DECODE_I1_n_218 : STD_LOGIC;
  signal DECODE_I1_n_219 : STD_LOGIC;
  signal DECODE_I1_n_222 : STD_LOGIC;
  signal DECODE_I1_n_231 : STD_LOGIC;
  signal DECODE_I1_n_232 : STD_LOGIC;
  signal DECODE_I1_n_233 : STD_LOGIC;
  signal DECODE_I1_n_234 : STD_LOGIC;
  signal DECODE_I1_n_235 : STD_LOGIC;
  signal DECODE_I1_n_236 : STD_LOGIC;
  signal DECODE_I1_n_237 : STD_LOGIC;
  signal DECODE_I1_n_238 : STD_LOGIC;
  signal DECODE_I1_n_239 : STD_LOGIC;
  signal DECODE_I1_n_240 : STD_LOGIC;
  signal DECODE_I1_n_241 : STD_LOGIC;
  signal DECODE_I1_n_242 : STD_LOGIC;
  signal DECODE_I1_n_243 : STD_LOGIC;
  signal DECODE_I1_n_244 : STD_LOGIC;
  signal DECODE_I1_n_245 : STD_LOGIC;
  signal DECODE_I1_n_246 : STD_LOGIC;
  signal DECODE_I1_n_247 : STD_LOGIC;
  signal DECODE_I1_n_248 : STD_LOGIC;
  signal DECODE_I1_n_249 : STD_LOGIC;
  signal DECODE_I1_n_250 : STD_LOGIC;
  signal DECODE_I1_n_251 : STD_LOGIC;
  signal DECODE_I1_n_252 : STD_LOGIC;
  signal DECODE_I1_n_253 : STD_LOGIC;
  signal DECODE_I1_n_254 : STD_LOGIC;
  signal DECODE_I1_n_255 : STD_LOGIC;
  signal DECODE_I1_n_256 : STD_LOGIC;
  signal DECODE_I1_n_257 : STD_LOGIC;
  signal DECODE_I1_n_258 : STD_LOGIC;
  signal DECODE_I1_n_259 : STD_LOGIC;
  signal DECODE_I1_n_260 : STD_LOGIC;
  signal DECODE_I1_n_261 : STD_LOGIC;
  signal DECODE_I1_n_262 : STD_LOGIC;
  signal DECODE_I1_n_263 : STD_LOGIC;
  signal DECODE_I1_n_264 : STD_LOGIC;
  signal DECODE_I1_n_30 : STD_LOGIC;
  signal DECODE_I1_n_300 : STD_LOGIC;
  signal DECODE_I1_n_301 : STD_LOGIC;
  signal DECODE_I1_n_309 : STD_LOGIC;
  signal DECODE_I1_n_310 : STD_LOGIC;
  signal DECODE_I1_n_311 : STD_LOGIC;
  signal DECODE_I1_n_316 : STD_LOGIC;
  signal DECODE_I1_n_330 : STD_LOGIC;
  signal DECODE_I1_n_331 : STD_LOGIC;
  signal DECODE_I1_n_332 : STD_LOGIC;
  signal DECODE_I1_n_333 : STD_LOGIC;
  signal DECODE_I1_n_334 : STD_LOGIC;
  signal DECODE_I1_n_335 : STD_LOGIC;
  signal DECODE_I1_n_337 : STD_LOGIC;
  signal DECODE_I1_n_338 : STD_LOGIC;
  signal DECODE_I1_n_339 : STD_LOGIC;
  signal DECODE_I1_n_357 : STD_LOGIC;
  signal DECODE_I1_n_358 : STD_LOGIC;
  signal DECODE_I1_n_359 : STD_LOGIC;
  signal DECODE_I1_n_36 : STD_LOGIC;
  signal DECODE_I1_n_360 : STD_LOGIC;
  signal DECODE_I1_n_361 : STD_LOGIC;
  signal DECODE_I1_n_362 : STD_LOGIC;
  signal DECODE_I1_n_363 : STD_LOGIC;
  signal DECODE_I1_n_364 : STD_LOGIC;
  signal DECODE_I1_n_365 : STD_LOGIC;
  signal DECODE_I1_n_366 : STD_LOGIC;
  signal DECODE_I1_n_367 : STD_LOGIC;
  signal DECODE_I1_n_368 : STD_LOGIC;
  signal DECODE_I1_n_369 : STD_LOGIC;
  signal DECODE_I1_n_37 : STD_LOGIC;
  signal DECODE_I1_n_371 : STD_LOGIC;
  signal DECODE_I1_n_372 : STD_LOGIC;
  signal DECODE_I1_n_373 : STD_LOGIC;
  signal DECODE_I1_n_374 : STD_LOGIC;
  signal DECODE_I1_n_375 : STD_LOGIC;
  signal DECODE_I1_n_376 : STD_LOGIC;
  signal DECODE_I1_n_377 : STD_LOGIC;
  signal DECODE_I1_n_378 : STD_LOGIC;
  signal DECODE_I1_n_379 : STD_LOGIC;
  signal DECODE_I1_n_38 : STD_LOGIC;
  signal DECODE_I1_n_380 : STD_LOGIC;
  signal DECODE_I1_n_381 : STD_LOGIC;
  signal DECODE_I1_n_382 : STD_LOGIC;
  signal DECODE_I1_n_383 : STD_LOGIC;
  signal DECODE_I1_n_39 : STD_LOGIC;
  signal DECODE_I1_n_419 : STD_LOGIC;
  signal DECODE_I1_n_420 : STD_LOGIC;
  signal DECODE_I1_n_421 : STD_LOGIC;
  signal DECODE_I1_n_422 : STD_LOGIC;
  signal DECODE_I1_n_423 : STD_LOGIC;
  signal DECODE_I1_n_424 : STD_LOGIC;
  signal DECODE_I1_n_425 : STD_LOGIC;
  signal DECODE_I1_n_426 : STD_LOGIC;
  signal DECODE_I1_n_427 : STD_LOGIC;
  signal DECODE_I1_n_428 : STD_LOGIC;
  signal DECODE_I1_n_429 : STD_LOGIC;
  signal DECODE_I1_n_43 : STD_LOGIC;
  signal DECODE_I1_n_430 : STD_LOGIC;
  signal DECODE_I1_n_431 : STD_LOGIC;
  signal DECODE_I1_n_432 : STD_LOGIC;
  signal DECODE_I1_n_433 : STD_LOGIC;
  signal DECODE_I1_n_434 : STD_LOGIC;
  signal DECODE_I1_n_435 : STD_LOGIC;
  signal DECODE_I1_n_436 : STD_LOGIC;
  signal DECODE_I1_n_437 : STD_LOGIC;
  signal DECODE_I1_n_440 : STD_LOGIC;
  signal DECODE_I1_n_441 : STD_LOGIC;
  signal DECODE_I1_n_442 : STD_LOGIC;
  signal DECODE_I1_n_443 : STD_LOGIC;
  signal DECODE_I1_n_445 : STD_LOGIC;
  signal DECODE_I1_n_447 : STD_LOGIC;
  signal DECODE_I1_n_448 : STD_LOGIC;
  signal DECODE_I1_n_449 : STD_LOGIC;
  signal DECODE_I1_n_45 : STD_LOGIC;
  signal DECODE_I1_n_450 : STD_LOGIC;
  signal DECODE_I1_n_451 : STD_LOGIC;
  signal DECODE_I1_n_452 : STD_LOGIC;
  signal DECODE_I1_n_454 : STD_LOGIC;
  signal DECODE_I1_n_455 : STD_LOGIC;
  signal DECODE_I1_n_456 : STD_LOGIC;
  signal DECODE_I1_n_457 : STD_LOGIC;
  signal DECODE_I1_n_458 : STD_LOGIC;
  signal DECODE_I1_n_459 : STD_LOGIC;
  signal DECODE_I1_n_460 : STD_LOGIC;
  signal DECODE_I1_n_461 : STD_LOGIC;
  signal DECODE_I1_n_462 : STD_LOGIC;
  signal DECODE_I1_n_464 : STD_LOGIC;
  signal DECODE_I1_n_466 : STD_LOGIC;
  signal DECODE_I1_n_467 : STD_LOGIC;
  signal DECODE_I1_n_468 : STD_LOGIC;
  signal DECODE_I1_n_472 : STD_LOGIC;
  signal DECODE_I1_n_473 : STD_LOGIC;
  signal DECODE_I1_n_474 : STD_LOGIC;
  signal DECODE_I1_n_475 : STD_LOGIC;
  signal DECODE_I1_n_480 : STD_LOGIC;
  signal DECODE_I1_n_481 : STD_LOGIC;
  signal DECODE_I1_n_482 : STD_LOGIC;
  signal DECODE_I1_n_483 : STD_LOGIC;
  signal DECODE_I1_n_484 : STD_LOGIC;
  signal DECODE_I1_n_485 : STD_LOGIC;
  signal DECODE_I1_n_486 : STD_LOGIC;
  signal DECODE_I1_n_487 : STD_LOGIC;
  signal DECODE_I1_n_488 : STD_LOGIC;
  signal DECODE_I1_n_489 : STD_LOGIC;
  signal DECODE_I1_n_490 : STD_LOGIC;
  signal DECODE_I1_n_491 : STD_LOGIC;
  signal DECODE_I1_n_492 : STD_LOGIC;
  signal DECODE_I1_n_493 : STD_LOGIC;
  signal DECODE_I1_n_494 : STD_LOGIC;
  signal DECODE_I1_n_495 : STD_LOGIC;
  signal DECODE_I1_n_496 : STD_LOGIC;
  signal DECODE_I1_n_497 : STD_LOGIC;
  signal DECODE_I1_n_498 : STD_LOGIC;
  signal DECODE_I1_n_499 : STD_LOGIC;
  signal DECODE_I1_n_500 : STD_LOGIC;
  signal DECODE_I1_n_501 : STD_LOGIC;
  signal DECODE_I1_n_502 : STD_LOGIC;
  signal DECODE_I1_n_503 : STD_LOGIC;
  signal DECODE_I1_n_504 : STD_LOGIC;
  signal DECODE_I1_n_505 : STD_LOGIC;
  signal DECODE_I1_n_506 : STD_LOGIC;
  signal DECODE_I1_n_507 : STD_LOGIC;
  signal DECODE_I1_n_508 : STD_LOGIC;
  signal DECODE_I1_n_509 : STD_LOGIC;
  signal DECODE_I1_n_51 : STD_LOGIC;
  signal DECODE_I1_n_510 : STD_LOGIC;
  signal DECODE_I1_n_511 : STD_LOGIC;
  signal DECODE_I1_n_512 : STD_LOGIC;
  signal DECODE_I1_n_513 : STD_LOGIC;
  signal DECODE_I1_n_514 : STD_LOGIC;
  signal DECODE_I1_n_515 : STD_LOGIC;
  signal DECODE_I1_n_516 : STD_LOGIC;
  signal DECODE_I1_n_517 : STD_LOGIC;
  signal DECODE_I1_n_518 : STD_LOGIC;
  signal DECODE_I1_n_519 : STD_LOGIC;
  signal DECODE_I1_n_52 : STD_LOGIC;
  signal DECODE_I1_n_520 : STD_LOGIC;
  signal DECODE_I1_n_522 : STD_LOGIC;
  signal DECODE_I1_n_527 : STD_LOGIC;
  signal DECODE_I1_n_528 : STD_LOGIC;
  signal DECODE_I1_n_54 : STD_LOGIC;
  signal DECODE_I1_n_566 : STD_LOGIC;
  signal DECODE_I1_n_567 : STD_LOGIC;
  signal DECODE_I1_n_568 : STD_LOGIC;
  signal DECODE_I1_n_569 : STD_LOGIC;
  signal DECODE_I1_n_570 : STD_LOGIC;
  signal DECODE_I1_n_571 : STD_LOGIC;
  signal DECODE_I1_n_572 : STD_LOGIC;
  signal DECODE_I1_n_573 : STD_LOGIC;
  signal DECODE_I1_n_574 : STD_LOGIC;
  signal DECODE_I1_n_575 : STD_LOGIC;
  signal DECODE_I1_n_576 : STD_LOGIC;
  signal DECODE_I1_n_577 : STD_LOGIC;
  signal DECODE_I1_n_578 : STD_LOGIC;
  signal DECODE_I1_n_579 : STD_LOGIC;
  signal DECODE_I1_n_580 : STD_LOGIC;
  signal DECODE_I1_n_581 : STD_LOGIC;
  signal DECODE_I1_n_582 : STD_LOGIC;
  signal DECODE_I1_n_583 : STD_LOGIC;
  signal DECODE_I1_n_584 : STD_LOGIC;
  signal DECODE_I1_n_585 : STD_LOGIC;
  signal DECODE_I1_n_586 : STD_LOGIC;
  signal DECODE_I1_n_587 : STD_LOGIC;
  signal DECODE_I1_n_588 : STD_LOGIC;
  signal DECODE_I1_n_589 : STD_LOGIC;
  signal DECODE_I1_n_590 : STD_LOGIC;
  signal DECODE_I1_n_591 : STD_LOGIC;
  signal DECODE_I1_n_592 : STD_LOGIC;
  signal DECODE_I1_n_593 : STD_LOGIC;
  signal DECODE_I1_n_594 : STD_LOGIC;
  signal DECODE_I1_n_595 : STD_LOGIC;
  signal DECODE_I1_n_596 : STD_LOGIC;
  signal DLMB_Interface_I1_n_11 : STD_LOGIC;
  signal DLMB_Interface_I1_n_12 : STD_LOGIC;
  signal DLMB_Interface_I1_n_2 : STD_LOGIC;
  signal DLMB_Interface_I1_n_29 : STD_LOGIC;
  signal DLMB_Interface_I1_n_30 : STD_LOGIC;
  signal DLMB_Interface_I1_n_31 : STD_LOGIC;
  signal DLMB_Interface_I1_n_32 : STD_LOGIC;
  signal DLMB_Interface_I1_n_33 : STD_LOGIC;
  signal DLMB_Interface_I1_n_34 : STD_LOGIC;
  signal DLMB_Interface_I1_n_35 : STD_LOGIC;
  signal DLMB_Interface_I1_n_36 : STD_LOGIC;
  signal DLMB_Interface_I1_n_37 : STD_LOGIC;
  signal DLMB_Interface_I1_n_38 : STD_LOGIC;
  signal DLMB_Interface_I1_n_39 : STD_LOGIC;
  signal DLMB_Interface_I1_n_40 : STD_LOGIC;
  signal DLMB_Interface_I1_n_41 : STD_LOGIC;
  signal DLMB_Interface_I1_n_42 : STD_LOGIC;
  signal DLMB_Interface_I1_n_43 : STD_LOGIC;
  signal DLMB_Interface_I1_n_5 : STD_LOGIC;
  signal \Data_Flow_Logic_I1/m0_ex_sel_res\ : STD_LOGIC;
  signal \Data_Flow_Logic_I1/m1_m0_sel_res\ : STD_LOGIC;
  signal \Data_Flow_Logic_I1/m1_m0_sel_res0\ : STD_LOGIC;
  signal \Data_Flow_Logic_I1/m2_m1_sel_res0\ : STD_LOGIC;
  signal \Data_Flow_Logic_I1/m3_m2_sel_res\ : STD_LOGIC;
  signal \Data_Flow_Logic_I1/wb_m3_sel_res0\ : STD_LOGIC;
  signal Dbg_Reg_En_2_sn_1 : STD_LOGIC;
  signal EX_CarryIn : STD_LOGIC;
  signal \^hibernate\ : STD_LOGIC;
  signal ILMB_Interface_I1_n_37 : STD_LOGIC;
  signal ILMB_Interface_I1_n_38 : STD_LOGIC;
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 38 downto 0 );
  signal M1_Sel_Mul_Res_i_1_n_0 : STD_LOGIC;
  signal \MSR_I1/D\ : STD_LOGIC;
  signal \MSR_I1/ex_MSR_cmb_no_restore\ : STD_LOGIC_VECTOR ( 22 to 30 );
  signal \MSR_I1/ex_MSR_i\ : STD_LOGIC_VECTOR ( 17 to 31 );
  signal \MSR_I1/of_MSR_cmb\ : STD_LOGIC_VECTOR ( 25 to 30 );
  signal \MSR_I1/of_MSR_i\ : STD_LOGIC_VECTOR ( 22 to 23 );
  signal \MSR_I1/p_0_in\ : STD_LOGIC_VECTOR ( 6 downto 1 );
  signal \MSR_I1/p_1_in\ : STD_LOGIC_VECTOR ( 6 downto 1 );
  signal \MSR_I1/wb_MSR_i\ : STD_LOGIC_VECTOR ( 17 to 31 );
  signal \Operand_Select_I1/imm_reg\ : STD_LOGIC_VECTOR ( 0 to 15 );
  signal \Operand_Select_I1/of_branch_cmp\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \Operand_Select_I1/of_op1\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \Operand_Select_I1/of_op2\ : STD_LOGIC_VECTOR ( 31 to 31 );
  signal \Operand_Select_I1/of_op3\ : STD_LOGIC_VECTOR ( 31 to 31 );
  signal \PREFETCH_BUFFER_I1/if_predecode\ : STD_LOGIC_VECTOR ( 0 to 0 );
  signal \^serial_dbg_intf.if_debug_ready_i_reg\ : STD_LOGIC;
  signal \^sleep\ : STD_LOGIC;
  signal Sleep_Decode : STD_LOGIC;
  signal Sleep_Out : STD_LOGIC;
  signal \^suspend\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_38\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_43\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_50\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\ : STD_LOGIC;
  signal \Use_Debug_Logic.Master_Core.Debug_Perf_n_57\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/Q0\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/Res_Neg\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/div_busy\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/floating_hold_div_by_zero__0\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/last_cycle\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/make_result_neg\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/negative_operands\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/next_sub\ : STD_LOGIC;
  signal \Using_Div_Unit.Div_Unit_I1/reset_Q\ : STD_LOGIC;
  signal \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1/carry_or_i1/S\ : STD_LOGIC;
  signal \Using_Ready_FPGA.Rdy_Or1/carry_or_i1/S\ : STD_LOGIC;
  signal \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S\ : STD_LOGIC;
  signal \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S_0\ : STD_LOGIC;
  signal \Using_Ready_FPGA.Rdy_Or3/carry_or_i1/S\ : STD_LOGIC;
  signal active_wakeup : STD_LOGIC;
  signal bp0_dead_fetch_hold : STD_LOGIC;
  signal bp1_dead_fetch_hold_bt : STD_LOGIC;
  signal bp1_raw_valid_i_1_n_0 : STD_LOGIC;
  signal ex_Interrupt : STD_LOGIC;
  signal ex_alu_carry_32 : STD_LOGIC;
  signal ex_alu_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_alu_result : STD_LOGIC_VECTOR ( 30 to 31 );
  signal ex_alu_sel_logic : STD_LOGIC;
  signal ex_arith_shift : STD_LOGIC;
  signal ex_bit_extract : STD_LOGIC;
  signal ex_bit_insert : STD_LOGIC;
  signal ex_clz_instr : STD_LOGIC;
  signal ex_cmp_op : STD_LOGIC;
  signal ex_databus_addr : STD_LOGIC_VECTOR ( 0 to 29 );
  signal ex_dbg_pc_hit_i : STD_LOGIC;
  signal ex_div_unsigned : STD_LOGIC;
  signal ex_enable_alu : STD_LOGIC;
  signal ex_enable_sext_shift : STD_LOGIC;
  signal ex_fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal ex_hibernate_i_i_1_n_0 : STD_LOGIC;
  signal ex_is_div_instr_i_i_1_n_0 : STD_LOGIC;
  signal ex_logic_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_mbar_decode : STD_LOGIC;
  signal ex_mbar_decode_i_1_n_0 : STD_LOGIC;
  signal ex_msrclr : STD_LOGIC;
  signal ex_msrset : STD_LOGIC;
  signal ex_op1_cmp_equal : STD_LOGIC;
  signal ex_op1_cmp_equal_n : STD_LOGIC;
  signal ex_op1_neg : STD_LOGIC;
  signal ex_op1_zero : STD_LOGIC;
  signal ex_op2 : STD_LOGIC_VECTOR ( 0 to 27 );
  signal ex_pattern_cmp_sel : STD_LOGIC;
  signal ex_sel_alu_res : STD_LOGIC;
  signal ex_sel_barrel_res : STD_LOGIC;
  signal ex_sext_op : STD_LOGIC_VECTOR ( 0 to 1 );
  signal ex_sleep_i0 : STD_LOGIC;
  signal ex_sleep_i_i_1_n_0 : STD_LOGIC;
  signal ex_start_div : STD_LOGIC;
  signal ex_suspend_i_i_1_n_0 : STD_LOGIC;
  signal ex_unsigned_op : STD_LOGIC;
  signal ex_use_carry : STD_LOGIC;
  signal \exception_registers_I1/WB_Exception_Return_Addr0\ : STD_LOGIC_VECTOR ( 31 downto 2 );
  signal \exception_registers_I1/wb_PC_i0\ : STD_LOGIC;
  signal gpr_op1 : STD_LOGIC_VECTOR ( 29 to 31 );
  signal gpr_op2 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal gpr_op3 : STD_LOGIC_VECTOR ( 30 to 31 );
  signal if0_pause : STD_LOGIC;
  signal if0_raw_valid : STD_LOGIC;
  signal if0_raw_valid_i_1_n_0 : STD_LOGIC;
  signal if1_insert_piperun_i : STD_LOGIC;
  signal if2_ibus_access_raw0 : STD_LOGIC;
  signal if2_ibus_access_raw_i_1_n_0 : STD_LOGIC;
  signal if2_ilmb_issued : STD_LOGIC;
  signal if2_piperun : STD_LOGIC;
  signal if2_raw_valid_i_1_n_0 : STD_LOGIC;
  signal if3_allow_iready : STD_LOGIC;
  signal if3_ilmb_iready : STD_LOGIC;
  signal if3_piperun : STD_LOGIC;
  signal if3_potential_bubble : STD_LOGIC;
  signal if3_raw_valid_i_1_n_0 : STD_LOGIC;
  signal if4_addr_mmu : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if4_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal if4_piperun : STD_LOGIC;
  signal if4_raw_valid_i_1_n_0 : STD_LOGIC;
  signal if4_ready : STD_LOGIC;
  signal interrupt_address_d1 : STD_LOGIC_VECTOR ( 0 to 31 );
  signal kill_fetch_mmu : STD_LOGIC;
  signal lopt : STD_LOGIC;
  signal lopt_1 : STD_LOGIC;
  signal lopt_2 : STD_LOGIC;
  signal lopt_3 : STD_LOGIC;
  signal lopt_4 : STD_LOGIC;
  signal lopt_5 : STD_LOGIC;
  signal lopt_6 : STD_LOGIC;
  signal lopt_7 : STD_LOGIC;
  signal lopt_8 : STD_LOGIC;
  signal m0_ex_sel_res_i_1_n_0 : STD_LOGIC;
  signal m0_piperun : STD_LOGIC;
  signal m0_sel_barrel_res : STD_LOGIC;
  signal m1_byte_access : STD_LOGIC;
  signal m1_dlmb_issued : STD_LOGIC;
  signal m1_doublet_access : STD_LOGIC;
  signal m1_piperun : STD_LOGIC;
  signal m1_sel_mul_res : STD_LOGIC;
  signal m2_active_access : STD_LOGIC;
  signal m2_allow_dready : STD_LOGIC;
  signal m2_dlmb_dready : STD_LOGIC;
  signal m2_dlmb_drop_request : STD_LOGIC;
  signal m2_is_div_instr : STD_LOGIC;
  signal m2_piperun : STD_LOGIC;
  signal m2_potential_bubble : STD_LOGIC;
  signal m3_active_access : STD_LOGIC;
  signal m3_databus_ready : STD_LOGIC;
  signal m3_div_by_zero : STD_LOGIC;
  signal m3_div_overflow : STD_LOGIC;
  signal m3_div_stall : STD_LOGIC;
  signal m3_div_stall_i_i_1_n_0 : STD_LOGIC;
  signal m3_div_zero_overflow_ex_hold : STD_LOGIC;
  signal m3_is_div_instr_i_i_1_n_0 : STD_LOGIC;
  signal m3_msr : STD_LOGIC_VECTOR ( 30 to 30 );
  signal m3_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal m3_piperun : STD_LOGIC;
  signal m3_sel_div_res : STD_LOGIC;
  signal m3_sel_load_res : STD_LOGIC;
  signal make_result_neg_i_1_n_0 : STD_LOGIC;
  signal negative_operands_i_1_n_0 : STD_LOGIC;
  signal next_sub_i_1_n_0 : STD_LOGIC;
  signal normal_stop_i : STD_LOGIC;
  signal of_MSR_i : STD_LOGIC_VECTOR ( 28 to 30 );
  signal of_gpr_op1_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_gpr_op2_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_gpr_op3_rd_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal of_imm_data : STD_LOGIC_VECTOR ( 5 to 15 );
  signal of_is_div_instr : STD_LOGIC;
  signal of_msr : STD_LOGIC_VECTOR ( 30 to 30 );
  signal of_op1_sel : STD_LOGIC_VECTOR ( 1 to 2 );
  signal of_op2_sel : STD_LOGIC_VECTOR ( 0 to 2 );
  signal of_op3_sel : STD_LOGIC_VECTOR ( 0 to 2 );
  signal of_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal of_piperun : STD_LOGIC;
  signal of_write_imm_reg : STD_LOGIC;
  signal p_0_in105_in : STD_LOGIC;
  signal p_1_in106_in : STD_LOGIC;
  signal p_2_in : STD_LOGIC;
  signal \p_4_out__0\ : STD_LOGIC;
  signal p_55_out : STD_LOGIC;
  signal read_register_MSR_1 : STD_LOGIC;
  signal single_Step_N : STD_LOGIC;
  signal trace_wb_instr : STD_LOGIC_VECTOR ( 0 to 31 );
  signal trace_wb_jump_taken : STD_LOGIC;
  signal trace_wb_valid_instr : STD_LOGIC;
  signal wb_byte_access : STD_LOGIC;
  signal wb_databus_access : STD_LOGIC;
  signal wb_databus_addr_mmu : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_databus_byte_enable : STD_LOGIC_VECTOR ( 0 to 3 );
  signal wb_databus_read : STD_LOGIC;
  signal wb_databus_read_data : STD_LOGIC_VECTOR ( 0 to 15 );
  signal wb_databus_write : STD_LOGIC;
  signal wb_databus_write_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_daxi_valid_read_data : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_delay_slot : STD_LOGIC;
  signal wb_div_zero_overflow : STD_LOGIC;
  signal wb_dlmb_valid_read_data : STD_LOGIC_VECTOR ( 0 to 15 );
  signal wb_doublet_access : STD_LOGIC;
  signal wb_exception_kind : STD_LOGIC_VECTOR ( 28 to 31 );
  signal wb_exception_taken : STD_LOGIC;
  signal wb_fwd : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_gpr_wr : STD_LOGIC;
  signal wb_gpr_wr_addr : STD_LOGIC_VECTOR ( 0 to 4 );
  signal wb_gpr_wr_dbg : STD_LOGIC;
  signal wb_halted : STD_LOGIC;
  signal wb_msr : STD_LOGIC_VECTOR ( 25 to 30 );
  signal wb_msr_clear_bip : STD_LOGIC;
  signal wb_msr_clear_ie : STD_LOGIC;
  signal wb_pc : STD_LOGIC_VECTOR ( 0 to 31 );
  signal wb_pc_valid : STD_LOGIC;
  signal wb_read_imm_reg : STD_LOGIC;
  signal wb_read_imm_reg_1 : STD_LOGIC;
begin
  D(366 downto 0) <= \^d\(366 downto 0);
  Dbg_Reg_En_2_sp_1 <= Dbg_Reg_En_2_sn_1;
  Hibernate <= \^hibernate\;
  LOCKSTEP_Master_Out(38 downto 0) <= \^lockstep_master_out\(38 downto 0);
  \Serial_Dbg_Intf.if_debug_ready_i_reg\ <= \^serial_dbg_intf.if_debug_ready_i_reg\;
  Sleep <= \^sleep\;
  Suspend <= \^suspend\;
DATA_FLOW_I1: entity work.microblaze_microblaze_0_0_Data_Flow_ff
     port map (
      ADDRD(4) => wb_gpr_wr_addr(0),
      ADDRD(3) => wb_gpr_wr_addr(1),
      ADDRD(2) => wb_gpr_wr_addr(2),
      ADDRD(1) => wb_gpr_wr_addr(3),
      ADDRD(0) => wb_gpr_wr_addr(4),
      Clk => Clk,
      D(31) => DATA_FLOW_I1_n_145,
      D(30) => DATA_FLOW_I1_n_146,
      D(29) => DATA_FLOW_I1_n_147,
      D(28) => DATA_FLOW_I1_n_148,
      D(27) => DATA_FLOW_I1_n_149,
      D(26) => DATA_FLOW_I1_n_150,
      D(25) => DATA_FLOW_I1_n_151,
      D(24) => DATA_FLOW_I1_n_152,
      D(23) => DATA_FLOW_I1_n_153,
      D(22) => DATA_FLOW_I1_n_154,
      D(21) => DATA_FLOW_I1_n_155,
      D(20) => DATA_FLOW_I1_n_156,
      D(19) => DATA_FLOW_I1_n_157,
      D(18) => DATA_FLOW_I1_n_158,
      D(17) => DATA_FLOW_I1_n_159,
      D(16) => DATA_FLOW_I1_n_160,
      D(15) => DATA_FLOW_I1_n_161,
      D(14) => DATA_FLOW_I1_n_162,
      D(13) => DATA_FLOW_I1_n_163,
      D(12) => DATA_FLOW_I1_n_164,
      D(11) => DATA_FLOW_I1_n_165,
      D(10) => DATA_FLOW_I1_n_166,
      D(9) => DATA_FLOW_I1_n_167,
      D(8) => DATA_FLOW_I1_n_168,
      D(7) => DATA_FLOW_I1_n_169,
      D(6) => DATA_FLOW_I1_n_170,
      D(5) => DATA_FLOW_I1_n_171,
      D(4) => DATA_FLOW_I1_n_172,
      D(3) => DATA_FLOW_I1_n_173,
      D(2) => DATA_FLOW_I1_n_174,
      D(1) => DATA_FLOW_I1_n_175,
      D(0) => DATA_FLOW_I1_n_176,
      DI(0) => DECODE_I1_n_334,
      DI_0 => \ALU_I1/DI\,
      D_2 => \MSR_I1/D\,
      E(0) => \Using_Div_Unit.Div_Unit_I1/div_busy\,
      \EX_Branch_CMP_Op1_reg[0]\(0) => ex_op1_neg,
      \EX_Branch_CMP_Op1_reg[28]\ => DECODE_I1_n_419,
      \EX_Branch_CMP_Op1_reg[28]_0\ => DECODE_I1_n_420,
      \EX_Branch_CMP_Op1_reg[29]\(2) => \Operand_Select_I1/of_branch_cmp\(29),
      \EX_Branch_CMP_Op1_reg[29]\(1) => \Operand_Select_I1/of_branch_cmp\(30),
      \EX_Branch_CMP_Op1_reg[29]\(0) => \Operand_Select_I1/of_branch_cmp\(31),
      EX_CLZ_Instr_reg => DATA_FLOW_I1_n_266,
      EX_CLZ_Instr_reg_0 => DATA_FLOW_I1_n_347,
      EX_CarryIn => EX_CarryIn,
      EX_Enable_ALU => ex_enable_alu,
      EX_Enable_Sext_Shift_reg(6) => ex_fwd(16),
      EX_Enable_Sext_Shift_reg(5) => ex_fwd(17),
      EX_Enable_Sext_Shift_reg(4) => ex_fwd(18),
      EX_Enable_Sext_Shift_reg(3) => ex_fwd(20),
      EX_Enable_Sext_Shift_reg(2) => ex_fwd(21),
      EX_Enable_Sext_Shift_reg(1) => ex_fwd(29),
      EX_Enable_Sext_Shift_reg(0) => ex_fwd(31),
      \EX_Logic_Op_reg[0]\ => DATA_FLOW_I1_n_315,
      \EX_Logic_Op_reg[1]\ => DATA_FLOW_I1_n_355,
      EX_Op1_CMP_Equal => ex_op1_cmp_equal,
      EX_Op1_Zero => ex_op1_zero,
      \EX_Op1_reg[0]\(31) => DATA_FLOW_I1_n_20,
      \EX_Op1_reg[0]\(30) => DATA_FLOW_I1_n_21,
      \EX_Op1_reg[0]\(29) => DATA_FLOW_I1_n_22,
      \EX_Op1_reg[0]\(28) => DATA_FLOW_I1_n_23,
      \EX_Op1_reg[0]\(27) => DATA_FLOW_I1_n_24,
      \EX_Op1_reg[0]\(26) => DATA_FLOW_I1_n_25,
      \EX_Op1_reg[0]\(25) => DATA_FLOW_I1_n_26,
      \EX_Op1_reg[0]\(24) => DATA_FLOW_I1_n_27,
      \EX_Op1_reg[0]\(23) => DATA_FLOW_I1_n_28,
      \EX_Op1_reg[0]\(22) => DATA_FLOW_I1_n_29,
      \EX_Op1_reg[0]\(21) => DATA_FLOW_I1_n_30,
      \EX_Op1_reg[0]\(20) => DATA_FLOW_I1_n_31,
      \EX_Op1_reg[0]\(19) => DATA_FLOW_I1_n_32,
      \EX_Op1_reg[0]\(18) => DATA_FLOW_I1_n_33,
      \EX_Op1_reg[0]\(17) => DATA_FLOW_I1_n_34,
      \EX_Op1_reg[0]\(16) => DATA_FLOW_I1_n_35,
      \EX_Op1_reg[0]\(15) => DATA_FLOW_I1_n_36,
      \EX_Op1_reg[0]\(14) => DATA_FLOW_I1_n_37,
      \EX_Op1_reg[0]\(13) => DATA_FLOW_I1_n_38,
      \EX_Op1_reg[0]\(12) => DATA_FLOW_I1_n_39,
      \EX_Op1_reg[0]\(11) => DATA_FLOW_I1_n_40,
      \EX_Op1_reg[0]\(10) => DATA_FLOW_I1_n_41,
      \EX_Op1_reg[0]\(9) => DATA_FLOW_I1_n_42,
      \EX_Op1_reg[0]\(8) => DATA_FLOW_I1_n_43,
      \EX_Op1_reg[0]\(7) => DATA_FLOW_I1_n_44,
      \EX_Op1_reg[0]\(6) => DATA_FLOW_I1_n_45,
      \EX_Op1_reg[0]\(5) => DATA_FLOW_I1_n_46,
      \EX_Op1_reg[0]\(4) => DATA_FLOW_I1_n_47,
      \EX_Op1_reg[0]\(3) => DATA_FLOW_I1_n_48,
      \EX_Op1_reg[0]\(2) => DATA_FLOW_I1_n_49,
      \EX_Op1_reg[0]\(1) => DATA_FLOW_I1_n_50,
      \EX_Op1_reg[0]\(0) => DATA_FLOW_I1_n_51,
      \EX_Op1_reg[0]_0\ => DATA_FLOW_I1_n_346,
      \EX_Op1_reg[0]_1\ => DATA_FLOW_I1_n_348,
      \EX_Op1_reg[0]_2\ => DATA_FLOW_I1_n_352,
      \EX_Op1_reg[0]_3\(31) => \Operand_Select_I1/of_op1\(0),
      \EX_Op1_reg[0]_3\(30) => \Operand_Select_I1/of_op1\(1),
      \EX_Op1_reg[0]_3\(29) => \Operand_Select_I1/of_op1\(2),
      \EX_Op1_reg[0]_3\(28) => \Operand_Select_I1/of_op1\(3),
      \EX_Op1_reg[0]_3\(27) => \Operand_Select_I1/of_op1\(4),
      \EX_Op1_reg[0]_3\(26) => \Operand_Select_I1/of_op1\(5),
      \EX_Op1_reg[0]_3\(25) => \Operand_Select_I1/of_op1\(6),
      \EX_Op1_reg[0]_3\(24) => \Operand_Select_I1/of_op1\(7),
      \EX_Op1_reg[0]_3\(23) => \Operand_Select_I1/of_op1\(8),
      \EX_Op1_reg[0]_3\(22) => \Operand_Select_I1/of_op1\(9),
      \EX_Op1_reg[0]_3\(21) => \Operand_Select_I1/of_op1\(10),
      \EX_Op1_reg[0]_3\(20) => \Operand_Select_I1/of_op1\(11),
      \EX_Op1_reg[0]_3\(19) => \Operand_Select_I1/of_op1\(12),
      \EX_Op1_reg[0]_3\(18) => \Operand_Select_I1/of_op1\(13),
      \EX_Op1_reg[0]_3\(17) => \Operand_Select_I1/of_op1\(14),
      \EX_Op1_reg[0]_3\(16) => \Operand_Select_I1/of_op1\(15),
      \EX_Op1_reg[0]_3\(15) => \Operand_Select_I1/of_op1\(16),
      \EX_Op1_reg[0]_3\(14) => \Operand_Select_I1/of_op1\(17),
      \EX_Op1_reg[0]_3\(13) => \Operand_Select_I1/of_op1\(18),
      \EX_Op1_reg[0]_3\(12) => \Operand_Select_I1/of_op1\(19),
      \EX_Op1_reg[0]_3\(11) => \Operand_Select_I1/of_op1\(20),
      \EX_Op1_reg[0]_3\(10) => \Operand_Select_I1/of_op1\(21),
      \EX_Op1_reg[0]_3\(9) => \Operand_Select_I1/of_op1\(22),
      \EX_Op1_reg[0]_3\(8) => \Operand_Select_I1/of_op1\(23),
      \EX_Op1_reg[0]_3\(7) => \Operand_Select_I1/of_op1\(24),
      \EX_Op1_reg[0]_3\(6) => \Operand_Select_I1/of_op1\(25),
      \EX_Op1_reg[0]_3\(5) => \Operand_Select_I1/of_op1\(26),
      \EX_Op1_reg[0]_3\(4) => \Operand_Select_I1/of_op1\(27),
      \EX_Op1_reg[0]_3\(3) => \Operand_Select_I1/of_op1\(28),
      \EX_Op1_reg[0]_3\(2) => \Operand_Select_I1/of_op1\(29),
      \EX_Op1_reg[0]_3\(1) => \Operand_Select_I1/of_op1\(30),
      \EX_Op1_reg[0]_3\(0) => \Operand_Select_I1/of_op1\(31),
      \EX_Op1_reg[10]\ => DATA_FLOW_I1_n_245,
      \EX_Op1_reg[16]\ => DATA_FLOW_I1_n_354,
      \EX_Op1_reg[1]\ => DATA_FLOW_I1_n_247,
      \EX_Op1_reg[24]\ => DATA_FLOW_I1_n_349,
      \EX_Op1_reg[24]_0\ => DATA_FLOW_I1_n_350,
      \EX_Op1_reg[24]_1\ => DATA_FLOW_I1_n_388,
      \EX_Op1_reg[8]\ => DATA_FLOW_I1_n_248,
      \EX_Op1_reg[9]\ => DATA_FLOW_I1_n_246,
      \EX_Op2_reg[0]\ => DECODE_I1_n_339,
      \EX_Op2_reg[10]\ => DECODE_I1_n_380,
      \EX_Op2_reg[11]\ => DECODE_I1_n_381,
      \EX_Op2_reg[12]\ => DECODE_I1_n_361,
      \EX_Op2_reg[13]\ => DECODE_I1_n_362,
      \EX_Op2_reg[14]\ => DECODE_I1_n_363,
      \EX_Op2_reg[15]\ => DECODE_I1_n_382,
      \EX_Op2_reg[16]\ => DECODE_I1_n_364,
      \EX_Op2_reg[17]\ => DECODE_I1_n_374,
      \EX_Op2_reg[18]\ => DECODE_I1_n_365,
      \EX_Op2_reg[19]\ => DECODE_I1_n_427,
      \EX_Op2_reg[1]\ => DECODE_I1_n_371,
      \EX_Op2_reg[1]_0\ => DECODE_I1_n_372,
      \EX_Op2_reg[1]_1\ => DECODE_I1_n_375,
      \EX_Op2_reg[20]\ => DECODE_I1_n_373,
      \EX_Op2_reg[21]\ => DECODE_I1_n_366,
      \EX_Op2_reg[22]\ => DECODE_I1_n_426,
      \EX_Op2_reg[23]\ => DECODE_I1_n_425,
      \EX_Op2_reg[24]\ => DECODE_I1_n_424,
      \EX_Op2_reg[25]\ => DATA_FLOW_I1_n_254,
      \EX_Op2_reg[25]_0\ => DATA_FLOW_I1_n_255,
      \EX_Op2_reg[25]_1\ => DATA_FLOW_I1_n_312,
      \EX_Op2_reg[25]_2\ => DECODE_I1_n_367,
      \EX_Op2_reg[26]\ => DECODE_I1_n_423,
      \EX_Op2_reg[27]\ => DECODE_I1_n_422,
      \EX_Op2_reg[28]\ => DECODE_I1_n_421,
      \EX_Op2_reg[29]\ => DATA_FLOW_I1_n_395,
      \EX_Op2_reg[29]_0\ => DECODE_I1_n_368,
      \EX_Op2_reg[2]\ => DECODE_I1_n_357,
      \EX_Op2_reg[30]\ => DATA_FLOW_I1_n_396,
      \EX_Op2_reg[30]_0\ => DECODE_I1_n_383,
      \EX_Op2_reg[31]\(0) => \Operand_Select_I1/of_op2\(31),
      \EX_Op2_reg[3]\ => DECODE_I1_n_376,
      \EX_Op2_reg[4]\ => DECODE_I1_n_377,
      \EX_Op2_reg[5]\ => DECODE_I1_n_358,
      \EX_Op2_reg[6]\ => DECODE_I1_n_378,
      \EX_Op2_reg[7]\ => DECODE_I1_n_379,
      \EX_Op2_reg[8]\ => DECODE_I1_n_359,
      \EX_Op2_reg[9]\ => DECODE_I1_n_360,
      \EX_Op3[1]_i_2\(25) => of_gpr_op3_rd_addr(0),
      \EX_Op3[1]_i_2\(24) => of_gpr_op3_rd_addr(1),
      \EX_Op3[1]_i_2\(23) => of_gpr_op3_rd_addr(2),
      \EX_Op3[1]_i_2\(22) => of_gpr_op3_rd_addr(3),
      \EX_Op3[1]_i_2\(21) => of_gpr_op3_rd_addr(4),
      \EX_Op3[1]_i_2\(20) => of_gpr_op1_rd_addr(0),
      \EX_Op3[1]_i_2\(19) => of_gpr_op1_rd_addr(1),
      \EX_Op3[1]_i_2\(18) => of_gpr_op1_rd_addr(2),
      \EX_Op3[1]_i_2\(17) => of_gpr_op1_rd_addr(3),
      \EX_Op3[1]_i_2\(16) => of_gpr_op1_rd_addr(4),
      \EX_Op3[1]_i_2\(15) => of_gpr_op2_rd_addr(0),
      \EX_Op3[1]_i_2\(14) => of_gpr_op2_rd_addr(1),
      \EX_Op3[1]_i_2\(13) => of_gpr_op2_rd_addr(2),
      \EX_Op3[1]_i_2\(12) => of_gpr_op2_rd_addr(3),
      \EX_Op3[1]_i_2\(11) => of_gpr_op2_rd_addr(4),
      \EX_Op3[1]_i_2\(10) => of_imm_data(5),
      \EX_Op3[1]_i_2\(9) => of_imm_data(6),
      \EX_Op3[1]_i_2\(8) => of_imm_data(7),
      \EX_Op3[1]_i_2\(7) => of_imm_data(8),
      \EX_Op3[1]_i_2\(6) => of_imm_data(9),
      \EX_Op3[1]_i_2\(5) => of_imm_data(10),
      \EX_Op3[1]_i_2\(4) => of_imm_data(11),
      \EX_Op3[1]_i_2\(3) => of_imm_data(12),
      \EX_Op3[1]_i_2\(2) => of_imm_data(13),
      \EX_Op3[1]_i_2\(1) => of_imm_data(14),
      \EX_Op3[1]_i_2\(0) => of_imm_data(15),
      \EX_Op3[29]_i_2\ => DECODE_I1_n_300,
      \EX_Op3[29]_i_2_0\ => DECODE_I1_n_301,
      \EX_Op3_reg[29]\ => DECODE_I1_n_369,
      \EX_Op3_reg[30]\ => DECODE_I1_n_337,
      \EX_Op3_reg[30]_0\ => DECODE_I1_n_338,
      \EX_Op3_reg[30]_1\ => DECODE_I1_n_335,
      \EX_Op3_reg[31]\(0) => \Operand_Select_I1/of_op3\(31),
      EX_Pattern_Cmp_Sel_reg => DATA_FLOW_I1_n_351,
      EX_Pattern_Cmp_Sel_reg_0 => DATA_FLOW_I1_n_353,
      GPR_Op1(2) => gpr_op1(29),
      GPR_Op1(1) => gpr_op1(30),
      GPR_Op1(0) => gpr_op1(31),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(1) => gpr_op3(30),
      GPR_Op3(0) => gpr_op3(31),
      LO => ex_alu_carry_32,
      M1_Sel_Mul_Res_reg => DATA_FLOW_I1_n_268,
      M1_Sel_Mul_Res_reg_0 => DATA_FLOW_I1_n_270,
      M1_Sel_Mul_Res_reg_1 => DATA_FLOW_I1_n_271,
      M1_Sel_Mul_Res_reg_2 => DATA_FLOW_I1_n_272,
      M1_Sel_Mul_Res_reg_3 => DATA_FLOW_I1_n_274,
      M1_Sel_Mul_Res_reg_4 => DATA_FLOW_I1_n_275,
      M1_Sel_Mul_Res_reg_5 => DATA_FLOW_I1_n_277,
      M3_Div_By_Zero_reg => DATA_FLOW_I1_n_397,
      M3_Div_By_Zero_reg_0 => DECODE_I1_n_429,
      \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]\(1) => \Byte_Doublet_Handle_I1/p_0_in\,
      \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]\(0) => DATA_FLOW_I1_n_253,
      \No_Long.No_Reverse_Mem_Accesses.wb_byte_selects_reg[0]_0\ => DATA_FLOW_I1_n_387,
      O(0) => \Using_Div_Unit.Div_Unit_I1/Res_Neg\,
      Q(15) => ex_op2(0),
      Q(14) => ex_op2(17),
      Q(13) => ex_op2(18),
      Q(12) => ex_op2(19),
      Q(11) => ex_op2(20),
      Q(10) => ex_op2(21),
      Q(9) => ex_op2(22),
      Q(8) => ex_op2(23),
      Q(7) => ex_op2(24),
      Q(6) => ex_op2(25),
      Q(5) => ex_op2(26),
      Q(4) => ex_op2(27),
      Q(3) => DATA_FLOW_I1_n_16,
      Q(2) => DATA_FLOW_I1_n_17,
      Q(1) => DATA_FLOW_I1_n_18,
      Q(0) => DATA_FLOW_I1_n_19,
      \R_reg[32]\(0) => \Using_Div_Unit.Div_Unit_I1/Q0\,
      S(3) => DECODE_I1_n_205,
      S(2) => DECODE_I1_n_206,
      S(1) => DECODE_I1_n_207,
      S(0) => DECODE_I1_n_208,
      SR(0) => \Using_Div_Unit.Div_Unit_I1/reset_Q\,
      S_1 => \ALU_I1/Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(18) => \Barrel_Shifter_I/p_31_out\(31),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(17) => DECODE_I1_n_213,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(16) => \Barrel_Shifter_I/p_31_out\(26),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(15) => DECODE_I1_n_215,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(14) => DECODE_I1_n_216,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(13) => DECODE_I1_n_217,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(12) => DECODE_I1_n_218,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(11) => DECODE_I1_n_219,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(10 downto 9) => \Barrel_Shifter_I/p_31_out\(18 downto 17),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(8) => DECODE_I1_n_222,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(7) => \Barrel_Shifter_I/p_31_out\(15),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(6 downto 3) => \Barrel_Shifter_I/p_31_out\(11 downto 8),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(2) => \Barrel_Shifter_I/p_31_out\(3),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[0]\(1 downto 0) => \Barrel_Shifter_I/p_31_out\(1 downto 0),
      \Use_HW_BS.Using_BitField.mem_mask0_reg[2]\ => DECODE_I1_n_231,
      \Use_HW_BS.Using_BitField.mem_mask1_reg[5]\ => DECODE_I1_n_211,
      \Use_HW_BS.mem_mux3_reg[0]\ => DECODE_I1_n_516,
      \Use_HW_BS.mem_mux3_reg[0]_0\ => DECODE_I1_n_519,
      \Use_HW_BS.mem_mux3_reg[0]_1\ => DECODE_I1_n_520,
      \Use_HW_BS.mem_mux3_reg[1]\(27) => DECODE_I1_n_481,
      \Use_HW_BS.mem_mux3_reg[1]\(26) => DECODE_I1_n_482,
      \Use_HW_BS.mem_mux3_reg[1]\(25) => DECODE_I1_n_483,
      \Use_HW_BS.mem_mux3_reg[1]\(24) => DECODE_I1_n_484,
      \Use_HW_BS.mem_mux3_reg[1]\(23) => DECODE_I1_n_485,
      \Use_HW_BS.mem_mux3_reg[1]\(22) => DECODE_I1_n_486,
      \Use_HW_BS.mem_mux3_reg[1]\(21) => DECODE_I1_n_487,
      \Use_HW_BS.mem_mux3_reg[1]\(20) => DECODE_I1_n_488,
      \Use_HW_BS.mem_mux3_reg[1]\(19) => DECODE_I1_n_489,
      \Use_HW_BS.mem_mux3_reg[1]\(18) => DECODE_I1_n_490,
      \Use_HW_BS.mem_mux3_reg[1]\(17) => DECODE_I1_n_491,
      \Use_HW_BS.mem_mux3_reg[1]\(16) => DECODE_I1_n_492,
      \Use_HW_BS.mem_mux3_reg[1]\(15) => DECODE_I1_n_493,
      \Use_HW_BS.mem_mux3_reg[1]\(14) => DECODE_I1_n_494,
      \Use_HW_BS.mem_mux3_reg[1]\(13) => DECODE_I1_n_495,
      \Use_HW_BS.mem_mux3_reg[1]\(12) => DECODE_I1_n_496,
      \Use_HW_BS.mem_mux3_reg[1]\(11) => DECODE_I1_n_497,
      \Use_HW_BS.mem_mux3_reg[1]\(10) => DECODE_I1_n_498,
      \Use_HW_BS.mem_mux3_reg[1]\(9) => DECODE_I1_n_499,
      \Use_HW_BS.mem_mux3_reg[1]\(8) => DECODE_I1_n_500,
      \Use_HW_BS.mem_mux3_reg[1]\(7) => DECODE_I1_n_501,
      \Use_HW_BS.mem_mux3_reg[1]\(6) => DECODE_I1_n_502,
      \Use_HW_BS.mem_mux3_reg[1]\(5) => DECODE_I1_n_503,
      \Use_HW_BS.mem_mux3_reg[1]\(4) => DECODE_I1_n_504,
      \Use_HW_BS.mem_mux3_reg[1]\(3) => DECODE_I1_n_505,
      \Use_HW_BS.mem_mux3_reg[1]\(2) => DECODE_I1_n_506,
      \Use_HW_BS.mem_mux3_reg[1]\(1) => DECODE_I1_n_507,
      \Use_HW_BS.mem_mux3_reg[1]\(0) => DECODE_I1_n_508,
      \Use_HW_BS.mem_mux3_reg[27]\ => DECODE_I1_n_517,
      \Use_HW_BS.mem_mux3_reg[30]\ => DECODE_I1_n_522,
      \Use_HW_BS.mem_mux3_reg[30]_0\ => DECODE_I1_n_518,
      \Using_FPGA.DSP48E1_I1\ => DECODE_I1_n_30,
      \Using_FPGA.Native\ => DATA_FLOW_I1_n_64,
      \Using_FPGA.Native_0\ => DATA_FLOW_I1_n_65,
      \Using_FPGA.Native_1\ => DATA_FLOW_I1_n_67,
      \Using_FPGA.Native_10\ => DECODE_I1_n_455,
      \Using_FPGA.Native_11\ => DECODE_I1_n_456,
      \Using_FPGA.Native_12\ => DECODE_I1_n_457,
      \Using_FPGA.Native_13\ => DECODE_I1_n_448,
      \Using_FPGA.Native_14\ => DECODE_I1_n_449,
      \Using_FPGA.Native_15\ => DECODE_I1_n_458,
      \Using_FPGA.Native_16\ => DECODE_I1_n_459,
      \Using_FPGA.Native_17\ => DECODE_I1_n_460,
      \Using_FPGA.Native_18\ => DECODE_I1_n_461,
      \Using_FPGA.Native_19\ => DECODE_I1_n_432,
      \Using_FPGA.Native_2\ => DATA_FLOW_I1_n_68,
      \Using_FPGA.Native_20\ => DECODE_I1_n_452,
      \Using_FPGA.Native_21\ => DECODE_I1_n_450,
      \Using_FPGA.Native_22\ => DECODE_I1_n_462,
      \Using_FPGA.Native_23\ => DECODE_I1_n_468,
      \Using_FPGA.Native_24\ => DECODE_I1_n_473,
      \Using_FPGA.Native_25\ => DECODE_I1_n_467,
      \Using_FPGA.Native_26\ => DECODE_I1_n_474,
      \Using_FPGA.Native_27\ => DECODE_I1_n_466,
      \Using_FPGA.Native_28\ => DECODE_I1_n_475,
      \Using_FPGA.Native_29\ => DECODE_I1_n_527,
      \Using_FPGA.Native_3\ => DATA_FLOW_I1_n_69,
      \Using_FPGA.Native_30\ => DECODE_I1_n_472,
      \Using_FPGA.Native_31\ => DECODE_I1_n_528,
      \Using_FPGA.Native_32\ => DECODE_I1_n_451,
      \Using_FPGA.Native_4\ => DATA_FLOW_I1_n_70,
      \Using_FPGA.Native_5\ => DATA_FLOW_I1_n_71,
      \Using_FPGA.Native_6\ => DATA_FLOW_I1_n_72,
      \Using_FPGA.Native_7\ => DATA_FLOW_I1_n_73,
      \Using_FPGA.Native_8\ => DATA_FLOW_I1_n_74,
      \Using_FPGA.Native_9\ => DECODE_I1_n_454,
      WB_Byte_Access_reg => DATA_FLOW_I1_n_251,
      \WB_DataBus_Byte_Enable_reg[0]\(3) => wb_databus_byte_enable(0),
      \WB_DataBus_Byte_Enable_reg[0]\(2) => wb_databus_byte_enable(1),
      \WB_DataBus_Byte_Enable_reg[0]\(1) => wb_databus_byte_enable(2),
      \WB_DataBus_Byte_Enable_reg[0]\(0) => wb_databus_byte_enable(3),
      \WB_DataBus_Write_Data_reg[0]\(31) => wb_databus_write_data(0),
      \WB_DataBus_Write_Data_reg[0]\(30) => wb_databus_write_data(1),
      \WB_DataBus_Write_Data_reg[0]\(29) => wb_databus_write_data(2),
      \WB_DataBus_Write_Data_reg[0]\(28) => wb_databus_write_data(3),
      \WB_DataBus_Write_Data_reg[0]\(27) => wb_databus_write_data(4),
      \WB_DataBus_Write_Data_reg[0]\(26) => wb_databus_write_data(5),
      \WB_DataBus_Write_Data_reg[0]\(25) => wb_databus_write_data(6),
      \WB_DataBus_Write_Data_reg[0]\(24) => wb_databus_write_data(7),
      \WB_DataBus_Write_Data_reg[0]\(23) => wb_databus_write_data(8),
      \WB_DataBus_Write_Data_reg[0]\(22) => wb_databus_write_data(9),
      \WB_DataBus_Write_Data_reg[0]\(21) => wb_databus_write_data(10),
      \WB_DataBus_Write_Data_reg[0]\(20) => wb_databus_write_data(11),
      \WB_DataBus_Write_Data_reg[0]\(19) => wb_databus_write_data(12),
      \WB_DataBus_Write_Data_reg[0]\(18) => wb_databus_write_data(13),
      \WB_DataBus_Write_Data_reg[0]\(17) => wb_databus_write_data(14),
      \WB_DataBus_Write_Data_reg[0]\(16) => wb_databus_write_data(15),
      \WB_DataBus_Write_Data_reg[0]\(15) => wb_databus_write_data(16),
      \WB_DataBus_Write_Data_reg[0]\(14) => wb_databus_write_data(17),
      \WB_DataBus_Write_Data_reg[0]\(13) => wb_databus_write_data(18),
      \WB_DataBus_Write_Data_reg[0]\(12) => wb_databus_write_data(19),
      \WB_DataBus_Write_Data_reg[0]\(11) => wb_databus_write_data(20),
      \WB_DataBus_Write_Data_reg[0]\(10) => wb_databus_write_data(21),
      \WB_DataBus_Write_Data_reg[0]\(9) => wb_databus_write_data(22),
      \WB_DataBus_Write_Data_reg[0]\(8) => wb_databus_write_data(23),
      \WB_DataBus_Write_Data_reg[0]\(7) => wb_databus_write_data(24),
      \WB_DataBus_Write_Data_reg[0]\(6) => wb_databus_write_data(25),
      \WB_DataBus_Write_Data_reg[0]\(5) => wb_databus_write_data(26),
      \WB_DataBus_Write_Data_reg[0]\(4) => wb_databus_write_data(27),
      \WB_DataBus_Write_Data_reg[0]\(3) => wb_databus_write_data(28),
      \WB_DataBus_Write_Data_reg[0]\(2) => wb_databus_write_data(29),
      \WB_DataBus_Write_Data_reg[0]\(1) => wb_databus_write_data(30),
      \WB_DataBus_Write_Data_reg[0]\(0) => wb_databus_write_data(31),
      WB_Div_Zero_Overflow_reg => DECODE_I1_n_151,
      WB_Exception_Return_Addr0(29 downto 0) => \exception_registers_I1/WB_Exception_Return_Addr0\(31 downto 2),
      \WB_Exception_Return_Addr_reg[0]\(1) => DECODE_I1_n_263,
      \WB_Exception_Return_Addr_reg[0]\(0) => DECODE_I1_n_264,
      \WB_Exception_Return_Addr_reg[0]_0\(30) => DECODE_I1_n_566,
      \WB_Exception_Return_Addr_reg[0]_0\(29) => DECODE_I1_n_567,
      \WB_Exception_Return_Addr_reg[0]_0\(28) => DECODE_I1_n_568,
      \WB_Exception_Return_Addr_reg[0]_0\(27) => DECODE_I1_n_569,
      \WB_Exception_Return_Addr_reg[0]_0\(26) => DECODE_I1_n_570,
      \WB_Exception_Return_Addr_reg[0]_0\(25) => DECODE_I1_n_571,
      \WB_Exception_Return_Addr_reg[0]_0\(24) => DECODE_I1_n_572,
      \WB_Exception_Return_Addr_reg[0]_0\(23) => DECODE_I1_n_573,
      \WB_Exception_Return_Addr_reg[0]_0\(22) => DECODE_I1_n_574,
      \WB_Exception_Return_Addr_reg[0]_0\(21) => DECODE_I1_n_575,
      \WB_Exception_Return_Addr_reg[0]_0\(20) => DECODE_I1_n_576,
      \WB_Exception_Return_Addr_reg[0]_0\(19) => DECODE_I1_n_577,
      \WB_Exception_Return_Addr_reg[0]_0\(18) => DECODE_I1_n_578,
      \WB_Exception_Return_Addr_reg[0]_0\(17) => DECODE_I1_n_579,
      \WB_Exception_Return_Addr_reg[0]_0\(16) => DECODE_I1_n_580,
      \WB_Exception_Return_Addr_reg[0]_0\(15) => DECODE_I1_n_581,
      \WB_Exception_Return_Addr_reg[0]_0\(14) => DECODE_I1_n_582,
      \WB_Exception_Return_Addr_reg[0]_0\(13) => DECODE_I1_n_583,
      \WB_Exception_Return_Addr_reg[0]_0\(12) => DECODE_I1_n_584,
      \WB_Exception_Return_Addr_reg[0]_0\(11) => DECODE_I1_n_585,
      \WB_Exception_Return_Addr_reg[0]_0\(10) => DECODE_I1_n_586,
      \WB_Exception_Return_Addr_reg[0]_0\(9) => DECODE_I1_n_587,
      \WB_Exception_Return_Addr_reg[0]_0\(8) => DECODE_I1_n_588,
      \WB_Exception_Return_Addr_reg[0]_0\(7) => DECODE_I1_n_589,
      \WB_Exception_Return_Addr_reg[0]_0\(6) => DECODE_I1_n_590,
      \WB_Exception_Return_Addr_reg[0]_0\(5) => DECODE_I1_n_591,
      \WB_Exception_Return_Addr_reg[0]_0\(4) => DECODE_I1_n_592,
      \WB_Exception_Return_Addr_reg[0]_0\(3) => DECODE_I1_n_593,
      \WB_Exception_Return_Addr_reg[0]_0\(2) => DECODE_I1_n_594,
      \WB_Exception_Return_Addr_reg[0]_0\(1) => DECODE_I1_n_595,
      \WB_Exception_Return_Addr_reg[0]_0\(0) => DECODE_I1_n_596,
      \WB_Exception_Return_Addr_reg[10]\(3) => DECODE_I1_n_251,
      \WB_Exception_Return_Addr_reg[10]\(2) => DECODE_I1_n_252,
      \WB_Exception_Return_Addr_reg[10]\(1) => DECODE_I1_n_253,
      \WB_Exception_Return_Addr_reg[10]\(0) => DECODE_I1_n_254,
      \WB_Exception_Return_Addr_reg[14]\(3) => DECODE_I1_n_247,
      \WB_Exception_Return_Addr_reg[14]\(2) => DECODE_I1_n_248,
      \WB_Exception_Return_Addr_reg[14]\(1) => DECODE_I1_n_249,
      \WB_Exception_Return_Addr_reg[14]\(0) => DECODE_I1_n_250,
      \WB_Exception_Return_Addr_reg[18]\(3) => DECODE_I1_n_243,
      \WB_Exception_Return_Addr_reg[18]\(2) => DECODE_I1_n_244,
      \WB_Exception_Return_Addr_reg[18]\(1) => DECODE_I1_n_245,
      \WB_Exception_Return_Addr_reg[18]\(0) => DECODE_I1_n_246,
      \WB_Exception_Return_Addr_reg[22]\(3) => DECODE_I1_n_239,
      \WB_Exception_Return_Addr_reg[22]\(2) => DECODE_I1_n_240,
      \WB_Exception_Return_Addr_reg[22]\(1) => DECODE_I1_n_241,
      \WB_Exception_Return_Addr_reg[22]\(0) => DECODE_I1_n_242,
      \WB_Exception_Return_Addr_reg[2]\(3) => DECODE_I1_n_259,
      \WB_Exception_Return_Addr_reg[2]\(2) => DECODE_I1_n_260,
      \WB_Exception_Return_Addr_reg[2]\(1) => DECODE_I1_n_261,
      \WB_Exception_Return_Addr_reg[2]\(0) => DECODE_I1_n_262,
      \WB_Exception_Return_Addr_reg[6]\(3) => DECODE_I1_n_255,
      \WB_Exception_Return_Addr_reg[6]\(2) => DECODE_I1_n_256,
      \WB_Exception_Return_Addr_reg[6]\(1) => DECODE_I1_n_257,
      \WB_Exception_Return_Addr_reg[6]\(0) => DECODE_I1_n_258,
      \cnt_shifts_reg[0]\ => DECODE_I1_n_464,
      \data_rd_reg_reg[30]\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_38\,
      div_busy_reg => DECODE_I1_n_150,
      div_iterations_early_reg => DATA_FLOW_I1_n_137,
      ex_MSR_i(10) => \MSR_I1/ex_MSR_i\(17),
      ex_MSR_i(9) => \MSR_I1/ex_MSR_i\(18),
      ex_MSR_i(8) => \MSR_I1/ex_MSR_i\(19),
      ex_MSR_i(7) => \MSR_I1/ex_MSR_i\(20),
      ex_MSR_i(6) => \MSR_I1/ex_MSR_i\(21),
      ex_MSR_i(5) => \MSR_I1/ex_MSR_i\(22),
      ex_MSR_i(4) => \MSR_I1/ex_MSR_i\(23),
      ex_MSR_i(3) => \MSR_I1/ex_MSR_i\(24),
      ex_MSR_i(2) => \MSR_I1/ex_MSR_i\(26),
      ex_MSR_i(1) => \MSR_I1/ex_MSR_i\(27),
      ex_MSR_i(0) => \MSR_I1/ex_MSR_i\(31),
      ex_alu_result(1) => ex_alu_result(30),
      ex_alu_result(0) => ex_alu_result(31),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_arith_shift => ex_arith_shift,
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_databus_addr(29) => ex_databus_addr(0),
      ex_databus_addr(28) => ex_databus_addr(1),
      ex_databus_addr(27) => ex_databus_addr(2),
      ex_databus_addr(26) => ex_databus_addr(3),
      ex_databus_addr(25) => ex_databus_addr(4),
      ex_databus_addr(24) => ex_databus_addr(5),
      ex_databus_addr(23) => ex_databus_addr(6),
      ex_databus_addr(22) => ex_databus_addr(7),
      ex_databus_addr(21) => ex_databus_addr(8),
      ex_databus_addr(20) => ex_databus_addr(9),
      ex_databus_addr(19) => ex_databus_addr(10),
      ex_databus_addr(18) => ex_databus_addr(11),
      ex_databus_addr(17) => ex_databus_addr(12),
      ex_databus_addr(16) => ex_databus_addr(13),
      ex_databus_addr(15) => ex_databus_addr(14),
      ex_databus_addr(14) => ex_databus_addr(15),
      ex_databus_addr(13) => ex_databus_addr(16),
      ex_databus_addr(12) => ex_databus_addr(17),
      ex_databus_addr(11) => ex_databus_addr(18),
      ex_databus_addr(10) => ex_databus_addr(19),
      ex_databus_addr(9) => ex_databus_addr(20),
      ex_databus_addr(8) => ex_databus_addr(21),
      ex_databus_addr(7) => ex_databus_addr(22),
      ex_databus_addr(6) => ex_databus_addr(23),
      ex_databus_addr(5) => ex_databus_addr(24),
      ex_databus_addr(4) => ex_databus_addr(25),
      ex_databus_addr(3) => ex_databus_addr(26),
      ex_databus_addr(2) => ex_databus_addr(27),
      ex_databus_addr(1) => ex_databus_addr(28),
      ex_databus_addr(0) => ex_databus_addr(29),
      ex_div_unsigned => ex_div_unsigned,
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_left_shift_i => \Barrel_Shifter_I/ex_left_shift_i\,
      ex_logic_op(0 to 1) => ex_logic_op(0 to 1),
      ex_msrclr => ex_msrclr,
      ex_msrset => ex_msrset,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_sel_alu_reg => DATA_FLOW_I1_n_356,
      ex_sel_alu_res => ex_sel_alu_res,
      ex_start_div => ex_start_div,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      ex_void_bit => \Barrel_Shifter_I/ex_void_bit\,
      \floating_hold_div_by_zero__0\ => \Using_Div_Unit.Div_Unit_I1/floating_hold_div_by_zero__0\,
      floating_hold_div_by_zero_reg => DECODE_I1_n_428,
      floating_hold_div_overflow_reg => DATA_FLOW_I1_n_142,
      floating_hold_div_overflow_reg_0 => DECODE_I1_n_430,
      \imm_reg_reg[0]\(15) => \Operand_Select_I1/imm_reg\(0),
      \imm_reg_reg[0]\(14) => \Operand_Select_I1/imm_reg\(1),
      \imm_reg_reg[0]\(13) => \Operand_Select_I1/imm_reg\(2),
      \imm_reg_reg[0]\(12) => \Operand_Select_I1/imm_reg\(3),
      \imm_reg_reg[0]\(11) => \Operand_Select_I1/imm_reg\(4),
      \imm_reg_reg[0]\(10) => \Operand_Select_I1/imm_reg\(5),
      \imm_reg_reg[0]\(9) => \Operand_Select_I1/imm_reg\(6),
      \imm_reg_reg[0]\(8) => \Operand_Select_I1/imm_reg\(7),
      \imm_reg_reg[0]\(7) => \Operand_Select_I1/imm_reg\(8),
      \imm_reg_reg[0]\(6) => \Operand_Select_I1/imm_reg\(9),
      \imm_reg_reg[0]\(5) => \Operand_Select_I1/imm_reg\(10),
      \imm_reg_reg[0]\(4) => \Operand_Select_I1/imm_reg\(11),
      \imm_reg_reg[0]\(3) => \Operand_Select_I1/imm_reg\(12),
      \imm_reg_reg[0]\(2) => \Operand_Select_I1/imm_reg\(13),
      \imm_reg_reg[0]\(1) => \Operand_Select_I1/imm_reg\(14),
      \imm_reg_reg[0]\(0) => \Operand_Select_I1/imm_reg\(15),
      \imm_reg_reg[15]\(0) => of_write_imm_reg,
      in0 => DECODE_I1_n_514,
      last_cycle => \Using_Div_Unit.Div_Unit_I1/last_cycle\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      \m0_Ex_Result_i_reg[0]\ => DATA_FLOW_I1_n_250,
      \m0_Ex_Result_i_reg[0]_0\(16) => ex_fwd(0),
      \m0_Ex_Result_i_reg[0]_0\(15) => ex_fwd(1),
      \m0_Ex_Result_i_reg[0]_0\(14) => ex_fwd(2),
      \m0_Ex_Result_i_reg[0]_0\(13) => ex_fwd(3),
      \m0_Ex_Result_i_reg[0]_0\(12) => ex_fwd(4),
      \m0_Ex_Result_i_reg[0]_0\(11) => ex_fwd(5),
      \m0_Ex_Result_i_reg[0]_0\(10) => ex_fwd(6),
      \m0_Ex_Result_i_reg[0]_0\(9) => ex_fwd(7),
      \m0_Ex_Result_i_reg[0]_0\(8) => ex_fwd(8),
      \m0_Ex_Result_i_reg[0]_0\(7) => ex_fwd(9),
      \m0_Ex_Result_i_reg[0]_0\(6) => ex_fwd(10),
      \m0_Ex_Result_i_reg[0]_0\(5) => ex_fwd(11),
      \m0_Ex_Result_i_reg[0]_0\(4) => ex_fwd(12),
      \m0_Ex_Result_i_reg[0]_0\(3) => ex_fwd(13),
      \m0_Ex_Result_i_reg[0]_0\(2) => ex_fwd(14),
      \m0_Ex_Result_i_reg[0]_0\(1) => ex_fwd(15),
      \m0_Ex_Result_i_reg[0]_0\(0) => ex_fwd(30),
      \m0_Ex_Result_i_reg[10]\ => DATA_FLOW_I1_n_375,
      \m0_Ex_Result_i_reg[11]\ => DATA_FLOW_I1_n_377,
      \m0_Ex_Result_i_reg[12]\ => DATA_FLOW_I1_n_380,
      \m0_Ex_Result_i_reg[13]\ => DATA_FLOW_I1_n_382,
      \m0_Ex_Result_i_reg[14]\ => DATA_FLOW_I1_n_384,
      \m0_Ex_Result_i_reg[15]\ => DATA_FLOW_I1_n_385,
      \m0_Ex_Result_i_reg[17]\(1) => ex_sext_op(0),
      \m0_Ex_Result_i_reg[17]\(0) => ex_sext_op(1),
      \m0_Ex_Result_i_reg[1]\ => DATA_FLOW_I1_n_357,
      \m0_Ex_Result_i_reg[24]\ => DECODE_I1_n_510,
      \m0_Ex_Result_i_reg[26]\ => DECODE_I1_n_513,
      \m0_Ex_Result_i_reg[27]\ => DECODE_I1_n_512,
      \m0_Ex_Result_i_reg[28]\ => DECODE_I1_n_511,
      \m0_Ex_Result_i_reg[29]\ => DATA_FLOW_I1_n_390,
      \m0_Ex_Result_i_reg[29]_0\ => DECODE_I1_n_209,
      \m0_Ex_Result_i_reg[2]\ => DATA_FLOW_I1_n_360,
      \m0_Ex_Result_i_reg[30]\ => DATA_FLOW_I1_n_391,
      \m0_Ex_Result_i_reg[30]_0\ => DECODE_I1_n_210,
      \m0_Ex_Result_i_reg[31]\ => DATA_FLOW_I1_n_394,
      \m0_Ex_Result_i_reg[31]_0\ => DECODE_I1_n_509,
      \m0_Ex_Result_i_reg[3]\ => DATA_FLOW_I1_n_361,
      \m0_Ex_Result_i_reg[4]\ => DATA_FLOW_I1_n_363,
      \m0_Ex_Result_i_reg[5]\ => DATA_FLOW_I1_n_366,
      \m0_Ex_Result_i_reg[6]\ => DATA_FLOW_I1_n_367,
      \m0_Ex_Result_i_reg[7]\ => DATA_FLOW_I1_n_369,
      \m0_Ex_Result_i_reg[8]\ => DATA_FLOW_I1_n_372,
      \m0_Ex_Result_i_reg[9]\ => DATA_FLOW_I1_n_374,
      \m0_databus_addr_i_reg[9]\(1) => ex_alu_op(0),
      \m0_databus_addr_i_reg[9]\(0) => ex_alu_op(1),
      m0_ex_sel_res => \Data_Flow_Logic_I1/m0_ex_sel_res\,
      m0_ex_sel_res_reg => m0_ex_sel_res_i_1_n_0,
      m0_piperun => m0_piperun,
      m0_sel_barrel_res => m0_sel_barrel_res,
      \m1_M0_Result_i_reg[0]\ => DATA_FLOW_I1_n_249,
      \m1_M0_Result_i_reg[10]\ => DATA_FLOW_I1_n_376,
      \m1_M0_Result_i_reg[11]\ => DATA_FLOW_I1_n_378,
      \m1_M0_Result_i_reg[12]\ => DATA_FLOW_I1_n_379,
      \m1_M0_Result_i_reg[13]\ => DATA_FLOW_I1_n_381,
      \m1_M0_Result_i_reg[14]\ => DATA_FLOW_I1_n_383,
      \m1_M0_Result_i_reg[15]\ => DATA_FLOW_I1_n_386,
      \m1_M0_Result_i_reg[16]\ => DATA_FLOW_I1_n_269,
      \m1_M0_Result_i_reg[1]\ => DATA_FLOW_I1_n_358,
      \m1_M0_Result_i_reg[25]\ => DATA_FLOW_I1_n_276,
      \m1_M0_Result_i_reg[29]\ => DATA_FLOW_I1_n_389,
      \m1_M0_Result_i_reg[2]\ => DATA_FLOW_I1_n_359,
      \m1_M0_Result_i_reg[30]\ => DATA_FLOW_I1_n_392,
      \m1_M0_Result_i_reg[31]\ => DATA_FLOW_I1_n_393,
      \m1_M0_Result_i_reg[3]\ => DATA_FLOW_I1_n_362,
      \m1_M0_Result_i_reg[4]\ => DATA_FLOW_I1_n_364,
      \m1_M0_Result_i_reg[5]\ => DATA_FLOW_I1_n_365,
      \m1_M0_Result_i_reg[6]\ => DATA_FLOW_I1_n_368,
      \m1_M0_Result_i_reg[7]\ => DATA_FLOW_I1_n_370,
      \m1_M0_Result_i_reg[8]\ => DATA_FLOW_I1_n_371,
      \m1_M0_Result_i_reg[9]\ => DATA_FLOW_I1_n_373,
      m1_byte_access => m1_byte_access,
      m1_doublet_access => m1_doublet_access,
      m1_m0_sel_res => \Data_Flow_Logic_I1/m1_m0_sel_res\,
      m1_m0_sel_res0 => \Data_Flow_Logic_I1/m1_m0_sel_res0\,
      \m1_op3_reg[24]\(27 downto 20) => \^d\(299 downto 292),
      \m1_op3_reg[24]\(19 downto 4) => \^d\(283 downto 268),
      \m1_op3_reg[24]\(3 downto 0) => \^d\(264 downto 261),
      \m1_op3_reg[8]\(7) => \Byte_Doublet_Handle_I1/m1_op3\(8),
      \m1_op3_reg[8]\(6) => \Byte_Doublet_Handle_I1/m1_op3\(9),
      \m1_op3_reg[8]\(5) => \Byte_Doublet_Handle_I1/m1_op3\(10),
      \m1_op3_reg[8]\(4) => \Byte_Doublet_Handle_I1/m1_op3\(11),
      \m1_op3_reg[8]\(3) => \Byte_Doublet_Handle_I1/m1_op3\(12),
      \m1_op3_reg[8]\(2) => \Byte_Doublet_Handle_I1/m1_op3\(13),
      \m1_op3_reg[8]\(1) => \Byte_Doublet_Handle_I1/m1_op3\(14),
      \m1_op3_reg[8]\(0) => \Byte_Doublet_Handle_I1/m1_op3\(15),
      m1_piperun => m1_piperun,
      m1_sel_mul_res => m1_sel_mul_res,
      m1_unaligned_addr_3lsb(1 downto 0) => \Byte_Doublet_Handle_I1/m1_unaligned_addr_3lsb\(1 downto 0),
      \m2_M1_Result_i_reg[29]\ => DATA_FLOW_I1_n_241,
      \m2_M1_Result_i_reg[30]\ => DATA_FLOW_I1_n_242,
      \m2_M1_Result_i_reg[31]\ => DATA_FLOW_I1_n_243,
      m2_is_div_instr => m2_is_div_instr,
      m2_m1_sel_res0 => \Data_Flow_Logic_I1/m2_m1_sel_res0\,
      m2_m1_sel_res_reg => DATA_FLOW_I1_n_267,
      m2_m1_sel_res_reg_0 => DATA_FLOW_I1_n_273,
      m2_m1_sel_res_reg_1(28) => \Operand_Select_I1/of_branch_cmp\(0),
      m2_m1_sel_res_reg_1(27) => \Operand_Select_I1/of_branch_cmp\(1),
      m2_m1_sel_res_reg_1(26) => \Operand_Select_I1/of_branch_cmp\(2),
      m2_m1_sel_res_reg_1(25) => \Operand_Select_I1/of_branch_cmp\(3),
      m2_m1_sel_res_reg_1(24) => \Operand_Select_I1/of_branch_cmp\(4),
      m2_m1_sel_res_reg_1(23) => \Operand_Select_I1/of_branch_cmp\(5),
      m2_m1_sel_res_reg_1(22) => \Operand_Select_I1/of_branch_cmp\(6),
      m2_m1_sel_res_reg_1(21) => \Operand_Select_I1/of_branch_cmp\(7),
      m2_m1_sel_res_reg_1(20) => \Operand_Select_I1/of_branch_cmp\(8),
      m2_m1_sel_res_reg_1(19) => \Operand_Select_I1/of_branch_cmp\(9),
      m2_m1_sel_res_reg_1(18) => \Operand_Select_I1/of_branch_cmp\(10),
      m2_m1_sel_res_reg_1(17) => \Operand_Select_I1/of_branch_cmp\(11),
      m2_m1_sel_res_reg_1(16) => \Operand_Select_I1/of_branch_cmp\(12),
      m2_m1_sel_res_reg_1(15) => \Operand_Select_I1/of_branch_cmp\(13),
      m2_m1_sel_res_reg_1(14) => \Operand_Select_I1/of_branch_cmp\(14),
      m2_m1_sel_res_reg_1(13) => \Operand_Select_I1/of_branch_cmp\(15),
      m2_m1_sel_res_reg_1(12) => \Operand_Select_I1/of_branch_cmp\(16),
      m2_m1_sel_res_reg_1(11) => \Operand_Select_I1/of_branch_cmp\(17),
      m2_m1_sel_res_reg_1(10) => \Operand_Select_I1/of_branch_cmp\(18),
      m2_m1_sel_res_reg_1(9) => \Operand_Select_I1/of_branch_cmp\(19),
      m2_m1_sel_res_reg_1(8) => \Operand_Select_I1/of_branch_cmp\(20),
      m2_m1_sel_res_reg_1(7) => \Operand_Select_I1/of_branch_cmp\(21),
      m2_m1_sel_res_reg_1(6) => \Operand_Select_I1/of_branch_cmp\(22),
      m2_m1_sel_res_reg_1(5) => \Operand_Select_I1/of_branch_cmp\(23),
      m2_m1_sel_res_reg_1(4) => \Operand_Select_I1/of_branch_cmp\(24),
      m2_m1_sel_res_reg_1(3) => \Operand_Select_I1/of_branch_cmp\(25),
      m2_m1_sel_res_reg_1(2) => \Operand_Select_I1/of_branch_cmp\(26),
      m2_m1_sel_res_reg_1(1) => \Operand_Select_I1/of_branch_cmp\(27),
      m2_m1_sel_res_reg_1(0) => \Operand_Select_I1/of_branch_cmp\(28),
      m2_m1_sel_res_reg_2 => DATA_FLOW_I1_n_310,
      m2_piperun => m2_piperun,
      \m3_databus_write_data_i_reg[0]\(35 downto 0) => \^d\(227 downto 192),
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      m3_div_overflow_i_reg => DATA_FLOW_I1_n_311,
      m3_div_overflow_i_reg_0 => DECODE_I1_n_431,
      m3_div_overflow_i_reg_1 => DECODE_I1_n_1,
      m3_div_stall => m3_div_stall,
      m3_div_stall_i_reg => DATA_FLOW_I1_n_256,
      m3_div_stall_i_reg_0 => m3_div_stall_i_i_1_n_0,
      m3_div_zero_overflow_ex_hold => m3_div_zero_overflow_ex_hold,
      m3_last_cycle_reg => DATA_FLOW_I1_n_520,
      m3_m2_sel_res => \Data_Flow_Logic_I1/m3_m2_sel_res\,
      m3_msr(0) => m3_msr(30),
      m3_piperun => m3_piperun,
      m3_sel_div_res => m3_sel_div_res,
      make_result_neg => \Using_Div_Unit.Div_Unit_I1/make_result_neg\,
      make_result_neg_reg => make_result_neg_i_1_n_0,
      negative_operands => \Using_Div_Unit.Div_Unit_I1/negative_operands\,
      negative_operands_reg => DATA_FLOW_I1_n_314,
      negative_operands_reg_0 => negative_operands_i_1_n_0,
      next_sub => \Using_Div_Unit.Div_Unit_I1/next_sub\,
      next_sub_reg => next_sub_i_1_n_0,
      \of_MSR_i_reg[17]\(14) => DECODE_I1_n_433,
      \of_MSR_i_reg[17]\(13) => DECODE_I1_n_434,
      \of_MSR_i_reg[17]\(12) => DECODE_I1_n_435,
      \of_MSR_i_reg[17]\(11) => DECODE_I1_n_436,
      \of_MSR_i_reg[17]\(10) => DECODE_I1_n_437,
      \of_MSR_i_reg[17]\(9) => \MSR_I1/ex_MSR_cmb_no_restore\(22),
      \of_MSR_i_reg[17]\(8) => \MSR_I1/ex_MSR_cmb_no_restore\(23),
      \of_MSR_i_reg[17]\(7) => DECODE_I1_n_440,
      \of_MSR_i_reg[17]\(6) => DECODE_I1_n_441,
      \of_MSR_i_reg[17]\(5) => DECODE_I1_n_442,
      \of_MSR_i_reg[17]\(4) => DECODE_I1_n_443,
      \of_MSR_i_reg[17]\(3) => \MSR_I1/ex_MSR_cmb_no_restore\(28),
      \of_MSR_i_reg[17]\(2) => DECODE_I1_n_445,
      \of_MSR_i_reg[17]\(1) => \MSR_I1/ex_MSR_cmb_no_restore\(30),
      \of_MSR_i_reg[17]\(0) => DECODE_I1_n_447,
      \of_MSR_i_reg[22]\(4) => \MSR_I1/of_MSR_i\(22),
      \of_MSR_i_reg[22]\(3) => \MSR_I1/of_MSR_i\(23),
      \of_MSR_i_reg[22]\(2) => DATA_FLOW_I1_n_93,
      \of_MSR_i_reg[22]\(1) => of_MSR_i(28),
      \of_MSR_i_reg[22]\(0) => of_MSR_i(30),
      \of_MSR_i_reg[22]_0\(3) => DECODE_I1_n_309,
      \of_MSR_i_reg[22]_0\(2) => DECODE_I1_n_310,
      \of_MSR_i_reg[22]_0\(1) => DECODE_I1_n_311,
      \of_MSR_i_reg[22]_0\(0) => of_msr(30),
      \of_MSR_i_reg[25]\(1) => \MSR_I1/p_0_in\(6),
      \of_MSR_i_reg[25]\(0) => \MSR_I1/p_0_in\(1),
      \of_MSR_i_reg[25]_0\(1) => \MSR_I1/of_MSR_cmb\(25),
      \of_MSR_i_reg[25]_0\(0) => \MSR_I1/of_MSR_cmb\(30),
      of_op1_sel(1) => of_op1_sel(1),
      of_op1_sel(0) => of_op1_sel(2),
      of_op2_sel(0 to 2) => of_op2_sel(0 to 2),
      of_op3_sel(0 to 2) => of_op3_sel(0 to 2),
      of_piperun => of_piperun,
      \out\ => DATA_FLOW_I1_n_52,
      read_register_MSR_1 => read_register_MSR_1,
      sync_reset => sync_reset,
      \trace_new_reg_value_i_reg[15]\ => DECODE_I1_n_480,
      \trace_new_reg_value_i_reg[16]\ => DLMB_Interface_I1_n_43,
      \trace_new_reg_value_i_reg[17]\ => DLMB_Interface_I1_n_42,
      \trace_new_reg_value_i_reg[18]\ => DLMB_Interface_I1_n_41,
      \trace_new_reg_value_i_reg[19]\ => DLMB_Interface_I1_n_40,
      \trace_new_reg_value_i_reg[20]\ => DLMB_Interface_I1_n_39,
      \trace_new_reg_value_i_reg[21]\ => DLMB_Interface_I1_n_38,
      \trace_new_reg_value_i_reg[22]\ => DLMB_Interface_I1_n_37,
      \trace_new_reg_value_i_reg[23]\ => DLMB_Interface_I1_n_36,
      \trace_new_reg_value_i_reg[24]\ => DLMB_Interface_I1_n_35,
      \trace_new_reg_value_i_reg[25]\ => DLMB_Interface_I1_n_34,
      \trace_new_reg_value_i_reg[26]\ => DLMB_Interface_I1_n_33,
      \trace_new_reg_value_i_reg[27]\ => DLMB_Interface_I1_n_32,
      \trace_new_reg_value_i_reg[28]\ => DLMB_Interface_I1_n_31,
      \trace_new_reg_value_i_reg[29]\ => DLMB_Interface_I1_n_30,
      \trace_new_reg_value_i_reg[30]\ => DLMB_Interface_I1_n_29,
      \trace_new_reg_value_i_reg[31]\ => DLMB_Interface_I1_n_12,
      wb_MSR_i(10) => \MSR_I1/wb_MSR_i\(17),
      wb_MSR_i(9) => \MSR_I1/wb_MSR_i\(18),
      wb_MSR_i(8) => \MSR_I1/wb_MSR_i\(19),
      wb_MSR_i(7) => \MSR_I1/wb_MSR_i\(20),
      wb_MSR_i(6) => \MSR_I1/wb_MSR_i\(21),
      wb_MSR_i(5) => \MSR_I1/wb_MSR_i\(22),
      wb_MSR_i(4) => \MSR_I1/wb_MSR_i\(23),
      wb_MSR_i(3) => \MSR_I1/wb_MSR_i\(24),
      wb_MSR_i(2) => \MSR_I1/wb_MSR_i\(26),
      wb_MSR_i(1) => \MSR_I1/wb_MSR_i\(27),
      wb_MSR_i(0) => \MSR_I1/wb_MSR_i\(31),
      \wb_PC_i_reg[0]\(31) => wb_pc(0),
      \wb_PC_i_reg[0]\(30) => wb_pc(1),
      \wb_PC_i_reg[0]\(29) => wb_pc(2),
      \wb_PC_i_reg[0]\(28) => wb_pc(3),
      \wb_PC_i_reg[0]\(27) => wb_pc(4),
      \wb_PC_i_reg[0]\(26) => wb_pc(5),
      \wb_PC_i_reg[0]\(25) => wb_pc(6),
      \wb_PC_i_reg[0]\(24) => wb_pc(7),
      \wb_PC_i_reg[0]\(23) => wb_pc(8),
      \wb_PC_i_reg[0]\(22) => wb_pc(9),
      \wb_PC_i_reg[0]\(21) => wb_pc(10),
      \wb_PC_i_reg[0]\(20) => wb_pc(11),
      \wb_PC_i_reg[0]\(19) => wb_pc(12),
      \wb_PC_i_reg[0]\(18) => wb_pc(13),
      \wb_PC_i_reg[0]\(17) => wb_pc(14),
      \wb_PC_i_reg[0]\(16) => wb_pc(15),
      \wb_PC_i_reg[0]\(15) => wb_pc(16),
      \wb_PC_i_reg[0]\(14) => wb_pc(17),
      \wb_PC_i_reg[0]\(13) => wb_pc(18),
      \wb_PC_i_reg[0]\(12) => wb_pc(19),
      \wb_PC_i_reg[0]\(11) => wb_pc(20),
      \wb_PC_i_reg[0]\(10) => wb_pc(21),
      \wb_PC_i_reg[0]\(9) => wb_pc(22),
      \wb_PC_i_reg[0]\(8) => wb_pc(23),
      \wb_PC_i_reg[0]\(7) => wb_pc(24),
      \wb_PC_i_reg[0]\(6) => wb_pc(25),
      \wb_PC_i_reg[0]\(5) => wb_pc(26),
      \wb_PC_i_reg[0]\(4) => wb_pc(27),
      \wb_PC_i_reg[0]\(3) => wb_pc(28),
      \wb_PC_i_reg[0]\(2) => wb_pc(29),
      \wb_PC_i_reg[0]\(1) => wb_pc(30),
      \wb_PC_i_reg[0]\(0) => wb_pc(31),
      \wb_PC_i_reg[0]_0\(31) => m3_pc(0),
      \wb_PC_i_reg[0]_0\(30) => m3_pc(1),
      \wb_PC_i_reg[0]_0\(29) => m3_pc(2),
      \wb_PC_i_reg[0]_0\(28) => m3_pc(3),
      \wb_PC_i_reg[0]_0\(27) => m3_pc(4),
      \wb_PC_i_reg[0]_0\(26) => m3_pc(5),
      \wb_PC_i_reg[0]_0\(25) => m3_pc(6),
      \wb_PC_i_reg[0]_0\(24) => m3_pc(7),
      \wb_PC_i_reg[0]_0\(23) => m3_pc(8),
      \wb_PC_i_reg[0]_0\(22) => m3_pc(9),
      \wb_PC_i_reg[0]_0\(21) => m3_pc(10),
      \wb_PC_i_reg[0]_0\(20) => m3_pc(11),
      \wb_PC_i_reg[0]_0\(19) => m3_pc(12),
      \wb_PC_i_reg[0]_0\(18) => m3_pc(13),
      \wb_PC_i_reg[0]_0\(17) => m3_pc(14),
      \wb_PC_i_reg[0]_0\(16) => m3_pc(15),
      \wb_PC_i_reg[0]_0\(15) => m3_pc(16),
      \wb_PC_i_reg[0]_0\(14) => m3_pc(17),
      \wb_PC_i_reg[0]_0\(13) => m3_pc(18),
      \wb_PC_i_reg[0]_0\(12) => m3_pc(19),
      \wb_PC_i_reg[0]_0\(11) => m3_pc(20),
      \wb_PC_i_reg[0]_0\(10) => m3_pc(21),
      \wb_PC_i_reg[0]_0\(9) => m3_pc(22),
      \wb_PC_i_reg[0]_0\(8) => m3_pc(23),
      \wb_PC_i_reg[0]_0\(7) => m3_pc(24),
      \wb_PC_i_reg[0]_0\(6) => m3_pc(25),
      \wb_PC_i_reg[0]_0\(5) => m3_pc(26),
      \wb_PC_i_reg[0]_0\(4) => m3_pc(27),
      \wb_PC_i_reg[0]_0\(3) => m3_pc(28),
      \wb_PC_i_reg[0]_0\(2) => m3_pc(29),
      \wb_PC_i_reg[0]_0\(1) => m3_pc(30),
      \wb_PC_i_reg[0]_0\(0) => m3_pc(31),
      \wb_PC_i_reg[31]\(0) => \exception_registers_I1/wb_PC_i0\,
      wb_byte_access => wb_byte_access,
      wb_databus_read_data(15) => wb_databus_read_data(0),
      wb_databus_read_data(14) => wb_databus_read_data(1),
      wb_databus_read_data(13) => wb_databus_read_data(2),
      wb_databus_read_data(12) => wb_databus_read_data(3),
      wb_databus_read_data(11) => wb_databus_read_data(4),
      wb_databus_read_data(10) => wb_databus_read_data(5),
      wb_databus_read_data(9) => wb_databus_read_data(6),
      wb_databus_read_data(8) => wb_databus_read_data(7),
      wb_databus_read_data(7) => wb_databus_read_data(8),
      wb_databus_read_data(6) => wb_databus_read_data(9),
      wb_databus_read_data(5) => wb_databus_read_data(10),
      wb_databus_read_data(4) => wb_databus_read_data(11),
      wb_databus_read_data(3) => wb_databus_read_data(12),
      wb_databus_read_data(2) => wb_databus_read_data(13),
      wb_databus_read_data(1) => wb_databus_read_data(14),
      wb_databus_read_data(0) => wb_databus_read_data(15),
      wb_div_zero_overflow => wb_div_zero_overflow,
      \wb_exception_from_m3_reg_rep__0\(1) => \MSR_I1/p_1_in\(6),
      \wb_exception_from_m3_reg_rep__0\(0) => \MSR_I1/p_1_in\(1),
      \wb_exception_from_m3_reg_rep__0_0\ => DATA_FLOW_I1_n_244,
      wb_exception_taken => wb_exception_taken,
      wb_fwd(0 to 31) => wb_fwd(0 to 31),
      wb_gpr_wr => wb_gpr_wr,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_m3_sel_res0 => \Data_Flow_Logic_I1/wb_m3_sel_res0\,
      wb_msr(3) => wb_msr(25),
      wb_msr(2) => wb_msr(28),
      wb_msr(1) => wb_msr(29),
      wb_msr(0) => wb_msr(30),
      wb_msr_clear_bip => wb_msr_clear_bip
    );
DAXI_interface_I1: entity work.microblaze_microblaze_0_0_DAXI_interface_ff
     port map (
      Clk => Clk,
      D(70 downto 39) => \^d\(260 downto 229),
      D(38 downto 3) => \^d\(227 downto 192),
      D(2 downto 0) => \^d\(190 downto 188),
      DReady => DReady,
      DWait => DWait,
      \LOCKSTEP_Out_reg[721]\ => DLMB_Interface_I1_n_2,
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      Q(31) => wb_daxi_valid_read_data(0),
      Q(30) => wb_daxi_valid_read_data(1),
      Q(29) => wb_daxi_valid_read_data(2),
      Q(28) => wb_daxi_valid_read_data(3),
      Q(27) => wb_daxi_valid_read_data(4),
      Q(26) => wb_daxi_valid_read_data(5),
      Q(25) => wb_daxi_valid_read_data(6),
      Q(24) => wb_daxi_valid_read_data(7),
      Q(23) => wb_daxi_valid_read_data(8),
      Q(22) => wb_daxi_valid_read_data(9),
      Q(21) => wb_daxi_valid_read_data(10),
      Q(20) => wb_daxi_valid_read_data(11),
      Q(19) => wb_daxi_valid_read_data(12),
      Q(18) => wb_daxi_valid_read_data(13),
      Q(17) => wb_daxi_valid_read_data(14),
      Q(16) => wb_daxi_valid_read_data(15),
      Q(15) => wb_daxi_valid_read_data(16),
      Q(14) => wb_daxi_valid_read_data(17),
      Q(13) => wb_daxi_valid_read_data(18),
      Q(12) => wb_daxi_valid_read_data(19),
      Q(11) => wb_daxi_valid_read_data(20),
      Q(10) => wb_daxi_valid_read_data(21),
      Q(9) => wb_daxi_valid_read_data(22),
      Q(8) => wb_daxi_valid_read_data(23),
      Q(7) => wb_daxi_valid_read_data(24),
      Q(6) => wb_daxi_valid_read_data(25),
      Q(5) => wb_daxi_valid_read_data(26),
      Q(4) => wb_daxi_valid_read_data(27),
      Q(3) => wb_daxi_valid_read_data(28),
      Q(2) => wb_daxi_valid_read_data(29),
      Q(1) => wb_daxi_valid_read_data(30),
      Q(0) => wb_daxi_valid_read_data(31),
      S => \Using_Ready_FPGA.Rdy_Or1/carry_or_i1/S\,
      \Use_DAXI.M_AXI_DP_ARADDR_reg[1]_0\(1 downto 0) => \Byte_Doublet_Handle_I1/m1_unaligned_addr_3lsb\(1 downto 0),
      \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(65 downto 36) => \^d\(331 downto 302),
      \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(35 downto 4) => \^d\(299 downto 268),
      \Use_DAXI.M_AXI_DP_ARADDR_reg[31]_0\(3 downto 0) => \^d\(264 downto 261),
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ => DAXI_interface_I1_n_75,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ => DECODE_I1_n_165,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_0\ => DAXI_interface_I1_n_72,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg_1\ => DECODE_I1_n_163,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_0\ => DAXI_interface_I1_n_76,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_1\ => DAXI_interface_I1_n_78,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg_2\ => DECODE_I1_n_235,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ => DECODE_I1_n_236,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ => DAXI_interface_I1_n_73,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_1\ => DECODE_I1_n_164,
      \Use_DAXI.m2_active_access_unmasked_reg_0\ => DAXI_interface_I1_n_74,
      \Use_DAXI.m2_active_access_unmasked_reg_1\ => DECODE_I1_n_233,
      \Use_DAXI.wb_data_has_been_used_reg_0\ => DECODE_I1_n_160,
      \Using_FPGA.Native\ => DECODE_I1_n_52,
      \Using_FPGA.Native_0\ => DECODE_I1_n_126,
      \Using_FPGA.Native_1\ => DECODE_I1_n_51,
      m1_piperun => m1_piperun,
      m2_active_access => m2_active_access,
      m2_allow_dready => m2_allow_dready,
      m2_databus_access_i_reg => DAXI_interface_I1_n_79,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_piperun => m2_piperun,
      m3_active_access => m3_active_access,
      m3_piperun => m3_piperun,
      m3_sel_load_res => m3_sel_load_res,
      sync_reset => sync_reset
    );
DECODE_I1: entity work.microblaze_microblaze_0_0_Decode_ff
     port map (
      ADDRD(4) => wb_gpr_wr_addr(0),
      ADDRD(3) => wb_gpr_wr_addr(1),
      ADDRD(2) => wb_gpr_wr_addr(2),
      ADDRD(1) => wb_gpr_wr_addr(3),
      ADDRD(0) => wb_gpr_wr_addr(4),
      Clk => Clk,
      D(47 downto 13) => \^d\(366 downto 332),
      D(12 downto 11) => \^d\(301 downto 300),
      D(10 downto 3) => \^d\(291 downto 284),
      D(2 downto 0) => \^d\(267 downto 265),
      DI(0) => DECODE_I1_n_334,
      DI_3 => \ALU_I1/DI\,
      DReady => DReady,
      DWait => DWait,
      D_1 => \MSR_I1/D\,
      E(0) => \Using_Div_Unit.Div_Unit_I1/div_busy\,
      \EX_ALU_Op_reg[0]_0\(1) => ex_alu_op(0),
      \EX_ALU_Op_reg[0]_0\(0) => ex_alu_op(1),
      EX_Bit_Extract_reg_0 => DECODE_I1_n_231,
      EX_Bit_Insert_reg_0 => DECODE_I1_n_211,
      EX_Bit_Insert_reg_1(18) => \Barrel_Shifter_I/p_31_out\(31),
      EX_Bit_Insert_reg_1(17) => DECODE_I1_n_213,
      EX_Bit_Insert_reg_1(16) => \Barrel_Shifter_I/p_31_out\(26),
      EX_Bit_Insert_reg_1(15) => DECODE_I1_n_215,
      EX_Bit_Insert_reg_1(14) => DECODE_I1_n_216,
      EX_Bit_Insert_reg_1(13) => DECODE_I1_n_217,
      EX_Bit_Insert_reg_1(12) => DECODE_I1_n_218,
      EX_Bit_Insert_reg_1(11) => DECODE_I1_n_219,
      EX_Bit_Insert_reg_1(10 downto 9) => \Barrel_Shifter_I/p_31_out\(18 downto 17),
      EX_Bit_Insert_reg_1(8) => DECODE_I1_n_222,
      EX_Bit_Insert_reg_1(7) => \Barrel_Shifter_I/p_31_out\(15),
      EX_Bit_Insert_reg_1(6 downto 3) => \Barrel_Shifter_I/p_31_out\(11 downto 8),
      EX_Bit_Insert_reg_1(2) => \Barrel_Shifter_I/p_31_out\(3),
      EX_Bit_Insert_reg_1(1 downto 0) => \Barrel_Shifter_I/p_31_out\(1 downto 0),
      \EX_Branch_CMP_Op1[29]_i_3\ => DECODE_I1_n_419,
      \EX_Branch_CMP_Op1[30]_i_3\ => DECODE_I1_n_420,
      \EX_Branch_CMP_Op1_reg[29]\ => DATA_FLOW_I1_n_389,
      \EX_Branch_CMP_Op1_reg[29]_0\ => DATA_FLOW_I1_n_390,
      \EX_Branch_CMP_Op1_reg[30]\ => DATA_FLOW_I1_n_310,
      \EX_Branch_CMP_Op1_reg[30]_0\ => DATA_FLOW_I1_n_392,
      \EX_Branch_CMP_Op1_reg[30]_1\ => DATA_FLOW_I1_n_391,
      EX_CLZ_Instr_reg_0 => DECODE_I1_n_335,
      EX_CarryIn => EX_CarryIn,
      EX_Enable_ALU => ex_enable_alu,
      EX_Enable_Sext_Shift_reg_0 => DECODE_I1_n_209,
      EX_Enable_Sext_Shift_reg_1 => DECODE_I1_n_210,
      EX_Enable_Sext_Shift_reg_2(16) => ex_fwd(0),
      EX_Enable_Sext_Shift_reg_2(15) => ex_fwd(1),
      EX_Enable_Sext_Shift_reg_2(14) => ex_fwd(2),
      EX_Enable_Sext_Shift_reg_2(13) => ex_fwd(3),
      EX_Enable_Sext_Shift_reg_2(12) => ex_fwd(4),
      EX_Enable_Sext_Shift_reg_2(11) => ex_fwd(5),
      EX_Enable_Sext_Shift_reg_2(10) => ex_fwd(6),
      EX_Enable_Sext_Shift_reg_2(9) => ex_fwd(7),
      EX_Enable_Sext_Shift_reg_2(8) => ex_fwd(8),
      EX_Enable_Sext_Shift_reg_2(7) => ex_fwd(9),
      EX_Enable_Sext_Shift_reg_2(6) => ex_fwd(10),
      EX_Enable_Sext_Shift_reg_2(5) => ex_fwd(11),
      EX_Enable_Sext_Shift_reg_2(4) => ex_fwd(12),
      EX_Enable_Sext_Shift_reg_2(3) => ex_fwd(13),
      EX_Enable_Sext_Shift_reg_2(2) => ex_fwd(14),
      EX_Enable_Sext_Shift_reg_2(1) => ex_fwd(15),
      EX_Enable_Sext_Shift_reg_2(0) => ex_fwd(30),
      \EX_Logic_Op_reg[0]_0\(3) => ex_logic_op(0),
      \EX_Logic_Op_reg[0]_0\(2) => ex_logic_op(1),
      \EX_Logic_Op_reg[0]_0\(1) => p_1_in106_in,
      \EX_Logic_Op_reg[0]_0\(0) => p_0_in105_in,
      \EX_Op1[29]_i_5\ => DATA_FLOW_I1_n_388,
      \EX_Op1[29]_i_5_0\ => DATA_FLOW_I1_n_245,
      \EX_Op1[29]_i_5_1\ => DATA_FLOW_I1_n_346,
      \EX_Op1[30]_i_5\ => DATA_FLOW_I1_n_349,
      \EX_Op1[30]_i_5_0\ => DATA_FLOW_I1_n_248,
      \EX_Op1[30]_i_5_1\ => DATA_FLOW_I1_n_348,
      EX_Op1_CMP_Equal => ex_op1_cmp_equal,
      EX_Op1_Zero => ex_op1_zero,
      \EX_Op1_reg[0]\(28) => \Operand_Select_I1/of_branch_cmp\(0),
      \EX_Op1_reg[0]\(27) => \Operand_Select_I1/of_branch_cmp\(1),
      \EX_Op1_reg[0]\(26) => \Operand_Select_I1/of_branch_cmp\(2),
      \EX_Op1_reg[0]\(25) => \Operand_Select_I1/of_branch_cmp\(3),
      \EX_Op1_reg[0]\(24) => \Operand_Select_I1/of_branch_cmp\(4),
      \EX_Op1_reg[0]\(23) => \Operand_Select_I1/of_branch_cmp\(5),
      \EX_Op1_reg[0]\(22) => \Operand_Select_I1/of_branch_cmp\(6),
      \EX_Op1_reg[0]\(21) => \Operand_Select_I1/of_branch_cmp\(7),
      \EX_Op1_reg[0]\(20) => \Operand_Select_I1/of_branch_cmp\(8),
      \EX_Op1_reg[0]\(19) => \Operand_Select_I1/of_branch_cmp\(9),
      \EX_Op1_reg[0]\(18) => \Operand_Select_I1/of_branch_cmp\(10),
      \EX_Op1_reg[0]\(17) => \Operand_Select_I1/of_branch_cmp\(11),
      \EX_Op1_reg[0]\(16) => \Operand_Select_I1/of_branch_cmp\(12),
      \EX_Op1_reg[0]\(15) => \Operand_Select_I1/of_branch_cmp\(13),
      \EX_Op1_reg[0]\(14) => \Operand_Select_I1/of_branch_cmp\(14),
      \EX_Op1_reg[0]\(13) => \Operand_Select_I1/of_branch_cmp\(15),
      \EX_Op1_reg[0]\(12) => \Operand_Select_I1/of_branch_cmp\(16),
      \EX_Op1_reg[0]\(11) => \Operand_Select_I1/of_branch_cmp\(17),
      \EX_Op1_reg[0]\(10) => \Operand_Select_I1/of_branch_cmp\(18),
      \EX_Op1_reg[0]\(9) => \Operand_Select_I1/of_branch_cmp\(19),
      \EX_Op1_reg[0]\(8) => \Operand_Select_I1/of_branch_cmp\(20),
      \EX_Op1_reg[0]\(7) => \Operand_Select_I1/of_branch_cmp\(21),
      \EX_Op1_reg[0]\(6) => \Operand_Select_I1/of_branch_cmp\(22),
      \EX_Op1_reg[0]\(5) => \Operand_Select_I1/of_branch_cmp\(23),
      \EX_Op1_reg[0]\(4) => \Operand_Select_I1/of_branch_cmp\(24),
      \EX_Op1_reg[0]\(3) => \Operand_Select_I1/of_branch_cmp\(25),
      \EX_Op1_reg[0]\(2) => \Operand_Select_I1/of_branch_cmp\(26),
      \EX_Op1_reg[0]\(1) => \Operand_Select_I1/of_branch_cmp\(27),
      \EX_Op1_reg[0]\(0) => \Operand_Select_I1/of_branch_cmp\(28),
      \EX_Op1_reg[1]\ => DECODE_I1_n_520,
      \EX_Op1_reg[27]\ => DECODE_I1_n_512,
      \EX_Op1_reg[28]\ => DECODE_I1_n_511,
      \EX_Op1_reg[29]\ => DATA_FLOW_I1_n_241,
      \EX_Op1_reg[29]_0\ => DATA_FLOW_I1_n_315,
      \EX_Op1_reg[30]\ => DECODE_I1_n_518,
      \EX_Op1_reg[30]_0\ => DATA_FLOW_I1_n_242,
      \EX_Op1_reg[31]\ => DECODE_I1_n_522,
      \EX_Op1_reg[31]_0\ => DATA_FLOW_I1_n_243,
      \EX_Op1_reg[31]_1\ => DATA_FLOW_I1_n_351,
      \EX_Op1_reg[3]\ => DECODE_I1_n_519,
      \EX_Op2[0]_i_4\(15) => \Operand_Select_I1/imm_reg\(0),
      \EX_Op2[0]_i_4\(14) => \Operand_Select_I1/imm_reg\(1),
      \EX_Op2[0]_i_4\(13) => \Operand_Select_I1/imm_reg\(2),
      \EX_Op2[0]_i_4\(12) => \Operand_Select_I1/imm_reg\(3),
      \EX_Op2[0]_i_4\(11) => \Operand_Select_I1/imm_reg\(4),
      \EX_Op2[0]_i_4\(10) => \Operand_Select_I1/imm_reg\(5),
      \EX_Op2[0]_i_4\(9) => \Operand_Select_I1/imm_reg\(6),
      \EX_Op2[0]_i_4\(8) => \Operand_Select_I1/imm_reg\(7),
      \EX_Op2[0]_i_4\(7) => \Operand_Select_I1/imm_reg\(8),
      \EX_Op2[0]_i_4\(6) => \Operand_Select_I1/imm_reg\(9),
      \EX_Op2[0]_i_4\(5) => \Operand_Select_I1/imm_reg\(10),
      \EX_Op2[0]_i_4\(4) => \Operand_Select_I1/imm_reg\(11),
      \EX_Op2[0]_i_4\(3) => \Operand_Select_I1/imm_reg\(12),
      \EX_Op2[0]_i_4\(2) => \Operand_Select_I1/imm_reg\(13),
      \EX_Op2[0]_i_4\(1) => \Operand_Select_I1/imm_reg\(14),
      \EX_Op2[0]_i_4\(0) => \Operand_Select_I1/imm_reg\(15),
      \EX_Op2[0]_i_6\ => DECODE_I1_n_371,
      \EX_Op2[0]_i_7\ => DECODE_I1_n_372,
      \EX_Op2[16]_i_2\(6) => ex_fwd(16),
      \EX_Op2[16]_i_2\(5) => ex_fwd(17),
      \EX_Op2[16]_i_2\(4) => ex_fwd(18),
      \EX_Op2[16]_i_2\(3) => ex_fwd(20),
      \EX_Op2[16]_i_2\(2) => ex_fwd(21),
      \EX_Op2[16]_i_2\(1) => ex_fwd(29),
      \EX_Op2[16]_i_2\(0) => ex_fwd(31),
      \EX_Op2[25]_i_2\ => DATA_FLOW_I1_n_356,
      \EX_Op2_reg[0]\ => DATA_FLOW_I1_n_249,
      \EX_Op2_reg[0]_0\ => DATA_FLOW_I1_n_250,
      \EX_Op2_reg[10]\ => DATA_FLOW_I1_n_376,
      \EX_Op2_reg[10]_0\ => DATA_FLOW_I1_n_375,
      \EX_Op2_reg[11]\ => DATA_FLOW_I1_n_378,
      \EX_Op2_reg[11]_0\ => DATA_FLOW_I1_n_377,
      \EX_Op2_reg[12]\ => DATA_FLOW_I1_n_379,
      \EX_Op2_reg[12]_0\ => DATA_FLOW_I1_n_380,
      \EX_Op2_reg[13]\ => DATA_FLOW_I1_n_381,
      \EX_Op2_reg[13]_0\ => DATA_FLOW_I1_n_382,
      \EX_Op2_reg[14]\ => DATA_FLOW_I1_n_383,
      \EX_Op2_reg[14]_0\ => DATA_FLOW_I1_n_384,
      \EX_Op2_reg[15]\ => DATA_FLOW_I1_n_386,
      \EX_Op2_reg[15]_0\ => DATA_FLOW_I1_n_385,
      \EX_Op2_reg[16]\ => DATA_FLOW_I1_n_269,
      \EX_Op2_reg[17]\(14) => DECODE_I1_n_433,
      \EX_Op2_reg[17]\(13) => DECODE_I1_n_434,
      \EX_Op2_reg[17]\(12) => DECODE_I1_n_435,
      \EX_Op2_reg[17]\(11) => DECODE_I1_n_436,
      \EX_Op2_reg[17]\(10) => DECODE_I1_n_437,
      \EX_Op2_reg[17]\(9) => \MSR_I1/ex_MSR_cmb_no_restore\(22),
      \EX_Op2_reg[17]\(8) => \MSR_I1/ex_MSR_cmb_no_restore\(23),
      \EX_Op2_reg[17]\(7) => DECODE_I1_n_440,
      \EX_Op2_reg[17]\(6) => DECODE_I1_n_441,
      \EX_Op2_reg[17]\(5) => DECODE_I1_n_442,
      \EX_Op2_reg[17]\(4) => DECODE_I1_n_443,
      \EX_Op2_reg[17]\(3) => \MSR_I1/ex_MSR_cmb_no_restore\(28),
      \EX_Op2_reg[17]\(2) => DECODE_I1_n_445,
      \EX_Op2_reg[17]\(1) => \MSR_I1/ex_MSR_cmb_no_restore\(30),
      \EX_Op2_reg[17]\(0) => DECODE_I1_n_447,
      \EX_Op2_reg[17]_0\ => DATA_FLOW_I1_n_274,
      \EX_Op2_reg[18]\ => DATA_FLOW_I1_n_270,
      \EX_Op2_reg[1]\ => DATA_FLOW_I1_n_358,
      \EX_Op2_reg[1]_0\ => DATA_FLOW_I1_n_357,
      \EX_Op2_reg[20]\ => DATA_FLOW_I1_n_275,
      \EX_Op2_reg[21]\ => DATA_FLOW_I1_n_271,
      \EX_Op2_reg[25]\ => DATA_FLOW_I1_n_276,
      \EX_Op2_reg[29]\(27) => DECODE_I1_n_481,
      \EX_Op2_reg[29]\(26) => DECODE_I1_n_482,
      \EX_Op2_reg[29]\(25) => DECODE_I1_n_483,
      \EX_Op2_reg[29]\(24) => DECODE_I1_n_484,
      \EX_Op2_reg[29]\(23) => DECODE_I1_n_485,
      \EX_Op2_reg[29]\(22) => DECODE_I1_n_486,
      \EX_Op2_reg[29]\(21) => DECODE_I1_n_487,
      \EX_Op2_reg[29]\(20) => DECODE_I1_n_488,
      \EX_Op2_reg[29]\(19) => DECODE_I1_n_489,
      \EX_Op2_reg[29]\(18) => DECODE_I1_n_490,
      \EX_Op2_reg[29]\(17) => DECODE_I1_n_491,
      \EX_Op2_reg[29]\(16) => DECODE_I1_n_492,
      \EX_Op2_reg[29]\(15) => DECODE_I1_n_493,
      \EX_Op2_reg[29]\(14) => DECODE_I1_n_494,
      \EX_Op2_reg[29]\(13) => DECODE_I1_n_495,
      \EX_Op2_reg[29]\(12) => DECODE_I1_n_496,
      \EX_Op2_reg[29]\(11) => DECODE_I1_n_497,
      \EX_Op2_reg[29]\(10) => DECODE_I1_n_498,
      \EX_Op2_reg[29]\(9) => DECODE_I1_n_499,
      \EX_Op2_reg[29]\(8) => DECODE_I1_n_500,
      \EX_Op2_reg[29]\(7) => DECODE_I1_n_501,
      \EX_Op2_reg[29]\(6) => DECODE_I1_n_502,
      \EX_Op2_reg[29]\(5) => DECODE_I1_n_503,
      \EX_Op2_reg[29]\(4) => DECODE_I1_n_504,
      \EX_Op2_reg[29]\(3) => DECODE_I1_n_505,
      \EX_Op2_reg[29]\(2) => DECODE_I1_n_506,
      \EX_Op2_reg[29]\(1) => DECODE_I1_n_507,
      \EX_Op2_reg[29]\(0) => DECODE_I1_n_508,
      \EX_Op2_reg[29]_0\ => DATA_FLOW_I1_n_272,
      \EX_Op2_reg[29]_1\ => DATA_FLOW_I1_n_266,
      \EX_Op2_reg[2]\ => DATA_FLOW_I1_n_359,
      \EX_Op2_reg[2]_0\ => DATA_FLOW_I1_n_360,
      \EX_Op2_reg[30]\ => DATA_FLOW_I1_n_277,
      \EX_Op2_reg[31]\ => DECODE_I1_n_516,
      \EX_Op2_reg[31]_0\ => DECODE_I1_n_517,
      \EX_Op2_reg[31]_1\ => DATA_FLOW_I1_n_394,
      \EX_Op2_reg[31]_2\ => DATA_FLOW_I1_n_393,
      \EX_Op2_reg[31]_3\ => DATA_FLOW_I1_n_352,
      \EX_Op2_reg[31]_4\ => DATA_FLOW_I1_n_273,
      \EX_Op2_reg[3]\ => DATA_FLOW_I1_n_362,
      \EX_Op2_reg[3]_0\ => DATA_FLOW_I1_n_361,
      \EX_Op2_reg[4]\ => DATA_FLOW_I1_n_364,
      \EX_Op2_reg[4]_0\ => DATA_FLOW_I1_n_363,
      \EX_Op2_reg[5]\ => DATA_FLOW_I1_n_365,
      \EX_Op2_reg[5]_0\ => DATA_FLOW_I1_n_366,
      \EX_Op2_reg[6]\ => DATA_FLOW_I1_n_368,
      \EX_Op2_reg[6]_0\ => DATA_FLOW_I1_n_367,
      \EX_Op2_reg[7]\ => DATA_FLOW_I1_n_370,
      \EX_Op2_reg[7]_0\ => DATA_FLOW_I1_n_369,
      \EX_Op2_reg[8]\ => DATA_FLOW_I1_n_371,
      \EX_Op2_reg[8]_0\ => DATA_FLOW_I1_n_372,
      \EX_Op2_reg[9]\ => DATA_FLOW_I1_n_373,
      \EX_Op2_reg[9]_0\ => DATA_FLOW_I1_n_374,
      \EX_Op3[0]_i_6\ => DECODE_I1_n_337,
      \EX_Op3[0]_i_7\ => DECODE_I1_n_338,
      \EX_Op3[30]_i_2\ => DATA_FLOW_I1_n_350,
      \EX_Op3[31]_i_3\ => DATA_FLOW_I1_n_355,
      \EX_Op3[31]_i_3_0\ => DATA_FLOW_I1_n_353,
      \EX_Op3_reg[30]\ => DATA_FLOW_I1_n_268,
      \EX_Op3_reg[31]\ => DATA_FLOW_I1_n_267,
      EX_Pattern_Cmp_Sel_reg_0 => DECODE_I1_n_509,
      \EX_Sext_Op_reg[0]_0\(1) => ex_sext_op(0),
      \EX_Sext_Op_reg[0]_0\(0) => ex_sext_op(1),
      \EX_Sext_Op_reg[1]_0\ => DECODE_I1_n_510,
      GPR_Op1(2) => gpr_op1(29),
      GPR_Op1(1) => gpr_op1(30),
      GPR_Op1(0) => gpr_op1(31),
      GPR_Op2(0 to 31) => gpr_op2(0 to 31),
      GPR_Op3(1) => gpr_op3(30),
      GPR_Op3(0) => gpr_op3(31),
      Hibernate => \^hibernate\,
      IWAIT => IWAIT,
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      LO => ex_alu_carry_32,
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(35),
      M1_Sel_Mul_Res_reg_0 => DECODE_I1_n_368,
      M1_Sel_Mul_Res_reg_1 => DECODE_I1_n_383,
      M1_Sel_Mul_Res_reg_2 => M1_Sel_Mul_Res_i_1_n_0,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      \Performance_Debug_Control.dbg_freeze_nohalt_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\,
      \Performance_Debug_Control.ex_brki_hit_reg\(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_57\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_50\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg\ => DECODE_I1_n_171,
      Q(25) => of_gpr_op3_rd_addr(0),
      Q(24) => of_gpr_op3_rd_addr(1),
      Q(23) => of_gpr_op3_rd_addr(2),
      Q(22) => of_gpr_op3_rd_addr(3),
      Q(21) => of_gpr_op3_rd_addr(4),
      Q(20) => of_gpr_op1_rd_addr(0),
      Q(19) => of_gpr_op1_rd_addr(1),
      Q(18) => of_gpr_op1_rd_addr(2),
      Q(17) => of_gpr_op1_rd_addr(3),
      Q(16) => of_gpr_op1_rd_addr(4),
      Q(15) => of_gpr_op2_rd_addr(0),
      Q(14) => of_gpr_op2_rd_addr(1),
      Q(13) => of_gpr_op2_rd_addr(2),
      Q(12) => of_gpr_op2_rd_addr(3),
      Q(11) => of_gpr_op2_rd_addr(4),
      Q(10) => of_imm_data(5),
      Q(9) => of_imm_data(6),
      Q(8) => of_imm_data(7),
      Q(7) => of_imm_data(8),
      Q(6) => of_imm_data(9),
      Q(5) => of_imm_data(10),
      Q(4) => of_imm_data(11),
      Q(3) => of_imm_data(12),
      Q(2) => of_imm_data(13),
      Q(1) => of_imm_data(14),
      Q(0) => of_imm_data(15),
      \Q_reg[32]\ => DATA_FLOW_I1_n_520,
      S(3) => DECODE_I1_n_205,
      S(2) => DECODE_I1_n_206,
      S(1) => DECODE_I1_n_207,
      S(0) => DECODE_I1_n_208,
      SR(0) => \Using_Div_Unit.Div_Unit_I1/reset_Q\,
      S_0 => \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1/carry_or_i1/S\,
      S_2 => \ALU_I1/Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S\,
      \Serial_Dbg_Intf.control_reg_reg[8]\ => DECODE_I1_n_152,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Suspend => \^suspend\,
      \Use_Async_Reset.sync_reset_reg\ => DECODE_I1_n_1,
      \Use_Async_Reset.sync_reset_reg_0\ => DECODE_I1_n_160,
      \Use_Async_Reset.sync_reset_reg_1\ => DECODE_I1_n_161,
      \Use_Async_Reset.sync_reset_reg_2\ => DECODE_I1_n_162,
      \Use_Async_Reset.sync_reset_reg_3\ => DECODE_I1_n_166,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg\ => DECODE_I1_n_165,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_0\ => DAXI_interface_I1_n_75,
      \Use_DAXI.M_AXI_DP_ARVALID_unmasked_reg_1\ => DAXI_interface_I1_n_76,
      \Use_DAXI.M_AXI_DP_AWVALID_unmasked_reg\ => DAXI_interface_I1_n_72,
      \Use_DAXI.M_AXI_DP_BREADY_I_reg\ => DECODE_I1_n_235,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg\ => DECODE_I1_n_236,
      \Use_DAXI.M_AXI_DP_RREADY_I_reg_0\ => DAXI_interface_I1_n_74,
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(9 downto 2) => \^d\(275 downto 268),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(1) => \^d\(190),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]\(0) => \^d\(188),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(7) => \Byte_Doublet_Handle_I1/m1_op3\(8),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(6) => \Byte_Doublet_Handle_I1/m1_op3\(9),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(5) => \Byte_Doublet_Handle_I1/m1_op3\(10),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(4) => \Byte_Doublet_Handle_I1/m1_op3\(11),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(3) => \Byte_Doublet_Handle_I1/m1_op3\(12),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(2) => \Byte_Doublet_Handle_I1/m1_op3\(13),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(1) => \Byte_Doublet_Handle_I1/m1_op3\(14),
      \Use_DAXI.M_AXI_DP_WDATA_reg[23]_0\(0) => \Byte_Doublet_Handle_I1/m1_op3\(15),
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg\ => DLMB_Interface_I1_n_5,
      \Use_DAXI.M_AXI_DP_WVALID_unmasked_reg_0\ => DAXI_interface_I1_n_73,
      \Use_DLMB.m1_dlmb_issued_reg\ => DECODE_I1_n_238,
      \Use_DLMB.m2_dready_hold_reg\ => DLMB_Interface_I1_n_11,
      \Use_DLMB.m2_potential_bubble_reg\ => DECODE_I1_n_159,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[15]\ => DATA_FLOW_I1_n_254,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[15]_0\ => DATA_FLOW_I1_n_395,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[6]\ => DATA_FLOW_I1_n_396,
      \Use_HW_BS.Using_BitField.mem_mask0_reg[9]\ => DATA_FLOW_I1_n_255,
      \Use_HW_BS.mem_mux3_reg[28]\(31) => DATA_FLOW_I1_n_20,
      \Use_HW_BS.mem_mux3_reg[28]\(30) => DATA_FLOW_I1_n_21,
      \Use_HW_BS.mem_mux3_reg[28]\(29) => DATA_FLOW_I1_n_22,
      \Use_HW_BS.mem_mux3_reg[28]\(28) => DATA_FLOW_I1_n_23,
      \Use_HW_BS.mem_mux3_reg[28]\(27) => DATA_FLOW_I1_n_24,
      \Use_HW_BS.mem_mux3_reg[28]\(26) => DATA_FLOW_I1_n_25,
      \Use_HW_BS.mem_mux3_reg[28]\(25) => DATA_FLOW_I1_n_26,
      \Use_HW_BS.mem_mux3_reg[28]\(24) => DATA_FLOW_I1_n_27,
      \Use_HW_BS.mem_mux3_reg[28]\(23) => DATA_FLOW_I1_n_28,
      \Use_HW_BS.mem_mux3_reg[28]\(22) => DATA_FLOW_I1_n_29,
      \Use_HW_BS.mem_mux3_reg[28]\(21) => DATA_FLOW_I1_n_30,
      \Use_HW_BS.mem_mux3_reg[28]\(20) => DATA_FLOW_I1_n_31,
      \Use_HW_BS.mem_mux3_reg[28]\(19) => DATA_FLOW_I1_n_32,
      \Use_HW_BS.mem_mux3_reg[28]\(18) => DATA_FLOW_I1_n_33,
      \Use_HW_BS.mem_mux3_reg[28]\(17) => DATA_FLOW_I1_n_34,
      \Use_HW_BS.mem_mux3_reg[28]\(16) => DATA_FLOW_I1_n_35,
      \Use_HW_BS.mem_mux3_reg[28]\(15) => DATA_FLOW_I1_n_36,
      \Use_HW_BS.mem_mux3_reg[28]\(14) => DATA_FLOW_I1_n_37,
      \Use_HW_BS.mem_mux3_reg[28]\(13) => DATA_FLOW_I1_n_38,
      \Use_HW_BS.mem_mux3_reg[28]\(12) => DATA_FLOW_I1_n_39,
      \Use_HW_BS.mem_mux3_reg[28]\(11) => DATA_FLOW_I1_n_40,
      \Use_HW_BS.mem_mux3_reg[28]\(10) => DATA_FLOW_I1_n_41,
      \Use_HW_BS.mem_mux3_reg[28]\(9) => DATA_FLOW_I1_n_42,
      \Use_HW_BS.mem_mux3_reg[28]\(8) => DATA_FLOW_I1_n_43,
      \Use_HW_BS.mem_mux3_reg[28]\(7) => DATA_FLOW_I1_n_44,
      \Use_HW_BS.mem_mux3_reg[28]\(6) => DATA_FLOW_I1_n_45,
      \Use_HW_BS.mem_mux3_reg[28]\(5) => DATA_FLOW_I1_n_46,
      \Use_HW_BS.mem_mux3_reg[28]\(4) => DATA_FLOW_I1_n_47,
      \Use_HW_BS.mem_mux3_reg[28]\(3) => DATA_FLOW_I1_n_48,
      \Use_HW_BS.mem_mux3_reg[28]\(2) => DATA_FLOW_I1_n_49,
      \Use_HW_BS.mem_mux3_reg[28]\(1) => DATA_FLOW_I1_n_50,
      \Use_HW_BS.mem_mux3_reg[28]\(0) => DATA_FLOW_I1_n_51,
      \Use_ILMB.if2_ilmb_issued_reg\ => DECODE_I1_n_237,
      \Use_ILMB.if3_iready_hold_reg\ => ILMB_Interface_I1_n_37,
      \Use_ILMB.if4_ILMB_Data_Strobe_i_reg\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\,
      \Using_FPGA.Native\ => DECODE_I1_n_37,
      \Using_FPGA.Native_0\(0) => of_write_imm_reg,
      \Using_FPGA.Native_1\ => DECODE_I1_n_300,
      \Using_FPGA.Native_10\ => DECODE_I1_n_455,
      \Using_FPGA.Native_11\ => DECODE_I1_n_456,
      \Using_FPGA.Native_12\ => DECODE_I1_n_457,
      \Using_FPGA.Native_13\ => DECODE_I1_n_458,
      \Using_FPGA.Native_14\ => DECODE_I1_n_460,
      \Using_FPGA.Native_15\ => DECODE_I1_n_461,
      \Using_FPGA.Native_16\ => DECODE_I1_n_462,
      \Using_FPGA.Native_17\(30) => DECODE_I1_n_566,
      \Using_FPGA.Native_17\(29) => DECODE_I1_n_567,
      \Using_FPGA.Native_17\(28) => DECODE_I1_n_568,
      \Using_FPGA.Native_17\(27) => DECODE_I1_n_569,
      \Using_FPGA.Native_17\(26) => DECODE_I1_n_570,
      \Using_FPGA.Native_17\(25) => DECODE_I1_n_571,
      \Using_FPGA.Native_17\(24) => DECODE_I1_n_572,
      \Using_FPGA.Native_17\(23) => DECODE_I1_n_573,
      \Using_FPGA.Native_17\(22) => DECODE_I1_n_574,
      \Using_FPGA.Native_17\(21) => DECODE_I1_n_575,
      \Using_FPGA.Native_17\(20) => DECODE_I1_n_576,
      \Using_FPGA.Native_17\(19) => DECODE_I1_n_577,
      \Using_FPGA.Native_17\(18) => DECODE_I1_n_578,
      \Using_FPGA.Native_17\(17) => DECODE_I1_n_579,
      \Using_FPGA.Native_17\(16) => DECODE_I1_n_580,
      \Using_FPGA.Native_17\(15) => DECODE_I1_n_581,
      \Using_FPGA.Native_17\(14) => DECODE_I1_n_582,
      \Using_FPGA.Native_17\(13) => DECODE_I1_n_583,
      \Using_FPGA.Native_17\(12) => DECODE_I1_n_584,
      \Using_FPGA.Native_17\(11) => DECODE_I1_n_585,
      \Using_FPGA.Native_17\(10) => DECODE_I1_n_586,
      \Using_FPGA.Native_17\(9) => DECODE_I1_n_587,
      \Using_FPGA.Native_17\(8) => DECODE_I1_n_588,
      \Using_FPGA.Native_17\(7) => DECODE_I1_n_589,
      \Using_FPGA.Native_17\(6) => DECODE_I1_n_590,
      \Using_FPGA.Native_17\(5) => DECODE_I1_n_591,
      \Using_FPGA.Native_17\(4) => DECODE_I1_n_592,
      \Using_FPGA.Native_17\(3) => DECODE_I1_n_593,
      \Using_FPGA.Native_17\(2) => DECODE_I1_n_594,
      \Using_FPGA.Native_17\(1) => DECODE_I1_n_595,
      \Using_FPGA.Native_17\(0) => DECODE_I1_n_596,
      \Using_FPGA.Native_18\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\,
      \Using_FPGA.Native_19\ => DAXI_interface_I1_n_79,
      \Using_FPGA.Native_2\ => DECODE_I1_n_430,
      \Using_FPGA.Native_20\ => DAXI_interface_I1_n_78,
      \Using_FPGA.Native_21\(15) => ex_op2(0),
      \Using_FPGA.Native_21\(14) => ex_op2(17),
      \Using_FPGA.Native_21\(13) => ex_op2(18),
      \Using_FPGA.Native_21\(12) => ex_op2(19),
      \Using_FPGA.Native_21\(11) => ex_op2(20),
      \Using_FPGA.Native_21\(10) => ex_op2(21),
      \Using_FPGA.Native_21\(9) => ex_op2(22),
      \Using_FPGA.Native_21\(8) => ex_op2(23),
      \Using_FPGA.Native_21\(7) => ex_op2(24),
      \Using_FPGA.Native_21\(6) => ex_op2(25),
      \Using_FPGA.Native_21\(5) => ex_op2(26),
      \Using_FPGA.Native_21\(4) => ex_op2(27),
      \Using_FPGA.Native_21\(3) => DATA_FLOW_I1_n_16,
      \Using_FPGA.Native_21\(2) => DATA_FLOW_I1_n_17,
      \Using_FPGA.Native_21\(1) => DATA_FLOW_I1_n_18,
      \Using_FPGA.Native_21\(0) => DATA_FLOW_I1_n_19,
      \Using_FPGA.Native_22\ => DATA_FLOW_I1_n_67,
      \Using_FPGA.Native_23\ => \^serial_dbg_intf.if_debug_ready_i_reg\,
      \Using_FPGA.Native_24\ => DLMB_Interface_I1_n_2,
      \Using_FPGA.Native_25\ => DATA_FLOW_I1_n_65,
      \Using_FPGA.Native_26\ => DATA_FLOW_I1_n_64,
      \Using_FPGA.Native_27\ => DATA_FLOW_I1_n_312,
      \Using_FPGA.Native_28\ => DATA_FLOW_I1_n_72,
      \Using_FPGA.Native_29\ => DATA_FLOW_I1_n_70,
      \Using_FPGA.Native_3\ => DECODE_I1_n_431,
      \Using_FPGA.Native_30\ => DATA_FLOW_I1_n_68,
      \Using_FPGA.Native_31\ => DATA_FLOW_I1_n_73,
      \Using_FPGA.Native_32\ => DATA_FLOW_I1_n_69,
      \Using_FPGA.Native_33\ => DATA_FLOW_I1_n_71,
      \Using_FPGA.Native_34\ => DATA_FLOW_I1_n_397,
      \Using_FPGA.Native_35\ => DATA_FLOW_I1_n_74,
      \Using_FPGA.Native_36\(0) => ex_op1_neg,
      \Using_FPGA.Native_4\ => DECODE_I1_n_432,
      \Using_FPGA.Native_5\ => DECODE_I1_n_448,
      \Using_FPGA.Native_6\ => DECODE_I1_n_449,
      \Using_FPGA.Native_7\ => DECODE_I1_n_451,
      \Using_FPGA.Native_8\ => DECODE_I1_n_452,
      \Using_FPGA.Native_9\ => DECODE_I1_n_454,
      \Using_Mul_Instr.ex_not_mul_op_i_reg_0\ => DECODE_I1_n_123,
      WB_Div_Zero_Overflow_reg_0 => DECODE_I1_n_459,
      WB_Div_Zero_Overflow_reg_1 => DECODE_I1_n_466,
      WB_Div_Zero_Overflow_reg_2 => DECODE_I1_n_467,
      WB_Div_Zero_Overflow_reg_3 => DECODE_I1_n_468,
      WB_Div_Zero_Overflow_reg_4(1) => \MSR_I1/of_MSR_cmb\(25),
      WB_Div_Zero_Overflow_reg_4(0) => \MSR_I1/of_MSR_cmb\(30),
      WB_Div_Zero_Overflow_reg_5 => DECODE_I1_n_527,
      WB_Div_Zero_Overflow_reg_6 => DATA_FLOW_I1_n_244,
      WB_Doublet_Access_reg_0 => DECODE_I1_n_480,
      WB_Doublet_Access_reg_1 => DECODE_I1_n_515,
      WB_Exception_Return_Addr0(29 downto 0) => \exception_registers_I1/WB_Exception_Return_Addr0\(31 downto 2),
      \WB_Exception_Return_Addr_reg[16]\ => DECODE_I1_n_364,
      \WB_Exception_Return_Addr_reg[17]\ => DECODE_I1_n_374,
      \WB_Exception_Return_Addr_reg[18]\ => DECODE_I1_n_365,
      \WB_Exception_Return_Addr_reg[20]\ => DECODE_I1_n_373,
      \WB_Exception_Return_Addr_reg[21]\ => DECODE_I1_n_366,
      \WB_Exception_Return_Addr_reg[25]\ => DECODE_I1_n_367,
      WB_MSR_Clear_BIP_reg_0 => DECODE_I1_n_528,
      WB_MSR_Set_IE_reg_0 => DATA_FLOW_I1_n_256,
      active_wakeup => active_wakeup,
      \bp0_branch_target_reg[0]_0\(31) => interrupt_address_d1(0),
      \bp0_branch_target_reg[0]_0\(30) => interrupt_address_d1(1),
      \bp0_branch_target_reg[0]_0\(29) => interrupt_address_d1(2),
      \bp0_branch_target_reg[0]_0\(28) => interrupt_address_d1(3),
      \bp0_branch_target_reg[0]_0\(27) => interrupt_address_d1(4),
      \bp0_branch_target_reg[0]_0\(26) => interrupt_address_d1(5),
      \bp0_branch_target_reg[0]_0\(25) => interrupt_address_d1(6),
      \bp0_branch_target_reg[0]_0\(24) => interrupt_address_d1(7),
      \bp0_branch_target_reg[0]_0\(23) => interrupt_address_d1(8),
      \bp0_branch_target_reg[0]_0\(22) => interrupt_address_d1(9),
      \bp0_branch_target_reg[0]_0\(21) => interrupt_address_d1(10),
      \bp0_branch_target_reg[0]_0\(20) => interrupt_address_d1(11),
      \bp0_branch_target_reg[0]_0\(19) => interrupt_address_d1(12),
      \bp0_branch_target_reg[0]_0\(18) => interrupt_address_d1(13),
      \bp0_branch_target_reg[0]_0\(17) => interrupt_address_d1(14),
      \bp0_branch_target_reg[0]_0\(16) => interrupt_address_d1(15),
      \bp0_branch_target_reg[0]_0\(15) => interrupt_address_d1(16),
      \bp0_branch_target_reg[0]_0\(14) => interrupt_address_d1(17),
      \bp0_branch_target_reg[0]_0\(13) => interrupt_address_d1(18),
      \bp0_branch_target_reg[0]_0\(12) => interrupt_address_d1(19),
      \bp0_branch_target_reg[0]_0\(11) => interrupt_address_d1(20),
      \bp0_branch_target_reg[0]_0\(10) => interrupt_address_d1(21),
      \bp0_branch_target_reg[0]_0\(9) => interrupt_address_d1(22),
      \bp0_branch_target_reg[0]_0\(8) => interrupt_address_d1(23),
      \bp0_branch_target_reg[0]_0\(7) => interrupt_address_d1(24),
      \bp0_branch_target_reg[0]_0\(6) => interrupt_address_d1(25),
      \bp0_branch_target_reg[0]_0\(5) => interrupt_address_d1(26),
      \bp0_branch_target_reg[0]_0\(4) => interrupt_address_d1(27),
      \bp0_branch_target_reg[0]_0\(3) => interrupt_address_d1(28),
      \bp0_branch_target_reg[0]_0\(2) => interrupt_address_d1(29),
      \bp0_branch_target_reg[0]_0\(1) => interrupt_address_d1(30),
      \bp0_branch_target_reg[0]_0\(0) => interrupt_address_d1(31),
      \bp0_branch_target_reg[0]_1\(29) => ex_databus_addr(0),
      \bp0_branch_target_reg[0]_1\(28) => ex_databus_addr(1),
      \bp0_branch_target_reg[0]_1\(27) => ex_databus_addr(2),
      \bp0_branch_target_reg[0]_1\(26) => ex_databus_addr(3),
      \bp0_branch_target_reg[0]_1\(25) => ex_databus_addr(4),
      \bp0_branch_target_reg[0]_1\(24) => ex_databus_addr(5),
      \bp0_branch_target_reg[0]_1\(23) => ex_databus_addr(6),
      \bp0_branch_target_reg[0]_1\(22) => ex_databus_addr(7),
      \bp0_branch_target_reg[0]_1\(21) => ex_databus_addr(8),
      \bp0_branch_target_reg[0]_1\(20) => ex_databus_addr(9),
      \bp0_branch_target_reg[0]_1\(19) => ex_databus_addr(10),
      \bp0_branch_target_reg[0]_1\(18) => ex_databus_addr(11),
      \bp0_branch_target_reg[0]_1\(17) => ex_databus_addr(12),
      \bp0_branch_target_reg[0]_1\(16) => ex_databus_addr(13),
      \bp0_branch_target_reg[0]_1\(15) => ex_databus_addr(14),
      \bp0_branch_target_reg[0]_1\(14) => ex_databus_addr(15),
      \bp0_branch_target_reg[0]_1\(13) => ex_databus_addr(16),
      \bp0_branch_target_reg[0]_1\(12) => ex_databus_addr(17),
      \bp0_branch_target_reg[0]_1\(11) => ex_databus_addr(18),
      \bp0_branch_target_reg[0]_1\(10) => ex_databus_addr(19),
      \bp0_branch_target_reg[0]_1\(9) => ex_databus_addr(20),
      \bp0_branch_target_reg[0]_1\(8) => ex_databus_addr(21),
      \bp0_branch_target_reg[0]_1\(7) => ex_databus_addr(22),
      \bp0_branch_target_reg[0]_1\(6) => ex_databus_addr(23),
      \bp0_branch_target_reg[0]_1\(5) => ex_databus_addr(24),
      \bp0_branch_target_reg[0]_1\(4) => ex_databus_addr(25),
      \bp0_branch_target_reg[0]_1\(3) => ex_databus_addr(26),
      \bp0_branch_target_reg[0]_1\(2) => ex_databus_addr(27),
      \bp0_branch_target_reg[0]_1\(1) => ex_databus_addr(28),
      \bp0_branch_target_reg[0]_1\(0) => ex_databus_addr(29),
      bp0_dead_fetch_hold => bp0_dead_fetch_hold,
      bp0_raw_valid_reg_0 => DECODE_I1_n_54,
      bp0_raw_valid_reg_1 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_38\,
      bp0_raw_valid_reg_2 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_43\,
      bp1_dead_fetch_hold_bt => bp1_dead_fetch_hold_bt,
      bp1_dead_fetch_hold_reg_0 => DECODE_I1_n_316,
      bp1_raw_valid_reg_0 => DECODE_I1_n_36,
      bp1_raw_valid_reg_1 => DECODE_I1_n_38,
      bp1_raw_valid_reg_2 => bp1_raw_valid_i_1_n_0,
      \cur_data_i_reg[12]\ => DECODE_I1_n_427,
      \cur_data_i_reg[26]\ => DECODE_I1_n_172,
      \cur_data_i_reg[31]\(31) => of_pc(0),
      \cur_data_i_reg[31]\(30) => of_pc(1),
      \cur_data_i_reg[31]\(29) => of_pc(2),
      \cur_data_i_reg[31]\(28) => of_pc(3),
      \cur_data_i_reg[31]\(27) => of_pc(4),
      \cur_data_i_reg[31]\(26) => of_pc(5),
      \cur_data_i_reg[31]\(25) => of_pc(6),
      \cur_data_i_reg[31]\(24) => of_pc(7),
      \cur_data_i_reg[31]\(23) => of_pc(8),
      \cur_data_i_reg[31]\(22) => of_pc(9),
      \cur_data_i_reg[31]\(21) => of_pc(10),
      \cur_data_i_reg[31]\(20) => of_pc(11),
      \cur_data_i_reg[31]\(19) => of_pc(12),
      \cur_data_i_reg[31]\(18) => of_pc(13),
      \cur_data_i_reg[31]\(17) => of_pc(14),
      \cur_data_i_reg[31]\(16) => of_pc(15),
      \cur_data_i_reg[31]\(15) => of_pc(16),
      \cur_data_i_reg[31]\(14) => of_pc(17),
      \cur_data_i_reg[31]\(13) => of_pc(18),
      \cur_data_i_reg[31]\(12) => of_pc(19),
      \cur_data_i_reg[31]\(11) => of_pc(20),
      \cur_data_i_reg[31]\(10) => of_pc(21),
      \cur_data_i_reg[31]\(9) => of_pc(22),
      \cur_data_i_reg[31]\(8) => of_pc(23),
      \cur_data_i_reg[31]\(7) => of_pc(24),
      \cur_data_i_reg[31]\(6) => of_pc(25),
      \cur_data_i_reg[31]\(5) => of_pc(26),
      \cur_data_i_reg[31]\(4) => of_pc(27),
      \cur_data_i_reg[31]\(3) => of_pc(28),
      \cur_data_i_reg[31]\(2) => of_pc(29),
      \cur_data_i_reg[31]\(1) => of_pc(30),
      \cur_data_i_reg[31]\(0) => of_pc(31),
      \cur_data_i_reg[31]_0\(31) => \Operand_Select_I1/of_op1\(0),
      \cur_data_i_reg[31]_0\(30) => \Operand_Select_I1/of_op1\(1),
      \cur_data_i_reg[31]_0\(29) => \Operand_Select_I1/of_op1\(2),
      \cur_data_i_reg[31]_0\(28) => \Operand_Select_I1/of_op1\(3),
      \cur_data_i_reg[31]_0\(27) => \Operand_Select_I1/of_op1\(4),
      \cur_data_i_reg[31]_0\(26) => \Operand_Select_I1/of_op1\(5),
      \cur_data_i_reg[31]_0\(25) => \Operand_Select_I1/of_op1\(6),
      \cur_data_i_reg[31]_0\(24) => \Operand_Select_I1/of_op1\(7),
      \cur_data_i_reg[31]_0\(23) => \Operand_Select_I1/of_op1\(8),
      \cur_data_i_reg[31]_0\(22) => \Operand_Select_I1/of_op1\(9),
      \cur_data_i_reg[31]_0\(21) => \Operand_Select_I1/of_op1\(10),
      \cur_data_i_reg[31]_0\(20) => \Operand_Select_I1/of_op1\(11),
      \cur_data_i_reg[31]_0\(19) => \Operand_Select_I1/of_op1\(12),
      \cur_data_i_reg[31]_0\(18) => \Operand_Select_I1/of_op1\(13),
      \cur_data_i_reg[31]_0\(17) => \Operand_Select_I1/of_op1\(14),
      \cur_data_i_reg[31]_0\(16) => \Operand_Select_I1/of_op1\(15),
      \cur_data_i_reg[31]_0\(15) => \Operand_Select_I1/of_op1\(16),
      \cur_data_i_reg[31]_0\(14) => \Operand_Select_I1/of_op1\(17),
      \cur_data_i_reg[31]_0\(13) => \Operand_Select_I1/of_op1\(18),
      \cur_data_i_reg[31]_0\(12) => \Operand_Select_I1/of_op1\(19),
      \cur_data_i_reg[31]_0\(11) => \Operand_Select_I1/of_op1\(20),
      \cur_data_i_reg[31]_0\(10) => \Operand_Select_I1/of_op1\(21),
      \cur_data_i_reg[31]_0\(9) => \Operand_Select_I1/of_op1\(22),
      \cur_data_i_reg[31]_0\(8) => \Operand_Select_I1/of_op1\(23),
      \cur_data_i_reg[31]_0\(7) => \Operand_Select_I1/of_op1\(24),
      \cur_data_i_reg[31]_0\(6) => \Operand_Select_I1/of_op1\(25),
      \cur_data_i_reg[31]_0\(5) => \Operand_Select_I1/of_op1\(26),
      \cur_data_i_reg[31]_0\(4) => \Operand_Select_I1/of_op1\(27),
      \cur_data_i_reg[31]_0\(3) => \Operand_Select_I1/of_op1\(28),
      \cur_data_i_reg[31]_0\(2) => \Operand_Select_I1/of_op1\(29),
      \cur_data_i_reg[31]_0\(1) => \Operand_Select_I1/of_op1\(30),
      \cur_data_i_reg[31]_0\(0) => \Operand_Select_I1/of_op1\(31),
      \cur_data_i_reg[31]_1\(31) => if4_addr_mmu(0),
      \cur_data_i_reg[31]_1\(30) => if4_addr_mmu(1),
      \cur_data_i_reg[31]_1\(29) => if4_addr_mmu(2),
      \cur_data_i_reg[31]_1\(28) => if4_addr_mmu(3),
      \cur_data_i_reg[31]_1\(27) => if4_addr_mmu(4),
      \cur_data_i_reg[31]_1\(26) => if4_addr_mmu(5),
      \cur_data_i_reg[31]_1\(25) => if4_addr_mmu(6),
      \cur_data_i_reg[31]_1\(24) => if4_addr_mmu(7),
      \cur_data_i_reg[31]_1\(23) => if4_addr_mmu(8),
      \cur_data_i_reg[31]_1\(22) => if4_addr_mmu(9),
      \cur_data_i_reg[31]_1\(21) => if4_addr_mmu(10),
      \cur_data_i_reg[31]_1\(20) => if4_addr_mmu(11),
      \cur_data_i_reg[31]_1\(19) => if4_addr_mmu(12),
      \cur_data_i_reg[31]_1\(18) => if4_addr_mmu(13),
      \cur_data_i_reg[31]_1\(17) => if4_addr_mmu(14),
      \cur_data_i_reg[31]_1\(16) => if4_addr_mmu(15),
      \cur_data_i_reg[31]_1\(15) => if4_addr_mmu(16),
      \cur_data_i_reg[31]_1\(14) => if4_addr_mmu(17),
      \cur_data_i_reg[31]_1\(13) => if4_addr_mmu(18),
      \cur_data_i_reg[31]_1\(12) => if4_addr_mmu(19),
      \cur_data_i_reg[31]_1\(11) => if4_addr_mmu(20),
      \cur_data_i_reg[31]_1\(10) => if4_addr_mmu(21),
      \cur_data_i_reg[31]_1\(9) => if4_addr_mmu(22),
      \cur_data_i_reg[31]_1\(8) => if4_addr_mmu(23),
      \cur_data_i_reg[31]_1\(7) => if4_addr_mmu(24),
      \cur_data_i_reg[31]_1\(6) => if4_addr_mmu(25),
      \cur_data_i_reg[31]_1\(5) => if4_addr_mmu(26),
      \cur_data_i_reg[31]_1\(4) => if4_addr_mmu(27),
      \cur_data_i_reg[31]_1\(3) => if4_addr_mmu(28),
      \cur_data_i_reg[31]_1\(2) => if4_addr_mmu(29),
      \cur_data_i_reg[31]_1\(1) => if4_addr_mmu(30),
      \cur_data_i_reg[31]_1\(0) => if4_addr_mmu(31),
      \cur_data_i_reg[3]\ => DECODE_I1_n_421,
      \cur_data_i_reg[4]\ => DECODE_I1_n_422,
      \cur_data_i_reg[5]\ => DECODE_I1_n_423,
      \cur_data_i_reg[6]\(1) => of_op1_sel(1),
      \cur_data_i_reg[6]\(0) => of_op1_sel(2),
      \cur_data_i_reg[7]\ => DECODE_I1_n_424,
      \cur_data_i_reg[8]\ => DECODE_I1_n_425,
      \cur_data_i_reg[9]\ => DECODE_I1_n_426,
      div_busy_reg(0) => \Using_Div_Unit.Div_Unit_I1/Q0\,
      ex_Interrupt => ex_Interrupt,
      ex_Interrupt_raw_reg_0(0) => \^lockstep_master_out\(38),
      ex_MSR_i(10) => \MSR_I1/ex_MSR_i\(17),
      ex_MSR_i(9) => \MSR_I1/ex_MSR_i\(18),
      ex_MSR_i(8) => \MSR_I1/ex_MSR_i\(19),
      ex_MSR_i(7) => \MSR_I1/ex_MSR_i\(20),
      ex_MSR_i(6) => \MSR_I1/ex_MSR_i\(21),
      ex_MSR_i(5) => \MSR_I1/ex_MSR_i\(22),
      ex_MSR_i(4) => \MSR_I1/ex_MSR_i\(23),
      ex_MSR_i(3) => \MSR_I1/ex_MSR_i\(24),
      ex_MSR_i(2) => \MSR_I1/ex_MSR_i\(26),
      ex_MSR_i(1) => \MSR_I1/ex_MSR_i\(27),
      ex_MSR_i(0) => \MSR_I1/ex_MSR_i\(31),
      ex_alu_result(1) => ex_alu_result(30),
      ex_alu_result(0) => ex_alu_result(31),
      ex_alu_sel_logic => ex_alu_sel_logic,
      ex_arith_shift => ex_arith_shift,
      ex_bit_extract => ex_bit_extract,
      ex_bit_insert => ex_bit_insert,
      ex_clz_instr => ex_clz_instr,
      ex_cmp_op => ex_cmp_op,
      ex_dbg_pc_hit_i => ex_dbg_pc_hit_i,
      ex_div_unsigned => ex_div_unsigned,
      ex_enable_sext_shift => ex_enable_sext_shift,
      ex_hibernate_i_reg_0 => ex_hibernate_i_i_1_n_0,
      ex_is_div_instr_i_reg_0 => DECODE_I1_n_149,
      ex_is_div_instr_i_reg_1 => ex_is_div_instr_i_i_1_n_0,
      ex_left_shift_i => \Barrel_Shifter_I/ex_left_shift_i\,
      ex_mbar_decode => ex_mbar_decode,
      ex_mbar_decode_reg_0 => ex_mbar_decode_i_1_n_0,
      ex_msrclr => ex_msrclr,
      ex_msrset => ex_msrset,
      ex_op1_cmp_equal_n => ex_op1_cmp_equal_n,
      ex_pattern_cmp_sel => ex_pattern_cmp_sel,
      ex_raw_valid_reg_0 => DECODE_I1_n_30,
      ex_sel_alu_reg_0 => DECODE_I1_n_369,
      ex_sel_alu_reg_1 => DECODE_I1_n_513,
      ex_sel_alu_res => ex_sel_alu_res,
      ex_sel_barrel_res => ex_sel_barrel_res,
      ex_sleep_i0 => ex_sleep_i0,
      ex_sleep_i_reg_0 => ex_sleep_i_i_1_n_0,
      ex_start_div => ex_start_div,
      ex_suspend_i_reg_0 => ex_suspend_i_i_1_n_0,
      ex_unsigned_op => ex_unsigned_op,
      ex_use_carry => ex_use_carry,
      ex_void_bit => \Barrel_Shifter_I/ex_void_bit\,
      \floating_hold_div_by_zero__0\ => \Using_Div_Unit.Div_Unit_I1/floating_hold_div_by_zero__0\,
      floating_hold_div_by_zero_reg => DECODE_I1_n_428,
      floating_hold_div_by_zero_reg_0 => DECODE_I1_n_429,
      floating_hold_div_overflow_reg => DATA_FLOW_I1_n_314,
      floating_hold_div_overflow_reg_0 => DATA_FLOW_I1_n_142,
      if0_pause => if0_pause,
      if0_raw_valid => if0_raw_valid,
      if0_raw_valid_reg_0 => if0_raw_valid_i_1_n_0,
      if1_insert_piperun_i => if1_insert_piperun_i,
      if2_ibus_access_raw0 => if2_ibus_access_raw0,
      if2_ibus_access_raw_reg_0 => if2_ibus_access_raw_i_1_n_0,
      if2_ibus_first_cycle_raw_reg_0 => DECODE_I1_n_234,
      if2_ilmb_issued => if2_ilmb_issued,
      if2_piperun => if2_piperun,
      if2_raw_valid_reg_0 => DECODE_I1_n_39,
      if2_raw_valid_reg_1 => if2_raw_valid_i_1_n_0,
      if3_allow_iready => if3_allow_iready,
      if3_ilmb_iready => if3_ilmb_iready,
      if3_piperun => if3_piperun,
      if3_potential_bubble => if3_potential_bubble,
      if3_raw_valid_reg_0 => DECODE_I1_n_43,
      if3_raw_valid_reg_1 => if3_raw_valid_i_1_n_0,
      if4_data(0 to 31) => if4_data(0 to 31),
      if4_ibus_access_i_reg_0 => ILMB_Interface_I1_n_38,
      if4_piperun => if4_piperun,
      if4_raw_valid_reg_0 => DECODE_I1_n_45,
      if4_raw_valid_reg_1 => if4_raw_valid_i_1_n_0,
      if4_ready => if4_ready,
      \in\(0) => \PREFETCH_BUFFER_I1/if_predecode\(0),
      in0 => DECODE_I1_n_514,
      kill_fetch_mmu => kill_fetch_mmu,
      last_cycle => \Using_Div_Unit.Div_Unit_I1/last_cycle\,
      lopt => lopt,
      lopt_1 => lopt_1,
      lopt_2 => lopt_2,
      lopt_3 => lopt_3,
      lopt_4 => lopt_4,
      lopt_5 => lopt_5,
      lopt_6 => lopt_6,
      lopt_7 => lopt_7,
      lopt_8 => lopt_8,
      \m0_Ex_Result_i_reg[30]\ => DATA_FLOW_I1_n_347,
      \m0_Ex_Result_i_reg[30]_0\ => DATA_FLOW_I1_n_247,
      \m0_Ex_Result_i_reg[30]_1\ => DATA_FLOW_I1_n_246,
      \m0_Ex_Result_i_reg[30]_2\ => DATA_FLOW_I1_n_354,
      m0_ex_sel_res => \Data_Flow_Logic_I1/m0_ex_sel_res\,
      \m0_exception_raw_kind_reg[31]_0\ => \^lockstep_master_out\(36),
      m0_not_mul_op_i_reg_0 => DECODE_I1_n_124,
      m0_piperun => m0_piperun,
      m0_sel_barrel_res => m0_sel_barrel_res,
      \m1_M0_Result_i_reg[0]\ => DECODE_I1_n_339,
      \m1_M0_Result_i_reg[10]\ => DECODE_I1_n_380,
      \m1_M0_Result_i_reg[11]\ => DECODE_I1_n_381,
      \m1_M0_Result_i_reg[12]\ => DECODE_I1_n_361,
      \m1_M0_Result_i_reg[13]\ => DECODE_I1_n_362,
      \m1_M0_Result_i_reg[14]\ => DECODE_I1_n_363,
      \m1_M0_Result_i_reg[15]\ => DECODE_I1_n_382,
      \m1_M0_Result_i_reg[1]\ => DECODE_I1_n_375,
      \m1_M0_Result_i_reg[2]\ => DECODE_I1_n_357,
      \m1_M0_Result_i_reg[3]\ => DECODE_I1_n_376,
      \m1_M0_Result_i_reg[4]\ => DECODE_I1_n_377,
      \m1_M0_Result_i_reg[5]\ => DECODE_I1_n_358,
      \m1_M0_Result_i_reg[6]\ => DECODE_I1_n_378,
      \m1_M0_Result_i_reg[7]\ => DECODE_I1_n_379,
      \m1_M0_Result_i_reg[8]\ => DECODE_I1_n_359,
      \m1_M0_Result_i_reg[9]\ => DECODE_I1_n_360,
      m1_byte_access => m1_byte_access,
      m1_databus_access_from_m0_reg_0 => DECODE_I1_n_233,
      m1_databus_addr_from_m0_reg_0 => DECODE_I1_n_232,
      m1_databus_write_from_m0_reg_0 => DECODE_I1_n_163,
      m1_databus_write_from_m0_reg_1 => DECODE_I1_n_164,
      m1_dlmb_issued => m1_dlmb_issued,
      m1_doublet_access => m1_doublet_access,
      m1_m0_sel_res => \Data_Flow_Logic_I1/m1_m0_sel_res\,
      m1_m0_sel_res0 => \Data_Flow_Logic_I1/m1_m0_sel_res0\,
      m1_piperun => m1_piperun,
      m1_sel_mul_res => m1_sel_mul_res,
      m1_unaligned_addr_3lsb(1 downto 0) => \Byte_Doublet_Handle_I1/m1_unaligned_addr_3lsb\(1 downto 0),
      \m2_M1_Result_i_reg[29]\(2) => \Operand_Select_I1/of_branch_cmp\(29),
      \m2_M1_Result_i_reg[29]\(1) => \Operand_Select_I1/of_branch_cmp\(30),
      \m2_M1_Result_i_reg[29]\(0) => \Operand_Select_I1/of_branch_cmp\(31),
      m2_allow_dready => m2_allow_dready,
      m2_databus_access_i_reg_0 => DECODE_I1_n_126,
      m2_dlmb_dready => m2_dlmb_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_is_div_instr => m2_is_div_instr,
      m2_m1_sel_res0 => \Data_Flow_Logic_I1/m2_m1_sel_res0\,
      m2_m1_sel_res_reg(0) => \Operand_Select_I1/of_op3\(31),
      m2_m1_sel_res_reg_0(0) => \Operand_Select_I1/of_op2\(31),
      m2_piperun => m2_piperun,
      m2_potential_bubble => m2_potential_bubble,
      m2_raw_valid_reg_0 => DECODE_I1_n_51,
      \m3_PC_i_reg[0]\(31) => m3_pc(0),
      \m3_PC_i_reg[0]\(30) => m3_pc(1),
      \m3_PC_i_reg[0]\(29) => m3_pc(2),
      \m3_PC_i_reg[0]\(28) => m3_pc(3),
      \m3_PC_i_reg[0]\(27) => m3_pc(4),
      \m3_PC_i_reg[0]\(26) => m3_pc(5),
      \m3_PC_i_reg[0]\(25) => m3_pc(6),
      \m3_PC_i_reg[0]\(24) => m3_pc(7),
      \m3_PC_i_reg[0]\(23) => m3_pc(8),
      \m3_PC_i_reg[0]\(22) => m3_pc(9),
      \m3_PC_i_reg[0]\(21) => m3_pc(10),
      \m3_PC_i_reg[0]\(20) => m3_pc(11),
      \m3_PC_i_reg[0]\(19) => m3_pc(12),
      \m3_PC_i_reg[0]\(18) => m3_pc(13),
      \m3_PC_i_reg[0]\(17) => m3_pc(14),
      \m3_PC_i_reg[0]\(16) => m3_pc(15),
      \m3_PC_i_reg[0]\(15) => m3_pc(16),
      \m3_PC_i_reg[0]\(14) => m3_pc(17),
      \m3_PC_i_reg[0]\(13) => m3_pc(18),
      \m3_PC_i_reg[0]\(12) => m3_pc(19),
      \m3_PC_i_reg[0]\(11) => m3_pc(20),
      \m3_PC_i_reg[0]\(10) => m3_pc(21),
      \m3_PC_i_reg[0]\(9) => m3_pc(22),
      \m3_PC_i_reg[0]\(8) => m3_pc(23),
      \m3_PC_i_reg[0]\(7) => m3_pc(24),
      \m3_PC_i_reg[0]\(6) => m3_pc(25),
      \m3_PC_i_reg[0]\(5) => m3_pc(26),
      \m3_PC_i_reg[0]\(4) => m3_pc(27),
      \m3_PC_i_reg[0]\(3) => m3_pc(28),
      \m3_PC_i_reg[0]\(2) => m3_pc(29),
      \m3_PC_i_reg[0]\(1) => m3_pc(30),
      \m3_PC_i_reg[0]\(0) => m3_pc(31),
      \m3_PC_i_reg[11]\(3) => DECODE_I1_n_251,
      \m3_PC_i_reg[11]\(2) => DECODE_I1_n_252,
      \m3_PC_i_reg[11]\(1) => DECODE_I1_n_253,
      \m3_PC_i_reg[11]\(0) => DECODE_I1_n_254,
      \m3_PC_i_reg[15]\(3) => DECODE_I1_n_247,
      \m3_PC_i_reg[15]\(2) => DECODE_I1_n_248,
      \m3_PC_i_reg[15]\(1) => DECODE_I1_n_249,
      \m3_PC_i_reg[15]\(0) => DECODE_I1_n_250,
      \m3_PC_i_reg[19]\(3) => DECODE_I1_n_243,
      \m3_PC_i_reg[19]\(2) => DECODE_I1_n_244,
      \m3_PC_i_reg[19]\(1) => DECODE_I1_n_245,
      \m3_PC_i_reg[19]\(0) => DECODE_I1_n_246,
      \m3_PC_i_reg[1]\(1) => DECODE_I1_n_263,
      \m3_PC_i_reg[1]\(0) => DECODE_I1_n_264,
      \m3_PC_i_reg[23]\(3) => DECODE_I1_n_239,
      \m3_PC_i_reg[23]\(2) => DECODE_I1_n_240,
      \m3_PC_i_reg[23]\(1) => DECODE_I1_n_241,
      \m3_PC_i_reg[23]\(0) => DECODE_I1_n_242,
      \m3_PC_i_reg[3]\(3) => DECODE_I1_n_259,
      \m3_PC_i_reg[3]\(2) => DECODE_I1_n_260,
      \m3_PC_i_reg[3]\(1) => DECODE_I1_n_261,
      \m3_PC_i_reg[3]\(0) => DECODE_I1_n_262,
      \m3_PC_i_reg[7]\(3) => DECODE_I1_n_255,
      \m3_PC_i_reg[7]\(2) => DECODE_I1_n_256,
      \m3_PC_i_reg[7]\(1) => DECODE_I1_n_257,
      \m3_PC_i_reg[7]\(0) => DECODE_I1_n_258,
      m3_active_access => m3_active_access,
      m3_databus_ready => m3_databus_ready,
      m3_div_by_zero => m3_div_by_zero,
      m3_div_overflow => m3_div_overflow,
      m3_div_overflow_i_reg => DATA_FLOW_I1_n_311,
      m3_div_stall => m3_div_stall,
      m3_div_zero_overflow_ex_hold => m3_div_zero_overflow_ex_hold,
      \m3_gpr_write_addr_reg[3]_0\ => DECODE_I1_n_301,
      m3_is_div_instr_i_reg_0 => m3_is_div_instr_i_i_1_n_0,
      m3_m2_sel_res => \Data_Flow_Logic_I1/m3_m2_sel_res\,
      m3_msr(0) => m3_msr(30),
      m3_piperun => m3_piperun,
      m3_raw_valid_reg_0 => DECODE_I1_n_52,
      m3_sel_div_res => m3_sel_div_res,
      m3_sel_load_res => m3_sel_load_res,
      normal_stop_i => normal_stop_i,
      \of_MSR_i_reg[22]\(3) => DECODE_I1_n_309,
      \of_MSR_i_reg[22]\(2) => DECODE_I1_n_310,
      \of_MSR_i_reg[22]\(1) => DECODE_I1_n_311,
      \of_MSR_i_reg[22]\(0) => of_msr(30),
      \of_MSR_i_reg[22]_0\(4) => \MSR_I1/of_MSR_i\(22),
      \of_MSR_i_reg[22]_0\(3) => \MSR_I1/of_MSR_i\(23),
      \of_MSR_i_reg[22]_0\(2) => DATA_FLOW_I1_n_93,
      \of_MSR_i_reg[22]_0\(1) => of_MSR_i(28),
      \of_MSR_i_reg[22]_0\(0) => of_MSR_i(30),
      \of_MSR_i_reg[25]\(3) => wb_msr(25),
      \of_MSR_i_reg[25]\(2) => wb_msr(28),
      \of_MSR_i_reg[25]\(1) => wb_msr(29),
      \of_MSR_i_reg[25]\(0) => wb_msr(30),
      \of_MSR_i_reg[25]_0\(1) => \MSR_I1/p_1_in\(6),
      \of_MSR_i_reg[25]_0\(0) => \MSR_I1/p_1_in\(1),
      \of_MSR_i_reg[25]_1\(1) => \MSR_I1/p_0_in\(6),
      \of_MSR_i_reg[25]_1\(0) => \MSR_I1/p_0_in\(1),
      of_is_div_instr => of_is_div_instr,
      of_op2_sel(0 to 2) => of_op2_sel(0 to 2),
      of_op3_sel(0 to 2) => of_op3_sel(0 to 2),
      of_piperun => of_piperun,
      \out\ => DATA_FLOW_I1_n_52,
      p_2_in => p_2_in,
      \p_4_out__0\ => \p_4_out__0\,
      p_55_out => p_55_out,
      single_Step_N => single_Step_N,
      single_Step_N_reg => DECODE_I1_n_169,
      sync_reset => sync_reset,
      \trace_new_reg_value_i[24]_i_2\(1) => \Byte_Doublet_Handle_I1/p_0_in\,
      \trace_new_reg_value_i[24]_i_2\(0) => DATA_FLOW_I1_n_253,
      trace_wb_jump_taken => trace_wb_jump_taken,
      trace_wb_valid_instr => trace_wb_valid_instr,
      wakeup_i(0 to 1) => wakeup_i(0 to 1),
      wb_MSR_i(10) => \MSR_I1/wb_MSR_i\(17),
      wb_MSR_i(9) => \MSR_I1/wb_MSR_i\(18),
      wb_MSR_i(8) => \MSR_I1/wb_MSR_i\(19),
      wb_MSR_i(7) => \MSR_I1/wb_MSR_i\(20),
      wb_MSR_i(6) => \MSR_I1/wb_MSR_i\(21),
      wb_MSR_i(5) => \MSR_I1/wb_MSR_i\(22),
      wb_MSR_i(4) => \MSR_I1/wb_MSR_i\(23),
      wb_MSR_i(3) => \MSR_I1/wb_MSR_i\(24),
      wb_MSR_i(2) => \MSR_I1/wb_MSR_i\(26),
      wb_MSR_i(1) => \MSR_I1/wb_MSR_i\(27),
      wb_MSR_i(0) => \MSR_I1/wb_MSR_i\(31),
      \wb_PC_i_reg[31]\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\,
      wb_byte_access => wb_byte_access,
      wb_databus_access => wb_databus_access,
      wb_databus_read => wb_databus_read,
      wb_databus_write => wb_databus_write,
      wb_delay_slot => wb_delay_slot,
      wb_div_zero_overflow => wb_div_zero_overflow,
      wb_doublet_access => wb_doublet_access,
      wb_exception_from_m3_reg_0(2) => wb_exception_kind(28),
      wb_exception_from_m3_reg_0(1) => wb_exception_kind(30),
      wb_exception_from_m3_reg_0(0) => wb_exception_kind(31),
      wb_exception_from_m3_reg_rep_0 => DECODE_I1_n_150,
      wb_exception_from_m3_reg_rep_1 => DECODE_I1_n_464,
      \wb_exception_from_m3_reg_rep__0_0\ => DECODE_I1_n_151,
      \wb_exception_from_m3_reg_rep__0_1\ => DECODE_I1_n_450,
      \wb_exception_from_m3_reg_rep__0_2\ => DECODE_I1_n_472,
      \wb_exception_from_m3_reg_rep__0_3\ => DECODE_I1_n_473,
      \wb_exception_from_m3_reg_rep__0_4\ => DECODE_I1_n_474,
      \wb_exception_from_m3_reg_rep__0_5\ => DECODE_I1_n_475,
      \wb_exception_raw_kind_reg[31]_0\ => DECODE_I1_n_157,
      \wb_exception_raw_kind_reg[31]_1\(0) => \exception_registers_I1/wb_PC_i0\,
      wb_exception_taken => wb_exception_taken,
      wb_fwd(8) => wb_fwd(16),
      wb_fwd(7) => wb_fwd(17),
      wb_fwd(6) => wb_fwd(18),
      wb_fwd(5) => wb_fwd(20),
      wb_fwd(4) => wb_fwd(21),
      wb_fwd(3) => wb_fwd(25),
      wb_fwd(2) => wb_fwd(29),
      wb_fwd(1) => wb_fwd(30),
      wb_fwd(0) => wb_fwd(31),
      wb_gpr_wr => wb_gpr_wr,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      \wb_gpr_write_addr_reg[1]_0\(2) => DECODE_I1_n_330,
      \wb_gpr_write_addr_reg[1]_0\(1) => DECODE_I1_n_331,
      \wb_gpr_write_addr_reg[1]_0\(0) => DECODE_I1_n_332,
      wb_halted => wb_halted,
      \wb_instr_i_reg[0]_0\(31) => trace_wb_instr(0),
      \wb_instr_i_reg[0]_0\(30) => trace_wb_instr(1),
      \wb_instr_i_reg[0]_0\(29) => trace_wb_instr(2),
      \wb_instr_i_reg[0]_0\(28) => trace_wb_instr(3),
      \wb_instr_i_reg[0]_0\(27) => trace_wb_instr(4),
      \wb_instr_i_reg[0]_0\(26) => trace_wb_instr(5),
      \wb_instr_i_reg[0]_0\(25) => trace_wb_instr(6),
      \wb_instr_i_reg[0]_0\(24) => trace_wb_instr(7),
      \wb_instr_i_reg[0]_0\(23) => trace_wb_instr(8),
      \wb_instr_i_reg[0]_0\(22) => trace_wb_instr(9),
      \wb_instr_i_reg[0]_0\(21) => trace_wb_instr(10),
      \wb_instr_i_reg[0]_0\(20) => trace_wb_instr(11),
      \wb_instr_i_reg[0]_0\(19) => trace_wb_instr(12),
      \wb_instr_i_reg[0]_0\(18) => trace_wb_instr(13),
      \wb_instr_i_reg[0]_0\(17) => trace_wb_instr(14),
      \wb_instr_i_reg[0]_0\(16) => trace_wb_instr(15),
      \wb_instr_i_reg[0]_0\(15) => trace_wb_instr(16),
      \wb_instr_i_reg[0]_0\(14) => trace_wb_instr(17),
      \wb_instr_i_reg[0]_0\(13) => trace_wb_instr(18),
      \wb_instr_i_reg[0]_0\(12) => trace_wb_instr(19),
      \wb_instr_i_reg[0]_0\(11) => trace_wb_instr(20),
      \wb_instr_i_reg[0]_0\(10) => trace_wb_instr(21),
      \wb_instr_i_reg[0]_0\(9) => trace_wb_instr(22),
      \wb_instr_i_reg[0]_0\(8) => trace_wb_instr(23),
      \wb_instr_i_reg[0]_0\(7) => trace_wb_instr(24),
      \wb_instr_i_reg[0]_0\(6) => trace_wb_instr(25),
      \wb_instr_i_reg[0]_0\(5) => trace_wb_instr(26),
      \wb_instr_i_reg[0]_0\(4) => trace_wb_instr(27),
      \wb_instr_i_reg[0]_0\(3) => trace_wb_instr(28),
      \wb_instr_i_reg[0]_0\(2) => trace_wb_instr(29),
      \wb_instr_i_reg[0]_0\(1) => trace_wb_instr(30),
      \wb_instr_i_reg[0]_0\(0) => trace_wb_instr(31),
      wb_m3_sel_res0 => \Data_Flow_Logic_I1/wb_m3_sel_res0\,
      wb_msr_clear_bip => wb_msr_clear_bip,
      wb_msr_clear_ie => wb_msr_clear_ie,
      wb_pc_valid => wb_pc_valid,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1,
      wb_reset_reg_0 => DECODE_I1_n_333
    );
DLMB_Interface_I1: entity work.microblaze_microblaze_0_0_DLMB_Interface_ff
     port map (
      Clk => Clk,
      D(1) => \^d\(228),
      D(0) => \^d\(191),
      DReady => DReady,
      DWait => DWait,
      DWait_0 => DLMB_Interface_I1_n_5,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      \LOCKSTEP_Out_reg[555]\ => DAXI_interface_I1_n_72,
      \LOCKSTEP_Out_reg[629]\ => DAXI_interface_I1_n_73,
      Q(15) => wb_dlmb_valid_read_data(0),
      Q(14) => wb_dlmb_valid_read_data(1),
      Q(13) => wb_dlmb_valid_read_data(2),
      Q(12) => wb_dlmb_valid_read_data(3),
      Q(11) => wb_dlmb_valid_read_data(4),
      Q(10) => wb_dlmb_valid_read_data(5),
      Q(9) => wb_dlmb_valid_read_data(6),
      Q(8) => wb_dlmb_valid_read_data(7),
      Q(7) => wb_dlmb_valid_read_data(8),
      Q(6) => wb_dlmb_valid_read_data(9),
      Q(5) => wb_dlmb_valid_read_data(10),
      Q(4) => wb_dlmb_valid_read_data(11),
      Q(3) => wb_dlmb_valid_read_data(12),
      Q(2) => wb_dlmb_valid_read_data(13),
      Q(1) => wb_dlmb_valid_read_data(14),
      Q(0) => wb_dlmb_valid_read_data(15),
      S => \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S\,
      \Use_DAXI.m3_active_access_reg\ => DAXI_interface_I1_n_74,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[10]_0\ => DLMB_Interface_I1_n_33,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[11]_0\ => DLMB_Interface_I1_n_32,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[12]_0\ => DLMB_Interface_I1_n_31,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[13]_0\ => DLMB_Interface_I1_n_30,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[14]_0\ => DLMB_Interface_I1_n_29,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[15]_0\ => DLMB_Interface_I1_n_12,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[16]_0\ => DLMB_Interface_I1_n_43,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[17]_0\ => DLMB_Interface_I1_n_42,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[18]_0\ => DLMB_Interface_I1_n_41,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[19]_0\ => DLMB_Interface_I1_n_40,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[20]_0\ => DLMB_Interface_I1_n_39,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[21]_0\ => DLMB_Interface_I1_n_38,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[22]_0\ => DLMB_Interface_I1_n_37,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[23]_0\ => DLMB_Interface_I1_n_36,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[8]_0\ => DLMB_Interface_I1_n_35,
      \Use_DLMB.WB_DLMB_Valid_Read_Data_reg[9]_0\ => DLMB_Interface_I1_n_34,
      \Use_DLMB.m1_dlmb_issued_reg_0\ => DLMB_Interface_I1_n_11,
      \Use_DLMB.m1_dlmb_issued_reg_1\ => DECODE_I1_n_238,
      \Use_DLMB.m2_allow_dready_reg_0\ => DECODE_I1_n_232,
      \Use_DLMB.m2_dready_hold_reg_0\ => DLMB_Interface_I1_n_2,
      \Use_DLMB.m2_dready_hold_reg_1\ => DECODE_I1_n_161,
      \Use_DLMB.m2_potential_bubble_reg_0\ => DECODE_I1_n_159,
      m1_dlmb_issued => m1_dlmb_issued,
      m1_piperun => m1_piperun,
      m2_active_access => m2_active_access,
      m2_allow_dready => m2_allow_dready,
      m2_dlmb_dready => m2_dlmb_dready,
      m2_dlmb_drop_request => m2_dlmb_drop_request,
      m2_piperun => m2_piperun,
      m2_potential_bubble => m2_potential_bubble,
      m3_piperun => m3_piperun,
      sync_reset => sync_reset,
      \trace_new_reg_value_i[31]_i_2_0\ => DATA_FLOW_I1_n_251,
      \trace_new_reg_value_i_reg[16]\(31) => wb_daxi_valid_read_data(0),
      \trace_new_reg_value_i_reg[16]\(30) => wb_daxi_valid_read_data(1),
      \trace_new_reg_value_i_reg[16]\(29) => wb_daxi_valid_read_data(2),
      \trace_new_reg_value_i_reg[16]\(28) => wb_daxi_valid_read_data(3),
      \trace_new_reg_value_i_reg[16]\(27) => wb_daxi_valid_read_data(4),
      \trace_new_reg_value_i_reg[16]\(26) => wb_daxi_valid_read_data(5),
      \trace_new_reg_value_i_reg[16]\(25) => wb_daxi_valid_read_data(6),
      \trace_new_reg_value_i_reg[16]\(24) => wb_daxi_valid_read_data(7),
      \trace_new_reg_value_i_reg[16]\(23) => wb_daxi_valid_read_data(8),
      \trace_new_reg_value_i_reg[16]\(22) => wb_daxi_valid_read_data(9),
      \trace_new_reg_value_i_reg[16]\(21) => wb_daxi_valid_read_data(10),
      \trace_new_reg_value_i_reg[16]\(20) => wb_daxi_valid_read_data(11),
      \trace_new_reg_value_i_reg[16]\(19) => wb_daxi_valid_read_data(12),
      \trace_new_reg_value_i_reg[16]\(18) => wb_daxi_valid_read_data(13),
      \trace_new_reg_value_i_reg[16]\(17) => wb_daxi_valid_read_data(14),
      \trace_new_reg_value_i_reg[16]\(16) => wb_daxi_valid_read_data(15),
      \trace_new_reg_value_i_reg[16]\(15) => wb_daxi_valid_read_data(16),
      \trace_new_reg_value_i_reg[16]\(14) => wb_daxi_valid_read_data(17),
      \trace_new_reg_value_i_reg[16]\(13) => wb_daxi_valid_read_data(18),
      \trace_new_reg_value_i_reg[16]\(12) => wb_daxi_valid_read_data(19),
      \trace_new_reg_value_i_reg[16]\(11) => wb_daxi_valid_read_data(20),
      \trace_new_reg_value_i_reg[16]\(10) => wb_daxi_valid_read_data(21),
      \trace_new_reg_value_i_reg[16]\(9) => wb_daxi_valid_read_data(22),
      \trace_new_reg_value_i_reg[16]\(8) => wb_daxi_valid_read_data(23),
      \trace_new_reg_value_i_reg[16]\(7) => wb_daxi_valid_read_data(24),
      \trace_new_reg_value_i_reg[16]\(6) => wb_daxi_valid_read_data(25),
      \trace_new_reg_value_i_reg[16]\(5) => wb_daxi_valid_read_data(26),
      \trace_new_reg_value_i_reg[16]\(4) => wb_daxi_valid_read_data(27),
      \trace_new_reg_value_i_reg[16]\(3) => wb_daxi_valid_read_data(28),
      \trace_new_reg_value_i_reg[16]\(2) => wb_daxi_valid_read_data(29),
      \trace_new_reg_value_i_reg[16]\(1) => wb_daxi_valid_read_data(30),
      \trace_new_reg_value_i_reg[16]\(0) => wb_daxi_valid_read_data(31),
      \trace_new_reg_value_i_reg[23]\(0) => \Byte_Doublet_Handle_I1/p_0_in\,
      \trace_new_reg_value_i_reg[31]\ => DECODE_I1_n_515,
      \trace_new_reg_value_i_reg[31]_0\ => DATA_FLOW_I1_n_387,
      wb_databus_read_data(7) => wb_databus_read_data(0),
      wb_databus_read_data(6) => wb_databus_read_data(1),
      wb_databus_read_data(5) => wb_databus_read_data(2),
      wb_databus_read_data(4) => wb_databus_read_data(3),
      wb_databus_read_data(3) => wb_databus_read_data(4),
      wb_databus_read_data(2) => wb_databus_read_data(5),
      wb_databus_read_data(1) => wb_databus_read_data(6),
      wb_databus_read_data(0) => wb_databus_read_data(7),
      wb_doublet_access => wb_doublet_access
    );
DSide_Logic_I1: entity work.microblaze_microblaze_0_0_DSide_Logic_ff
     port map (
      Q(15) => wb_dlmb_valid_read_data(0),
      Q(14) => wb_dlmb_valid_read_data(1),
      Q(13) => wb_dlmb_valid_read_data(2),
      Q(12) => wb_dlmb_valid_read_data(3),
      Q(11) => wb_dlmb_valid_read_data(4),
      Q(10) => wb_dlmb_valid_read_data(5),
      Q(9) => wb_dlmb_valid_read_data(6),
      Q(8) => wb_dlmb_valid_read_data(7),
      Q(7) => wb_dlmb_valid_read_data(8),
      Q(6) => wb_dlmb_valid_read_data(9),
      Q(5) => wb_dlmb_valid_read_data(10),
      Q(4) => wb_dlmb_valid_read_data(11),
      Q(3) => wb_dlmb_valid_read_data(12),
      Q(2) => wb_dlmb_valid_read_data(13),
      Q(1) => wb_dlmb_valid_read_data(14),
      Q(0) => wb_dlmb_valid_read_data(15),
      S => \Using_Ready_FPGA.Rdy_Or1/carry_or_i1/S\,
      S_0 => \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S\,
      lopt => lopt_3,
      lopt_1 => lopt_4,
      lopt_2 => lopt_5,
      lopt_3 => lopt_6,
      lopt_4 => lopt_7,
      lopt_5 => lopt_8,
      m3_databus_ready => m3_databus_ready,
      \trace_new_reg_value_i_reg[0]\(15) => wb_daxi_valid_read_data(0),
      \trace_new_reg_value_i_reg[0]\(14) => wb_daxi_valid_read_data(1),
      \trace_new_reg_value_i_reg[0]\(13) => wb_daxi_valid_read_data(2),
      \trace_new_reg_value_i_reg[0]\(12) => wb_daxi_valid_read_data(3),
      \trace_new_reg_value_i_reg[0]\(11) => wb_daxi_valid_read_data(4),
      \trace_new_reg_value_i_reg[0]\(10) => wb_daxi_valid_read_data(5),
      \trace_new_reg_value_i_reg[0]\(9) => wb_daxi_valid_read_data(6),
      \trace_new_reg_value_i_reg[0]\(8) => wb_daxi_valid_read_data(7),
      \trace_new_reg_value_i_reg[0]\(7) => wb_daxi_valid_read_data(8),
      \trace_new_reg_value_i_reg[0]\(6) => wb_daxi_valid_read_data(9),
      \trace_new_reg_value_i_reg[0]\(5) => wb_daxi_valid_read_data(10),
      \trace_new_reg_value_i_reg[0]\(4) => wb_daxi_valid_read_data(11),
      \trace_new_reg_value_i_reg[0]\(3) => wb_daxi_valid_read_data(12),
      \trace_new_reg_value_i_reg[0]\(2) => wb_daxi_valid_read_data(13),
      \trace_new_reg_value_i_reg[0]\(1) => wb_daxi_valid_read_data(14),
      \trace_new_reg_value_i_reg[0]\(0) => wb_daxi_valid_read_data(15),
      wb_databus_read_data(15) => wb_databus_read_data(0),
      wb_databus_read_data(14) => wb_databus_read_data(1),
      wb_databus_read_data(13) => wb_databus_read_data(2),
      wb_databus_read_data(12) => wb_databus_read_data(3),
      wb_databus_read_data(11) => wb_databus_read_data(4),
      wb_databus_read_data(10) => wb_databus_read_data(5),
      wb_databus_read_data(9) => wb_databus_read_data(6),
      wb_databus_read_data(8) => wb_databus_read_data(7),
      wb_databus_read_data(7) => wb_databus_read_data(8),
      wb_databus_read_data(6) => wb_databus_read_data(9),
      wb_databus_read_data(5) => wb_databus_read_data(10),
      wb_databus_read_data(4) => wb_databus_read_data(11),
      wb_databus_read_data(3) => wb_databus_read_data(12),
      wb_databus_read_data(2) => wb_databus_read_data(13),
      wb_databus_read_data(1) => wb_databus_read_data(14),
      wb_databus_read_data(0) => wb_databus_read_data(15)
    );
ILMB_Interface_I1: entity work.microblaze_microblaze_0_0_ILMB_Interface_ff
     port map (
      Clk => Clk,
      IReady => IReady,
      IWAIT => IWAIT,
      Instr(0 to 31) => Instr(0 to 31),
      LOCKSTEP_Master_Out(31 downto 0) => \^lockstep_master_out\(31 downto 0),
      S => \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S_0\,
      \Use_ILMB.if2_ilmb_issued_reg_0\ => ILMB_Interface_I1_n_37,
      \Use_ILMB.if2_ilmb_issued_reg_1\ => DECODE_I1_n_237,
      \Use_ILMB.if3_allow_iready_reg_0\ => DECODE_I1_n_234,
      \Use_ILMB.if3_iready_hold_reg_0\ => ILMB_Interface_I1_n_38,
      \Use_ILMB.if3_iready_hold_reg_1\ => DECODE_I1_n_162,
      \Use_ILMB.if3_potential_bubble_reg_0\ => DECODE_I1_n_166,
      \cur_data_i_reg[31]\ => \^serial_dbg_intf.if_debug_ready_i_reg\,
      if2_ilmb_issued => if2_ilmb_issued,
      if2_piperun => if2_piperun,
      if3_allow_iready => if3_allow_iready,
      if3_ilmb_iready => if3_ilmb_iready,
      if3_piperun => if3_piperun,
      if3_potential_bubble => if3_potential_bubble,
      if4_data(0 to 31) => if4_data(0 to 31),
      if4_piperun => if4_piperun,
      \in\(0) => \PREFETCH_BUFFER_I1/if_predecode\(0),
      sync_reset => sync_reset
    );
ISide_Logic_I1: entity work.microblaze_microblaze_0_0_ISide_Logic_ff
     port map (
      S => \Using_Ready_FPGA.Rdy_Or2/carry_or_i1/S_0\,
      S_0 => \Using_Ready_FPGA.Rdy_Or3/carry_or_i1/S\,
      \Using_FPGA.Native\ => DECODE_I1_n_157,
      if4_ready => if4_ready
    );
M0_Sel_Mul_Res_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => DECODE_I1_n_123,
      O => p_2_in
    );
M1_Sel_Mul_Res_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => DECODE_I1_n_124,
      O => M1_Sel_Mul_Res_i_1_n_0
    );
MMU_I1: entity work.microblaze_microblaze_0_0_MMU_ff
     port map (
      Clk => Clk,
      D(29) => ex_databus_addr(0),
      D(28) => ex_databus_addr(1),
      D(27) => ex_databus_addr(2),
      D(26) => ex_databus_addr(3),
      D(25) => ex_databus_addr(4),
      D(24) => ex_databus_addr(5),
      D(23) => ex_databus_addr(6),
      D(22) => ex_databus_addr(7),
      D(21) => ex_databus_addr(8),
      D(20) => ex_databus_addr(9),
      D(19) => ex_databus_addr(10),
      D(18) => ex_databus_addr(11),
      D(17) => ex_databus_addr(12),
      D(16) => ex_databus_addr(13),
      D(15) => ex_databus_addr(14),
      D(14) => ex_databus_addr(15),
      D(13) => ex_databus_addr(16),
      D(12) => ex_databus_addr(17),
      D(11) => ex_databus_addr(18),
      D(10) => ex_databus_addr(19),
      D(9) => ex_databus_addr(20),
      D(8) => ex_databus_addr(21),
      D(7) => ex_databus_addr(22),
      D(6) => ex_databus_addr(23),
      D(5) => ex_databus_addr(24),
      D(4) => ex_databus_addr(25),
      D(3) => ex_databus_addr(26),
      D(2) => ex_databus_addr(27),
      D(1) => ex_databus_addr(28),
      D(0) => ex_databus_addr(29),
      E(0) => m0_piperun,
      Q(31) => wb_databus_addr_mmu(0),
      Q(30) => wb_databus_addr_mmu(1),
      Q(29) => wb_databus_addr_mmu(2),
      Q(28) => wb_databus_addr_mmu(3),
      Q(27) => wb_databus_addr_mmu(4),
      Q(26) => wb_databus_addr_mmu(5),
      Q(25) => wb_databus_addr_mmu(6),
      Q(24) => wb_databus_addr_mmu(7),
      Q(23) => wb_databus_addr_mmu(8),
      Q(22) => wb_databus_addr_mmu(9),
      Q(21) => wb_databus_addr_mmu(10),
      Q(20) => wb_databus_addr_mmu(11),
      Q(19) => wb_databus_addr_mmu(12),
      Q(18) => wb_databus_addr_mmu(13),
      Q(17) => wb_databus_addr_mmu(14),
      Q(16) => wb_databus_addr_mmu(15),
      Q(15) => wb_databus_addr_mmu(16),
      Q(14) => wb_databus_addr_mmu(17),
      Q(13) => wb_databus_addr_mmu(18),
      Q(12) => wb_databus_addr_mmu(19),
      Q(11) => wb_databus_addr_mmu(20),
      Q(10) => wb_databus_addr_mmu(21),
      Q(9) => wb_databus_addr_mmu(22),
      Q(8) => wb_databus_addr_mmu(23),
      Q(7) => wb_databus_addr_mmu(24),
      Q(6) => wb_databus_addr_mmu(25),
      Q(5) => wb_databus_addr_mmu(26),
      Q(4) => wb_databus_addr_mmu(27),
      Q(3) => wb_databus_addr_mmu(28),
      Q(2) => wb_databus_addr_mmu(29),
      Q(1) => wb_databus_addr_mmu(30),
      Q(0) => wb_databus_addr_mmu(31),
      if2_piperun => if2_piperun,
      \if3_addr_i_reg[0]_0\(63 downto 32) => \^d\(363 downto 332),
      \if3_addr_i_reg[0]_0\(31 downto 0) => \^d\(260 downto 229),
      if3_piperun => if3_piperun,
      \if4_addr_i_reg[0]_0\(31) => if4_addr_mmu(0),
      \if4_addr_i_reg[0]_0\(30) => if4_addr_mmu(1),
      \if4_addr_i_reg[0]_0\(29) => if4_addr_mmu(2),
      \if4_addr_i_reg[0]_0\(28) => if4_addr_mmu(3),
      \if4_addr_i_reg[0]_0\(27) => if4_addr_mmu(4),
      \if4_addr_i_reg[0]_0\(26) => if4_addr_mmu(5),
      \if4_addr_i_reg[0]_0\(25) => if4_addr_mmu(6),
      \if4_addr_i_reg[0]_0\(24) => if4_addr_mmu(7),
      \if4_addr_i_reg[0]_0\(23) => if4_addr_mmu(8),
      \if4_addr_i_reg[0]_0\(22) => if4_addr_mmu(9),
      \if4_addr_i_reg[0]_0\(21) => if4_addr_mmu(10),
      \if4_addr_i_reg[0]_0\(20) => if4_addr_mmu(11),
      \if4_addr_i_reg[0]_0\(19) => if4_addr_mmu(12),
      \if4_addr_i_reg[0]_0\(18) => if4_addr_mmu(13),
      \if4_addr_i_reg[0]_0\(17) => if4_addr_mmu(14),
      \if4_addr_i_reg[0]_0\(16) => if4_addr_mmu(15),
      \if4_addr_i_reg[0]_0\(15) => if4_addr_mmu(16),
      \if4_addr_i_reg[0]_0\(14) => if4_addr_mmu(17),
      \if4_addr_i_reg[0]_0\(13) => if4_addr_mmu(18),
      \if4_addr_i_reg[0]_0\(12) => if4_addr_mmu(19),
      \if4_addr_i_reg[0]_0\(11) => if4_addr_mmu(20),
      \if4_addr_i_reg[0]_0\(10) => if4_addr_mmu(21),
      \if4_addr_i_reg[0]_0\(9) => if4_addr_mmu(22),
      \if4_addr_i_reg[0]_0\(8) => if4_addr_mmu(23),
      \if4_addr_i_reg[0]_0\(7) => if4_addr_mmu(24),
      \if4_addr_i_reg[0]_0\(6) => if4_addr_mmu(25),
      \if4_addr_i_reg[0]_0\(5) => if4_addr_mmu(26),
      \if4_addr_i_reg[0]_0\(4) => if4_addr_mmu(27),
      \if4_addr_i_reg[0]_0\(3) => if4_addr_mmu(28),
      \if4_addr_i_reg[0]_0\(2) => if4_addr_mmu(29),
      \if4_addr_i_reg[0]_0\(1) => if4_addr_mmu(30),
      \if4_addr_i_reg[0]_0\(0) => if4_addr_mmu(31),
      \m0_databus_addr_i_reg[0]_0\ => DECODE_I1_n_30,
      \m1_databus_addr_i_reg[0]_0\(29 downto 0) => \^d\(331 downto 302),
      m2_piperun => m2_piperun,
      m3_piperun => m3_piperun,
      sync_reset => sync_reset
    );
\Use_Debug_Logic.Master_Core.Debug_Perf\: entity work.microblaze_microblaze_0_0_Debug
     port map (
      Address(0 to 31) => of_pc(0 to 31),
      Clk => Clk,
      Config_Reg_En => Config_Reg_En,
      Config_Reset => Config_Reset,
      D(0) => \^d\(366),
      Data_Read_Reg_En => Data_Read_Reg_En,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_2_sp_1 => Dbg_Reg_En_2_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      LOCKSTEP_Master_Out(36) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(35) => \^lockstep_master_out\(36),
      LOCKSTEP_Master_Out(34 downto 0) => \^lockstep_master_out\(34 downto 0),
      Pause => Pause,
      \Performance_Debug_Control.dbg_freeze_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_44\,
      \Performance_Debug_Control.dbg_state_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_43\,
      \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_38\,
      \Performance_Debug_Control.ex_brki_hit_reg_0\ => DECODE_I1_n_152,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_54\,
      \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_1\ => DECODE_I1_n_171,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_50\,
      \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1\ => DECODE_I1_n_169,
      \Performance_Debug_Control.m0_dbg_hit_reg[0]_0\ => DECODE_I1_n_30,
      Q(0) => \Use_Debug_Logic.Master_Core.Debug_Perf_n_57\,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      S => \Using_Ready_FPGA.Rdy_Or3/carry_or_i1/S\,
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Serial_Dbg_Intf.if_debug_ready_i_reg_0\ => \^serial_dbg_intf.if_debug_ready_i_reg\,
      \Serial_Dbg_Intf.if_debug_ready_i_reg_1\ => \Use_Debug_Logic.Master_Core.Debug_Perf_n_56\,
      Sleep => \^sleep\,
      Sleep_Decode => Sleep_Decode,
      Sleep_Out => Sleep_Out,
      Status_Reg_En => Status_Reg_En,
      \data_rd_reg_reg[0]_0\(31) => DATA_FLOW_I1_n_145,
      \data_rd_reg_reg[0]_0\(30) => DATA_FLOW_I1_n_146,
      \data_rd_reg_reg[0]_0\(29) => DATA_FLOW_I1_n_147,
      \data_rd_reg_reg[0]_0\(28) => DATA_FLOW_I1_n_148,
      \data_rd_reg_reg[0]_0\(27) => DATA_FLOW_I1_n_149,
      \data_rd_reg_reg[0]_0\(26) => DATA_FLOW_I1_n_150,
      \data_rd_reg_reg[0]_0\(25) => DATA_FLOW_I1_n_151,
      \data_rd_reg_reg[0]_0\(24) => DATA_FLOW_I1_n_152,
      \data_rd_reg_reg[0]_0\(23) => DATA_FLOW_I1_n_153,
      \data_rd_reg_reg[0]_0\(22) => DATA_FLOW_I1_n_154,
      \data_rd_reg_reg[0]_0\(21) => DATA_FLOW_I1_n_155,
      \data_rd_reg_reg[0]_0\(20) => DATA_FLOW_I1_n_156,
      \data_rd_reg_reg[0]_0\(19) => DATA_FLOW_I1_n_157,
      \data_rd_reg_reg[0]_0\(18) => DATA_FLOW_I1_n_158,
      \data_rd_reg_reg[0]_0\(17) => DATA_FLOW_I1_n_159,
      \data_rd_reg_reg[0]_0\(16) => DATA_FLOW_I1_n_160,
      \data_rd_reg_reg[0]_0\(15) => DATA_FLOW_I1_n_161,
      \data_rd_reg_reg[0]_0\(14) => DATA_FLOW_I1_n_162,
      \data_rd_reg_reg[0]_0\(13) => DATA_FLOW_I1_n_163,
      \data_rd_reg_reg[0]_0\(12) => DATA_FLOW_I1_n_164,
      \data_rd_reg_reg[0]_0\(11) => DATA_FLOW_I1_n_165,
      \data_rd_reg_reg[0]_0\(10) => DATA_FLOW_I1_n_166,
      \data_rd_reg_reg[0]_0\(9) => DATA_FLOW_I1_n_167,
      \data_rd_reg_reg[0]_0\(8) => DATA_FLOW_I1_n_168,
      \data_rd_reg_reg[0]_0\(7) => DATA_FLOW_I1_n_169,
      \data_rd_reg_reg[0]_0\(6) => DATA_FLOW_I1_n_170,
      \data_rd_reg_reg[0]_0\(5) => DATA_FLOW_I1_n_171,
      \data_rd_reg_reg[0]_0\(4) => DATA_FLOW_I1_n_172,
      \data_rd_reg_reg[0]_0\(3) => DATA_FLOW_I1_n_173,
      \data_rd_reg_reg[0]_0\(2) => DATA_FLOW_I1_n_174,
      \data_rd_reg_reg[0]_0\(1) => DATA_FLOW_I1_n_175,
      \data_rd_reg_reg[0]_0\(0) => DATA_FLOW_I1_n_176,
      dbg_halt_reset_mode_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_42\,
      ex_Interrupt => ex_Interrupt,
      ex_dbg_pc_hit_i => ex_dbg_pc_hit_i,
      exception_reg_0(1) => \^d\(155),
      exception_reg_0(0) => \^d\(80),
      if0_pause => if0_pause,
      m0_piperun => m0_piperun,
      m1_piperun => m1_piperun,
      m2_piperun => m2_piperun,
      m3_piperun => m3_piperun,
      normal_stop_i => normal_stop_i,
      of_piperun => of_piperun,
      \p_4_out__0\ => \p_4_out__0\,
      read_register_MSR_1 => read_register_MSR_1,
      single_Step_N => single_Step_N,
      single_Step_N_reg_0 => \Use_Debug_Logic.Master_Core.Debug_Perf_n_53\,
      sync_reset => sync_reset,
      wakeup_i(0 to 1) => wakeup_i(0 to 1),
      wb_delay_slot => wb_delay_slot,
      wb_gpr_wr_dbg => wb_gpr_wr_dbg,
      wb_halted => wb_halted,
      wb_pc_valid => wb_pc_valid,
      wb_read_imm_reg => wb_read_imm_reg,
      wb_read_imm_reg_1 => wb_read_imm_reg_1
    );
\Using_Fast_Interrupt.wb_ie_rising_i_1\: unisim.vcomponents.LUT2
    generic map(
      INIT => X"2"
    )
        port map (
      I0 => m3_msr(30),
      I1 => wb_msr(30),
      O => p_55_out
    );
bp1_raw_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000222E2222"
    )
        port map (
      I0 => DECODE_I1_n_36,
      I1 => DECODE_I1_n_38,
      I2 => kill_fetch_mmu,
      I3 => bp0_dead_fetch_hold,
      I4 => DECODE_I1_n_54,
      I5 => bp1_dead_fetch_hold_bt,
      O => bp1_raw_valid_i_1_n_0
    );
ex_hibernate_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => \^hibernate\,
      I1 => ex_sleep_i0,
      I2 => p_1_in106_in,
      I3 => active_wakeup,
      I4 => sync_reset,
      O => ex_hibernate_i_i_1_n_0
    );
ex_is_div_instr_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => DECODE_I1_n_149,
      I1 => of_is_div_instr,
      I2 => DECODE_I1_n_30,
      I3 => of_piperun,
      I4 => sync_reset,
      O => ex_is_div_instr_i_i_1_n_0
    );
ex_mbar_decode_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000303000AA"
    )
        port map (
      I0 => ex_mbar_decode,
      I1 => DECODE_I1_n_172,
      I2 => of_gpr_op1_rd_addr(3),
      I3 => DECODE_I1_n_30,
      I4 => of_piperun,
      I5 => sync_reset,
      O => ex_mbar_decode_i_1_n_0
    );
ex_sleep_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000002E"
    )
        port map (
      I0 => Sleep_Decode,
      I1 => ex_sleep_i0,
      I2 => p_0_in105_in,
      I3 => active_wakeup,
      I4 => sync_reset,
      O => ex_sleep_i_i_1_n_0
    );
ex_suspend_i_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"000000000000E222"
    )
        port map (
      I0 => \^suspend\,
      I1 => ex_sleep_i0,
      I2 => p_0_in105_in,
      I3 => p_1_in106_in,
      I4 => active_wakeup,
      I5 => sync_reset,
      O => ex_suspend_i_i_1_n_0
    );
if0_raw_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"100010FF10001000"
    )
        port map (
      I0 => kill_fetch_mmu,
      I1 => DECODE_I1_n_316,
      I2 => DECODE_I1_n_36,
      I3 => DECODE_I1_n_37,
      I4 => DECODE_I1_n_39,
      I5 => if0_raw_valid,
      O => if0_raw_valid_i_1_n_0
    );
if2_ibus_access_raw_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => \^d\(365),
      I1 => if2_ibus_access_raw0,
      I2 => if2_piperun,
      I3 => if1_insert_piperun_i,
      I4 => sync_reset,
      O => if2_ibus_access_raw_i_1_n_0
    );
if2_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1/carry_or_i1/S\,
      I1 => if2_ibus_access_raw0,
      I2 => if2_piperun,
      I3 => if1_insert_piperun_i,
      I4 => sync_reset,
      O => if2_raw_valid_i_1_n_0
    );
if3_raw_valid_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"00000000FCFC00AA"
    )
        port map (
      I0 => DECODE_I1_n_43,
      I1 => \Using_IF1_Insert_FPGA_No_MMU.PR_IF1_Ins_Or1/carry_or_i1/S\,
      I2 => if0_raw_valid,
      I3 => if3_piperun,
      I4 => if2_piperun,
      I5 => sync_reset,
      O => if3_raw_valid_i_1_n_0
    );
if4_raw_valid_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"0000CC0A"
    )
        port map (
      I0 => DECODE_I1_n_45,
      I1 => DECODE_I1_n_43,
      I2 => if4_piperun,
      I3 => if3_piperun,
      I4 => sync_reset,
      O => if4_raw_valid_i_1_n_0
    );
\interrupt_address_d1_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(0),
      Q => interrupt_address_d1(0),
      R => '0'
    );
\interrupt_address_d1_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(10),
      Q => interrupt_address_d1(10),
      R => '0'
    );
\interrupt_address_d1_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(11),
      Q => interrupt_address_d1(11),
      R => '0'
    );
\interrupt_address_d1_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(12),
      Q => interrupt_address_d1(12),
      R => '0'
    );
\interrupt_address_d1_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(13),
      Q => interrupt_address_d1(13),
      R => '0'
    );
\interrupt_address_d1_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(14),
      Q => interrupt_address_d1(14),
      R => '0'
    );
\interrupt_address_d1_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(15),
      Q => interrupt_address_d1(15),
      R => '0'
    );
\interrupt_address_d1_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(16),
      Q => interrupt_address_d1(16),
      R => '0'
    );
\interrupt_address_d1_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(17),
      Q => interrupt_address_d1(17),
      R => '0'
    );
\interrupt_address_d1_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(18),
      Q => interrupt_address_d1(18),
      R => '0'
    );
\interrupt_address_d1_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(19),
      Q => interrupt_address_d1(19),
      R => '0'
    );
\interrupt_address_d1_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(1),
      Q => interrupt_address_d1(1),
      R => '0'
    );
\interrupt_address_d1_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(20),
      Q => interrupt_address_d1(20),
      R => '0'
    );
\interrupt_address_d1_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(21),
      Q => interrupt_address_d1(21),
      R => '0'
    );
\interrupt_address_d1_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(22),
      Q => interrupt_address_d1(22),
      R => '0'
    );
\interrupt_address_d1_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(23),
      Q => interrupt_address_d1(23),
      R => '0'
    );
\interrupt_address_d1_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(24),
      Q => interrupt_address_d1(24),
      R => '0'
    );
\interrupt_address_d1_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(25),
      Q => interrupt_address_d1(25),
      R => '0'
    );
\interrupt_address_d1_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(26),
      Q => interrupt_address_d1(26),
      R => '0'
    );
\interrupt_address_d1_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(27),
      Q => interrupt_address_d1(27),
      R => '0'
    );
\interrupt_address_d1_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(28),
      Q => interrupt_address_d1(28),
      R => '0'
    );
\interrupt_address_d1_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(29),
      Q => interrupt_address_d1(29),
      R => '0'
    );
\interrupt_address_d1_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(2),
      Q => interrupt_address_d1(2),
      R => '0'
    );
\interrupt_address_d1_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(30),
      Q => interrupt_address_d1(30),
      R => '0'
    );
\interrupt_address_d1_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(31),
      Q => interrupt_address_d1(31),
      R => '0'
    );
\interrupt_address_d1_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(3),
      Q => interrupt_address_d1(3),
      R => '0'
    );
\interrupt_address_d1_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(4),
      Q => interrupt_address_d1(4),
      R => '0'
    );
\interrupt_address_d1_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(5),
      Q => interrupt_address_d1(5),
      R => '0'
    );
\interrupt_address_d1_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(6),
      Q => interrupt_address_d1(6),
      R => '0'
    );
\interrupt_address_d1_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(7),
      Q => interrupt_address_d1(7),
      R => '0'
    );
\interrupt_address_d1_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(8),
      Q => interrupt_address_d1(8),
      R => '0'
    );
\interrupt_address_d1_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => Interrupt,
      D => Interrupt_Address(9),
      Q => interrupt_address_d1(9),
      R => '0'
    );
m0_ex_sel_res_i_1: unisim.vcomponents.LUT1
    generic map(
      INIT => X"1"
    )
        port map (
      I0 => ex_sel_barrel_res,
      O => m0_ex_sel_res_i_1_n_0
    );
m3_div_stall_i_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"44444000"
    )
        port map (
      I0 => DECODE_I1_n_150,
      I1 => DATA_FLOW_I1_n_137,
      I2 => m2_is_div_instr,
      I3 => m2_piperun,
      I4 => m3_div_stall,
      O => m3_div_stall_i_i_1_n_0
    );
m3_is_div_instr_i_i_1: unisim.vcomponents.LUT4
    generic map(
      INIT => X"A3A0"
    )
        port map (
      I0 => m2_is_div_instr,
      I1 => m3_piperun,
      I2 => m2_piperun,
      I3 => m3_sel_div_res,
      O => m3_is_div_instr_i_i_1_n_0
    );
make_result_neg_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF06FF00000600"
    )
        port map (
      I0 => DATA_FLOW_I1_n_20,
      I1 => ex_op2(0),
      I2 => ex_div_unsigned,
      I3 => ex_start_div,
      I4 => DECODE_I1_n_150,
      I5 => \Using_Div_Unit.Div_Unit_I1/make_result_neg\,
      O => make_result_neg_i_1_n_0
    );
negative_operands_i_1: unisim.vcomponents.LUT6
    generic map(
      INIT => X"FFFF08FF00000800"
    )
        port map (
      I0 => DATA_FLOW_I1_n_20,
      I1 => ex_op2(0),
      I2 => ex_div_unsigned,
      I3 => ex_start_div,
      I4 => DECODE_I1_n_150,
      I5 => \Using_Div_Unit.Div_Unit_I1/negative_operands\,
      O => negative_operands_i_1_n_0
    );
next_sub_i_1: unisim.vcomponents.LUT5
    generic map(
      INIT => X"FFFFFF2E"
    )
        port map (
      I0 => \Using_Div_Unit.Div_Unit_I1/next_sub\,
      I1 => \Using_Div_Unit.Div_Unit_I1/div_busy\,
      I2 => \Using_Div_Unit.Div_Unit_I1/Res_Neg\,
      I3 => sync_reset,
      I4 => ex_start_div,
      O => next_sub_i_1_n_0
    );
trace_data_access_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_access,
      Q => \^d\(6),
      R => '0'
    );
\trace_data_address_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(0),
      Q => \^d\(74),
      R => '0'
    );
\trace_data_address_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(10),
      Q => \^d\(64),
      R => '0'
    );
\trace_data_address_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(11),
      Q => \^d\(63),
      R => '0'
    );
\trace_data_address_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(12),
      Q => \^d\(62),
      R => '0'
    );
\trace_data_address_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(13),
      Q => \^d\(61),
      R => '0'
    );
\trace_data_address_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(14),
      Q => \^d\(60),
      R => '0'
    );
\trace_data_address_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(15),
      Q => \^d\(59),
      R => '0'
    );
\trace_data_address_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(16),
      Q => \^d\(58),
      R => '0'
    );
\trace_data_address_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(17),
      Q => \^d\(57),
      R => '0'
    );
\trace_data_address_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(18),
      Q => \^d\(56),
      R => '0'
    );
\trace_data_address_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(19),
      Q => \^d\(55),
      R => '0'
    );
\trace_data_address_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(1),
      Q => \^d\(73),
      R => '0'
    );
\trace_data_address_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(20),
      Q => \^d\(54),
      R => '0'
    );
\trace_data_address_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(21),
      Q => \^d\(53),
      R => '0'
    );
\trace_data_address_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(22),
      Q => \^d\(52),
      R => '0'
    );
\trace_data_address_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(23),
      Q => \^d\(51),
      R => '0'
    );
\trace_data_address_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(24),
      Q => \^d\(50),
      R => '0'
    );
\trace_data_address_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(25),
      Q => \^d\(49),
      R => '0'
    );
\trace_data_address_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(26),
      Q => \^d\(48),
      R => '0'
    );
\trace_data_address_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(27),
      Q => \^d\(47),
      R => '0'
    );
\trace_data_address_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(28),
      Q => \^d\(46),
      R => '0'
    );
\trace_data_address_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(29),
      Q => \^d\(45),
      R => '0'
    );
\trace_data_address_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(2),
      Q => \^d\(72),
      R => '0'
    );
\trace_data_address_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(30),
      Q => \^d\(44),
      R => '0'
    );
\trace_data_address_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(31),
      Q => \^d\(43),
      R => '0'
    );
\trace_data_address_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(3),
      Q => \^d\(71),
      R => '0'
    );
\trace_data_address_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(4),
      Q => \^d\(70),
      R => '0'
    );
\trace_data_address_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(5),
      Q => \^d\(69),
      R => '0'
    );
\trace_data_address_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(6),
      Q => \^d\(68),
      R => '0'
    );
\trace_data_address_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(7),
      Q => \^d\(67),
      R => '0'
    );
\trace_data_address_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(8),
      Q => \^d\(66),
      R => '0'
    );
\trace_data_address_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_addr_mmu(9),
      Q => \^d\(65),
      R => '0'
    );
\trace_data_byte_enable_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_byte_enable(0),
      Q => \^d\(10),
      R => '0'
    );
\trace_data_byte_enable_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_byte_enable(1),
      Q => \^d\(9),
      R => '0'
    );
\trace_data_byte_enable_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_byte_enable(2),
      Q => \^d\(8),
      R => '0'
    );
\trace_data_byte_enable_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_byte_enable(3),
      Q => \^d\(7),
      R => '0'
    );
trace_data_read_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_read,
      Q => \^d\(5),
      R => '0'
    );
trace_data_write_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write,
      Q => \^d\(4),
      R => '0'
    );
\trace_data_write_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(0),
      Q => \^d\(42),
      R => '0'
    );
\trace_data_write_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(10),
      Q => \^d\(32),
      R => '0'
    );
\trace_data_write_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(11),
      Q => \^d\(31),
      R => '0'
    );
\trace_data_write_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(12),
      Q => \^d\(30),
      R => '0'
    );
\trace_data_write_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(13),
      Q => \^d\(29),
      R => '0'
    );
\trace_data_write_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(14),
      Q => \^d\(28),
      R => '0'
    );
\trace_data_write_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(15),
      Q => \^d\(27),
      R => '0'
    );
\trace_data_write_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(16),
      Q => \^d\(26),
      R => '0'
    );
\trace_data_write_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(17),
      Q => \^d\(25),
      R => '0'
    );
\trace_data_write_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(18),
      Q => \^d\(24),
      R => '0'
    );
\trace_data_write_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(19),
      Q => \^d\(23),
      R => '0'
    );
\trace_data_write_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(1),
      Q => \^d\(41),
      R => '0'
    );
\trace_data_write_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(20),
      Q => \^d\(22),
      R => '0'
    );
\trace_data_write_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(21),
      Q => \^d\(21),
      R => '0'
    );
\trace_data_write_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(22),
      Q => \^d\(20),
      R => '0'
    );
\trace_data_write_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(23),
      Q => \^d\(19),
      R => '0'
    );
\trace_data_write_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(24),
      Q => \^d\(18),
      R => '0'
    );
\trace_data_write_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(25),
      Q => \^d\(17),
      R => '0'
    );
\trace_data_write_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(26),
      Q => \^d\(16),
      R => '0'
    );
\trace_data_write_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(27),
      Q => \^d\(15),
      R => '0'
    );
\trace_data_write_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(28),
      Q => \^d\(14),
      R => '0'
    );
\trace_data_write_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(29),
      Q => \^d\(13),
      R => '0'
    );
\trace_data_write_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(2),
      Q => \^d\(40),
      R => '0'
    );
\trace_data_write_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(30),
      Q => \^d\(12),
      R => '0'
    );
\trace_data_write_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(31),
      Q => \^d\(11),
      R => '0'
    );
\trace_data_write_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(3),
      Q => \^d\(39),
      R => '0'
    );
\trace_data_write_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(4),
      Q => \^d\(38),
      R => '0'
    );
\trace_data_write_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(5),
      Q => \^d\(37),
      R => '0'
    );
\trace_data_write_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(6),
      Q => \^d\(36),
      R => '0'
    );
\trace_data_write_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(7),
      Q => \^d\(35),
      R => '0'
    );
\trace_data_write_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(8),
      Q => \^d\(34),
      R => '0'
    );
\trace_data_write_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_databus_write_data(9),
      Q => \^d\(33),
      R => '0'
    );
trace_delay_slot_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_delay_slot,
      Q => \^d\(75),
      R => '0'
    );
trace_ex_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => DECODE_I1_n_30,
      Q => \^d\(2),
      R => '0'
    );
\trace_exception_kind_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_exception_kind(28),
      Q => \^d\(79),
      R => '0'
    );
\trace_exception_kind_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_exception_kind(30),
      Q => \^d\(78),
      R => '0'
    );
\trace_exception_kind_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_exception_kind(31),
      Q => \^d\(77),
      R => '0'
    );
trace_exception_taken_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_exception_taken,
      Q => \^d\(80),
      R => '0'
    );
\trace_instruction_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(0),
      Q => \^d\(187),
      R => '0'
    );
\trace_instruction_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(10),
      Q => \^d\(177),
      R => '0'
    );
\trace_instruction_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(11),
      Q => \^d\(176),
      R => '0'
    );
\trace_instruction_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(12),
      Q => \^d\(175),
      R => '0'
    );
\trace_instruction_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(13),
      Q => \^d\(174),
      R => '0'
    );
\trace_instruction_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(14),
      Q => \^d\(173),
      R => '0'
    );
\trace_instruction_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(15),
      Q => \^d\(172),
      R => '0'
    );
\trace_instruction_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(16),
      Q => \^d\(171),
      R => '0'
    );
\trace_instruction_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(17),
      Q => \^d\(170),
      R => '0'
    );
\trace_instruction_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(18),
      Q => \^d\(169),
      R => '0'
    );
\trace_instruction_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(19),
      Q => \^d\(168),
      R => '0'
    );
\trace_instruction_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(1),
      Q => \^d\(186),
      R => '0'
    );
\trace_instruction_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(20),
      Q => \^d\(167),
      R => '0'
    );
\trace_instruction_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(21),
      Q => \^d\(166),
      R => '0'
    );
\trace_instruction_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(22),
      Q => \^d\(165),
      R => '0'
    );
\trace_instruction_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(23),
      Q => \^d\(164),
      R => '0'
    );
\trace_instruction_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(24),
      Q => \^d\(163),
      R => '0'
    );
\trace_instruction_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(25),
      Q => \^d\(162),
      R => '0'
    );
\trace_instruction_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(26),
      Q => \^d\(161),
      R => '0'
    );
\trace_instruction_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(27),
      Q => \^d\(160),
      R => '0'
    );
\trace_instruction_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(28),
      Q => \^d\(159),
      R => '0'
    );
\trace_instruction_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(29),
      Q => \^d\(158),
      R => '0'
    );
\trace_instruction_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(2),
      Q => \^d\(185),
      R => '0'
    );
\trace_instruction_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(30),
      Q => \^d\(157),
      R => '0'
    );
\trace_instruction_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(31),
      Q => \^d\(156),
      R => '0'
    );
\trace_instruction_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(3),
      Q => \^d\(184),
      R => '0'
    );
\trace_instruction_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(4),
      Q => \^d\(183),
      R => '0'
    );
\trace_instruction_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(5),
      Q => \^d\(182),
      R => '0'
    );
\trace_instruction_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(6),
      Q => \^d\(181),
      R => '0'
    );
\trace_instruction_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(7),
      Q => \^d\(180),
      R => '0'
    );
\trace_instruction_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(8),
      Q => \^d\(179),
      R => '0'
    );
\trace_instruction_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_instr(9),
      Q => \^d\(178),
      R => '0'
    );
trace_jump_taken_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_jump_taken,
      Q => \^d\(76),
      R => '0'
    );
trace_mb_halted_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d\(366),
      Q => \^d\(0),
      R => '0'
    );
trace_mem_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => m3_piperun,
      Q => \^d\(1),
      R => '0'
    );
\trace_msr_reg_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_msr(28),
      Q => \^d\(115),
      R => '0'
    );
\trace_msr_reg_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_msr(29),
      Q => \^d\(114),
      R => '0'
    );
\trace_msr_reg_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_msr(30),
      Q => \^d\(113),
      R => '0'
    );
\trace_msr_reg_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_msr(25),
      Q => \^d\(116),
      R => '0'
    );
\trace_new_reg_value_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(0),
      Q => \^d\(112),
      R => '0'
    );
\trace_new_reg_value_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(10),
      Q => \^d\(102),
      R => '0'
    );
\trace_new_reg_value_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(11),
      Q => \^d\(101),
      R => '0'
    );
\trace_new_reg_value_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(12),
      Q => \^d\(100),
      R => '0'
    );
\trace_new_reg_value_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(13),
      Q => \^d\(99),
      R => '0'
    );
\trace_new_reg_value_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(14),
      Q => \^d\(98),
      R => '0'
    );
\trace_new_reg_value_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(15),
      Q => \^d\(97),
      R => '0'
    );
\trace_new_reg_value_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(16),
      Q => \^d\(96),
      R => '0'
    );
\trace_new_reg_value_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(17),
      Q => \^d\(95),
      R => '0'
    );
\trace_new_reg_value_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(18),
      Q => \^d\(94),
      R => '0'
    );
\trace_new_reg_value_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(19),
      Q => \^d\(93),
      R => '0'
    );
\trace_new_reg_value_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(1),
      Q => \^d\(111),
      R => '0'
    );
\trace_new_reg_value_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(20),
      Q => \^d\(92),
      R => '0'
    );
\trace_new_reg_value_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(21),
      Q => \^d\(91),
      R => '0'
    );
\trace_new_reg_value_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(22),
      Q => \^d\(90),
      R => '0'
    );
\trace_new_reg_value_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(23),
      Q => \^d\(89),
      R => '0'
    );
\trace_new_reg_value_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(24),
      Q => \^d\(88),
      R => '0'
    );
\trace_new_reg_value_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(25),
      Q => \^d\(87),
      R => '0'
    );
\trace_new_reg_value_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(26),
      Q => \^d\(86),
      R => '0'
    );
\trace_new_reg_value_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(27),
      Q => \^d\(85),
      R => '0'
    );
\trace_new_reg_value_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(28),
      Q => \^d\(84),
      R => '0'
    );
\trace_new_reg_value_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(29),
      Q => \^d\(83),
      R => '0'
    );
\trace_new_reg_value_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(2),
      Q => \^d\(110),
      R => '0'
    );
\trace_new_reg_value_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(30),
      Q => \^d\(82),
      R => '0'
    );
\trace_new_reg_value_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(31),
      Q => \^d\(81),
      R => '0'
    );
\trace_new_reg_value_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(3),
      Q => \^d\(109),
      R => '0'
    );
\trace_new_reg_value_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(4),
      Q => \^d\(108),
      R => '0'
    );
\trace_new_reg_value_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(5),
      Q => \^d\(107),
      R => '0'
    );
\trace_new_reg_value_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(6),
      Q => \^d\(106),
      R => '0'
    );
\trace_new_reg_value_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(7),
      Q => \^d\(105),
      R => '0'
    );
\trace_new_reg_value_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(8),
      Q => \^d\(104),
      R => '0'
    );
\trace_new_reg_value_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_fwd(9),
      Q => \^d\(103),
      R => '0'
    );
trace_of_piperun_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => of_piperun,
      Q => \^d\(3),
      R => '0'
    );
\trace_pc_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(0),
      Q => \^d\(154),
      R => '0'
    );
\trace_pc_i_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(10),
      Q => \^d\(144),
      R => '0'
    );
\trace_pc_i_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(11),
      Q => \^d\(143),
      R => '0'
    );
\trace_pc_i_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(12),
      Q => \^d\(142),
      R => '0'
    );
\trace_pc_i_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(13),
      Q => \^d\(141),
      R => '0'
    );
\trace_pc_i_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(14),
      Q => \^d\(140),
      R => '0'
    );
\trace_pc_i_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(15),
      Q => \^d\(139),
      R => '0'
    );
\trace_pc_i_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(16),
      Q => \^d\(138),
      R => '0'
    );
\trace_pc_i_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(17),
      Q => \^d\(137),
      R => '0'
    );
\trace_pc_i_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(18),
      Q => \^d\(136),
      R => '0'
    );
\trace_pc_i_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(19),
      Q => \^d\(135),
      R => '0'
    );
\trace_pc_i_reg[1]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(1),
      Q => \^d\(153),
      R => '0'
    );
\trace_pc_i_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(20),
      Q => \^d\(134),
      R => '0'
    );
\trace_pc_i_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(21),
      Q => \^d\(133),
      R => '0'
    );
\trace_pc_i_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(22),
      Q => \^d\(132),
      R => '0'
    );
\trace_pc_i_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(23),
      Q => \^d\(131),
      R => '0'
    );
\trace_pc_i_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(24),
      Q => \^d\(130),
      R => '0'
    );
\trace_pc_i_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(25),
      Q => \^d\(129),
      R => '0'
    );
\trace_pc_i_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(26),
      Q => \^d\(128),
      R => '0'
    );
\trace_pc_i_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(27),
      Q => \^d\(127),
      R => '0'
    );
\trace_pc_i_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(28),
      Q => \^d\(126),
      R => '0'
    );
\trace_pc_i_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(29),
      Q => \^d\(125),
      R => '0'
    );
\trace_pc_i_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(2),
      Q => \^d\(152),
      R => '0'
    );
\trace_pc_i_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(30),
      Q => \^d\(124),
      R => '0'
    );
\trace_pc_i_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(31),
      Q => \^d\(123),
      R => '0'
    );
\trace_pc_i_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(3),
      Q => \^d\(151),
      R => '0'
    );
\trace_pc_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(4),
      Q => \^d\(150),
      R => '0'
    );
\trace_pc_i_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(5),
      Q => \^d\(149),
      R => '0'
    );
\trace_pc_i_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(6),
      Q => \^d\(148),
      R => '0'
    );
\trace_pc_i_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(7),
      Q => \^d\(147),
      R => '0'
    );
\trace_pc_i_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(8),
      Q => \^d\(146),
      R => '0'
    );
\trace_pc_i_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_pc(9),
      Q => \^d\(145),
      R => '0'
    );
\trace_reg_addr_i_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_wr_addr(0),
      Q => \^d\(121),
      R => '0'
    );
\trace_reg_addr_i_reg[1]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => DECODE_I1_n_330,
      Q => \^d\(120),
      S => wb_msr_clear_ie
    );
\trace_reg_addr_i_reg[2]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => DECODE_I1_n_331,
      Q => \^d\(119),
      S => wb_msr_clear_ie
    );
\trace_reg_addr_i_reg[3]\: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => DECODE_I1_n_332,
      Q => \^d\(118),
      S => wb_msr_clear_ie
    );
\trace_reg_addr_i_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => wb_gpr_wr_addr(4),
      Q => \^d\(117),
      R => '0'
    );
trace_reg_write_i_reg: unisim.vcomponents.FDSE
     port map (
      C => Clk,
      CE => '1',
      D => DECODE_I1_n_333,
      Q => \^d\(122),
      S => wb_msr_clear_ie
    );
trace_valid_instr_i_reg: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => trace_wb_valid_instr,
      Q => \^d\(155),
      R => '0'
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MicroBlaze_Core is
  port (
    D : out STD_LOGIC_VECTOR ( 366 downto 0 );
    \Serial_Dbg_Intf.if_debug_ready_i_reg\ : out STD_LOGIC;
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 38 downto 0 );
    Sleep : out STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En_2_sp_1 : out STD_LOGIC;
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Pause_Ack : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Clk : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 1 downto 0 );
    Pause : in STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DReady : in STD_LOGIC;
    IReady : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Data_Read_Reg_En : in STD_LOGIC;
    Status_Reg_En : in STD_LOGIC;
    Config_Reg_En : in STD_LOGIC;
    Dbg_Shift : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 )
  );
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MicroBlaze_Core : entity is "MicroBlaze_Core";
end microblaze_microblaze_0_0_MicroBlaze_Core;

architecture STRUCTURE of microblaze_microblaze_0_0_MicroBlaze_Core is
  signal Dbg_Reg_En_2_sn_1 : STD_LOGIC;
  signal Synced : STD_LOGIC;
  signal \reset_temp__0\ : STD_LOGIC;
  signal sync_reset : STD_LOGIC;
  signal wakeup_i : STD_LOGIC_VECTOR ( 0 to 1 );
begin
  Dbg_Reg_En_2_sp_1 <= Dbg_Reg_En_2_sn_1;
\Frequency.Core\: entity work.microblaze_microblaze_0_0_MicroBlaze_FF
     port map (
      Clk => Clk,
      Config_Reg_En => Config_Reg_En,
      Config_Reset => Config_Reset,
      D(366 downto 0) => D(366 downto 0),
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Read_Reg_En => Data_Read_Reg_En,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_2_sp_1 => Dbg_Reg_En_2_sn_1,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1 downto 0) => Dbg_Trig_Ack_In(1 downto 0),
      Dbg_Trig_Ack_Out(1 downto 0) => Dbg_Trig_Ack_Out(1 downto 0),
      Dbg_Trig_In(1 downto 0) => Dbg_Trig_In(1 downto 0),
      Dbg_Trig_Out(1 downto 0) => Dbg_Trig_Out(1 downto 0),
      Dbg_Update => Dbg_Update,
      Hibernate => Hibernate,
      IReady => IReady,
      IWAIT => IWAIT,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(38 downto 0) => LOCKSTEP_Master_Out(38 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \Serial_Dbg_Intf.if_debug_ready_i_reg\,
      Sleep => Sleep,
      Status_Reg_En => Status_Reg_En,
      Suspend => Suspend,
      sync_reset => sync_reset,
      wakeup_i(0 to 1) => wakeup_i(0 to 1)
    );
Reset_DFF: entity work.microblaze_microblaze_0_0_mb_sync_bit
     port map (
      Clk => Clk,
      \out\(0) => Synced,
      reset_temp => \reset_temp__0\
    );
\Use_Async_Reset.sync_reset_reg\: unisim.vcomponents.FDRE
    generic map(
      INIT => '1'
    )
        port map (
      C => Clk,
      CE => '1',
      D => Synced,
      Q => sync_reset,
      R => '0'
    );
\Using_Async_Wakeup_0.Wakeup_DFF\: entity work.microblaze_microblaze_0_0_mb_sync_bit_0
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      Wakeup(0) => Wakeup(0),
      \out\(0) => wakeup_i(0)
    );
\Using_Async_Wakeup_1.Wakeup_DFF\: entity work.microblaze_microblaze_0_0_mb_sync_bit_1
     port map (
      Clk => Clk,
      SR(0) => sync_reset,
      Wakeup(0) => Wakeup(1),
      \out\(0) => wakeup_i(1)
    );
reset_temp: unisim.vcomponents.LUT3
    generic map(
      INIT => X"FE"
    )
        port map (
      I0 => Reset,
      I1 => Mb_Reset,
      I2 => Debug_Rst,
      O => \reset_temp__0\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0_MicroBlaze is
  port (
    RAM_To : in STD_LOGIC_VECTOR ( 255 downto 0 );
    RAM_From : out STD_LOGIC_VECTOR ( 255 downto 0 );
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Mb_Reset : in STD_LOGIC;
    Config_Reset : in STD_LOGIC;
    Scan_Reset_Sel : in STD_LOGIC;
    Scan_Reset : in STD_LOGIC;
    Scan_En : in STD_LOGIC;
    Reset_Mode : in STD_LOGIC_VECTOR ( 0 to 1 );
    Non_Secure : in STD_LOGIC_VECTOR ( 0 to 3 );
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Ext_BRK : in STD_LOGIC;
    Ext_NM_BRK : in STD_LOGIC;
    Pause : in STD_LOGIC;
    Pause_Ack : out STD_LOGIC;
    Dbg_Continue : out STD_LOGIC;
    Dbg_Stop : in STD_LOGIC;
    Dbg_Intr : out STD_LOGIC;
    MB_Halted : out STD_LOGIC;
    MB_Error : out STD_LOGIC;
    Wakeup : in STD_LOGIC_VECTOR ( 0 to 1 );
    Sleep : out STD_LOGIC;
    Hibernate : out STD_LOGIC;
    Suspend : out STD_LOGIC;
    Dbg_Wakeup : out STD_LOGIC;
    LOCKSTEP_Slave_In : in STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Master_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    LOCKSTEP_Out : out STD_LOGIC_VECTOR ( 0 to 4095 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    M_AXI_IP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_AWLOCK : out STD_LOGIC;
    M_AXI_IP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_AWVALID : out STD_LOGIC;
    M_AXI_IP_AWREADY : in STD_LOGIC;
    M_AXI_IP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_WLAST : out STD_LOGIC;
    M_AXI_IP_WVALID : out STD_LOGIC;
    M_AXI_IP_WREADY : in STD_LOGIC;
    M_AXI_IP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_BVALID : in STD_LOGIC;
    M_AXI_IP_BREADY : out STD_LOGIC;
    M_AXI_IP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_ARLOCK : out STD_LOGIC;
    M_AXI_IP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IP_ARVALID : out STD_LOGIC;
    M_AXI_IP_ARREADY : in STD_LOGIC;
    M_AXI_IP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IP_RLAST : in STD_LOGIC;
    M_AXI_IP_RVALID : in STD_LOGIC;
    M_AXI_IP_RREADY : out STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_AWLOCK : out STD_LOGIC;
    M_AXI_DP_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WLAST : out STD_LOGIC;
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DP_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_ARLOCK : out STD_LOGIC;
    M_AXI_DP_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RLAST : in STD_LOGIC;
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Disable : in STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Trig_In : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_In : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Out : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trig_Ack_Out : out STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Trace_Clk : in STD_LOGIC;
    Dbg_Trace_Data : out STD_LOGIC_VECTOR ( 0 to 35 );
    Dbg_Trace_Ready : in STD_LOGIC;
    Dbg_Trace_Valid : out STD_LOGIC;
    Dbg_AWADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_AWVALID : in STD_LOGIC;
    Dbg_AWREADY : out STD_LOGIC;
    Dbg_WDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_WVALID : in STD_LOGIC;
    Dbg_WREADY : out STD_LOGIC;
    Dbg_BRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_BVALID : out STD_LOGIC;
    Dbg_BREADY : in STD_LOGIC;
    Dbg_ARADDR : in STD_LOGIC_VECTOR ( 14 downto 2 );
    Dbg_ARVALID : in STD_LOGIC;
    Dbg_ARREADY : out STD_LOGIC;
    Dbg_RDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    Dbg_RRESP : out STD_LOGIC_VECTOR ( 1 downto 0 );
    Dbg_RVALID : out STD_LOGIC;
    Dbg_RREADY : in STD_LOGIC;
    DEBUG_ACLK : in STD_LOGIC;
    DEBUG_ARESETN : in STD_LOGIC;
    Trace_Instruction : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Valid_Instr : out STD_LOGIC;
    Trace_PC : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Reg_Write : out STD_LOGIC;
    Trace_Reg_Addr : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_MSR_Reg : out STD_LOGIC_VECTOR ( 0 to 14 );
    Trace_PID_Reg : out STD_LOGIC_VECTOR ( 0 to 7 );
    Trace_New_Reg_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Exception_Taken : out STD_LOGIC;
    Trace_Exception_Kind : out STD_LOGIC_VECTOR ( 0 to 4 );
    Trace_Jump_Taken : out STD_LOGIC;
    Trace_Delay_Slot : out STD_LOGIC;
    Trace_Data_Address : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Write_Value : out STD_LOGIC_VECTOR ( 0 to 31 );
    Trace_Data_Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    Trace_Data_Access : out STD_LOGIC;
    Trace_Data_Read : out STD_LOGIC;
    Trace_Data_Write : out STD_LOGIC;
    Trace_DCache_Req : out STD_LOGIC;
    Trace_DCache_Hit : out STD_LOGIC;
    Trace_DCache_Rdy : out STD_LOGIC;
    Trace_DCache_Read : out STD_LOGIC;
    Trace_ICache_Req : out STD_LOGIC;
    Trace_ICache_Hit : out STD_LOGIC;
    Trace_ICache_Rdy : out STD_LOGIC;
    Trace_OF_PipeRun : out STD_LOGIC;
    Trace_EX_PipeRun : out STD_LOGIC;
    Trace_MEM_PipeRun : out STD_LOGIC;
    Trace_MB_Halted : out STD_LOGIC;
    Trace_Jump_Hit : out STD_LOGIC;
    M0_AXIS_TLAST : out STD_LOGIC;
    M0_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M0_AXIS_TVALID : out STD_LOGIC;
    M0_AXIS_TREADY : in STD_LOGIC;
    M1_AXIS_TLAST : out STD_LOGIC;
    M1_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M1_AXIS_TVALID : out STD_LOGIC;
    M1_AXIS_TREADY : in STD_LOGIC;
    M2_AXIS_TLAST : out STD_LOGIC;
    M2_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M2_AXIS_TVALID : out STD_LOGIC;
    M2_AXIS_TREADY : in STD_LOGIC;
    M3_AXIS_TLAST : out STD_LOGIC;
    M3_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M3_AXIS_TVALID : out STD_LOGIC;
    M3_AXIS_TREADY : in STD_LOGIC;
    M4_AXIS_TLAST : out STD_LOGIC;
    M4_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M4_AXIS_TVALID : out STD_LOGIC;
    M4_AXIS_TREADY : in STD_LOGIC;
    M5_AXIS_TLAST : out STD_LOGIC;
    M5_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M5_AXIS_TVALID : out STD_LOGIC;
    M5_AXIS_TREADY : in STD_LOGIC;
    M6_AXIS_TLAST : out STD_LOGIC;
    M6_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M6_AXIS_TVALID : out STD_LOGIC;
    M6_AXIS_TREADY : in STD_LOGIC;
    M7_AXIS_TLAST : out STD_LOGIC;
    M7_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M7_AXIS_TVALID : out STD_LOGIC;
    M7_AXIS_TREADY : in STD_LOGIC;
    M8_AXIS_TLAST : out STD_LOGIC;
    M8_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M8_AXIS_TVALID : out STD_LOGIC;
    M8_AXIS_TREADY : in STD_LOGIC;
    M9_AXIS_TLAST : out STD_LOGIC;
    M9_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M9_AXIS_TVALID : out STD_LOGIC;
    M9_AXIS_TREADY : in STD_LOGIC;
    M10_AXIS_TLAST : out STD_LOGIC;
    M10_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M10_AXIS_TVALID : out STD_LOGIC;
    M10_AXIS_TREADY : in STD_LOGIC;
    M11_AXIS_TLAST : out STD_LOGIC;
    M11_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M11_AXIS_TVALID : out STD_LOGIC;
    M11_AXIS_TREADY : in STD_LOGIC;
    M12_AXIS_TLAST : out STD_LOGIC;
    M12_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M12_AXIS_TVALID : out STD_LOGIC;
    M12_AXIS_TREADY : in STD_LOGIC;
    M13_AXIS_TLAST : out STD_LOGIC;
    M13_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M13_AXIS_TVALID : out STD_LOGIC;
    M13_AXIS_TREADY : in STD_LOGIC;
    M14_AXIS_TLAST : out STD_LOGIC;
    M14_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M14_AXIS_TVALID : out STD_LOGIC;
    M14_AXIS_TREADY : in STD_LOGIC;
    M15_AXIS_TLAST : out STD_LOGIC;
    M15_AXIS_TDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M15_AXIS_TVALID : out STD_LOGIC;
    M15_AXIS_TREADY : in STD_LOGIC;
    S0_AXIS_TLAST : in STD_LOGIC;
    S0_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S0_AXIS_TVALID : in STD_LOGIC;
    S0_AXIS_TREADY : out STD_LOGIC;
    S1_AXIS_TLAST : in STD_LOGIC;
    S1_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S1_AXIS_TVALID : in STD_LOGIC;
    S1_AXIS_TREADY : out STD_LOGIC;
    S2_AXIS_TLAST : in STD_LOGIC;
    S2_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S2_AXIS_TVALID : in STD_LOGIC;
    S2_AXIS_TREADY : out STD_LOGIC;
    S3_AXIS_TLAST : in STD_LOGIC;
    S3_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S3_AXIS_TVALID : in STD_LOGIC;
    S3_AXIS_TREADY : out STD_LOGIC;
    S4_AXIS_TLAST : in STD_LOGIC;
    S4_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S4_AXIS_TVALID : in STD_LOGIC;
    S4_AXIS_TREADY : out STD_LOGIC;
    S5_AXIS_TLAST : in STD_LOGIC;
    S5_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S5_AXIS_TVALID : in STD_LOGIC;
    S5_AXIS_TREADY : out STD_LOGIC;
    S6_AXIS_TLAST : in STD_LOGIC;
    S6_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S6_AXIS_TVALID : in STD_LOGIC;
    S6_AXIS_TREADY : out STD_LOGIC;
    S7_AXIS_TLAST : in STD_LOGIC;
    S7_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S7_AXIS_TVALID : in STD_LOGIC;
    S7_AXIS_TREADY : out STD_LOGIC;
    S8_AXIS_TLAST : in STD_LOGIC;
    S8_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S8_AXIS_TVALID : in STD_LOGIC;
    S8_AXIS_TREADY : out STD_LOGIC;
    S9_AXIS_TLAST : in STD_LOGIC;
    S9_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S9_AXIS_TVALID : in STD_LOGIC;
    S9_AXIS_TREADY : out STD_LOGIC;
    S10_AXIS_TLAST : in STD_LOGIC;
    S10_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S10_AXIS_TVALID : in STD_LOGIC;
    S10_AXIS_TREADY : out STD_LOGIC;
    S11_AXIS_TLAST : in STD_LOGIC;
    S11_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S11_AXIS_TVALID : in STD_LOGIC;
    S11_AXIS_TREADY : out STD_LOGIC;
    S12_AXIS_TLAST : in STD_LOGIC;
    S12_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S12_AXIS_TVALID : in STD_LOGIC;
    S12_AXIS_TREADY : out STD_LOGIC;
    S13_AXIS_TLAST : in STD_LOGIC;
    S13_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S13_AXIS_TVALID : in STD_LOGIC;
    S13_AXIS_TREADY : out STD_LOGIC;
    S14_AXIS_TLAST : in STD_LOGIC;
    S14_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S14_AXIS_TVALID : in STD_LOGIC;
    S14_AXIS_TREADY : out STD_LOGIC;
    S15_AXIS_TLAST : in STD_LOGIC;
    S15_AXIS_TDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    S15_AXIS_TVALID : in STD_LOGIC;
    S15_AXIS_TREADY : out STD_LOGIC;
    M_AXI_IC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWLOCK : out STD_LOGIC;
    M_AXI_IC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_AWVALID : out STD_LOGIC;
    M_AXI_IC_AWREADY : in STD_LOGIC;
    M_AXI_IC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_WLAST : out STD_LOGIC;
    M_AXI_IC_WVALID : out STD_LOGIC;
    M_AXI_IC_WREADY : in STD_LOGIC;
    M_AXI_IC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_BVALID : in STD_LOGIC;
    M_AXI_IC_BREADY : out STD_LOGIC;
    M_AXI_IC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_WACK : out STD_LOGIC;
    M_AXI_IC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_IC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARLOCK : out STD_LOGIC;
    M_AXI_IC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARVALID : out STD_LOGIC;
    M_AXI_IC_ARREADY : in STD_LOGIC;
    M_AXI_IC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_IC_RLAST : in STD_LOGIC;
    M_AXI_IC_RVALID : in STD_LOGIC;
    M_AXI_IC_RREADY : out STD_LOGIC;
    M_AXI_IC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_IC_RACK : out STD_LOGIC;
    M_AXI_IC_ACVALID : in STD_LOGIC;
    M_AXI_IC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_IC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_IC_ACREADY : out STD_LOGIC;
    M_AXI_IC_CRVALID : out STD_LOGIC;
    M_AXI_IC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_IC_CRREADY : in STD_LOGIC;
    M_AXI_IC_CDVALID : out STD_LOGIC;
    M_AXI_IC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_IC_CDLAST : out STD_LOGIC;
    M_AXI_IC_CDREADY : in STD_LOGIC;
    M_AXI_DC_AWID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_AWLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_AWSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWLOCK : out STD_LOGIC;
    M_AXI_DC_AWCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_AWVALID : out STD_LOGIC;
    M_AXI_DC_AWREADY : in STD_LOGIC;
    M_AXI_DC_AWUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_AWDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_AWSNOOP : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_AWBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_WLAST : out STD_LOGIC;
    M_AXI_DC_WVALID : out STD_LOGIC;
    M_AXI_DC_WREADY : in STD_LOGIC;
    M_AXI_DC_WUSER : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_BID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_BVALID : in STD_LOGIC;
    M_AXI_DC_BREADY : out STD_LOGIC;
    M_AXI_DC_BUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_WACK : out STD_LOGIC;
    M_AXI_DC_ARID : out STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ARLEN : out STD_LOGIC_VECTOR ( 7 downto 0 );
    M_AXI_DC_ARSIZE : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARBURST : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARLOCK : out STD_LOGIC;
    M_AXI_DC_ARCACHE : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ARQOS : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARVALID : out STD_LOGIC;
    M_AXI_DC_ARREADY : in STD_LOGIC;
    M_AXI_DC_ARUSER : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_ARDOMAIN : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_ARSNOOP : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ARBAR : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RID : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DC_RLAST : in STD_LOGIC;
    M_AXI_DC_RVALID : in STD_LOGIC;
    M_AXI_DC_RREADY : out STD_LOGIC;
    M_AXI_DC_RUSER : in STD_LOGIC_VECTOR ( 0 to 0 );
    M_AXI_DC_RACK : out STD_LOGIC;
    M_AXI_DC_ACVALID : in STD_LOGIC;
    M_AXI_DC_ACADDR : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_ACSNOOP : in STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DC_ACPROT : in STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DC_ACREADY : out STD_LOGIC;
    M_AXI_DC_CRVALID : out STD_LOGIC;
    M_AXI_DC_CRRESP : out STD_LOGIC_VECTOR ( 4 downto 0 );
    M_AXI_DC_CRREADY : in STD_LOGIC;
    M_AXI_DC_CDVALID : out STD_LOGIC;
    M_AXI_DC_CDDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DC_CDLAST : out STD_LOGIC;
    M_AXI_DC_CDREADY : in STD_LOGIC
  );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of microblaze_microblaze_0_0_MicroBlaze : entity is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of microblaze_microblaze_0_0_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 4096;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of microblaze_microblaze_0_0_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 4096;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of microblaze_microblaze_0_0_MicroBlaze : entity is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of microblaze_microblaze_0_0_MicroBlaze : entity is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of microblaze_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of microblaze_microblaze_0_0_MicroBlaze : entity is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of microblaze_microblaze_0_0_MicroBlaze : entity is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of microblaze_microblaze_0_0_MicroBlaze : entity is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of microblaze_microblaze_0_0_MicroBlaze : entity is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of microblaze_microblaze_0_0_MicroBlaze : entity is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of microblaze_microblaze_0_0_MicroBlaze : entity is "microblaze_microblaze_0_0";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of microblaze_microblaze_0_0_MicroBlaze : entity is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of microblaze_microblaze_0_0_MicroBlaze : entity is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of microblaze_microblaze_0_0_MicroBlaze : entity is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_PVR : integer;
  attribute C_PVR of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of microblaze_microblaze_0_0_MicroBlaze : entity is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of microblaze_microblaze_0_0_MicroBlaze : entity is 32;
  attribute C_SCO : integer;
  attribute C_SCO of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of microblaze_microblaze_0_0_MicroBlaze : entity is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of microblaze_microblaze_0_0_MicroBlaze : entity is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of microblaze_microblaze_0_0_MicroBlaze : entity is 0;
  attribute ORIG_REF_NAME : string;
  attribute ORIG_REF_NAME of microblaze_microblaze_0_0_MicroBlaze : entity is "MicroBlaze";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of microblaze_microblaze_0_0_MicroBlaze : entity is "yes";
end microblaze_microblaze_0_0_MicroBlaze;

architecture STRUCTURE of microblaze_microblaze_0_0_MicroBlaze is
  signal \<const0>\ : STD_LOGIC;
  signal \<const1>\ : STD_LOGIC;
  signal \^byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal Config_Reg_En : STD_LOGIC;
  signal \^d_as\ : STD_LOGIC;
  signal \^data_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal Data_Read_Reg_En : STD_LOGIC;
  signal \^data_write\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^dbg_trig_ack_out\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^dbg_trig_in\ : STD_LOGIC_VECTOR ( 0 to 1 );
  signal \^debug_rst\ : STD_LOGIC;
  signal \Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\ : STD_LOGIC;
  signal \^ifetch\ : STD_LOGIC;
  signal \^i_as\ : STD_LOGIC;
  signal \^instr_addr\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^lockstep_master_out\ : STD_LOGIC_VECTOR ( 3 to 46 );
  signal \^lockstep_out\ : STD_LOGIC_VECTOR ( 0 to 3228 );
  signal \^mb_halted\ : STD_LOGIC;
  signal \^m_axi_dp_arvalid\ : STD_LOGIC;
  signal \^m_axi_dp_awaddr\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_awvalid\ : STD_LOGIC;
  signal \^m_axi_dp_bready\ : STD_LOGIC;
  signal \^m_axi_dp_rready\ : STD_LOGIC;
  signal \^m_axi_dp_wdata\ : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal \^m_axi_dp_wstrb\ : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal \^m_axi_dp_wvalid\ : STD_LOGIC;
  signal MicroBlaze_Core_I_n_413 : STD_LOGIC;
  signal \^read_strobe\ : STD_LOGIC;
  signal \^trace_data_access\ : STD_LOGIC;
  signal \^trace_data_address\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_data_byte_enable\ : STD_LOGIC_VECTOR ( 0 to 3 );
  signal \^trace_data_read\ : STD_LOGIC;
  signal \^trace_data_write\ : STD_LOGIC;
  signal \^trace_data_write_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_delay_slot\ : STD_LOGIC;
  signal \^trace_ex_piperun\ : STD_LOGIC;
  signal \^trace_exception_kind\ : STD_LOGIC_VECTOR ( 1 to 4 );
  signal \^trace_exception_taken\ : STD_LOGIC;
  signal \^trace_instruction\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_jump_taken\ : STD_LOGIC;
  signal \^trace_mb_halted\ : STD_LOGIC;
  signal \^trace_mem_piperun\ : STD_LOGIC;
  signal \^trace_msr_reg\ : STD_LOGIC_VECTOR ( 8 to 13 );
  signal \^trace_new_reg_value\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_of_piperun\ : STD_LOGIC;
  signal \^trace_pc\ : STD_LOGIC_VECTOR ( 0 to 31 );
  signal \^trace_reg_addr\ : STD_LOGIC_VECTOR ( 0 to 4 );
  signal \^trace_reg_write\ : STD_LOGIC;
  signal \^trace_valid_instr\ : STD_LOGIC;
  signal \^write_strobe\ : STD_LOGIC;
  attribute SOFT_HLUTNM : string;
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_5 : label is "soft_lutpair288";
  attribute SOFT_HLUTNM of Dbg_TDO_INST_0_i_8 : label is "soft_lutpair288";
  attribute mark_debug : string;
  attribute mark_debug of Trace_DCache_Hit : signal is "false";
  attribute mark_debug of Trace_DCache_Rdy : signal is "false";
  attribute mark_debug of Trace_DCache_Read : signal is "false";
  attribute mark_debug of Trace_DCache_Req : signal is "false";
  attribute mark_debug of Trace_Data_Access : signal is "false";
  attribute mark_debug of Trace_Data_Read : signal is "false";
  attribute mark_debug of Trace_Data_Write : signal is "false";
  attribute mark_debug of Trace_Delay_Slot : signal is "false";
  attribute mark_debug of Trace_EX_PipeRun : signal is "false";
  attribute mark_debug of Trace_Exception_Taken : signal is "false";
  attribute mark_debug of Trace_ICache_Hit : signal is "false";
  attribute mark_debug of Trace_ICache_Rdy : signal is "false";
  attribute mark_debug of Trace_ICache_Req : signal is "false";
  attribute mark_debug of Trace_Jump_Hit : signal is "false";
  attribute mark_debug of Trace_Jump_Taken : signal is "false";
  attribute mark_debug of Trace_MB_Halted : signal is "false";
  attribute mark_debug of Trace_MEM_PipeRun : signal is "false";
  attribute mark_debug of Trace_OF_PipeRun : signal is "false";
  attribute mark_debug of Trace_Reg_Write : signal is "false";
  attribute mark_debug of Trace_Valid_Instr : signal is "false";
  attribute mark_debug of Trace_Data_Address : signal is "false";
  attribute mark_debug of Trace_Data_Byte_Enable : signal is "false";
  attribute mark_debug of Trace_Data_Write_Value : signal is "false";
  attribute mark_debug of Trace_Exception_Kind : signal is "false";
  attribute mark_debug of Trace_Instruction : signal is "false";
  attribute mark_debug of Trace_MSR_Reg : signal is "false";
  attribute mark_debug of Trace_New_Reg_Value : signal is "false";
  attribute mark_debug of Trace_PC : signal is "false";
  attribute mark_debug of Trace_PID_Reg : signal is "false";
  attribute mark_debug of Trace_Reg_Addr : signal is "false";
begin
  Byte_Enable(0 to 3) <= \^byte_enable\(0 to 3);
  D_AS <= \^d_as\;
  Data_Addr(0 to 31) <= \^data_addr\(0 to 31);
  Data_Write(0 to 31) <= \^data_write\(0 to 31);
  Dbg_ARREADY <= \<const0>\;
  Dbg_AWREADY <= \<const0>\;
  Dbg_BRESP(1) <= \<const0>\;
  Dbg_BRESP(0) <= \<const0>\;
  Dbg_BVALID <= \<const0>\;
  Dbg_Continue <= \^lockstep_master_out\(12);
  Dbg_Intr <= \<const0>\;
  Dbg_RDATA(31) <= \<const0>\;
  Dbg_RDATA(30) <= \<const0>\;
  Dbg_RDATA(29) <= \<const0>\;
  Dbg_RDATA(28) <= \<const0>\;
  Dbg_RDATA(27) <= \<const0>\;
  Dbg_RDATA(26) <= \<const0>\;
  Dbg_RDATA(25) <= \<const0>\;
  Dbg_RDATA(24) <= \<const0>\;
  Dbg_RDATA(23) <= \<const0>\;
  Dbg_RDATA(22) <= \<const0>\;
  Dbg_RDATA(21) <= \<const0>\;
  Dbg_RDATA(20) <= \<const0>\;
  Dbg_RDATA(19) <= \<const0>\;
  Dbg_RDATA(18) <= \<const0>\;
  Dbg_RDATA(17) <= \<const0>\;
  Dbg_RDATA(16) <= \<const0>\;
  Dbg_RDATA(15) <= \<const0>\;
  Dbg_RDATA(14) <= \<const0>\;
  Dbg_RDATA(13) <= \<const0>\;
  Dbg_RDATA(12) <= \<const0>\;
  Dbg_RDATA(11) <= \<const0>\;
  Dbg_RDATA(10) <= \<const0>\;
  Dbg_RDATA(9) <= \<const0>\;
  Dbg_RDATA(8) <= \<const0>\;
  Dbg_RDATA(7) <= \<const0>\;
  Dbg_RDATA(6) <= \<const0>\;
  Dbg_RDATA(5) <= \<const0>\;
  Dbg_RDATA(4) <= \<const0>\;
  Dbg_RDATA(3) <= \<const0>\;
  Dbg_RDATA(2) <= \<const0>\;
  Dbg_RDATA(1) <= \<const0>\;
  Dbg_RDATA(0) <= \<const0>\;
  Dbg_RRESP(1) <= \<const0>\;
  Dbg_RRESP(0) <= \<const0>\;
  Dbg_RVALID <= \<const0>\;
  Dbg_Trace_Data(0) <= \<const0>\;
  Dbg_Trace_Data(1) <= \<const0>\;
  Dbg_Trace_Data(2) <= \<const0>\;
  Dbg_Trace_Data(3) <= \<const0>\;
  Dbg_Trace_Data(4) <= \<const0>\;
  Dbg_Trace_Data(5) <= \<const0>\;
  Dbg_Trace_Data(6) <= \<const0>\;
  Dbg_Trace_Data(7) <= \<const0>\;
  Dbg_Trace_Data(8) <= \<const0>\;
  Dbg_Trace_Data(9) <= \<const0>\;
  Dbg_Trace_Data(10) <= \<const0>\;
  Dbg_Trace_Data(11) <= \<const0>\;
  Dbg_Trace_Data(12) <= \<const0>\;
  Dbg_Trace_Data(13) <= \<const0>\;
  Dbg_Trace_Data(14) <= \<const0>\;
  Dbg_Trace_Data(15) <= \<const0>\;
  Dbg_Trace_Data(16) <= \<const0>\;
  Dbg_Trace_Data(17) <= \<const0>\;
  Dbg_Trace_Data(18) <= \<const0>\;
  Dbg_Trace_Data(19) <= \<const0>\;
  Dbg_Trace_Data(20) <= \<const0>\;
  Dbg_Trace_Data(21) <= \<const0>\;
  Dbg_Trace_Data(22) <= \<const0>\;
  Dbg_Trace_Data(23) <= \<const0>\;
  Dbg_Trace_Data(24) <= \<const0>\;
  Dbg_Trace_Data(25) <= \<const0>\;
  Dbg_Trace_Data(26) <= \<const0>\;
  Dbg_Trace_Data(27) <= \<const0>\;
  Dbg_Trace_Data(28) <= \<const0>\;
  Dbg_Trace_Data(29) <= \<const0>\;
  Dbg_Trace_Data(30) <= \<const0>\;
  Dbg_Trace_Data(31) <= \<const0>\;
  Dbg_Trace_Data(32) <= \<const0>\;
  Dbg_Trace_Data(33) <= \<const0>\;
  Dbg_Trace_Data(34) <= \<const0>\;
  Dbg_Trace_Data(35) <= \<const0>\;
  Dbg_Trace_Valid <= \<const0>\;
  Dbg_Trig_Ack_Out(0 to 1) <= \^dbg_trig_ack_out\(0 to 1);
  Dbg_Trig_Ack_Out(2) <= \<const0>\;
  Dbg_Trig_Ack_Out(3) <= \<const0>\;
  Dbg_Trig_Ack_Out(4) <= \<const0>\;
  Dbg_Trig_Ack_Out(5) <= \<const0>\;
  Dbg_Trig_Ack_Out(6) <= \<const0>\;
  Dbg_Trig_Ack_Out(7) <= \<const0>\;
  Dbg_Trig_In(0 to 1) <= \^dbg_trig_in\(0 to 1);
  Dbg_Trig_In(2) <= \<const0>\;
  Dbg_Trig_In(3) <= \<const0>\;
  Dbg_Trig_In(4) <= \<const0>\;
  Dbg_Trig_In(5) <= \<const0>\;
  Dbg_Trig_In(6) <= \<const0>\;
  Dbg_Trig_In(7) <= \<const0>\;
  Dbg_WREADY <= \<const0>\;
  Dbg_Wakeup <= \^lockstep_master_out\(11);
  IFetch <= \^ifetch\;
  I_AS <= \^i_as\;
  Instr_Addr(0 to 31) <= \^instr_addr\(0 to 31);
  LOCKSTEP_Master_Out(0) <= \<const0>\;
  LOCKSTEP_Master_Out(1) <= \<const0>\;
  LOCKSTEP_Master_Out(2) <= \<const0>\;
  LOCKSTEP_Master_Out(3 to 7) <= \^lockstep_master_out\(3 to 7);
  LOCKSTEP_Master_Out(8) <= \^mb_halted\;
  LOCKSTEP_Master_Out(9) <= \<const0>\;
  LOCKSTEP_Master_Out(10) <= \^mb_halted\;
  LOCKSTEP_Master_Out(11 to 13) <= \^lockstep_master_out\(11 to 13);
  LOCKSTEP_Master_Out(14) <= \^debug_rst\;
  LOCKSTEP_Master_Out(15 to 46) <= \^lockstep_master_out\(15 to 46);
  LOCKSTEP_Master_Out(47) <= \<const0>\;
  LOCKSTEP_Master_Out(48) <= \<const0>\;
  LOCKSTEP_Master_Out(49) <= \<const0>\;
  LOCKSTEP_Master_Out(50) <= \<const0>\;
  LOCKSTEP_Master_Out(51) <= \<const0>\;
  LOCKSTEP_Master_Out(52) <= \<const0>\;
  LOCKSTEP_Master_Out(53) <= \<const0>\;
  LOCKSTEP_Master_Out(54) <= \<const0>\;
  LOCKSTEP_Master_Out(55) <= \<const0>\;
  LOCKSTEP_Master_Out(56) <= \<const0>\;
  LOCKSTEP_Master_Out(57) <= \<const0>\;
  LOCKSTEP_Master_Out(58) <= \<const0>\;
  LOCKSTEP_Master_Out(59) <= \<const0>\;
  LOCKSTEP_Master_Out(60) <= \<const0>\;
  LOCKSTEP_Master_Out(61) <= \<const0>\;
  LOCKSTEP_Master_Out(62) <= \<const0>\;
  LOCKSTEP_Master_Out(63) <= \<const0>\;
  LOCKSTEP_Master_Out(64) <= \<const0>\;
  LOCKSTEP_Master_Out(65) <= \<const0>\;
  LOCKSTEP_Master_Out(66) <= \<const0>\;
  LOCKSTEP_Master_Out(67) <= \<const0>\;
  LOCKSTEP_Master_Out(68) <= \<const0>\;
  LOCKSTEP_Master_Out(69) <= \<const0>\;
  LOCKSTEP_Master_Out(70) <= \<const0>\;
  LOCKSTEP_Master_Out(71) <= \<const0>\;
  LOCKSTEP_Master_Out(72) <= \<const0>\;
  LOCKSTEP_Master_Out(73) <= \<const0>\;
  LOCKSTEP_Master_Out(74) <= \<const0>\;
  LOCKSTEP_Master_Out(75) <= \<const0>\;
  LOCKSTEP_Master_Out(76) <= \<const0>\;
  LOCKSTEP_Master_Out(77) <= \<const0>\;
  LOCKSTEP_Master_Out(78) <= \<const0>\;
  LOCKSTEP_Master_Out(79) <= \<const0>\;
  LOCKSTEP_Master_Out(80) <= \<const0>\;
  LOCKSTEP_Master_Out(81) <= \<const0>\;
  LOCKSTEP_Master_Out(82) <= \<const0>\;
  LOCKSTEP_Master_Out(83) <= \<const0>\;
  LOCKSTEP_Master_Out(84) <= \<const0>\;
  LOCKSTEP_Master_Out(85) <= \<const0>\;
  LOCKSTEP_Master_Out(86) <= \<const0>\;
  LOCKSTEP_Master_Out(87) <= \<const0>\;
  LOCKSTEP_Master_Out(88) <= \<const0>\;
  LOCKSTEP_Master_Out(89) <= \<const0>\;
  LOCKSTEP_Master_Out(90) <= \<const0>\;
  LOCKSTEP_Master_Out(91) <= \<const0>\;
  LOCKSTEP_Master_Out(92) <= \<const0>\;
  LOCKSTEP_Master_Out(93) <= \<const0>\;
  LOCKSTEP_Master_Out(94) <= \<const0>\;
  LOCKSTEP_Master_Out(95) <= \<const0>\;
  LOCKSTEP_Master_Out(96) <= \<const0>\;
  LOCKSTEP_Master_Out(97) <= \<const0>\;
  LOCKSTEP_Master_Out(98) <= \<const0>\;
  LOCKSTEP_Master_Out(99) <= \<const0>\;
  LOCKSTEP_Master_Out(100) <= \<const0>\;
  LOCKSTEP_Master_Out(101) <= \<const0>\;
  LOCKSTEP_Master_Out(102) <= \<const0>\;
  LOCKSTEP_Master_Out(103) <= \<const0>\;
  LOCKSTEP_Master_Out(104) <= \<const0>\;
  LOCKSTEP_Master_Out(105) <= \<const0>\;
  LOCKSTEP_Master_Out(106) <= \<const0>\;
  LOCKSTEP_Master_Out(107) <= \<const0>\;
  LOCKSTEP_Master_Out(108) <= \<const0>\;
  LOCKSTEP_Master_Out(109) <= \<const0>\;
  LOCKSTEP_Master_Out(110) <= \<const0>\;
  LOCKSTEP_Master_Out(111) <= \<const0>\;
  LOCKSTEP_Master_Out(112) <= \<const0>\;
  LOCKSTEP_Master_Out(113) <= \<const0>\;
  LOCKSTEP_Master_Out(114) <= \<const0>\;
  LOCKSTEP_Master_Out(115) <= \<const0>\;
  LOCKSTEP_Master_Out(116) <= \<const0>\;
  LOCKSTEP_Master_Out(117) <= \<const0>\;
  LOCKSTEP_Master_Out(118) <= \<const0>\;
  LOCKSTEP_Master_Out(119) <= \<const0>\;
  LOCKSTEP_Master_Out(120) <= \<const0>\;
  LOCKSTEP_Master_Out(121) <= \<const0>\;
  LOCKSTEP_Master_Out(122) <= \<const0>\;
  LOCKSTEP_Master_Out(123) <= \<const0>\;
  LOCKSTEP_Master_Out(124) <= \<const0>\;
  LOCKSTEP_Master_Out(125) <= \<const0>\;
  LOCKSTEP_Master_Out(126) <= \<const0>\;
  LOCKSTEP_Master_Out(127) <= \<const0>\;
  LOCKSTEP_Master_Out(128) <= \<const0>\;
  LOCKSTEP_Master_Out(129) <= \<const0>\;
  LOCKSTEP_Master_Out(130) <= \<const0>\;
  LOCKSTEP_Master_Out(131) <= \<const0>\;
  LOCKSTEP_Master_Out(132) <= \<const0>\;
  LOCKSTEP_Master_Out(133) <= \<const0>\;
  LOCKSTEP_Master_Out(134) <= \<const0>\;
  LOCKSTEP_Master_Out(135) <= \<const0>\;
  LOCKSTEP_Master_Out(136) <= \<const0>\;
  LOCKSTEP_Master_Out(137) <= \<const0>\;
  LOCKSTEP_Master_Out(138) <= \<const0>\;
  LOCKSTEP_Master_Out(139) <= \<const0>\;
  LOCKSTEP_Master_Out(140) <= \<const0>\;
  LOCKSTEP_Master_Out(141) <= \<const0>\;
  LOCKSTEP_Master_Out(142) <= \<const0>\;
  LOCKSTEP_Master_Out(143) <= \<const0>\;
  LOCKSTEP_Master_Out(144) <= \<const0>\;
  LOCKSTEP_Master_Out(145) <= \<const0>\;
  LOCKSTEP_Master_Out(146) <= \<const0>\;
  LOCKSTEP_Master_Out(147) <= \<const0>\;
  LOCKSTEP_Master_Out(148) <= \<const0>\;
  LOCKSTEP_Master_Out(149) <= \<const0>\;
  LOCKSTEP_Master_Out(150) <= \<const0>\;
  LOCKSTEP_Master_Out(151) <= \<const0>\;
  LOCKSTEP_Master_Out(152) <= \<const0>\;
  LOCKSTEP_Master_Out(153) <= \<const0>\;
  LOCKSTEP_Master_Out(154) <= \<const0>\;
  LOCKSTEP_Master_Out(155) <= \<const0>\;
  LOCKSTEP_Master_Out(156) <= \<const0>\;
  LOCKSTEP_Master_Out(157) <= \<const0>\;
  LOCKSTEP_Master_Out(158) <= \<const0>\;
  LOCKSTEP_Master_Out(159) <= \<const0>\;
  LOCKSTEP_Master_Out(160) <= \<const0>\;
  LOCKSTEP_Master_Out(161) <= \<const0>\;
  LOCKSTEP_Master_Out(162) <= \<const0>\;
  LOCKSTEP_Master_Out(163) <= \<const0>\;
  LOCKSTEP_Master_Out(164) <= \<const0>\;
  LOCKSTEP_Master_Out(165) <= \<const0>\;
  LOCKSTEP_Master_Out(166) <= \<const0>\;
  LOCKSTEP_Master_Out(167) <= \<const0>\;
  LOCKSTEP_Master_Out(168) <= \<const0>\;
  LOCKSTEP_Master_Out(169) <= \<const0>\;
  LOCKSTEP_Master_Out(170) <= \<const0>\;
  LOCKSTEP_Master_Out(171) <= \<const0>\;
  LOCKSTEP_Master_Out(172) <= \<const0>\;
  LOCKSTEP_Master_Out(173) <= \<const0>\;
  LOCKSTEP_Master_Out(174) <= \<const0>\;
  LOCKSTEP_Master_Out(175) <= \<const0>\;
  LOCKSTEP_Master_Out(176) <= \<const0>\;
  LOCKSTEP_Master_Out(177) <= \<const0>\;
  LOCKSTEP_Master_Out(178) <= \<const0>\;
  LOCKSTEP_Master_Out(179) <= \<const0>\;
  LOCKSTEP_Master_Out(180) <= \<const0>\;
  LOCKSTEP_Master_Out(181) <= \<const0>\;
  LOCKSTEP_Master_Out(182) <= \<const0>\;
  LOCKSTEP_Master_Out(183) <= \<const0>\;
  LOCKSTEP_Master_Out(184) <= \<const0>\;
  LOCKSTEP_Master_Out(185) <= \<const0>\;
  LOCKSTEP_Master_Out(186) <= \<const0>\;
  LOCKSTEP_Master_Out(187) <= \<const0>\;
  LOCKSTEP_Master_Out(188) <= \<const0>\;
  LOCKSTEP_Master_Out(189) <= \<const0>\;
  LOCKSTEP_Master_Out(190) <= \<const0>\;
  LOCKSTEP_Master_Out(191) <= \<const0>\;
  LOCKSTEP_Master_Out(192) <= \<const0>\;
  LOCKSTEP_Master_Out(193) <= \<const0>\;
  LOCKSTEP_Master_Out(194) <= \<const0>\;
  LOCKSTEP_Master_Out(195) <= \<const0>\;
  LOCKSTEP_Master_Out(196) <= \<const0>\;
  LOCKSTEP_Master_Out(197) <= \<const0>\;
  LOCKSTEP_Master_Out(198) <= \<const0>\;
  LOCKSTEP_Master_Out(199) <= \<const0>\;
  LOCKSTEP_Master_Out(200) <= \<const0>\;
  LOCKSTEP_Master_Out(201) <= \<const0>\;
  LOCKSTEP_Master_Out(202) <= \<const0>\;
  LOCKSTEP_Master_Out(203) <= \<const0>\;
  LOCKSTEP_Master_Out(204) <= \<const0>\;
  LOCKSTEP_Master_Out(205) <= \<const0>\;
  LOCKSTEP_Master_Out(206) <= \<const0>\;
  LOCKSTEP_Master_Out(207) <= \<const0>\;
  LOCKSTEP_Master_Out(208) <= \<const0>\;
  LOCKSTEP_Master_Out(209) <= \<const0>\;
  LOCKSTEP_Master_Out(210) <= \<const0>\;
  LOCKSTEP_Master_Out(211) <= \<const0>\;
  LOCKSTEP_Master_Out(212) <= \<const0>\;
  LOCKSTEP_Master_Out(213) <= \<const0>\;
  LOCKSTEP_Master_Out(214) <= \<const0>\;
  LOCKSTEP_Master_Out(215) <= \<const0>\;
  LOCKSTEP_Master_Out(216) <= \<const0>\;
  LOCKSTEP_Master_Out(217) <= \<const0>\;
  LOCKSTEP_Master_Out(218) <= \<const0>\;
  LOCKSTEP_Master_Out(219) <= \<const0>\;
  LOCKSTEP_Master_Out(220) <= \<const0>\;
  LOCKSTEP_Master_Out(221) <= \<const0>\;
  LOCKSTEP_Master_Out(222) <= \<const0>\;
  LOCKSTEP_Master_Out(223) <= \<const0>\;
  LOCKSTEP_Master_Out(224) <= \<const0>\;
  LOCKSTEP_Master_Out(225) <= \<const0>\;
  LOCKSTEP_Master_Out(226) <= \<const0>\;
  LOCKSTEP_Master_Out(227) <= \<const0>\;
  LOCKSTEP_Master_Out(228) <= \<const0>\;
  LOCKSTEP_Master_Out(229) <= \<const0>\;
  LOCKSTEP_Master_Out(230) <= \<const0>\;
  LOCKSTEP_Master_Out(231) <= \<const0>\;
  LOCKSTEP_Master_Out(232) <= \<const0>\;
  LOCKSTEP_Master_Out(233) <= \<const0>\;
  LOCKSTEP_Master_Out(234) <= \<const0>\;
  LOCKSTEP_Master_Out(235) <= \<const0>\;
  LOCKSTEP_Master_Out(236) <= \<const0>\;
  LOCKSTEP_Master_Out(237) <= \<const0>\;
  LOCKSTEP_Master_Out(238) <= \<const0>\;
  LOCKSTEP_Master_Out(239) <= \<const0>\;
  LOCKSTEP_Master_Out(240) <= \<const0>\;
  LOCKSTEP_Master_Out(241) <= \<const0>\;
  LOCKSTEP_Master_Out(242) <= \<const0>\;
  LOCKSTEP_Master_Out(243) <= \<const0>\;
  LOCKSTEP_Master_Out(244) <= \<const0>\;
  LOCKSTEP_Master_Out(245) <= \<const0>\;
  LOCKSTEP_Master_Out(246) <= \<const0>\;
  LOCKSTEP_Master_Out(247) <= \<const0>\;
  LOCKSTEP_Master_Out(248) <= \<const0>\;
  LOCKSTEP_Master_Out(249) <= \<const0>\;
  LOCKSTEP_Master_Out(250) <= \<const0>\;
  LOCKSTEP_Master_Out(251) <= \<const0>\;
  LOCKSTEP_Master_Out(252) <= \<const0>\;
  LOCKSTEP_Master_Out(253) <= \<const0>\;
  LOCKSTEP_Master_Out(254) <= \<const0>\;
  LOCKSTEP_Master_Out(255) <= \<const0>\;
  LOCKSTEP_Master_Out(256) <= \<const0>\;
  LOCKSTEP_Master_Out(257) <= \<const0>\;
  LOCKSTEP_Master_Out(258) <= \<const0>\;
  LOCKSTEP_Master_Out(259) <= \<const0>\;
  LOCKSTEP_Master_Out(260) <= \<const0>\;
  LOCKSTEP_Master_Out(261) <= \<const0>\;
  LOCKSTEP_Master_Out(262) <= \<const0>\;
  LOCKSTEP_Master_Out(263) <= \<const0>\;
  LOCKSTEP_Master_Out(264) <= \<const0>\;
  LOCKSTEP_Master_Out(265) <= \<const0>\;
  LOCKSTEP_Master_Out(266) <= \<const0>\;
  LOCKSTEP_Master_Out(267) <= \<const0>\;
  LOCKSTEP_Master_Out(268) <= \<const0>\;
  LOCKSTEP_Master_Out(269) <= \<const0>\;
  LOCKSTEP_Master_Out(270) <= \<const0>\;
  LOCKSTEP_Master_Out(271) <= \<const0>\;
  LOCKSTEP_Master_Out(272) <= \<const0>\;
  LOCKSTEP_Master_Out(273) <= \<const0>\;
  LOCKSTEP_Master_Out(274) <= \<const0>\;
  LOCKSTEP_Master_Out(275) <= \<const0>\;
  LOCKSTEP_Master_Out(276) <= \<const0>\;
  LOCKSTEP_Master_Out(277) <= \<const0>\;
  LOCKSTEP_Master_Out(278) <= \<const0>\;
  LOCKSTEP_Master_Out(279) <= \<const0>\;
  LOCKSTEP_Master_Out(280) <= \<const0>\;
  LOCKSTEP_Master_Out(281) <= \<const0>\;
  LOCKSTEP_Master_Out(282) <= \<const0>\;
  LOCKSTEP_Master_Out(283) <= \<const0>\;
  LOCKSTEP_Master_Out(284) <= \<const0>\;
  LOCKSTEP_Master_Out(285) <= \<const0>\;
  LOCKSTEP_Master_Out(286) <= \<const0>\;
  LOCKSTEP_Master_Out(287) <= \<const0>\;
  LOCKSTEP_Master_Out(288) <= \<const0>\;
  LOCKSTEP_Master_Out(289) <= \<const0>\;
  LOCKSTEP_Master_Out(290) <= \<const0>\;
  LOCKSTEP_Master_Out(291) <= \<const0>\;
  LOCKSTEP_Master_Out(292) <= \<const0>\;
  LOCKSTEP_Master_Out(293) <= \<const0>\;
  LOCKSTEP_Master_Out(294) <= \<const0>\;
  LOCKSTEP_Master_Out(295) <= \<const0>\;
  LOCKSTEP_Master_Out(296) <= \<const0>\;
  LOCKSTEP_Master_Out(297) <= \<const0>\;
  LOCKSTEP_Master_Out(298) <= \<const0>\;
  LOCKSTEP_Master_Out(299) <= \<const0>\;
  LOCKSTEP_Master_Out(300) <= \<const0>\;
  LOCKSTEP_Master_Out(301) <= \<const0>\;
  LOCKSTEP_Master_Out(302) <= \<const0>\;
  LOCKSTEP_Master_Out(303) <= \<const0>\;
  LOCKSTEP_Master_Out(304) <= \<const0>\;
  LOCKSTEP_Master_Out(305) <= \<const0>\;
  LOCKSTEP_Master_Out(306) <= \<const0>\;
  LOCKSTEP_Master_Out(307) <= \<const0>\;
  LOCKSTEP_Master_Out(308) <= \<const0>\;
  LOCKSTEP_Master_Out(309) <= \<const0>\;
  LOCKSTEP_Master_Out(310) <= \<const0>\;
  LOCKSTEP_Master_Out(311) <= \<const0>\;
  LOCKSTEP_Master_Out(312) <= \<const0>\;
  LOCKSTEP_Master_Out(313) <= \<const0>\;
  LOCKSTEP_Master_Out(314) <= \<const0>\;
  LOCKSTEP_Master_Out(315) <= \<const0>\;
  LOCKSTEP_Master_Out(316) <= \<const0>\;
  LOCKSTEP_Master_Out(317) <= \<const0>\;
  LOCKSTEP_Master_Out(318) <= \<const0>\;
  LOCKSTEP_Master_Out(319) <= \<const0>\;
  LOCKSTEP_Master_Out(320) <= \<const0>\;
  LOCKSTEP_Master_Out(321) <= \<const0>\;
  LOCKSTEP_Master_Out(322) <= \<const0>\;
  LOCKSTEP_Master_Out(323) <= \<const0>\;
  LOCKSTEP_Master_Out(324) <= \<const0>\;
  LOCKSTEP_Master_Out(325) <= \<const0>\;
  LOCKSTEP_Master_Out(326) <= \<const0>\;
  LOCKSTEP_Master_Out(327) <= \<const0>\;
  LOCKSTEP_Master_Out(328) <= \<const0>\;
  LOCKSTEP_Master_Out(329) <= \<const0>\;
  LOCKSTEP_Master_Out(330) <= \<const0>\;
  LOCKSTEP_Master_Out(331) <= \<const0>\;
  LOCKSTEP_Master_Out(332) <= \<const0>\;
  LOCKSTEP_Master_Out(333) <= \<const0>\;
  LOCKSTEP_Master_Out(334) <= \<const0>\;
  LOCKSTEP_Master_Out(335) <= \<const0>\;
  LOCKSTEP_Master_Out(336) <= \<const0>\;
  LOCKSTEP_Master_Out(337) <= \<const0>\;
  LOCKSTEP_Master_Out(338) <= \<const0>\;
  LOCKSTEP_Master_Out(339) <= \<const0>\;
  LOCKSTEP_Master_Out(340) <= \<const0>\;
  LOCKSTEP_Master_Out(341) <= \<const0>\;
  LOCKSTEP_Master_Out(342) <= \<const0>\;
  LOCKSTEP_Master_Out(343) <= \<const0>\;
  LOCKSTEP_Master_Out(344) <= \<const0>\;
  LOCKSTEP_Master_Out(345) <= \<const0>\;
  LOCKSTEP_Master_Out(346) <= \<const0>\;
  LOCKSTEP_Master_Out(347) <= \<const0>\;
  LOCKSTEP_Master_Out(348) <= \<const0>\;
  LOCKSTEP_Master_Out(349) <= \<const0>\;
  LOCKSTEP_Master_Out(350) <= \<const0>\;
  LOCKSTEP_Master_Out(351) <= \<const0>\;
  LOCKSTEP_Master_Out(352) <= \<const0>\;
  LOCKSTEP_Master_Out(353) <= \<const0>\;
  LOCKSTEP_Master_Out(354) <= \<const0>\;
  LOCKSTEP_Master_Out(355) <= \<const0>\;
  LOCKSTEP_Master_Out(356) <= \<const0>\;
  LOCKSTEP_Master_Out(357) <= \<const0>\;
  LOCKSTEP_Master_Out(358) <= \<const0>\;
  LOCKSTEP_Master_Out(359) <= \<const0>\;
  LOCKSTEP_Master_Out(360) <= \<const0>\;
  LOCKSTEP_Master_Out(361) <= \<const0>\;
  LOCKSTEP_Master_Out(362) <= \<const0>\;
  LOCKSTEP_Master_Out(363) <= \<const0>\;
  LOCKSTEP_Master_Out(364) <= \<const0>\;
  LOCKSTEP_Master_Out(365) <= \<const0>\;
  LOCKSTEP_Master_Out(366) <= \<const0>\;
  LOCKSTEP_Master_Out(367) <= \<const0>\;
  LOCKSTEP_Master_Out(368) <= \<const0>\;
  LOCKSTEP_Master_Out(369) <= \<const0>\;
  LOCKSTEP_Master_Out(370) <= \<const0>\;
  LOCKSTEP_Master_Out(371) <= \<const0>\;
  LOCKSTEP_Master_Out(372) <= \<const0>\;
  LOCKSTEP_Master_Out(373) <= \<const0>\;
  LOCKSTEP_Master_Out(374) <= \<const0>\;
  LOCKSTEP_Master_Out(375) <= \<const0>\;
  LOCKSTEP_Master_Out(376) <= \<const0>\;
  LOCKSTEP_Master_Out(377) <= \<const0>\;
  LOCKSTEP_Master_Out(378) <= \<const0>\;
  LOCKSTEP_Master_Out(379) <= \<const0>\;
  LOCKSTEP_Master_Out(380) <= \<const0>\;
  LOCKSTEP_Master_Out(381) <= \<const0>\;
  LOCKSTEP_Master_Out(382) <= \<const0>\;
  LOCKSTEP_Master_Out(383) <= \<const0>\;
  LOCKSTEP_Master_Out(384) <= \<const0>\;
  LOCKSTEP_Master_Out(385) <= \<const0>\;
  LOCKSTEP_Master_Out(386) <= \<const0>\;
  LOCKSTEP_Master_Out(387) <= \<const0>\;
  LOCKSTEP_Master_Out(388) <= \<const0>\;
  LOCKSTEP_Master_Out(389) <= \<const0>\;
  LOCKSTEP_Master_Out(390) <= \<const0>\;
  LOCKSTEP_Master_Out(391) <= \<const0>\;
  LOCKSTEP_Master_Out(392) <= \<const0>\;
  LOCKSTEP_Master_Out(393) <= \<const0>\;
  LOCKSTEP_Master_Out(394) <= \<const0>\;
  LOCKSTEP_Master_Out(395) <= \<const0>\;
  LOCKSTEP_Master_Out(396) <= \<const0>\;
  LOCKSTEP_Master_Out(397) <= \<const0>\;
  LOCKSTEP_Master_Out(398) <= \<const0>\;
  LOCKSTEP_Master_Out(399) <= \<const0>\;
  LOCKSTEP_Master_Out(400) <= \<const0>\;
  LOCKSTEP_Master_Out(401) <= \<const0>\;
  LOCKSTEP_Master_Out(402) <= \<const0>\;
  LOCKSTEP_Master_Out(403) <= \<const0>\;
  LOCKSTEP_Master_Out(404) <= \<const0>\;
  LOCKSTEP_Master_Out(405) <= \<const0>\;
  LOCKSTEP_Master_Out(406) <= \<const0>\;
  LOCKSTEP_Master_Out(407) <= \<const0>\;
  LOCKSTEP_Master_Out(408) <= \<const0>\;
  LOCKSTEP_Master_Out(409) <= \<const0>\;
  LOCKSTEP_Master_Out(410) <= \<const0>\;
  LOCKSTEP_Master_Out(411) <= \<const0>\;
  LOCKSTEP_Master_Out(412) <= \<const0>\;
  LOCKSTEP_Master_Out(413) <= \<const0>\;
  LOCKSTEP_Master_Out(414) <= \<const0>\;
  LOCKSTEP_Master_Out(415) <= \<const0>\;
  LOCKSTEP_Master_Out(416) <= \<const0>\;
  LOCKSTEP_Master_Out(417) <= \<const0>\;
  LOCKSTEP_Master_Out(418) <= \<const0>\;
  LOCKSTEP_Master_Out(419) <= \<const0>\;
  LOCKSTEP_Master_Out(420) <= \<const0>\;
  LOCKSTEP_Master_Out(421) <= \<const0>\;
  LOCKSTEP_Master_Out(422) <= \<const0>\;
  LOCKSTEP_Master_Out(423) <= \<const0>\;
  LOCKSTEP_Master_Out(424) <= \<const0>\;
  LOCKSTEP_Master_Out(425) <= \<const0>\;
  LOCKSTEP_Master_Out(426) <= \<const0>\;
  LOCKSTEP_Master_Out(427) <= \<const0>\;
  LOCKSTEP_Master_Out(428) <= \<const0>\;
  LOCKSTEP_Master_Out(429) <= \<const0>\;
  LOCKSTEP_Master_Out(430) <= \<const0>\;
  LOCKSTEP_Master_Out(431) <= \<const0>\;
  LOCKSTEP_Master_Out(432) <= \<const0>\;
  LOCKSTEP_Master_Out(433) <= \<const0>\;
  LOCKSTEP_Master_Out(434) <= \<const0>\;
  LOCKSTEP_Master_Out(435) <= \<const0>\;
  LOCKSTEP_Master_Out(436) <= \<const0>\;
  LOCKSTEP_Master_Out(437) <= \<const0>\;
  LOCKSTEP_Master_Out(438) <= \<const0>\;
  LOCKSTEP_Master_Out(439) <= \<const0>\;
  LOCKSTEP_Master_Out(440) <= \<const0>\;
  LOCKSTEP_Master_Out(441) <= \<const0>\;
  LOCKSTEP_Master_Out(442) <= \<const0>\;
  LOCKSTEP_Master_Out(443) <= \<const0>\;
  LOCKSTEP_Master_Out(444) <= \<const0>\;
  LOCKSTEP_Master_Out(445) <= \<const0>\;
  LOCKSTEP_Master_Out(446) <= \<const0>\;
  LOCKSTEP_Master_Out(447) <= \<const0>\;
  LOCKSTEP_Master_Out(448) <= \<const0>\;
  LOCKSTEP_Master_Out(449) <= \<const0>\;
  LOCKSTEP_Master_Out(450) <= \<const0>\;
  LOCKSTEP_Master_Out(451) <= \<const0>\;
  LOCKSTEP_Master_Out(452) <= \<const0>\;
  LOCKSTEP_Master_Out(453) <= \<const0>\;
  LOCKSTEP_Master_Out(454) <= \<const0>\;
  LOCKSTEP_Master_Out(455) <= \<const0>\;
  LOCKSTEP_Master_Out(456) <= \<const0>\;
  LOCKSTEP_Master_Out(457) <= \<const0>\;
  LOCKSTEP_Master_Out(458) <= \<const0>\;
  LOCKSTEP_Master_Out(459) <= \<const0>\;
  LOCKSTEP_Master_Out(460) <= \<const0>\;
  LOCKSTEP_Master_Out(461) <= \<const0>\;
  LOCKSTEP_Master_Out(462) <= \<const0>\;
  LOCKSTEP_Master_Out(463) <= \<const0>\;
  LOCKSTEP_Master_Out(464) <= \<const0>\;
  LOCKSTEP_Master_Out(465) <= \<const0>\;
  LOCKSTEP_Master_Out(466) <= \<const0>\;
  LOCKSTEP_Master_Out(467) <= \<const0>\;
  LOCKSTEP_Master_Out(468) <= \<const0>\;
  LOCKSTEP_Master_Out(469) <= \<const0>\;
  LOCKSTEP_Master_Out(470) <= \<const0>\;
  LOCKSTEP_Master_Out(471) <= \<const0>\;
  LOCKSTEP_Master_Out(472) <= \<const0>\;
  LOCKSTEP_Master_Out(473) <= \<const0>\;
  LOCKSTEP_Master_Out(474) <= \<const0>\;
  LOCKSTEP_Master_Out(475) <= \<const0>\;
  LOCKSTEP_Master_Out(476) <= \<const0>\;
  LOCKSTEP_Master_Out(477) <= \<const0>\;
  LOCKSTEP_Master_Out(478) <= \<const0>\;
  LOCKSTEP_Master_Out(479) <= \<const0>\;
  LOCKSTEP_Master_Out(480) <= \<const0>\;
  LOCKSTEP_Master_Out(481) <= \<const0>\;
  LOCKSTEP_Master_Out(482) <= \<const0>\;
  LOCKSTEP_Master_Out(483) <= \<const0>\;
  LOCKSTEP_Master_Out(484) <= \<const0>\;
  LOCKSTEP_Master_Out(485) <= \<const0>\;
  LOCKSTEP_Master_Out(486) <= \<const0>\;
  LOCKSTEP_Master_Out(487) <= \<const0>\;
  LOCKSTEP_Master_Out(488) <= \<const0>\;
  LOCKSTEP_Master_Out(489) <= \<const0>\;
  LOCKSTEP_Master_Out(490) <= \<const0>\;
  LOCKSTEP_Master_Out(491) <= \<const0>\;
  LOCKSTEP_Master_Out(492) <= \<const0>\;
  LOCKSTEP_Master_Out(493) <= \<const0>\;
  LOCKSTEP_Master_Out(494) <= \<const0>\;
  LOCKSTEP_Master_Out(495) <= \<const0>\;
  LOCKSTEP_Master_Out(496) <= \<const0>\;
  LOCKSTEP_Master_Out(497) <= \<const0>\;
  LOCKSTEP_Master_Out(498) <= \<const0>\;
  LOCKSTEP_Master_Out(499) <= \<const0>\;
  LOCKSTEP_Master_Out(500) <= \<const0>\;
  LOCKSTEP_Master_Out(501) <= \<const0>\;
  LOCKSTEP_Master_Out(502) <= \<const0>\;
  LOCKSTEP_Master_Out(503) <= \<const0>\;
  LOCKSTEP_Master_Out(504) <= \<const0>\;
  LOCKSTEP_Master_Out(505) <= \<const0>\;
  LOCKSTEP_Master_Out(506) <= \<const0>\;
  LOCKSTEP_Master_Out(507) <= \<const0>\;
  LOCKSTEP_Master_Out(508) <= \<const0>\;
  LOCKSTEP_Master_Out(509) <= \<const0>\;
  LOCKSTEP_Master_Out(510) <= \<const0>\;
  LOCKSTEP_Master_Out(511) <= \<const0>\;
  LOCKSTEP_Master_Out(512) <= \<const0>\;
  LOCKSTEP_Master_Out(513) <= \<const0>\;
  LOCKSTEP_Master_Out(514) <= \<const0>\;
  LOCKSTEP_Master_Out(515) <= \<const0>\;
  LOCKSTEP_Master_Out(516) <= \<const0>\;
  LOCKSTEP_Master_Out(517) <= \<const0>\;
  LOCKSTEP_Master_Out(518) <= \<const0>\;
  LOCKSTEP_Master_Out(519) <= \<const0>\;
  LOCKSTEP_Master_Out(520) <= \<const0>\;
  LOCKSTEP_Master_Out(521) <= \<const0>\;
  LOCKSTEP_Master_Out(522) <= \<const0>\;
  LOCKSTEP_Master_Out(523) <= \<const0>\;
  LOCKSTEP_Master_Out(524) <= \<const0>\;
  LOCKSTEP_Master_Out(525) <= \<const0>\;
  LOCKSTEP_Master_Out(526) <= \<const0>\;
  LOCKSTEP_Master_Out(527) <= \<const0>\;
  LOCKSTEP_Master_Out(528) <= \<const0>\;
  LOCKSTEP_Master_Out(529) <= \<const0>\;
  LOCKSTEP_Master_Out(530) <= \<const0>\;
  LOCKSTEP_Master_Out(531) <= \<const0>\;
  LOCKSTEP_Master_Out(532) <= \<const0>\;
  LOCKSTEP_Master_Out(533) <= \<const0>\;
  LOCKSTEP_Master_Out(534) <= \<const0>\;
  LOCKSTEP_Master_Out(535) <= \<const0>\;
  LOCKSTEP_Master_Out(536) <= \<const0>\;
  LOCKSTEP_Master_Out(537) <= \<const0>\;
  LOCKSTEP_Master_Out(538) <= \<const0>\;
  LOCKSTEP_Master_Out(539) <= \<const0>\;
  LOCKSTEP_Master_Out(540) <= \<const0>\;
  LOCKSTEP_Master_Out(541) <= \<const0>\;
  LOCKSTEP_Master_Out(542) <= \<const0>\;
  LOCKSTEP_Master_Out(543) <= \<const0>\;
  LOCKSTEP_Master_Out(544) <= \<const0>\;
  LOCKSTEP_Master_Out(545) <= \<const0>\;
  LOCKSTEP_Master_Out(546) <= \<const0>\;
  LOCKSTEP_Master_Out(547) <= \<const0>\;
  LOCKSTEP_Master_Out(548) <= \<const0>\;
  LOCKSTEP_Master_Out(549) <= \<const0>\;
  LOCKSTEP_Master_Out(550) <= \<const0>\;
  LOCKSTEP_Master_Out(551) <= \<const0>\;
  LOCKSTEP_Master_Out(552) <= \<const0>\;
  LOCKSTEP_Master_Out(553) <= \<const0>\;
  LOCKSTEP_Master_Out(554) <= \<const0>\;
  LOCKSTEP_Master_Out(555) <= \<const0>\;
  LOCKSTEP_Master_Out(556) <= \<const0>\;
  LOCKSTEP_Master_Out(557) <= \<const0>\;
  LOCKSTEP_Master_Out(558) <= \<const0>\;
  LOCKSTEP_Master_Out(559) <= \<const0>\;
  LOCKSTEP_Master_Out(560) <= \<const0>\;
  LOCKSTEP_Master_Out(561) <= \<const0>\;
  LOCKSTEP_Master_Out(562) <= \<const0>\;
  LOCKSTEP_Master_Out(563) <= \<const0>\;
  LOCKSTEP_Master_Out(564) <= \<const0>\;
  LOCKSTEP_Master_Out(565) <= \<const0>\;
  LOCKSTEP_Master_Out(566) <= \<const0>\;
  LOCKSTEP_Master_Out(567) <= \<const0>\;
  LOCKSTEP_Master_Out(568) <= \<const0>\;
  LOCKSTEP_Master_Out(569) <= \<const0>\;
  LOCKSTEP_Master_Out(570) <= \<const0>\;
  LOCKSTEP_Master_Out(571) <= \<const0>\;
  LOCKSTEP_Master_Out(572) <= \<const0>\;
  LOCKSTEP_Master_Out(573) <= \<const0>\;
  LOCKSTEP_Master_Out(574) <= \<const0>\;
  LOCKSTEP_Master_Out(575) <= \<const0>\;
  LOCKSTEP_Master_Out(576) <= \<const0>\;
  LOCKSTEP_Master_Out(577) <= \<const0>\;
  LOCKSTEP_Master_Out(578) <= \<const0>\;
  LOCKSTEP_Master_Out(579) <= \<const0>\;
  LOCKSTEP_Master_Out(580) <= \<const0>\;
  LOCKSTEP_Master_Out(581) <= \<const0>\;
  LOCKSTEP_Master_Out(582) <= \<const0>\;
  LOCKSTEP_Master_Out(583) <= \<const0>\;
  LOCKSTEP_Master_Out(584) <= \<const0>\;
  LOCKSTEP_Master_Out(585) <= \<const0>\;
  LOCKSTEP_Master_Out(586) <= \<const0>\;
  LOCKSTEP_Master_Out(587) <= \<const0>\;
  LOCKSTEP_Master_Out(588) <= \<const0>\;
  LOCKSTEP_Master_Out(589) <= \<const0>\;
  LOCKSTEP_Master_Out(590) <= \<const0>\;
  LOCKSTEP_Master_Out(591) <= \<const0>\;
  LOCKSTEP_Master_Out(592) <= \<const0>\;
  LOCKSTEP_Master_Out(593) <= \<const0>\;
  LOCKSTEP_Master_Out(594) <= \<const0>\;
  LOCKSTEP_Master_Out(595) <= \<const0>\;
  LOCKSTEP_Master_Out(596) <= \<const0>\;
  LOCKSTEP_Master_Out(597) <= \<const0>\;
  LOCKSTEP_Master_Out(598) <= \<const0>\;
  LOCKSTEP_Master_Out(599) <= \<const0>\;
  LOCKSTEP_Master_Out(600) <= \<const0>\;
  LOCKSTEP_Master_Out(601) <= \<const0>\;
  LOCKSTEP_Master_Out(602) <= \<const0>\;
  LOCKSTEP_Master_Out(603) <= \<const0>\;
  LOCKSTEP_Master_Out(604) <= \<const0>\;
  LOCKSTEP_Master_Out(605) <= \<const0>\;
  LOCKSTEP_Master_Out(606) <= \<const0>\;
  LOCKSTEP_Master_Out(607) <= \<const0>\;
  LOCKSTEP_Master_Out(608) <= \<const0>\;
  LOCKSTEP_Master_Out(609) <= \<const0>\;
  LOCKSTEP_Master_Out(610) <= \<const0>\;
  LOCKSTEP_Master_Out(611) <= \<const0>\;
  LOCKSTEP_Master_Out(612) <= \<const0>\;
  LOCKSTEP_Master_Out(613) <= \<const0>\;
  LOCKSTEP_Master_Out(614) <= \<const0>\;
  LOCKSTEP_Master_Out(615) <= \<const0>\;
  LOCKSTEP_Master_Out(616) <= \<const0>\;
  LOCKSTEP_Master_Out(617) <= \<const0>\;
  LOCKSTEP_Master_Out(618) <= \<const0>\;
  LOCKSTEP_Master_Out(619) <= \<const0>\;
  LOCKSTEP_Master_Out(620) <= \<const0>\;
  LOCKSTEP_Master_Out(621) <= \<const0>\;
  LOCKSTEP_Master_Out(622) <= \<const0>\;
  LOCKSTEP_Master_Out(623) <= \<const0>\;
  LOCKSTEP_Master_Out(624) <= \<const0>\;
  LOCKSTEP_Master_Out(625) <= \<const0>\;
  LOCKSTEP_Master_Out(626) <= \<const0>\;
  LOCKSTEP_Master_Out(627) <= \<const0>\;
  LOCKSTEP_Master_Out(628) <= \<const0>\;
  LOCKSTEP_Master_Out(629) <= \<const0>\;
  LOCKSTEP_Master_Out(630) <= \<const0>\;
  LOCKSTEP_Master_Out(631) <= \<const0>\;
  LOCKSTEP_Master_Out(632) <= \<const0>\;
  LOCKSTEP_Master_Out(633) <= \<const0>\;
  LOCKSTEP_Master_Out(634) <= \<const0>\;
  LOCKSTEP_Master_Out(635) <= \<const0>\;
  LOCKSTEP_Master_Out(636) <= \<const0>\;
  LOCKSTEP_Master_Out(637) <= \<const0>\;
  LOCKSTEP_Master_Out(638) <= \<const0>\;
  LOCKSTEP_Master_Out(639) <= \<const0>\;
  LOCKSTEP_Master_Out(640) <= \<const0>\;
  LOCKSTEP_Master_Out(641) <= \<const0>\;
  LOCKSTEP_Master_Out(642) <= \<const0>\;
  LOCKSTEP_Master_Out(643) <= \<const0>\;
  LOCKSTEP_Master_Out(644) <= \<const0>\;
  LOCKSTEP_Master_Out(645) <= \<const0>\;
  LOCKSTEP_Master_Out(646) <= \<const0>\;
  LOCKSTEP_Master_Out(647) <= \<const0>\;
  LOCKSTEP_Master_Out(648) <= \<const0>\;
  LOCKSTEP_Master_Out(649) <= \<const0>\;
  LOCKSTEP_Master_Out(650) <= \<const0>\;
  LOCKSTEP_Master_Out(651) <= \<const0>\;
  LOCKSTEP_Master_Out(652) <= \<const0>\;
  LOCKSTEP_Master_Out(653) <= \<const0>\;
  LOCKSTEP_Master_Out(654) <= \<const0>\;
  LOCKSTEP_Master_Out(655) <= \<const0>\;
  LOCKSTEP_Master_Out(656) <= \<const0>\;
  LOCKSTEP_Master_Out(657) <= \<const0>\;
  LOCKSTEP_Master_Out(658) <= \<const0>\;
  LOCKSTEP_Master_Out(659) <= \<const0>\;
  LOCKSTEP_Master_Out(660) <= \<const0>\;
  LOCKSTEP_Master_Out(661) <= \<const0>\;
  LOCKSTEP_Master_Out(662) <= \<const0>\;
  LOCKSTEP_Master_Out(663) <= \<const0>\;
  LOCKSTEP_Master_Out(664) <= \<const0>\;
  LOCKSTEP_Master_Out(665) <= \<const0>\;
  LOCKSTEP_Master_Out(666) <= \<const0>\;
  LOCKSTEP_Master_Out(667) <= \<const0>\;
  LOCKSTEP_Master_Out(668) <= \<const0>\;
  LOCKSTEP_Master_Out(669) <= \<const0>\;
  LOCKSTEP_Master_Out(670) <= \<const0>\;
  LOCKSTEP_Master_Out(671) <= \<const0>\;
  LOCKSTEP_Master_Out(672) <= \<const0>\;
  LOCKSTEP_Master_Out(673) <= \<const0>\;
  LOCKSTEP_Master_Out(674) <= \<const0>\;
  LOCKSTEP_Master_Out(675) <= \<const0>\;
  LOCKSTEP_Master_Out(676) <= \<const0>\;
  LOCKSTEP_Master_Out(677) <= \<const0>\;
  LOCKSTEP_Master_Out(678) <= \<const0>\;
  LOCKSTEP_Master_Out(679) <= \<const0>\;
  LOCKSTEP_Master_Out(680) <= \<const0>\;
  LOCKSTEP_Master_Out(681) <= \<const0>\;
  LOCKSTEP_Master_Out(682) <= \<const0>\;
  LOCKSTEP_Master_Out(683) <= \<const0>\;
  LOCKSTEP_Master_Out(684) <= \<const0>\;
  LOCKSTEP_Master_Out(685) <= \<const0>\;
  LOCKSTEP_Master_Out(686) <= \<const0>\;
  LOCKSTEP_Master_Out(687) <= \<const0>\;
  LOCKSTEP_Master_Out(688) <= \<const0>\;
  LOCKSTEP_Master_Out(689) <= \<const0>\;
  LOCKSTEP_Master_Out(690) <= \<const0>\;
  LOCKSTEP_Master_Out(691) <= \<const0>\;
  LOCKSTEP_Master_Out(692) <= \<const0>\;
  LOCKSTEP_Master_Out(693) <= \<const0>\;
  LOCKSTEP_Master_Out(694) <= \<const0>\;
  LOCKSTEP_Master_Out(695) <= \<const0>\;
  LOCKSTEP_Master_Out(696) <= \<const0>\;
  LOCKSTEP_Master_Out(697) <= \<const0>\;
  LOCKSTEP_Master_Out(698) <= \<const0>\;
  LOCKSTEP_Master_Out(699) <= \<const0>\;
  LOCKSTEP_Master_Out(700) <= \<const0>\;
  LOCKSTEP_Master_Out(701) <= \<const0>\;
  LOCKSTEP_Master_Out(702) <= \<const0>\;
  LOCKSTEP_Master_Out(703) <= \<const0>\;
  LOCKSTEP_Master_Out(704) <= \<const0>\;
  LOCKSTEP_Master_Out(705) <= \<const0>\;
  LOCKSTEP_Master_Out(706) <= \<const0>\;
  LOCKSTEP_Master_Out(707) <= \<const0>\;
  LOCKSTEP_Master_Out(708) <= \<const0>\;
  LOCKSTEP_Master_Out(709) <= \<const0>\;
  LOCKSTEP_Master_Out(710) <= \<const0>\;
  LOCKSTEP_Master_Out(711) <= \<const0>\;
  LOCKSTEP_Master_Out(712) <= \<const0>\;
  LOCKSTEP_Master_Out(713) <= \<const0>\;
  LOCKSTEP_Master_Out(714) <= \<const0>\;
  LOCKSTEP_Master_Out(715) <= \<const0>\;
  LOCKSTEP_Master_Out(716) <= \<const0>\;
  LOCKSTEP_Master_Out(717) <= \<const0>\;
  LOCKSTEP_Master_Out(718) <= \<const0>\;
  LOCKSTEP_Master_Out(719) <= \<const0>\;
  LOCKSTEP_Master_Out(720) <= \<const0>\;
  LOCKSTEP_Master_Out(721) <= \<const0>\;
  LOCKSTEP_Master_Out(722) <= \<const0>\;
  LOCKSTEP_Master_Out(723) <= \<const0>\;
  LOCKSTEP_Master_Out(724) <= \<const0>\;
  LOCKSTEP_Master_Out(725) <= \<const0>\;
  LOCKSTEP_Master_Out(726) <= \<const0>\;
  LOCKSTEP_Master_Out(727) <= \<const0>\;
  LOCKSTEP_Master_Out(728) <= \<const0>\;
  LOCKSTEP_Master_Out(729) <= \<const0>\;
  LOCKSTEP_Master_Out(730) <= \<const0>\;
  LOCKSTEP_Master_Out(731) <= \<const0>\;
  LOCKSTEP_Master_Out(732) <= \<const0>\;
  LOCKSTEP_Master_Out(733) <= \<const0>\;
  LOCKSTEP_Master_Out(734) <= \<const0>\;
  LOCKSTEP_Master_Out(735) <= \<const0>\;
  LOCKSTEP_Master_Out(736) <= \<const0>\;
  LOCKSTEP_Master_Out(737) <= \<const0>\;
  LOCKSTEP_Master_Out(738) <= \<const0>\;
  LOCKSTEP_Master_Out(739) <= \<const0>\;
  LOCKSTEP_Master_Out(740) <= \<const0>\;
  LOCKSTEP_Master_Out(741) <= \<const0>\;
  LOCKSTEP_Master_Out(742) <= \<const0>\;
  LOCKSTEP_Master_Out(743) <= \<const0>\;
  LOCKSTEP_Master_Out(744) <= \<const0>\;
  LOCKSTEP_Master_Out(745) <= \<const0>\;
  LOCKSTEP_Master_Out(746) <= \<const0>\;
  LOCKSTEP_Master_Out(747) <= \<const0>\;
  LOCKSTEP_Master_Out(748) <= \<const0>\;
  LOCKSTEP_Master_Out(749) <= \<const0>\;
  LOCKSTEP_Master_Out(750) <= \<const0>\;
  LOCKSTEP_Master_Out(751) <= \<const0>\;
  LOCKSTEP_Master_Out(752) <= \<const0>\;
  LOCKSTEP_Master_Out(753) <= \<const0>\;
  LOCKSTEP_Master_Out(754) <= \<const0>\;
  LOCKSTEP_Master_Out(755) <= \<const0>\;
  LOCKSTEP_Master_Out(756) <= \<const0>\;
  LOCKSTEP_Master_Out(757) <= \<const0>\;
  LOCKSTEP_Master_Out(758) <= \<const0>\;
  LOCKSTEP_Master_Out(759) <= \<const0>\;
  LOCKSTEP_Master_Out(760) <= \<const0>\;
  LOCKSTEP_Master_Out(761) <= \<const0>\;
  LOCKSTEP_Master_Out(762) <= \<const0>\;
  LOCKSTEP_Master_Out(763) <= \<const0>\;
  LOCKSTEP_Master_Out(764) <= \<const0>\;
  LOCKSTEP_Master_Out(765) <= \<const0>\;
  LOCKSTEP_Master_Out(766) <= \<const0>\;
  LOCKSTEP_Master_Out(767) <= \<const0>\;
  LOCKSTEP_Master_Out(768) <= \<const0>\;
  LOCKSTEP_Master_Out(769) <= \<const0>\;
  LOCKSTEP_Master_Out(770) <= \<const0>\;
  LOCKSTEP_Master_Out(771) <= \<const0>\;
  LOCKSTEP_Master_Out(772) <= \<const0>\;
  LOCKSTEP_Master_Out(773) <= \<const0>\;
  LOCKSTEP_Master_Out(774) <= \<const0>\;
  LOCKSTEP_Master_Out(775) <= \<const0>\;
  LOCKSTEP_Master_Out(776) <= \<const0>\;
  LOCKSTEP_Master_Out(777) <= \<const0>\;
  LOCKSTEP_Master_Out(778) <= \<const0>\;
  LOCKSTEP_Master_Out(779) <= \<const0>\;
  LOCKSTEP_Master_Out(780) <= \<const0>\;
  LOCKSTEP_Master_Out(781) <= \<const0>\;
  LOCKSTEP_Master_Out(782) <= \<const0>\;
  LOCKSTEP_Master_Out(783) <= \<const0>\;
  LOCKSTEP_Master_Out(784) <= \<const0>\;
  LOCKSTEP_Master_Out(785) <= \<const0>\;
  LOCKSTEP_Master_Out(786) <= \<const0>\;
  LOCKSTEP_Master_Out(787) <= \<const0>\;
  LOCKSTEP_Master_Out(788) <= \<const0>\;
  LOCKSTEP_Master_Out(789) <= \<const0>\;
  LOCKSTEP_Master_Out(790) <= \<const0>\;
  LOCKSTEP_Master_Out(791) <= \<const0>\;
  LOCKSTEP_Master_Out(792) <= \<const0>\;
  LOCKSTEP_Master_Out(793) <= \<const0>\;
  LOCKSTEP_Master_Out(794) <= \<const0>\;
  LOCKSTEP_Master_Out(795) <= \<const0>\;
  LOCKSTEP_Master_Out(796) <= \<const0>\;
  LOCKSTEP_Master_Out(797) <= \<const0>\;
  LOCKSTEP_Master_Out(798) <= \<const0>\;
  LOCKSTEP_Master_Out(799) <= \<const0>\;
  LOCKSTEP_Master_Out(800) <= \<const0>\;
  LOCKSTEP_Master_Out(801) <= \<const0>\;
  LOCKSTEP_Master_Out(802) <= \<const0>\;
  LOCKSTEP_Master_Out(803) <= \<const0>\;
  LOCKSTEP_Master_Out(804) <= \<const0>\;
  LOCKSTEP_Master_Out(805) <= \<const0>\;
  LOCKSTEP_Master_Out(806) <= \<const0>\;
  LOCKSTEP_Master_Out(807) <= \<const0>\;
  LOCKSTEP_Master_Out(808) <= \<const0>\;
  LOCKSTEP_Master_Out(809) <= \<const0>\;
  LOCKSTEP_Master_Out(810) <= \<const0>\;
  LOCKSTEP_Master_Out(811) <= \<const0>\;
  LOCKSTEP_Master_Out(812) <= \<const0>\;
  LOCKSTEP_Master_Out(813) <= \<const0>\;
  LOCKSTEP_Master_Out(814) <= \<const0>\;
  LOCKSTEP_Master_Out(815) <= \<const0>\;
  LOCKSTEP_Master_Out(816) <= \<const0>\;
  LOCKSTEP_Master_Out(817) <= \<const0>\;
  LOCKSTEP_Master_Out(818) <= \<const0>\;
  LOCKSTEP_Master_Out(819) <= \<const0>\;
  LOCKSTEP_Master_Out(820) <= \<const0>\;
  LOCKSTEP_Master_Out(821) <= \<const0>\;
  LOCKSTEP_Master_Out(822) <= \<const0>\;
  LOCKSTEP_Master_Out(823) <= \<const0>\;
  LOCKSTEP_Master_Out(824) <= \<const0>\;
  LOCKSTEP_Master_Out(825) <= \<const0>\;
  LOCKSTEP_Master_Out(826) <= \<const0>\;
  LOCKSTEP_Master_Out(827) <= \<const0>\;
  LOCKSTEP_Master_Out(828) <= \<const0>\;
  LOCKSTEP_Master_Out(829) <= \<const0>\;
  LOCKSTEP_Master_Out(830) <= \<const0>\;
  LOCKSTEP_Master_Out(831) <= \<const0>\;
  LOCKSTEP_Master_Out(832) <= \<const0>\;
  LOCKSTEP_Master_Out(833) <= \<const0>\;
  LOCKSTEP_Master_Out(834) <= \<const0>\;
  LOCKSTEP_Master_Out(835) <= \<const0>\;
  LOCKSTEP_Master_Out(836) <= \<const0>\;
  LOCKSTEP_Master_Out(837) <= \<const0>\;
  LOCKSTEP_Master_Out(838) <= \<const0>\;
  LOCKSTEP_Master_Out(839) <= \<const0>\;
  LOCKSTEP_Master_Out(840) <= \<const0>\;
  LOCKSTEP_Master_Out(841) <= \<const0>\;
  LOCKSTEP_Master_Out(842) <= \<const0>\;
  LOCKSTEP_Master_Out(843) <= \<const0>\;
  LOCKSTEP_Master_Out(844) <= \<const0>\;
  LOCKSTEP_Master_Out(845) <= \<const0>\;
  LOCKSTEP_Master_Out(846) <= \<const0>\;
  LOCKSTEP_Master_Out(847) <= \<const0>\;
  LOCKSTEP_Master_Out(848) <= \<const0>\;
  LOCKSTEP_Master_Out(849) <= \<const0>\;
  LOCKSTEP_Master_Out(850) <= \<const0>\;
  LOCKSTEP_Master_Out(851) <= \<const0>\;
  LOCKSTEP_Master_Out(852) <= \<const0>\;
  LOCKSTEP_Master_Out(853) <= \<const0>\;
  LOCKSTEP_Master_Out(854) <= \<const0>\;
  LOCKSTEP_Master_Out(855) <= \<const0>\;
  LOCKSTEP_Master_Out(856) <= \<const0>\;
  LOCKSTEP_Master_Out(857) <= \<const0>\;
  LOCKSTEP_Master_Out(858) <= \<const0>\;
  LOCKSTEP_Master_Out(859) <= \<const0>\;
  LOCKSTEP_Master_Out(860) <= \<const0>\;
  LOCKSTEP_Master_Out(861) <= \<const0>\;
  LOCKSTEP_Master_Out(862) <= \<const0>\;
  LOCKSTEP_Master_Out(863) <= \<const0>\;
  LOCKSTEP_Master_Out(864) <= \<const0>\;
  LOCKSTEP_Master_Out(865) <= \<const0>\;
  LOCKSTEP_Master_Out(866) <= \<const0>\;
  LOCKSTEP_Master_Out(867) <= \<const0>\;
  LOCKSTEP_Master_Out(868) <= \<const0>\;
  LOCKSTEP_Master_Out(869) <= \<const0>\;
  LOCKSTEP_Master_Out(870) <= \<const0>\;
  LOCKSTEP_Master_Out(871) <= \<const0>\;
  LOCKSTEP_Master_Out(872) <= \<const0>\;
  LOCKSTEP_Master_Out(873) <= \<const0>\;
  LOCKSTEP_Master_Out(874) <= \<const0>\;
  LOCKSTEP_Master_Out(875) <= \<const0>\;
  LOCKSTEP_Master_Out(876) <= \<const0>\;
  LOCKSTEP_Master_Out(877) <= \<const0>\;
  LOCKSTEP_Master_Out(878) <= \<const0>\;
  LOCKSTEP_Master_Out(879) <= \<const0>\;
  LOCKSTEP_Master_Out(880) <= \<const0>\;
  LOCKSTEP_Master_Out(881) <= \<const0>\;
  LOCKSTEP_Master_Out(882) <= \<const0>\;
  LOCKSTEP_Master_Out(883) <= \<const0>\;
  LOCKSTEP_Master_Out(884) <= \<const0>\;
  LOCKSTEP_Master_Out(885) <= \<const0>\;
  LOCKSTEP_Master_Out(886) <= \<const0>\;
  LOCKSTEP_Master_Out(887) <= \<const0>\;
  LOCKSTEP_Master_Out(888) <= \<const0>\;
  LOCKSTEP_Master_Out(889) <= \<const0>\;
  LOCKSTEP_Master_Out(890) <= \<const0>\;
  LOCKSTEP_Master_Out(891) <= \<const0>\;
  LOCKSTEP_Master_Out(892) <= \<const0>\;
  LOCKSTEP_Master_Out(893) <= \<const0>\;
  LOCKSTEP_Master_Out(894) <= \<const0>\;
  LOCKSTEP_Master_Out(895) <= \<const0>\;
  LOCKSTEP_Master_Out(896) <= \<const0>\;
  LOCKSTEP_Master_Out(897) <= \<const0>\;
  LOCKSTEP_Master_Out(898) <= \<const0>\;
  LOCKSTEP_Master_Out(899) <= \<const0>\;
  LOCKSTEP_Master_Out(900) <= \<const0>\;
  LOCKSTEP_Master_Out(901) <= \<const0>\;
  LOCKSTEP_Master_Out(902) <= \<const0>\;
  LOCKSTEP_Master_Out(903) <= \<const0>\;
  LOCKSTEP_Master_Out(904) <= \<const0>\;
  LOCKSTEP_Master_Out(905) <= \<const0>\;
  LOCKSTEP_Master_Out(906) <= \<const0>\;
  LOCKSTEP_Master_Out(907) <= \<const0>\;
  LOCKSTEP_Master_Out(908) <= \<const0>\;
  LOCKSTEP_Master_Out(909) <= \<const0>\;
  LOCKSTEP_Master_Out(910) <= \<const0>\;
  LOCKSTEP_Master_Out(911) <= \<const0>\;
  LOCKSTEP_Master_Out(912) <= \<const0>\;
  LOCKSTEP_Master_Out(913) <= \<const0>\;
  LOCKSTEP_Master_Out(914) <= \<const0>\;
  LOCKSTEP_Master_Out(915) <= \<const0>\;
  LOCKSTEP_Master_Out(916) <= \<const0>\;
  LOCKSTEP_Master_Out(917) <= \<const0>\;
  LOCKSTEP_Master_Out(918) <= \<const0>\;
  LOCKSTEP_Master_Out(919) <= \<const0>\;
  LOCKSTEP_Master_Out(920) <= \<const0>\;
  LOCKSTEP_Master_Out(921) <= \<const0>\;
  LOCKSTEP_Master_Out(922) <= \<const0>\;
  LOCKSTEP_Master_Out(923) <= \<const0>\;
  LOCKSTEP_Master_Out(924) <= \<const0>\;
  LOCKSTEP_Master_Out(925) <= \<const0>\;
  LOCKSTEP_Master_Out(926) <= \<const0>\;
  LOCKSTEP_Master_Out(927) <= \<const0>\;
  LOCKSTEP_Master_Out(928) <= \<const0>\;
  LOCKSTEP_Master_Out(929) <= \<const0>\;
  LOCKSTEP_Master_Out(930) <= \<const0>\;
  LOCKSTEP_Master_Out(931) <= \<const0>\;
  LOCKSTEP_Master_Out(932) <= \<const0>\;
  LOCKSTEP_Master_Out(933) <= \<const0>\;
  LOCKSTEP_Master_Out(934) <= \<const0>\;
  LOCKSTEP_Master_Out(935) <= \<const0>\;
  LOCKSTEP_Master_Out(936) <= \<const0>\;
  LOCKSTEP_Master_Out(937) <= \<const0>\;
  LOCKSTEP_Master_Out(938) <= \<const0>\;
  LOCKSTEP_Master_Out(939) <= \<const0>\;
  LOCKSTEP_Master_Out(940) <= \<const0>\;
  LOCKSTEP_Master_Out(941) <= \<const0>\;
  LOCKSTEP_Master_Out(942) <= \<const0>\;
  LOCKSTEP_Master_Out(943) <= \<const0>\;
  LOCKSTEP_Master_Out(944) <= \<const0>\;
  LOCKSTEP_Master_Out(945) <= \<const0>\;
  LOCKSTEP_Master_Out(946) <= \<const0>\;
  LOCKSTEP_Master_Out(947) <= \<const0>\;
  LOCKSTEP_Master_Out(948) <= \<const0>\;
  LOCKSTEP_Master_Out(949) <= \<const0>\;
  LOCKSTEP_Master_Out(950) <= \<const0>\;
  LOCKSTEP_Master_Out(951) <= \<const0>\;
  LOCKSTEP_Master_Out(952) <= \<const0>\;
  LOCKSTEP_Master_Out(953) <= \<const0>\;
  LOCKSTEP_Master_Out(954) <= \<const0>\;
  LOCKSTEP_Master_Out(955) <= \<const0>\;
  LOCKSTEP_Master_Out(956) <= \<const0>\;
  LOCKSTEP_Master_Out(957) <= \<const0>\;
  LOCKSTEP_Master_Out(958) <= \<const0>\;
  LOCKSTEP_Master_Out(959) <= \<const0>\;
  LOCKSTEP_Master_Out(960) <= \<const0>\;
  LOCKSTEP_Master_Out(961) <= \<const0>\;
  LOCKSTEP_Master_Out(962) <= \<const0>\;
  LOCKSTEP_Master_Out(963) <= \<const0>\;
  LOCKSTEP_Master_Out(964) <= \<const0>\;
  LOCKSTEP_Master_Out(965) <= \<const0>\;
  LOCKSTEP_Master_Out(966) <= \<const0>\;
  LOCKSTEP_Master_Out(967) <= \<const0>\;
  LOCKSTEP_Master_Out(968) <= \<const0>\;
  LOCKSTEP_Master_Out(969) <= \<const0>\;
  LOCKSTEP_Master_Out(970) <= \<const0>\;
  LOCKSTEP_Master_Out(971) <= \<const0>\;
  LOCKSTEP_Master_Out(972) <= \<const0>\;
  LOCKSTEP_Master_Out(973) <= \<const0>\;
  LOCKSTEP_Master_Out(974) <= \<const0>\;
  LOCKSTEP_Master_Out(975) <= \<const0>\;
  LOCKSTEP_Master_Out(976) <= \<const0>\;
  LOCKSTEP_Master_Out(977) <= \<const0>\;
  LOCKSTEP_Master_Out(978) <= \<const0>\;
  LOCKSTEP_Master_Out(979) <= \<const0>\;
  LOCKSTEP_Master_Out(980) <= \<const0>\;
  LOCKSTEP_Master_Out(981) <= \<const0>\;
  LOCKSTEP_Master_Out(982) <= \<const0>\;
  LOCKSTEP_Master_Out(983) <= \<const0>\;
  LOCKSTEP_Master_Out(984) <= \<const0>\;
  LOCKSTEP_Master_Out(985) <= \<const0>\;
  LOCKSTEP_Master_Out(986) <= \<const0>\;
  LOCKSTEP_Master_Out(987) <= \<const0>\;
  LOCKSTEP_Master_Out(988) <= \<const0>\;
  LOCKSTEP_Master_Out(989) <= \<const0>\;
  LOCKSTEP_Master_Out(990) <= \<const0>\;
  LOCKSTEP_Master_Out(991) <= \<const0>\;
  LOCKSTEP_Master_Out(992) <= \<const0>\;
  LOCKSTEP_Master_Out(993) <= \<const0>\;
  LOCKSTEP_Master_Out(994) <= \<const0>\;
  LOCKSTEP_Master_Out(995) <= \<const0>\;
  LOCKSTEP_Master_Out(996) <= \<const0>\;
  LOCKSTEP_Master_Out(997) <= \<const0>\;
  LOCKSTEP_Master_Out(998) <= \<const0>\;
  LOCKSTEP_Master_Out(999) <= \<const0>\;
  LOCKSTEP_Master_Out(1000) <= \<const0>\;
  LOCKSTEP_Master_Out(1001) <= \<const0>\;
  LOCKSTEP_Master_Out(1002) <= \<const0>\;
  LOCKSTEP_Master_Out(1003) <= \<const0>\;
  LOCKSTEP_Master_Out(1004) <= \<const0>\;
  LOCKSTEP_Master_Out(1005) <= \<const0>\;
  LOCKSTEP_Master_Out(1006) <= \<const0>\;
  LOCKSTEP_Master_Out(1007) <= \<const0>\;
  LOCKSTEP_Master_Out(1008) <= \<const0>\;
  LOCKSTEP_Master_Out(1009) <= \<const0>\;
  LOCKSTEP_Master_Out(1010) <= \<const0>\;
  LOCKSTEP_Master_Out(1011) <= \<const0>\;
  LOCKSTEP_Master_Out(1012) <= \<const0>\;
  LOCKSTEP_Master_Out(1013) <= \<const0>\;
  LOCKSTEP_Master_Out(1014) <= \<const0>\;
  LOCKSTEP_Master_Out(1015) <= \<const0>\;
  LOCKSTEP_Master_Out(1016) <= \<const0>\;
  LOCKSTEP_Master_Out(1017) <= \<const0>\;
  LOCKSTEP_Master_Out(1018) <= \<const0>\;
  LOCKSTEP_Master_Out(1019) <= \<const0>\;
  LOCKSTEP_Master_Out(1020) <= \<const0>\;
  LOCKSTEP_Master_Out(1021) <= \<const0>\;
  LOCKSTEP_Master_Out(1022) <= \<const0>\;
  LOCKSTEP_Master_Out(1023) <= \<const0>\;
  LOCKSTEP_Master_Out(1024) <= \<const0>\;
  LOCKSTEP_Master_Out(1025) <= \<const0>\;
  LOCKSTEP_Master_Out(1026) <= \<const0>\;
  LOCKSTEP_Master_Out(1027) <= \<const0>\;
  LOCKSTEP_Master_Out(1028) <= \<const0>\;
  LOCKSTEP_Master_Out(1029) <= \<const0>\;
  LOCKSTEP_Master_Out(1030) <= \<const0>\;
  LOCKSTEP_Master_Out(1031) <= \<const0>\;
  LOCKSTEP_Master_Out(1032) <= \<const0>\;
  LOCKSTEP_Master_Out(1033) <= \<const0>\;
  LOCKSTEP_Master_Out(1034) <= \<const0>\;
  LOCKSTEP_Master_Out(1035) <= \<const0>\;
  LOCKSTEP_Master_Out(1036) <= \<const0>\;
  LOCKSTEP_Master_Out(1037) <= \<const0>\;
  LOCKSTEP_Master_Out(1038) <= \<const0>\;
  LOCKSTEP_Master_Out(1039) <= \<const0>\;
  LOCKSTEP_Master_Out(1040) <= \<const0>\;
  LOCKSTEP_Master_Out(1041) <= \<const0>\;
  LOCKSTEP_Master_Out(1042) <= \<const0>\;
  LOCKSTEP_Master_Out(1043) <= \<const0>\;
  LOCKSTEP_Master_Out(1044) <= \<const0>\;
  LOCKSTEP_Master_Out(1045) <= \<const0>\;
  LOCKSTEP_Master_Out(1046) <= \<const0>\;
  LOCKSTEP_Master_Out(1047) <= \<const0>\;
  LOCKSTEP_Master_Out(1048) <= \<const0>\;
  LOCKSTEP_Master_Out(1049) <= \<const0>\;
  LOCKSTEP_Master_Out(1050) <= \<const0>\;
  LOCKSTEP_Master_Out(1051) <= \<const0>\;
  LOCKSTEP_Master_Out(1052) <= \<const0>\;
  LOCKSTEP_Master_Out(1053) <= \<const0>\;
  LOCKSTEP_Master_Out(1054) <= \<const0>\;
  LOCKSTEP_Master_Out(1055) <= \<const0>\;
  LOCKSTEP_Master_Out(1056) <= \<const0>\;
  LOCKSTEP_Master_Out(1057) <= \<const0>\;
  LOCKSTEP_Master_Out(1058) <= \<const0>\;
  LOCKSTEP_Master_Out(1059) <= \<const0>\;
  LOCKSTEP_Master_Out(1060) <= \<const0>\;
  LOCKSTEP_Master_Out(1061) <= \<const0>\;
  LOCKSTEP_Master_Out(1062) <= \<const0>\;
  LOCKSTEP_Master_Out(1063) <= \<const0>\;
  LOCKSTEP_Master_Out(1064) <= \<const0>\;
  LOCKSTEP_Master_Out(1065) <= \<const0>\;
  LOCKSTEP_Master_Out(1066) <= \<const0>\;
  LOCKSTEP_Master_Out(1067) <= \<const0>\;
  LOCKSTEP_Master_Out(1068) <= \<const0>\;
  LOCKSTEP_Master_Out(1069) <= \<const0>\;
  LOCKSTEP_Master_Out(1070) <= \<const0>\;
  LOCKSTEP_Master_Out(1071) <= \<const0>\;
  LOCKSTEP_Master_Out(1072) <= \<const0>\;
  LOCKSTEP_Master_Out(1073) <= \<const0>\;
  LOCKSTEP_Master_Out(1074) <= \<const0>\;
  LOCKSTEP_Master_Out(1075) <= \<const0>\;
  LOCKSTEP_Master_Out(1076) <= \<const0>\;
  LOCKSTEP_Master_Out(1077) <= \<const0>\;
  LOCKSTEP_Master_Out(1078) <= \<const0>\;
  LOCKSTEP_Master_Out(1079) <= \<const0>\;
  LOCKSTEP_Master_Out(1080) <= \<const0>\;
  LOCKSTEP_Master_Out(1081) <= \<const0>\;
  LOCKSTEP_Master_Out(1082) <= \<const0>\;
  LOCKSTEP_Master_Out(1083) <= \<const0>\;
  LOCKSTEP_Master_Out(1084) <= \<const0>\;
  LOCKSTEP_Master_Out(1085) <= \<const0>\;
  LOCKSTEP_Master_Out(1086) <= \<const0>\;
  LOCKSTEP_Master_Out(1087) <= \<const0>\;
  LOCKSTEP_Master_Out(1088) <= \<const0>\;
  LOCKSTEP_Master_Out(1089) <= \<const0>\;
  LOCKSTEP_Master_Out(1090) <= \<const0>\;
  LOCKSTEP_Master_Out(1091) <= \<const0>\;
  LOCKSTEP_Master_Out(1092) <= \<const0>\;
  LOCKSTEP_Master_Out(1093) <= \<const0>\;
  LOCKSTEP_Master_Out(1094) <= \<const0>\;
  LOCKSTEP_Master_Out(1095) <= \<const0>\;
  LOCKSTEP_Master_Out(1096) <= \<const0>\;
  LOCKSTEP_Master_Out(1097) <= \<const0>\;
  LOCKSTEP_Master_Out(1098) <= \<const0>\;
  LOCKSTEP_Master_Out(1099) <= \<const0>\;
  LOCKSTEP_Master_Out(1100) <= \<const0>\;
  LOCKSTEP_Master_Out(1101) <= \<const0>\;
  LOCKSTEP_Master_Out(1102) <= \<const0>\;
  LOCKSTEP_Master_Out(1103) <= \<const0>\;
  LOCKSTEP_Master_Out(1104) <= \<const0>\;
  LOCKSTEP_Master_Out(1105) <= \<const0>\;
  LOCKSTEP_Master_Out(1106) <= \<const0>\;
  LOCKSTEP_Master_Out(1107) <= \<const0>\;
  LOCKSTEP_Master_Out(1108) <= \<const0>\;
  LOCKSTEP_Master_Out(1109) <= \<const0>\;
  LOCKSTEP_Master_Out(1110) <= \<const0>\;
  LOCKSTEP_Master_Out(1111) <= \<const0>\;
  LOCKSTEP_Master_Out(1112) <= \<const0>\;
  LOCKSTEP_Master_Out(1113) <= \<const0>\;
  LOCKSTEP_Master_Out(1114) <= \<const0>\;
  LOCKSTEP_Master_Out(1115) <= \<const0>\;
  LOCKSTEP_Master_Out(1116) <= \<const0>\;
  LOCKSTEP_Master_Out(1117) <= \<const0>\;
  LOCKSTEP_Master_Out(1118) <= \<const0>\;
  LOCKSTEP_Master_Out(1119) <= \<const0>\;
  LOCKSTEP_Master_Out(1120) <= \<const0>\;
  LOCKSTEP_Master_Out(1121) <= \<const0>\;
  LOCKSTEP_Master_Out(1122) <= \<const0>\;
  LOCKSTEP_Master_Out(1123) <= \<const0>\;
  LOCKSTEP_Master_Out(1124) <= \<const0>\;
  LOCKSTEP_Master_Out(1125) <= \<const0>\;
  LOCKSTEP_Master_Out(1126) <= \<const0>\;
  LOCKSTEP_Master_Out(1127) <= \<const0>\;
  LOCKSTEP_Master_Out(1128) <= \<const0>\;
  LOCKSTEP_Master_Out(1129) <= \<const0>\;
  LOCKSTEP_Master_Out(1130) <= \<const0>\;
  LOCKSTEP_Master_Out(1131) <= \<const0>\;
  LOCKSTEP_Master_Out(1132) <= \<const0>\;
  LOCKSTEP_Master_Out(1133) <= \<const0>\;
  LOCKSTEP_Master_Out(1134) <= \<const0>\;
  LOCKSTEP_Master_Out(1135) <= \<const0>\;
  LOCKSTEP_Master_Out(1136) <= \<const0>\;
  LOCKSTEP_Master_Out(1137) <= \<const0>\;
  LOCKSTEP_Master_Out(1138) <= \<const0>\;
  LOCKSTEP_Master_Out(1139) <= \<const0>\;
  LOCKSTEP_Master_Out(1140) <= \<const0>\;
  LOCKSTEP_Master_Out(1141) <= \<const0>\;
  LOCKSTEP_Master_Out(1142) <= \<const0>\;
  LOCKSTEP_Master_Out(1143) <= \<const0>\;
  LOCKSTEP_Master_Out(1144) <= \<const0>\;
  LOCKSTEP_Master_Out(1145) <= \<const0>\;
  LOCKSTEP_Master_Out(1146) <= \<const0>\;
  LOCKSTEP_Master_Out(1147) <= \<const0>\;
  LOCKSTEP_Master_Out(1148) <= \<const0>\;
  LOCKSTEP_Master_Out(1149) <= \<const0>\;
  LOCKSTEP_Master_Out(1150) <= \<const0>\;
  LOCKSTEP_Master_Out(1151) <= \<const0>\;
  LOCKSTEP_Master_Out(1152) <= \<const0>\;
  LOCKSTEP_Master_Out(1153) <= \<const0>\;
  LOCKSTEP_Master_Out(1154) <= \<const0>\;
  LOCKSTEP_Master_Out(1155) <= \<const0>\;
  LOCKSTEP_Master_Out(1156) <= \<const0>\;
  LOCKSTEP_Master_Out(1157) <= \<const0>\;
  LOCKSTEP_Master_Out(1158) <= \<const0>\;
  LOCKSTEP_Master_Out(1159) <= \<const0>\;
  LOCKSTEP_Master_Out(1160) <= \<const0>\;
  LOCKSTEP_Master_Out(1161) <= \<const0>\;
  LOCKSTEP_Master_Out(1162) <= \<const0>\;
  LOCKSTEP_Master_Out(1163) <= \<const0>\;
  LOCKSTEP_Master_Out(1164) <= \<const0>\;
  LOCKSTEP_Master_Out(1165) <= \<const0>\;
  LOCKSTEP_Master_Out(1166) <= \<const0>\;
  LOCKSTEP_Master_Out(1167) <= \<const0>\;
  LOCKSTEP_Master_Out(1168) <= \<const0>\;
  LOCKSTEP_Master_Out(1169) <= \<const0>\;
  LOCKSTEP_Master_Out(1170) <= \<const0>\;
  LOCKSTEP_Master_Out(1171) <= \<const0>\;
  LOCKSTEP_Master_Out(1172) <= \<const0>\;
  LOCKSTEP_Master_Out(1173) <= \<const0>\;
  LOCKSTEP_Master_Out(1174) <= \<const0>\;
  LOCKSTEP_Master_Out(1175) <= \<const0>\;
  LOCKSTEP_Master_Out(1176) <= \<const0>\;
  LOCKSTEP_Master_Out(1177) <= \<const0>\;
  LOCKSTEP_Master_Out(1178) <= \<const0>\;
  LOCKSTEP_Master_Out(1179) <= \<const0>\;
  LOCKSTEP_Master_Out(1180) <= \<const0>\;
  LOCKSTEP_Master_Out(1181) <= \<const0>\;
  LOCKSTEP_Master_Out(1182) <= \<const0>\;
  LOCKSTEP_Master_Out(1183) <= \<const0>\;
  LOCKSTEP_Master_Out(1184) <= \<const0>\;
  LOCKSTEP_Master_Out(1185) <= \<const0>\;
  LOCKSTEP_Master_Out(1186) <= \<const0>\;
  LOCKSTEP_Master_Out(1187) <= \<const0>\;
  LOCKSTEP_Master_Out(1188) <= \<const0>\;
  LOCKSTEP_Master_Out(1189) <= \<const0>\;
  LOCKSTEP_Master_Out(1190) <= \<const0>\;
  LOCKSTEP_Master_Out(1191) <= \<const0>\;
  LOCKSTEP_Master_Out(1192) <= \<const0>\;
  LOCKSTEP_Master_Out(1193) <= \<const0>\;
  LOCKSTEP_Master_Out(1194) <= \<const0>\;
  LOCKSTEP_Master_Out(1195) <= \<const0>\;
  LOCKSTEP_Master_Out(1196) <= \<const0>\;
  LOCKSTEP_Master_Out(1197) <= \<const0>\;
  LOCKSTEP_Master_Out(1198) <= \<const0>\;
  LOCKSTEP_Master_Out(1199) <= \<const0>\;
  LOCKSTEP_Master_Out(1200) <= \<const0>\;
  LOCKSTEP_Master_Out(1201) <= \<const0>\;
  LOCKSTEP_Master_Out(1202) <= \<const0>\;
  LOCKSTEP_Master_Out(1203) <= \<const0>\;
  LOCKSTEP_Master_Out(1204) <= \<const0>\;
  LOCKSTEP_Master_Out(1205) <= \<const0>\;
  LOCKSTEP_Master_Out(1206) <= \<const0>\;
  LOCKSTEP_Master_Out(1207) <= \<const0>\;
  LOCKSTEP_Master_Out(1208) <= \<const0>\;
  LOCKSTEP_Master_Out(1209) <= \<const0>\;
  LOCKSTEP_Master_Out(1210) <= \<const0>\;
  LOCKSTEP_Master_Out(1211) <= \<const0>\;
  LOCKSTEP_Master_Out(1212) <= \<const0>\;
  LOCKSTEP_Master_Out(1213) <= \<const0>\;
  LOCKSTEP_Master_Out(1214) <= \<const0>\;
  LOCKSTEP_Master_Out(1215) <= \<const0>\;
  LOCKSTEP_Master_Out(1216) <= \<const0>\;
  LOCKSTEP_Master_Out(1217) <= \<const0>\;
  LOCKSTEP_Master_Out(1218) <= \<const0>\;
  LOCKSTEP_Master_Out(1219) <= \<const0>\;
  LOCKSTEP_Master_Out(1220) <= \<const0>\;
  LOCKSTEP_Master_Out(1221) <= \<const0>\;
  LOCKSTEP_Master_Out(1222) <= \<const0>\;
  LOCKSTEP_Master_Out(1223) <= \<const0>\;
  LOCKSTEP_Master_Out(1224) <= \<const0>\;
  LOCKSTEP_Master_Out(1225) <= \<const0>\;
  LOCKSTEP_Master_Out(1226) <= \<const0>\;
  LOCKSTEP_Master_Out(1227) <= \<const0>\;
  LOCKSTEP_Master_Out(1228) <= \<const0>\;
  LOCKSTEP_Master_Out(1229) <= \<const0>\;
  LOCKSTEP_Master_Out(1230) <= \<const0>\;
  LOCKSTEP_Master_Out(1231) <= \<const0>\;
  LOCKSTEP_Master_Out(1232) <= \<const0>\;
  LOCKSTEP_Master_Out(1233) <= \<const0>\;
  LOCKSTEP_Master_Out(1234) <= \<const0>\;
  LOCKSTEP_Master_Out(1235) <= \<const0>\;
  LOCKSTEP_Master_Out(1236) <= \<const0>\;
  LOCKSTEP_Master_Out(1237) <= \<const0>\;
  LOCKSTEP_Master_Out(1238) <= \<const0>\;
  LOCKSTEP_Master_Out(1239) <= \<const0>\;
  LOCKSTEP_Master_Out(1240) <= \<const0>\;
  LOCKSTEP_Master_Out(1241) <= \<const0>\;
  LOCKSTEP_Master_Out(1242) <= \<const0>\;
  LOCKSTEP_Master_Out(1243) <= \<const0>\;
  LOCKSTEP_Master_Out(1244) <= \<const0>\;
  LOCKSTEP_Master_Out(1245) <= \<const0>\;
  LOCKSTEP_Master_Out(1246) <= \<const0>\;
  LOCKSTEP_Master_Out(1247) <= \<const0>\;
  LOCKSTEP_Master_Out(1248) <= \<const0>\;
  LOCKSTEP_Master_Out(1249) <= \<const0>\;
  LOCKSTEP_Master_Out(1250) <= \<const0>\;
  LOCKSTEP_Master_Out(1251) <= \<const0>\;
  LOCKSTEP_Master_Out(1252) <= \<const0>\;
  LOCKSTEP_Master_Out(1253) <= \<const0>\;
  LOCKSTEP_Master_Out(1254) <= \<const0>\;
  LOCKSTEP_Master_Out(1255) <= \<const0>\;
  LOCKSTEP_Master_Out(1256) <= \<const0>\;
  LOCKSTEP_Master_Out(1257) <= \<const0>\;
  LOCKSTEP_Master_Out(1258) <= \<const0>\;
  LOCKSTEP_Master_Out(1259) <= \<const0>\;
  LOCKSTEP_Master_Out(1260) <= \<const0>\;
  LOCKSTEP_Master_Out(1261) <= \<const0>\;
  LOCKSTEP_Master_Out(1262) <= \<const0>\;
  LOCKSTEP_Master_Out(1263) <= \<const0>\;
  LOCKSTEP_Master_Out(1264) <= \<const0>\;
  LOCKSTEP_Master_Out(1265) <= \<const0>\;
  LOCKSTEP_Master_Out(1266) <= \<const0>\;
  LOCKSTEP_Master_Out(1267) <= \<const0>\;
  LOCKSTEP_Master_Out(1268) <= \<const0>\;
  LOCKSTEP_Master_Out(1269) <= \<const0>\;
  LOCKSTEP_Master_Out(1270) <= \<const0>\;
  LOCKSTEP_Master_Out(1271) <= \<const0>\;
  LOCKSTEP_Master_Out(1272) <= \<const0>\;
  LOCKSTEP_Master_Out(1273) <= \<const0>\;
  LOCKSTEP_Master_Out(1274) <= \<const0>\;
  LOCKSTEP_Master_Out(1275) <= \<const0>\;
  LOCKSTEP_Master_Out(1276) <= \<const0>\;
  LOCKSTEP_Master_Out(1277) <= \<const0>\;
  LOCKSTEP_Master_Out(1278) <= \<const0>\;
  LOCKSTEP_Master_Out(1279) <= \<const0>\;
  LOCKSTEP_Master_Out(1280) <= \<const0>\;
  LOCKSTEP_Master_Out(1281) <= \<const0>\;
  LOCKSTEP_Master_Out(1282) <= \<const0>\;
  LOCKSTEP_Master_Out(1283) <= \<const0>\;
  LOCKSTEP_Master_Out(1284) <= \<const0>\;
  LOCKSTEP_Master_Out(1285) <= \<const0>\;
  LOCKSTEP_Master_Out(1286) <= \<const0>\;
  LOCKSTEP_Master_Out(1287) <= \<const0>\;
  LOCKSTEP_Master_Out(1288) <= \<const0>\;
  LOCKSTEP_Master_Out(1289) <= \<const0>\;
  LOCKSTEP_Master_Out(1290) <= \<const0>\;
  LOCKSTEP_Master_Out(1291) <= \<const0>\;
  LOCKSTEP_Master_Out(1292) <= \<const0>\;
  LOCKSTEP_Master_Out(1293) <= \<const0>\;
  LOCKSTEP_Master_Out(1294) <= \<const0>\;
  LOCKSTEP_Master_Out(1295) <= \<const0>\;
  LOCKSTEP_Master_Out(1296) <= \<const0>\;
  LOCKSTEP_Master_Out(1297) <= \<const0>\;
  LOCKSTEP_Master_Out(1298) <= \<const0>\;
  LOCKSTEP_Master_Out(1299) <= \<const0>\;
  LOCKSTEP_Master_Out(1300) <= \<const0>\;
  LOCKSTEP_Master_Out(1301) <= \<const0>\;
  LOCKSTEP_Master_Out(1302) <= \<const0>\;
  LOCKSTEP_Master_Out(1303) <= \<const0>\;
  LOCKSTEP_Master_Out(1304) <= \<const0>\;
  LOCKSTEP_Master_Out(1305) <= \<const0>\;
  LOCKSTEP_Master_Out(1306) <= \<const0>\;
  LOCKSTEP_Master_Out(1307) <= \<const0>\;
  LOCKSTEP_Master_Out(1308) <= \<const0>\;
  LOCKSTEP_Master_Out(1309) <= \<const0>\;
  LOCKSTEP_Master_Out(1310) <= \<const0>\;
  LOCKSTEP_Master_Out(1311) <= \<const0>\;
  LOCKSTEP_Master_Out(1312) <= \<const0>\;
  LOCKSTEP_Master_Out(1313) <= \<const0>\;
  LOCKSTEP_Master_Out(1314) <= \<const0>\;
  LOCKSTEP_Master_Out(1315) <= \<const0>\;
  LOCKSTEP_Master_Out(1316) <= \<const0>\;
  LOCKSTEP_Master_Out(1317) <= \<const0>\;
  LOCKSTEP_Master_Out(1318) <= \<const0>\;
  LOCKSTEP_Master_Out(1319) <= \<const0>\;
  LOCKSTEP_Master_Out(1320) <= \<const0>\;
  LOCKSTEP_Master_Out(1321) <= \<const0>\;
  LOCKSTEP_Master_Out(1322) <= \<const0>\;
  LOCKSTEP_Master_Out(1323) <= \<const0>\;
  LOCKSTEP_Master_Out(1324) <= \<const0>\;
  LOCKSTEP_Master_Out(1325) <= \<const0>\;
  LOCKSTEP_Master_Out(1326) <= \<const0>\;
  LOCKSTEP_Master_Out(1327) <= \<const0>\;
  LOCKSTEP_Master_Out(1328) <= \<const0>\;
  LOCKSTEP_Master_Out(1329) <= \<const0>\;
  LOCKSTEP_Master_Out(1330) <= \<const0>\;
  LOCKSTEP_Master_Out(1331) <= \<const0>\;
  LOCKSTEP_Master_Out(1332) <= \<const0>\;
  LOCKSTEP_Master_Out(1333) <= \<const0>\;
  LOCKSTEP_Master_Out(1334) <= \<const0>\;
  LOCKSTEP_Master_Out(1335) <= \<const0>\;
  LOCKSTEP_Master_Out(1336) <= \<const0>\;
  LOCKSTEP_Master_Out(1337) <= \<const0>\;
  LOCKSTEP_Master_Out(1338) <= \<const0>\;
  LOCKSTEP_Master_Out(1339) <= \<const0>\;
  LOCKSTEP_Master_Out(1340) <= \<const0>\;
  LOCKSTEP_Master_Out(1341) <= \<const0>\;
  LOCKSTEP_Master_Out(1342) <= \<const0>\;
  LOCKSTEP_Master_Out(1343) <= \<const0>\;
  LOCKSTEP_Master_Out(1344) <= \<const0>\;
  LOCKSTEP_Master_Out(1345) <= \<const0>\;
  LOCKSTEP_Master_Out(1346) <= \<const0>\;
  LOCKSTEP_Master_Out(1347) <= \<const0>\;
  LOCKSTEP_Master_Out(1348) <= \<const0>\;
  LOCKSTEP_Master_Out(1349) <= \<const0>\;
  LOCKSTEP_Master_Out(1350) <= \<const0>\;
  LOCKSTEP_Master_Out(1351) <= \<const0>\;
  LOCKSTEP_Master_Out(1352) <= \<const0>\;
  LOCKSTEP_Master_Out(1353) <= \<const0>\;
  LOCKSTEP_Master_Out(1354) <= \<const0>\;
  LOCKSTEP_Master_Out(1355) <= \<const0>\;
  LOCKSTEP_Master_Out(1356) <= \<const0>\;
  LOCKSTEP_Master_Out(1357) <= \<const0>\;
  LOCKSTEP_Master_Out(1358) <= \<const0>\;
  LOCKSTEP_Master_Out(1359) <= \<const0>\;
  LOCKSTEP_Master_Out(1360) <= \<const0>\;
  LOCKSTEP_Master_Out(1361) <= \<const0>\;
  LOCKSTEP_Master_Out(1362) <= \<const0>\;
  LOCKSTEP_Master_Out(1363) <= \<const0>\;
  LOCKSTEP_Master_Out(1364) <= \<const0>\;
  LOCKSTEP_Master_Out(1365) <= \<const0>\;
  LOCKSTEP_Master_Out(1366) <= \<const0>\;
  LOCKSTEP_Master_Out(1367) <= \<const0>\;
  LOCKSTEP_Master_Out(1368) <= \<const0>\;
  LOCKSTEP_Master_Out(1369) <= \<const0>\;
  LOCKSTEP_Master_Out(1370) <= \<const0>\;
  LOCKSTEP_Master_Out(1371) <= \<const0>\;
  LOCKSTEP_Master_Out(1372) <= \<const0>\;
  LOCKSTEP_Master_Out(1373) <= \<const0>\;
  LOCKSTEP_Master_Out(1374) <= \<const0>\;
  LOCKSTEP_Master_Out(1375) <= \<const0>\;
  LOCKSTEP_Master_Out(1376) <= \<const0>\;
  LOCKSTEP_Master_Out(1377) <= \<const0>\;
  LOCKSTEP_Master_Out(1378) <= \<const0>\;
  LOCKSTEP_Master_Out(1379) <= \<const0>\;
  LOCKSTEP_Master_Out(1380) <= \<const0>\;
  LOCKSTEP_Master_Out(1381) <= \<const0>\;
  LOCKSTEP_Master_Out(1382) <= \<const0>\;
  LOCKSTEP_Master_Out(1383) <= \<const0>\;
  LOCKSTEP_Master_Out(1384) <= \<const0>\;
  LOCKSTEP_Master_Out(1385) <= \<const0>\;
  LOCKSTEP_Master_Out(1386) <= \<const0>\;
  LOCKSTEP_Master_Out(1387) <= \<const0>\;
  LOCKSTEP_Master_Out(1388) <= \<const0>\;
  LOCKSTEP_Master_Out(1389) <= \<const0>\;
  LOCKSTEP_Master_Out(1390) <= \<const0>\;
  LOCKSTEP_Master_Out(1391) <= \<const0>\;
  LOCKSTEP_Master_Out(1392) <= \<const0>\;
  LOCKSTEP_Master_Out(1393) <= \<const0>\;
  LOCKSTEP_Master_Out(1394) <= \<const0>\;
  LOCKSTEP_Master_Out(1395) <= \<const0>\;
  LOCKSTEP_Master_Out(1396) <= \<const0>\;
  LOCKSTEP_Master_Out(1397) <= \<const0>\;
  LOCKSTEP_Master_Out(1398) <= \<const0>\;
  LOCKSTEP_Master_Out(1399) <= \<const0>\;
  LOCKSTEP_Master_Out(1400) <= \<const0>\;
  LOCKSTEP_Master_Out(1401) <= \<const0>\;
  LOCKSTEP_Master_Out(1402) <= \<const0>\;
  LOCKSTEP_Master_Out(1403) <= \<const0>\;
  LOCKSTEP_Master_Out(1404) <= \<const0>\;
  LOCKSTEP_Master_Out(1405) <= \<const0>\;
  LOCKSTEP_Master_Out(1406) <= \<const0>\;
  LOCKSTEP_Master_Out(1407) <= \<const0>\;
  LOCKSTEP_Master_Out(1408) <= \<const0>\;
  LOCKSTEP_Master_Out(1409) <= \<const0>\;
  LOCKSTEP_Master_Out(1410) <= \<const0>\;
  LOCKSTEP_Master_Out(1411) <= \<const0>\;
  LOCKSTEP_Master_Out(1412) <= \<const0>\;
  LOCKSTEP_Master_Out(1413) <= \<const0>\;
  LOCKSTEP_Master_Out(1414) <= \<const0>\;
  LOCKSTEP_Master_Out(1415) <= \<const0>\;
  LOCKSTEP_Master_Out(1416) <= \<const0>\;
  LOCKSTEP_Master_Out(1417) <= \<const0>\;
  LOCKSTEP_Master_Out(1418) <= \<const0>\;
  LOCKSTEP_Master_Out(1419) <= \<const0>\;
  LOCKSTEP_Master_Out(1420) <= \<const0>\;
  LOCKSTEP_Master_Out(1421) <= \<const0>\;
  LOCKSTEP_Master_Out(1422) <= \<const0>\;
  LOCKSTEP_Master_Out(1423) <= \<const0>\;
  LOCKSTEP_Master_Out(1424) <= \<const0>\;
  LOCKSTEP_Master_Out(1425) <= \<const0>\;
  LOCKSTEP_Master_Out(1426) <= \<const0>\;
  LOCKSTEP_Master_Out(1427) <= \<const0>\;
  LOCKSTEP_Master_Out(1428) <= \<const0>\;
  LOCKSTEP_Master_Out(1429) <= \<const0>\;
  LOCKSTEP_Master_Out(1430) <= \<const0>\;
  LOCKSTEP_Master_Out(1431) <= \<const0>\;
  LOCKSTEP_Master_Out(1432) <= \<const0>\;
  LOCKSTEP_Master_Out(1433) <= \<const0>\;
  LOCKSTEP_Master_Out(1434) <= \<const0>\;
  LOCKSTEP_Master_Out(1435) <= \<const0>\;
  LOCKSTEP_Master_Out(1436) <= \<const0>\;
  LOCKSTEP_Master_Out(1437) <= \<const0>\;
  LOCKSTEP_Master_Out(1438) <= \<const0>\;
  LOCKSTEP_Master_Out(1439) <= \<const0>\;
  LOCKSTEP_Master_Out(1440) <= \<const0>\;
  LOCKSTEP_Master_Out(1441) <= \<const0>\;
  LOCKSTEP_Master_Out(1442) <= \<const0>\;
  LOCKSTEP_Master_Out(1443) <= \<const0>\;
  LOCKSTEP_Master_Out(1444) <= \<const0>\;
  LOCKSTEP_Master_Out(1445) <= \<const0>\;
  LOCKSTEP_Master_Out(1446) <= \<const0>\;
  LOCKSTEP_Master_Out(1447) <= \<const0>\;
  LOCKSTEP_Master_Out(1448) <= \<const0>\;
  LOCKSTEP_Master_Out(1449) <= \<const0>\;
  LOCKSTEP_Master_Out(1450) <= \<const0>\;
  LOCKSTEP_Master_Out(1451) <= \<const0>\;
  LOCKSTEP_Master_Out(1452) <= \<const0>\;
  LOCKSTEP_Master_Out(1453) <= \<const0>\;
  LOCKSTEP_Master_Out(1454) <= \<const0>\;
  LOCKSTEP_Master_Out(1455) <= \<const0>\;
  LOCKSTEP_Master_Out(1456) <= \<const0>\;
  LOCKSTEP_Master_Out(1457) <= \<const0>\;
  LOCKSTEP_Master_Out(1458) <= \<const0>\;
  LOCKSTEP_Master_Out(1459) <= \<const0>\;
  LOCKSTEP_Master_Out(1460) <= \<const0>\;
  LOCKSTEP_Master_Out(1461) <= \<const0>\;
  LOCKSTEP_Master_Out(1462) <= \<const0>\;
  LOCKSTEP_Master_Out(1463) <= \<const0>\;
  LOCKSTEP_Master_Out(1464) <= \<const0>\;
  LOCKSTEP_Master_Out(1465) <= \<const0>\;
  LOCKSTEP_Master_Out(1466) <= \<const0>\;
  LOCKSTEP_Master_Out(1467) <= \<const0>\;
  LOCKSTEP_Master_Out(1468) <= \<const0>\;
  LOCKSTEP_Master_Out(1469) <= \<const0>\;
  LOCKSTEP_Master_Out(1470) <= \<const0>\;
  LOCKSTEP_Master_Out(1471) <= \<const0>\;
  LOCKSTEP_Master_Out(1472) <= \<const0>\;
  LOCKSTEP_Master_Out(1473) <= \<const0>\;
  LOCKSTEP_Master_Out(1474) <= \<const0>\;
  LOCKSTEP_Master_Out(1475) <= \<const0>\;
  LOCKSTEP_Master_Out(1476) <= \<const0>\;
  LOCKSTEP_Master_Out(1477) <= \<const0>\;
  LOCKSTEP_Master_Out(1478) <= \<const0>\;
  LOCKSTEP_Master_Out(1479) <= \<const0>\;
  LOCKSTEP_Master_Out(1480) <= \<const0>\;
  LOCKSTEP_Master_Out(1481) <= \<const0>\;
  LOCKSTEP_Master_Out(1482) <= \<const0>\;
  LOCKSTEP_Master_Out(1483) <= \<const0>\;
  LOCKSTEP_Master_Out(1484) <= \<const0>\;
  LOCKSTEP_Master_Out(1485) <= \<const0>\;
  LOCKSTEP_Master_Out(1486) <= \<const0>\;
  LOCKSTEP_Master_Out(1487) <= \<const0>\;
  LOCKSTEP_Master_Out(1488) <= \<const0>\;
  LOCKSTEP_Master_Out(1489) <= \<const0>\;
  LOCKSTEP_Master_Out(1490) <= \<const0>\;
  LOCKSTEP_Master_Out(1491) <= \<const0>\;
  LOCKSTEP_Master_Out(1492) <= \<const0>\;
  LOCKSTEP_Master_Out(1493) <= \<const0>\;
  LOCKSTEP_Master_Out(1494) <= \<const0>\;
  LOCKSTEP_Master_Out(1495) <= \<const0>\;
  LOCKSTEP_Master_Out(1496) <= \<const0>\;
  LOCKSTEP_Master_Out(1497) <= \<const0>\;
  LOCKSTEP_Master_Out(1498) <= \<const0>\;
  LOCKSTEP_Master_Out(1499) <= \<const0>\;
  LOCKSTEP_Master_Out(1500) <= \<const0>\;
  LOCKSTEP_Master_Out(1501) <= \<const0>\;
  LOCKSTEP_Master_Out(1502) <= \<const0>\;
  LOCKSTEP_Master_Out(1503) <= \<const0>\;
  LOCKSTEP_Master_Out(1504) <= \<const0>\;
  LOCKSTEP_Master_Out(1505) <= \<const0>\;
  LOCKSTEP_Master_Out(1506) <= \<const0>\;
  LOCKSTEP_Master_Out(1507) <= \<const0>\;
  LOCKSTEP_Master_Out(1508) <= \<const0>\;
  LOCKSTEP_Master_Out(1509) <= \<const0>\;
  LOCKSTEP_Master_Out(1510) <= \<const0>\;
  LOCKSTEP_Master_Out(1511) <= \<const0>\;
  LOCKSTEP_Master_Out(1512) <= \<const0>\;
  LOCKSTEP_Master_Out(1513) <= \<const0>\;
  LOCKSTEP_Master_Out(1514) <= \<const0>\;
  LOCKSTEP_Master_Out(1515) <= \<const0>\;
  LOCKSTEP_Master_Out(1516) <= \<const0>\;
  LOCKSTEP_Master_Out(1517) <= \<const0>\;
  LOCKSTEP_Master_Out(1518) <= \<const0>\;
  LOCKSTEP_Master_Out(1519) <= \<const0>\;
  LOCKSTEP_Master_Out(1520) <= \<const0>\;
  LOCKSTEP_Master_Out(1521) <= \<const0>\;
  LOCKSTEP_Master_Out(1522) <= \<const0>\;
  LOCKSTEP_Master_Out(1523) <= \<const0>\;
  LOCKSTEP_Master_Out(1524) <= \<const0>\;
  LOCKSTEP_Master_Out(1525) <= \<const0>\;
  LOCKSTEP_Master_Out(1526) <= \<const0>\;
  LOCKSTEP_Master_Out(1527) <= \<const0>\;
  LOCKSTEP_Master_Out(1528) <= \<const0>\;
  LOCKSTEP_Master_Out(1529) <= \<const0>\;
  LOCKSTEP_Master_Out(1530) <= \<const0>\;
  LOCKSTEP_Master_Out(1531) <= \<const0>\;
  LOCKSTEP_Master_Out(1532) <= \<const0>\;
  LOCKSTEP_Master_Out(1533) <= \<const0>\;
  LOCKSTEP_Master_Out(1534) <= \<const0>\;
  LOCKSTEP_Master_Out(1535) <= \<const0>\;
  LOCKSTEP_Master_Out(1536) <= \<const0>\;
  LOCKSTEP_Master_Out(1537) <= \<const0>\;
  LOCKSTEP_Master_Out(1538) <= \<const0>\;
  LOCKSTEP_Master_Out(1539) <= \<const0>\;
  LOCKSTEP_Master_Out(1540) <= \<const0>\;
  LOCKSTEP_Master_Out(1541) <= \<const0>\;
  LOCKSTEP_Master_Out(1542) <= \<const0>\;
  LOCKSTEP_Master_Out(1543) <= \<const0>\;
  LOCKSTEP_Master_Out(1544) <= \<const0>\;
  LOCKSTEP_Master_Out(1545) <= \<const0>\;
  LOCKSTEP_Master_Out(1546) <= \<const0>\;
  LOCKSTEP_Master_Out(1547) <= \<const0>\;
  LOCKSTEP_Master_Out(1548) <= \<const0>\;
  LOCKSTEP_Master_Out(1549) <= \<const0>\;
  LOCKSTEP_Master_Out(1550) <= \<const0>\;
  LOCKSTEP_Master_Out(1551) <= \<const0>\;
  LOCKSTEP_Master_Out(1552) <= \<const0>\;
  LOCKSTEP_Master_Out(1553) <= \<const0>\;
  LOCKSTEP_Master_Out(1554) <= \<const0>\;
  LOCKSTEP_Master_Out(1555) <= \<const0>\;
  LOCKSTEP_Master_Out(1556) <= \<const0>\;
  LOCKSTEP_Master_Out(1557) <= \<const0>\;
  LOCKSTEP_Master_Out(1558) <= \<const0>\;
  LOCKSTEP_Master_Out(1559) <= \<const0>\;
  LOCKSTEP_Master_Out(1560) <= \<const0>\;
  LOCKSTEP_Master_Out(1561) <= \<const0>\;
  LOCKSTEP_Master_Out(1562) <= \<const0>\;
  LOCKSTEP_Master_Out(1563) <= \<const0>\;
  LOCKSTEP_Master_Out(1564) <= \<const0>\;
  LOCKSTEP_Master_Out(1565) <= \<const0>\;
  LOCKSTEP_Master_Out(1566) <= \<const0>\;
  LOCKSTEP_Master_Out(1567) <= \<const0>\;
  LOCKSTEP_Master_Out(1568) <= \<const0>\;
  LOCKSTEP_Master_Out(1569) <= \<const0>\;
  LOCKSTEP_Master_Out(1570) <= \<const0>\;
  LOCKSTEP_Master_Out(1571) <= \<const0>\;
  LOCKSTEP_Master_Out(1572) <= \<const0>\;
  LOCKSTEP_Master_Out(1573) <= \<const0>\;
  LOCKSTEP_Master_Out(1574) <= \<const0>\;
  LOCKSTEP_Master_Out(1575) <= \<const0>\;
  LOCKSTEP_Master_Out(1576) <= \<const0>\;
  LOCKSTEP_Master_Out(1577) <= \<const0>\;
  LOCKSTEP_Master_Out(1578) <= \<const0>\;
  LOCKSTEP_Master_Out(1579) <= \<const0>\;
  LOCKSTEP_Master_Out(1580) <= \<const0>\;
  LOCKSTEP_Master_Out(1581) <= \<const0>\;
  LOCKSTEP_Master_Out(1582) <= \<const0>\;
  LOCKSTEP_Master_Out(1583) <= \<const0>\;
  LOCKSTEP_Master_Out(1584) <= \<const0>\;
  LOCKSTEP_Master_Out(1585) <= \<const0>\;
  LOCKSTEP_Master_Out(1586) <= \<const0>\;
  LOCKSTEP_Master_Out(1587) <= \<const0>\;
  LOCKSTEP_Master_Out(1588) <= \<const0>\;
  LOCKSTEP_Master_Out(1589) <= \<const0>\;
  LOCKSTEP_Master_Out(1590) <= \<const0>\;
  LOCKSTEP_Master_Out(1591) <= \<const0>\;
  LOCKSTEP_Master_Out(1592) <= \<const0>\;
  LOCKSTEP_Master_Out(1593) <= \<const0>\;
  LOCKSTEP_Master_Out(1594) <= \<const0>\;
  LOCKSTEP_Master_Out(1595) <= \<const0>\;
  LOCKSTEP_Master_Out(1596) <= \<const0>\;
  LOCKSTEP_Master_Out(1597) <= \<const0>\;
  LOCKSTEP_Master_Out(1598) <= \<const0>\;
  LOCKSTEP_Master_Out(1599) <= \<const0>\;
  LOCKSTEP_Master_Out(1600) <= \<const0>\;
  LOCKSTEP_Master_Out(1601) <= \<const0>\;
  LOCKSTEP_Master_Out(1602) <= \<const0>\;
  LOCKSTEP_Master_Out(1603) <= \<const0>\;
  LOCKSTEP_Master_Out(1604) <= \<const0>\;
  LOCKSTEP_Master_Out(1605) <= \<const0>\;
  LOCKSTEP_Master_Out(1606) <= \<const0>\;
  LOCKSTEP_Master_Out(1607) <= \<const0>\;
  LOCKSTEP_Master_Out(1608) <= \<const0>\;
  LOCKSTEP_Master_Out(1609) <= \<const0>\;
  LOCKSTEP_Master_Out(1610) <= \<const0>\;
  LOCKSTEP_Master_Out(1611) <= \<const0>\;
  LOCKSTEP_Master_Out(1612) <= \<const0>\;
  LOCKSTEP_Master_Out(1613) <= \<const0>\;
  LOCKSTEP_Master_Out(1614) <= \<const0>\;
  LOCKSTEP_Master_Out(1615) <= \<const0>\;
  LOCKSTEP_Master_Out(1616) <= \<const0>\;
  LOCKSTEP_Master_Out(1617) <= \<const0>\;
  LOCKSTEP_Master_Out(1618) <= \<const0>\;
  LOCKSTEP_Master_Out(1619) <= \<const0>\;
  LOCKSTEP_Master_Out(1620) <= \<const0>\;
  LOCKSTEP_Master_Out(1621) <= \<const0>\;
  LOCKSTEP_Master_Out(1622) <= \<const0>\;
  LOCKSTEP_Master_Out(1623) <= \<const0>\;
  LOCKSTEP_Master_Out(1624) <= \<const0>\;
  LOCKSTEP_Master_Out(1625) <= \<const0>\;
  LOCKSTEP_Master_Out(1626) <= \<const0>\;
  LOCKSTEP_Master_Out(1627) <= \<const0>\;
  LOCKSTEP_Master_Out(1628) <= \<const0>\;
  LOCKSTEP_Master_Out(1629) <= \<const0>\;
  LOCKSTEP_Master_Out(1630) <= \<const0>\;
  LOCKSTEP_Master_Out(1631) <= \<const0>\;
  LOCKSTEP_Master_Out(1632) <= \<const0>\;
  LOCKSTEP_Master_Out(1633) <= \<const0>\;
  LOCKSTEP_Master_Out(1634) <= \<const0>\;
  LOCKSTEP_Master_Out(1635) <= \<const0>\;
  LOCKSTEP_Master_Out(1636) <= \<const0>\;
  LOCKSTEP_Master_Out(1637) <= \<const0>\;
  LOCKSTEP_Master_Out(1638) <= \<const0>\;
  LOCKSTEP_Master_Out(1639) <= \<const0>\;
  LOCKSTEP_Master_Out(1640) <= \<const0>\;
  LOCKSTEP_Master_Out(1641) <= \<const0>\;
  LOCKSTEP_Master_Out(1642) <= \<const0>\;
  LOCKSTEP_Master_Out(1643) <= \<const0>\;
  LOCKSTEP_Master_Out(1644) <= \<const0>\;
  LOCKSTEP_Master_Out(1645) <= \<const0>\;
  LOCKSTEP_Master_Out(1646) <= \<const0>\;
  LOCKSTEP_Master_Out(1647) <= \<const0>\;
  LOCKSTEP_Master_Out(1648) <= \<const0>\;
  LOCKSTEP_Master_Out(1649) <= \<const0>\;
  LOCKSTEP_Master_Out(1650) <= \<const0>\;
  LOCKSTEP_Master_Out(1651) <= \<const0>\;
  LOCKSTEP_Master_Out(1652) <= \<const0>\;
  LOCKSTEP_Master_Out(1653) <= \<const0>\;
  LOCKSTEP_Master_Out(1654) <= \<const0>\;
  LOCKSTEP_Master_Out(1655) <= \<const0>\;
  LOCKSTEP_Master_Out(1656) <= \<const0>\;
  LOCKSTEP_Master_Out(1657) <= \<const0>\;
  LOCKSTEP_Master_Out(1658) <= \<const0>\;
  LOCKSTEP_Master_Out(1659) <= \<const0>\;
  LOCKSTEP_Master_Out(1660) <= \<const0>\;
  LOCKSTEP_Master_Out(1661) <= \<const0>\;
  LOCKSTEP_Master_Out(1662) <= \<const0>\;
  LOCKSTEP_Master_Out(1663) <= \<const0>\;
  LOCKSTEP_Master_Out(1664) <= \<const0>\;
  LOCKSTEP_Master_Out(1665) <= \<const0>\;
  LOCKSTEP_Master_Out(1666) <= \<const0>\;
  LOCKSTEP_Master_Out(1667) <= \<const0>\;
  LOCKSTEP_Master_Out(1668) <= \<const0>\;
  LOCKSTEP_Master_Out(1669) <= \<const0>\;
  LOCKSTEP_Master_Out(1670) <= \<const0>\;
  LOCKSTEP_Master_Out(1671) <= \<const0>\;
  LOCKSTEP_Master_Out(1672) <= \<const0>\;
  LOCKSTEP_Master_Out(1673) <= \<const0>\;
  LOCKSTEP_Master_Out(1674) <= \<const0>\;
  LOCKSTEP_Master_Out(1675) <= \<const0>\;
  LOCKSTEP_Master_Out(1676) <= \<const0>\;
  LOCKSTEP_Master_Out(1677) <= \<const0>\;
  LOCKSTEP_Master_Out(1678) <= \<const0>\;
  LOCKSTEP_Master_Out(1679) <= \<const0>\;
  LOCKSTEP_Master_Out(1680) <= \<const0>\;
  LOCKSTEP_Master_Out(1681) <= \<const0>\;
  LOCKSTEP_Master_Out(1682) <= \<const0>\;
  LOCKSTEP_Master_Out(1683) <= \<const0>\;
  LOCKSTEP_Master_Out(1684) <= \<const0>\;
  LOCKSTEP_Master_Out(1685) <= \<const0>\;
  LOCKSTEP_Master_Out(1686) <= \<const0>\;
  LOCKSTEP_Master_Out(1687) <= \<const0>\;
  LOCKSTEP_Master_Out(1688) <= \<const0>\;
  LOCKSTEP_Master_Out(1689) <= \<const0>\;
  LOCKSTEP_Master_Out(1690) <= \<const0>\;
  LOCKSTEP_Master_Out(1691) <= \<const0>\;
  LOCKSTEP_Master_Out(1692) <= \<const0>\;
  LOCKSTEP_Master_Out(1693) <= \<const0>\;
  LOCKSTEP_Master_Out(1694) <= \<const0>\;
  LOCKSTEP_Master_Out(1695) <= \<const0>\;
  LOCKSTEP_Master_Out(1696) <= \<const0>\;
  LOCKSTEP_Master_Out(1697) <= \<const0>\;
  LOCKSTEP_Master_Out(1698) <= \<const0>\;
  LOCKSTEP_Master_Out(1699) <= \<const0>\;
  LOCKSTEP_Master_Out(1700) <= \<const0>\;
  LOCKSTEP_Master_Out(1701) <= \<const0>\;
  LOCKSTEP_Master_Out(1702) <= \<const0>\;
  LOCKSTEP_Master_Out(1703) <= \<const0>\;
  LOCKSTEP_Master_Out(1704) <= \<const0>\;
  LOCKSTEP_Master_Out(1705) <= \<const0>\;
  LOCKSTEP_Master_Out(1706) <= \<const0>\;
  LOCKSTEP_Master_Out(1707) <= \<const0>\;
  LOCKSTEP_Master_Out(1708) <= \<const0>\;
  LOCKSTEP_Master_Out(1709) <= \<const0>\;
  LOCKSTEP_Master_Out(1710) <= \<const0>\;
  LOCKSTEP_Master_Out(1711) <= \<const0>\;
  LOCKSTEP_Master_Out(1712) <= \<const0>\;
  LOCKSTEP_Master_Out(1713) <= \<const0>\;
  LOCKSTEP_Master_Out(1714) <= \<const0>\;
  LOCKSTEP_Master_Out(1715) <= \<const0>\;
  LOCKSTEP_Master_Out(1716) <= \<const0>\;
  LOCKSTEP_Master_Out(1717) <= \<const0>\;
  LOCKSTEP_Master_Out(1718) <= \<const0>\;
  LOCKSTEP_Master_Out(1719) <= \<const0>\;
  LOCKSTEP_Master_Out(1720) <= \<const0>\;
  LOCKSTEP_Master_Out(1721) <= \<const0>\;
  LOCKSTEP_Master_Out(1722) <= \<const0>\;
  LOCKSTEP_Master_Out(1723) <= \<const0>\;
  LOCKSTEP_Master_Out(1724) <= \<const0>\;
  LOCKSTEP_Master_Out(1725) <= \<const0>\;
  LOCKSTEP_Master_Out(1726) <= \<const0>\;
  LOCKSTEP_Master_Out(1727) <= \<const0>\;
  LOCKSTEP_Master_Out(1728) <= \<const0>\;
  LOCKSTEP_Master_Out(1729) <= \<const0>\;
  LOCKSTEP_Master_Out(1730) <= \<const0>\;
  LOCKSTEP_Master_Out(1731) <= \<const0>\;
  LOCKSTEP_Master_Out(1732) <= \<const0>\;
  LOCKSTEP_Master_Out(1733) <= \<const0>\;
  LOCKSTEP_Master_Out(1734) <= \<const0>\;
  LOCKSTEP_Master_Out(1735) <= \<const0>\;
  LOCKSTEP_Master_Out(1736) <= \<const0>\;
  LOCKSTEP_Master_Out(1737) <= \<const0>\;
  LOCKSTEP_Master_Out(1738) <= \<const0>\;
  LOCKSTEP_Master_Out(1739) <= \<const0>\;
  LOCKSTEP_Master_Out(1740) <= \<const0>\;
  LOCKSTEP_Master_Out(1741) <= \<const0>\;
  LOCKSTEP_Master_Out(1742) <= \<const0>\;
  LOCKSTEP_Master_Out(1743) <= \<const0>\;
  LOCKSTEP_Master_Out(1744) <= \<const0>\;
  LOCKSTEP_Master_Out(1745) <= \<const0>\;
  LOCKSTEP_Master_Out(1746) <= \<const0>\;
  LOCKSTEP_Master_Out(1747) <= \<const0>\;
  LOCKSTEP_Master_Out(1748) <= \<const0>\;
  LOCKSTEP_Master_Out(1749) <= \<const0>\;
  LOCKSTEP_Master_Out(1750) <= \<const0>\;
  LOCKSTEP_Master_Out(1751) <= \<const0>\;
  LOCKSTEP_Master_Out(1752) <= \<const0>\;
  LOCKSTEP_Master_Out(1753) <= \<const0>\;
  LOCKSTEP_Master_Out(1754) <= \<const0>\;
  LOCKSTEP_Master_Out(1755) <= \<const0>\;
  LOCKSTEP_Master_Out(1756) <= \<const0>\;
  LOCKSTEP_Master_Out(1757) <= \<const0>\;
  LOCKSTEP_Master_Out(1758) <= \<const0>\;
  LOCKSTEP_Master_Out(1759) <= \<const0>\;
  LOCKSTEP_Master_Out(1760) <= \<const0>\;
  LOCKSTEP_Master_Out(1761) <= \<const0>\;
  LOCKSTEP_Master_Out(1762) <= \<const0>\;
  LOCKSTEP_Master_Out(1763) <= \<const0>\;
  LOCKSTEP_Master_Out(1764) <= \<const0>\;
  LOCKSTEP_Master_Out(1765) <= \<const0>\;
  LOCKSTEP_Master_Out(1766) <= \<const0>\;
  LOCKSTEP_Master_Out(1767) <= \<const0>\;
  LOCKSTEP_Master_Out(1768) <= \<const0>\;
  LOCKSTEP_Master_Out(1769) <= \<const0>\;
  LOCKSTEP_Master_Out(1770) <= \<const0>\;
  LOCKSTEP_Master_Out(1771) <= \<const0>\;
  LOCKSTEP_Master_Out(1772) <= \<const0>\;
  LOCKSTEP_Master_Out(1773) <= \<const0>\;
  LOCKSTEP_Master_Out(1774) <= \<const0>\;
  LOCKSTEP_Master_Out(1775) <= \<const0>\;
  LOCKSTEP_Master_Out(1776) <= \<const0>\;
  LOCKSTEP_Master_Out(1777) <= \<const0>\;
  LOCKSTEP_Master_Out(1778) <= \<const0>\;
  LOCKSTEP_Master_Out(1779) <= \<const0>\;
  LOCKSTEP_Master_Out(1780) <= \<const0>\;
  LOCKSTEP_Master_Out(1781) <= \<const0>\;
  LOCKSTEP_Master_Out(1782) <= \<const0>\;
  LOCKSTEP_Master_Out(1783) <= \<const0>\;
  LOCKSTEP_Master_Out(1784) <= \<const0>\;
  LOCKSTEP_Master_Out(1785) <= \<const0>\;
  LOCKSTEP_Master_Out(1786) <= \<const0>\;
  LOCKSTEP_Master_Out(1787) <= \<const0>\;
  LOCKSTEP_Master_Out(1788) <= \<const0>\;
  LOCKSTEP_Master_Out(1789) <= \<const0>\;
  LOCKSTEP_Master_Out(1790) <= \<const0>\;
  LOCKSTEP_Master_Out(1791) <= \<const0>\;
  LOCKSTEP_Master_Out(1792) <= \<const0>\;
  LOCKSTEP_Master_Out(1793) <= \<const0>\;
  LOCKSTEP_Master_Out(1794) <= \<const0>\;
  LOCKSTEP_Master_Out(1795) <= \<const0>\;
  LOCKSTEP_Master_Out(1796) <= \<const0>\;
  LOCKSTEP_Master_Out(1797) <= \<const0>\;
  LOCKSTEP_Master_Out(1798) <= \<const0>\;
  LOCKSTEP_Master_Out(1799) <= \<const0>\;
  LOCKSTEP_Master_Out(1800) <= \<const0>\;
  LOCKSTEP_Master_Out(1801) <= \<const0>\;
  LOCKSTEP_Master_Out(1802) <= \<const0>\;
  LOCKSTEP_Master_Out(1803) <= \<const0>\;
  LOCKSTEP_Master_Out(1804) <= \<const0>\;
  LOCKSTEP_Master_Out(1805) <= \<const0>\;
  LOCKSTEP_Master_Out(1806) <= \<const0>\;
  LOCKSTEP_Master_Out(1807) <= \<const0>\;
  LOCKSTEP_Master_Out(1808) <= \<const0>\;
  LOCKSTEP_Master_Out(1809) <= \<const0>\;
  LOCKSTEP_Master_Out(1810) <= \<const0>\;
  LOCKSTEP_Master_Out(1811) <= \<const0>\;
  LOCKSTEP_Master_Out(1812) <= \<const0>\;
  LOCKSTEP_Master_Out(1813) <= \<const0>\;
  LOCKSTEP_Master_Out(1814) <= \<const0>\;
  LOCKSTEP_Master_Out(1815) <= \<const0>\;
  LOCKSTEP_Master_Out(1816) <= \<const0>\;
  LOCKSTEP_Master_Out(1817) <= \<const0>\;
  LOCKSTEP_Master_Out(1818) <= \<const0>\;
  LOCKSTEP_Master_Out(1819) <= \<const0>\;
  LOCKSTEP_Master_Out(1820) <= \<const0>\;
  LOCKSTEP_Master_Out(1821) <= \<const0>\;
  LOCKSTEP_Master_Out(1822) <= \<const0>\;
  LOCKSTEP_Master_Out(1823) <= \<const0>\;
  LOCKSTEP_Master_Out(1824) <= \<const0>\;
  LOCKSTEP_Master_Out(1825) <= \<const0>\;
  LOCKSTEP_Master_Out(1826) <= \<const0>\;
  LOCKSTEP_Master_Out(1827) <= \<const0>\;
  LOCKSTEP_Master_Out(1828) <= \<const0>\;
  LOCKSTEP_Master_Out(1829) <= \<const0>\;
  LOCKSTEP_Master_Out(1830) <= \<const0>\;
  LOCKSTEP_Master_Out(1831) <= \<const0>\;
  LOCKSTEP_Master_Out(1832) <= \<const0>\;
  LOCKSTEP_Master_Out(1833) <= \<const0>\;
  LOCKSTEP_Master_Out(1834) <= \<const0>\;
  LOCKSTEP_Master_Out(1835) <= \<const0>\;
  LOCKSTEP_Master_Out(1836) <= \<const0>\;
  LOCKSTEP_Master_Out(1837) <= \<const0>\;
  LOCKSTEP_Master_Out(1838) <= \<const0>\;
  LOCKSTEP_Master_Out(1839) <= \<const0>\;
  LOCKSTEP_Master_Out(1840) <= \<const0>\;
  LOCKSTEP_Master_Out(1841) <= \<const0>\;
  LOCKSTEP_Master_Out(1842) <= \<const0>\;
  LOCKSTEP_Master_Out(1843) <= \<const0>\;
  LOCKSTEP_Master_Out(1844) <= \<const0>\;
  LOCKSTEP_Master_Out(1845) <= \<const0>\;
  LOCKSTEP_Master_Out(1846) <= \<const0>\;
  LOCKSTEP_Master_Out(1847) <= \<const0>\;
  LOCKSTEP_Master_Out(1848) <= \<const0>\;
  LOCKSTEP_Master_Out(1849) <= \<const0>\;
  LOCKSTEP_Master_Out(1850) <= \<const0>\;
  LOCKSTEP_Master_Out(1851) <= \<const0>\;
  LOCKSTEP_Master_Out(1852) <= \<const0>\;
  LOCKSTEP_Master_Out(1853) <= \<const0>\;
  LOCKSTEP_Master_Out(1854) <= \<const0>\;
  LOCKSTEP_Master_Out(1855) <= \<const0>\;
  LOCKSTEP_Master_Out(1856) <= \<const0>\;
  LOCKSTEP_Master_Out(1857) <= \<const0>\;
  LOCKSTEP_Master_Out(1858) <= \<const0>\;
  LOCKSTEP_Master_Out(1859) <= \<const0>\;
  LOCKSTEP_Master_Out(1860) <= \<const0>\;
  LOCKSTEP_Master_Out(1861) <= \<const0>\;
  LOCKSTEP_Master_Out(1862) <= \<const0>\;
  LOCKSTEP_Master_Out(1863) <= \<const0>\;
  LOCKSTEP_Master_Out(1864) <= \<const0>\;
  LOCKSTEP_Master_Out(1865) <= \<const0>\;
  LOCKSTEP_Master_Out(1866) <= \<const0>\;
  LOCKSTEP_Master_Out(1867) <= \<const0>\;
  LOCKSTEP_Master_Out(1868) <= \<const0>\;
  LOCKSTEP_Master_Out(1869) <= \<const0>\;
  LOCKSTEP_Master_Out(1870) <= \<const0>\;
  LOCKSTEP_Master_Out(1871) <= \<const0>\;
  LOCKSTEP_Master_Out(1872) <= \<const0>\;
  LOCKSTEP_Master_Out(1873) <= \<const0>\;
  LOCKSTEP_Master_Out(1874) <= \<const0>\;
  LOCKSTEP_Master_Out(1875) <= \<const0>\;
  LOCKSTEP_Master_Out(1876) <= \<const0>\;
  LOCKSTEP_Master_Out(1877) <= \<const0>\;
  LOCKSTEP_Master_Out(1878) <= \<const0>\;
  LOCKSTEP_Master_Out(1879) <= \<const0>\;
  LOCKSTEP_Master_Out(1880) <= \<const0>\;
  LOCKSTEP_Master_Out(1881) <= \<const0>\;
  LOCKSTEP_Master_Out(1882) <= \<const0>\;
  LOCKSTEP_Master_Out(1883) <= \<const0>\;
  LOCKSTEP_Master_Out(1884) <= \<const0>\;
  LOCKSTEP_Master_Out(1885) <= \<const0>\;
  LOCKSTEP_Master_Out(1886) <= \<const0>\;
  LOCKSTEP_Master_Out(1887) <= \<const0>\;
  LOCKSTEP_Master_Out(1888) <= \<const0>\;
  LOCKSTEP_Master_Out(1889) <= \<const0>\;
  LOCKSTEP_Master_Out(1890) <= \<const0>\;
  LOCKSTEP_Master_Out(1891) <= \<const0>\;
  LOCKSTEP_Master_Out(1892) <= \<const0>\;
  LOCKSTEP_Master_Out(1893) <= \<const0>\;
  LOCKSTEP_Master_Out(1894) <= \<const0>\;
  LOCKSTEP_Master_Out(1895) <= \<const0>\;
  LOCKSTEP_Master_Out(1896) <= \<const0>\;
  LOCKSTEP_Master_Out(1897) <= \<const0>\;
  LOCKSTEP_Master_Out(1898) <= \<const0>\;
  LOCKSTEP_Master_Out(1899) <= \<const0>\;
  LOCKSTEP_Master_Out(1900) <= \<const0>\;
  LOCKSTEP_Master_Out(1901) <= \<const0>\;
  LOCKSTEP_Master_Out(1902) <= \<const0>\;
  LOCKSTEP_Master_Out(1903) <= \<const0>\;
  LOCKSTEP_Master_Out(1904) <= \<const0>\;
  LOCKSTEP_Master_Out(1905) <= \<const0>\;
  LOCKSTEP_Master_Out(1906) <= \<const0>\;
  LOCKSTEP_Master_Out(1907) <= \<const0>\;
  LOCKSTEP_Master_Out(1908) <= \<const0>\;
  LOCKSTEP_Master_Out(1909) <= \<const0>\;
  LOCKSTEP_Master_Out(1910) <= \<const0>\;
  LOCKSTEP_Master_Out(1911) <= \<const0>\;
  LOCKSTEP_Master_Out(1912) <= \<const0>\;
  LOCKSTEP_Master_Out(1913) <= \<const0>\;
  LOCKSTEP_Master_Out(1914) <= \<const0>\;
  LOCKSTEP_Master_Out(1915) <= \<const0>\;
  LOCKSTEP_Master_Out(1916) <= \<const0>\;
  LOCKSTEP_Master_Out(1917) <= \<const0>\;
  LOCKSTEP_Master_Out(1918) <= \<const0>\;
  LOCKSTEP_Master_Out(1919) <= \<const0>\;
  LOCKSTEP_Master_Out(1920) <= \<const0>\;
  LOCKSTEP_Master_Out(1921) <= \<const0>\;
  LOCKSTEP_Master_Out(1922) <= \<const0>\;
  LOCKSTEP_Master_Out(1923) <= \<const0>\;
  LOCKSTEP_Master_Out(1924) <= \<const0>\;
  LOCKSTEP_Master_Out(1925) <= \<const0>\;
  LOCKSTEP_Master_Out(1926) <= \<const0>\;
  LOCKSTEP_Master_Out(1927) <= \<const0>\;
  LOCKSTEP_Master_Out(1928) <= \<const0>\;
  LOCKSTEP_Master_Out(1929) <= \<const0>\;
  LOCKSTEP_Master_Out(1930) <= \<const0>\;
  LOCKSTEP_Master_Out(1931) <= \<const0>\;
  LOCKSTEP_Master_Out(1932) <= \<const0>\;
  LOCKSTEP_Master_Out(1933) <= \<const0>\;
  LOCKSTEP_Master_Out(1934) <= \<const0>\;
  LOCKSTEP_Master_Out(1935) <= \<const0>\;
  LOCKSTEP_Master_Out(1936) <= \<const0>\;
  LOCKSTEP_Master_Out(1937) <= \<const0>\;
  LOCKSTEP_Master_Out(1938) <= \<const0>\;
  LOCKSTEP_Master_Out(1939) <= \<const0>\;
  LOCKSTEP_Master_Out(1940) <= \<const0>\;
  LOCKSTEP_Master_Out(1941) <= \<const0>\;
  LOCKSTEP_Master_Out(1942) <= \<const0>\;
  LOCKSTEP_Master_Out(1943) <= \<const0>\;
  LOCKSTEP_Master_Out(1944) <= \<const0>\;
  LOCKSTEP_Master_Out(1945) <= \<const0>\;
  LOCKSTEP_Master_Out(1946) <= \<const0>\;
  LOCKSTEP_Master_Out(1947) <= \<const0>\;
  LOCKSTEP_Master_Out(1948) <= \<const0>\;
  LOCKSTEP_Master_Out(1949) <= \<const0>\;
  LOCKSTEP_Master_Out(1950) <= \<const0>\;
  LOCKSTEP_Master_Out(1951) <= \<const0>\;
  LOCKSTEP_Master_Out(1952) <= \<const0>\;
  LOCKSTEP_Master_Out(1953) <= \<const0>\;
  LOCKSTEP_Master_Out(1954) <= \<const0>\;
  LOCKSTEP_Master_Out(1955) <= \<const0>\;
  LOCKSTEP_Master_Out(1956) <= \<const0>\;
  LOCKSTEP_Master_Out(1957) <= \<const0>\;
  LOCKSTEP_Master_Out(1958) <= \<const0>\;
  LOCKSTEP_Master_Out(1959) <= \<const0>\;
  LOCKSTEP_Master_Out(1960) <= \<const0>\;
  LOCKSTEP_Master_Out(1961) <= \<const0>\;
  LOCKSTEP_Master_Out(1962) <= \<const0>\;
  LOCKSTEP_Master_Out(1963) <= \<const0>\;
  LOCKSTEP_Master_Out(1964) <= \<const0>\;
  LOCKSTEP_Master_Out(1965) <= \<const0>\;
  LOCKSTEP_Master_Out(1966) <= \<const0>\;
  LOCKSTEP_Master_Out(1967) <= \<const0>\;
  LOCKSTEP_Master_Out(1968) <= \<const0>\;
  LOCKSTEP_Master_Out(1969) <= \<const0>\;
  LOCKSTEP_Master_Out(1970) <= \<const0>\;
  LOCKSTEP_Master_Out(1971) <= \<const0>\;
  LOCKSTEP_Master_Out(1972) <= \<const0>\;
  LOCKSTEP_Master_Out(1973) <= \<const0>\;
  LOCKSTEP_Master_Out(1974) <= \<const0>\;
  LOCKSTEP_Master_Out(1975) <= \<const0>\;
  LOCKSTEP_Master_Out(1976) <= \<const0>\;
  LOCKSTEP_Master_Out(1977) <= \<const0>\;
  LOCKSTEP_Master_Out(1978) <= \<const0>\;
  LOCKSTEP_Master_Out(1979) <= \<const0>\;
  LOCKSTEP_Master_Out(1980) <= \<const0>\;
  LOCKSTEP_Master_Out(1981) <= \<const0>\;
  LOCKSTEP_Master_Out(1982) <= \<const0>\;
  LOCKSTEP_Master_Out(1983) <= \<const0>\;
  LOCKSTEP_Master_Out(1984) <= \<const0>\;
  LOCKSTEP_Master_Out(1985) <= \<const0>\;
  LOCKSTEP_Master_Out(1986) <= \<const0>\;
  LOCKSTEP_Master_Out(1987) <= \<const0>\;
  LOCKSTEP_Master_Out(1988) <= \<const0>\;
  LOCKSTEP_Master_Out(1989) <= \<const0>\;
  LOCKSTEP_Master_Out(1990) <= \<const0>\;
  LOCKSTEP_Master_Out(1991) <= \<const0>\;
  LOCKSTEP_Master_Out(1992) <= \<const0>\;
  LOCKSTEP_Master_Out(1993) <= \<const0>\;
  LOCKSTEP_Master_Out(1994) <= \<const0>\;
  LOCKSTEP_Master_Out(1995) <= \<const0>\;
  LOCKSTEP_Master_Out(1996) <= \<const0>\;
  LOCKSTEP_Master_Out(1997) <= \<const0>\;
  LOCKSTEP_Master_Out(1998) <= \<const0>\;
  LOCKSTEP_Master_Out(1999) <= \<const0>\;
  LOCKSTEP_Master_Out(2000) <= \<const0>\;
  LOCKSTEP_Master_Out(2001) <= \<const0>\;
  LOCKSTEP_Master_Out(2002) <= \<const0>\;
  LOCKSTEP_Master_Out(2003) <= \<const0>\;
  LOCKSTEP_Master_Out(2004) <= \<const0>\;
  LOCKSTEP_Master_Out(2005) <= \<const0>\;
  LOCKSTEP_Master_Out(2006) <= \<const0>\;
  LOCKSTEP_Master_Out(2007) <= \<const0>\;
  LOCKSTEP_Master_Out(2008) <= \<const0>\;
  LOCKSTEP_Master_Out(2009) <= \<const0>\;
  LOCKSTEP_Master_Out(2010) <= \<const0>\;
  LOCKSTEP_Master_Out(2011) <= \<const0>\;
  LOCKSTEP_Master_Out(2012) <= \<const0>\;
  LOCKSTEP_Master_Out(2013) <= \<const0>\;
  LOCKSTEP_Master_Out(2014) <= \<const0>\;
  LOCKSTEP_Master_Out(2015) <= \<const0>\;
  LOCKSTEP_Master_Out(2016) <= \<const0>\;
  LOCKSTEP_Master_Out(2017) <= \<const0>\;
  LOCKSTEP_Master_Out(2018) <= \<const0>\;
  LOCKSTEP_Master_Out(2019) <= \<const0>\;
  LOCKSTEP_Master_Out(2020) <= \<const0>\;
  LOCKSTEP_Master_Out(2021) <= \<const0>\;
  LOCKSTEP_Master_Out(2022) <= \<const0>\;
  LOCKSTEP_Master_Out(2023) <= \<const0>\;
  LOCKSTEP_Master_Out(2024) <= \<const0>\;
  LOCKSTEP_Master_Out(2025) <= \<const0>\;
  LOCKSTEP_Master_Out(2026) <= \<const0>\;
  LOCKSTEP_Master_Out(2027) <= \<const0>\;
  LOCKSTEP_Master_Out(2028) <= \<const0>\;
  LOCKSTEP_Master_Out(2029) <= \<const0>\;
  LOCKSTEP_Master_Out(2030) <= \<const0>\;
  LOCKSTEP_Master_Out(2031) <= \<const0>\;
  LOCKSTEP_Master_Out(2032) <= \<const0>\;
  LOCKSTEP_Master_Out(2033) <= \<const0>\;
  LOCKSTEP_Master_Out(2034) <= \<const0>\;
  LOCKSTEP_Master_Out(2035) <= \<const0>\;
  LOCKSTEP_Master_Out(2036) <= \<const0>\;
  LOCKSTEP_Master_Out(2037) <= \<const0>\;
  LOCKSTEP_Master_Out(2038) <= \<const0>\;
  LOCKSTEP_Master_Out(2039) <= \<const0>\;
  LOCKSTEP_Master_Out(2040) <= \<const0>\;
  LOCKSTEP_Master_Out(2041) <= \<const0>\;
  LOCKSTEP_Master_Out(2042) <= \<const0>\;
  LOCKSTEP_Master_Out(2043) <= \<const0>\;
  LOCKSTEP_Master_Out(2044) <= \<const0>\;
  LOCKSTEP_Master_Out(2045) <= \<const0>\;
  LOCKSTEP_Master_Out(2046) <= \<const0>\;
  LOCKSTEP_Master_Out(2047) <= \<const0>\;
  LOCKSTEP_Master_Out(2048) <= \<const0>\;
  LOCKSTEP_Master_Out(2049) <= \<const0>\;
  LOCKSTEP_Master_Out(2050) <= \<const0>\;
  LOCKSTEP_Master_Out(2051) <= \<const0>\;
  LOCKSTEP_Master_Out(2052) <= \<const0>\;
  LOCKSTEP_Master_Out(2053) <= \<const0>\;
  LOCKSTEP_Master_Out(2054) <= \<const0>\;
  LOCKSTEP_Master_Out(2055) <= \<const0>\;
  LOCKSTEP_Master_Out(2056) <= \<const0>\;
  LOCKSTEP_Master_Out(2057) <= \<const0>\;
  LOCKSTEP_Master_Out(2058) <= \<const0>\;
  LOCKSTEP_Master_Out(2059) <= \<const0>\;
  LOCKSTEP_Master_Out(2060) <= \<const0>\;
  LOCKSTEP_Master_Out(2061) <= \<const0>\;
  LOCKSTEP_Master_Out(2062) <= \<const0>\;
  LOCKSTEP_Master_Out(2063) <= \<const0>\;
  LOCKSTEP_Master_Out(2064) <= \<const0>\;
  LOCKSTEP_Master_Out(2065) <= \<const0>\;
  LOCKSTEP_Master_Out(2066) <= \<const0>\;
  LOCKSTEP_Master_Out(2067) <= \<const0>\;
  LOCKSTEP_Master_Out(2068) <= \<const0>\;
  LOCKSTEP_Master_Out(2069) <= \<const0>\;
  LOCKSTEP_Master_Out(2070) <= \<const0>\;
  LOCKSTEP_Master_Out(2071) <= \<const0>\;
  LOCKSTEP_Master_Out(2072) <= \<const0>\;
  LOCKSTEP_Master_Out(2073) <= \<const0>\;
  LOCKSTEP_Master_Out(2074) <= \<const0>\;
  LOCKSTEP_Master_Out(2075) <= \<const0>\;
  LOCKSTEP_Master_Out(2076) <= \<const0>\;
  LOCKSTEP_Master_Out(2077) <= \<const0>\;
  LOCKSTEP_Master_Out(2078) <= \<const0>\;
  LOCKSTEP_Master_Out(2079) <= \<const0>\;
  LOCKSTEP_Master_Out(2080) <= \<const0>\;
  LOCKSTEP_Master_Out(2081) <= \<const0>\;
  LOCKSTEP_Master_Out(2082) <= \<const0>\;
  LOCKSTEP_Master_Out(2083) <= \<const0>\;
  LOCKSTEP_Master_Out(2084) <= \<const0>\;
  LOCKSTEP_Master_Out(2085) <= \<const0>\;
  LOCKSTEP_Master_Out(2086) <= \<const0>\;
  LOCKSTEP_Master_Out(2087) <= \<const0>\;
  LOCKSTEP_Master_Out(2088) <= \<const0>\;
  LOCKSTEP_Master_Out(2089) <= \<const0>\;
  LOCKSTEP_Master_Out(2090) <= \<const0>\;
  LOCKSTEP_Master_Out(2091) <= \<const0>\;
  LOCKSTEP_Master_Out(2092) <= \<const0>\;
  LOCKSTEP_Master_Out(2093) <= \<const0>\;
  LOCKSTEP_Master_Out(2094) <= \<const0>\;
  LOCKSTEP_Master_Out(2095) <= \<const0>\;
  LOCKSTEP_Master_Out(2096) <= \<const0>\;
  LOCKSTEP_Master_Out(2097) <= \<const0>\;
  LOCKSTEP_Master_Out(2098) <= \<const0>\;
  LOCKSTEP_Master_Out(2099) <= \<const0>\;
  LOCKSTEP_Master_Out(2100) <= \<const0>\;
  LOCKSTEP_Master_Out(2101) <= \<const0>\;
  LOCKSTEP_Master_Out(2102) <= \<const0>\;
  LOCKSTEP_Master_Out(2103) <= \<const0>\;
  LOCKSTEP_Master_Out(2104) <= \<const0>\;
  LOCKSTEP_Master_Out(2105) <= \<const0>\;
  LOCKSTEP_Master_Out(2106) <= \<const0>\;
  LOCKSTEP_Master_Out(2107) <= \<const0>\;
  LOCKSTEP_Master_Out(2108) <= \<const0>\;
  LOCKSTEP_Master_Out(2109) <= \<const0>\;
  LOCKSTEP_Master_Out(2110) <= \<const0>\;
  LOCKSTEP_Master_Out(2111) <= \<const0>\;
  LOCKSTEP_Master_Out(2112) <= \<const0>\;
  LOCKSTEP_Master_Out(2113) <= \<const0>\;
  LOCKSTEP_Master_Out(2114) <= \<const0>\;
  LOCKSTEP_Master_Out(2115) <= \<const0>\;
  LOCKSTEP_Master_Out(2116) <= \<const0>\;
  LOCKSTEP_Master_Out(2117) <= \<const0>\;
  LOCKSTEP_Master_Out(2118) <= \<const0>\;
  LOCKSTEP_Master_Out(2119) <= \<const0>\;
  LOCKSTEP_Master_Out(2120) <= \<const0>\;
  LOCKSTEP_Master_Out(2121) <= \<const0>\;
  LOCKSTEP_Master_Out(2122) <= \<const0>\;
  LOCKSTEP_Master_Out(2123) <= \<const0>\;
  LOCKSTEP_Master_Out(2124) <= \<const0>\;
  LOCKSTEP_Master_Out(2125) <= \<const0>\;
  LOCKSTEP_Master_Out(2126) <= \<const0>\;
  LOCKSTEP_Master_Out(2127) <= \<const0>\;
  LOCKSTEP_Master_Out(2128) <= \<const0>\;
  LOCKSTEP_Master_Out(2129) <= \<const0>\;
  LOCKSTEP_Master_Out(2130) <= \<const0>\;
  LOCKSTEP_Master_Out(2131) <= \<const0>\;
  LOCKSTEP_Master_Out(2132) <= \<const0>\;
  LOCKSTEP_Master_Out(2133) <= \<const0>\;
  LOCKSTEP_Master_Out(2134) <= \<const0>\;
  LOCKSTEP_Master_Out(2135) <= \<const0>\;
  LOCKSTEP_Master_Out(2136) <= \<const0>\;
  LOCKSTEP_Master_Out(2137) <= \<const0>\;
  LOCKSTEP_Master_Out(2138) <= \<const0>\;
  LOCKSTEP_Master_Out(2139) <= \<const0>\;
  LOCKSTEP_Master_Out(2140) <= \<const0>\;
  LOCKSTEP_Master_Out(2141) <= \<const0>\;
  LOCKSTEP_Master_Out(2142) <= \<const0>\;
  LOCKSTEP_Master_Out(2143) <= \<const0>\;
  LOCKSTEP_Master_Out(2144) <= \<const0>\;
  LOCKSTEP_Master_Out(2145) <= \<const0>\;
  LOCKSTEP_Master_Out(2146) <= \<const0>\;
  LOCKSTEP_Master_Out(2147) <= \<const0>\;
  LOCKSTEP_Master_Out(2148) <= \<const0>\;
  LOCKSTEP_Master_Out(2149) <= \<const0>\;
  LOCKSTEP_Master_Out(2150) <= \<const0>\;
  LOCKSTEP_Master_Out(2151) <= \<const0>\;
  LOCKSTEP_Master_Out(2152) <= \<const0>\;
  LOCKSTEP_Master_Out(2153) <= \<const0>\;
  LOCKSTEP_Master_Out(2154) <= \<const0>\;
  LOCKSTEP_Master_Out(2155) <= \<const0>\;
  LOCKSTEP_Master_Out(2156) <= \<const0>\;
  LOCKSTEP_Master_Out(2157) <= \<const0>\;
  LOCKSTEP_Master_Out(2158) <= \<const0>\;
  LOCKSTEP_Master_Out(2159) <= \<const0>\;
  LOCKSTEP_Master_Out(2160) <= \<const0>\;
  LOCKSTEP_Master_Out(2161) <= \<const0>\;
  LOCKSTEP_Master_Out(2162) <= \<const0>\;
  LOCKSTEP_Master_Out(2163) <= \<const0>\;
  LOCKSTEP_Master_Out(2164) <= \<const0>\;
  LOCKSTEP_Master_Out(2165) <= \<const0>\;
  LOCKSTEP_Master_Out(2166) <= \<const0>\;
  LOCKSTEP_Master_Out(2167) <= \<const0>\;
  LOCKSTEP_Master_Out(2168) <= \<const0>\;
  LOCKSTEP_Master_Out(2169) <= \<const0>\;
  LOCKSTEP_Master_Out(2170) <= \<const0>\;
  LOCKSTEP_Master_Out(2171) <= \<const0>\;
  LOCKSTEP_Master_Out(2172) <= \<const0>\;
  LOCKSTEP_Master_Out(2173) <= \<const0>\;
  LOCKSTEP_Master_Out(2174) <= \<const0>\;
  LOCKSTEP_Master_Out(2175) <= \<const0>\;
  LOCKSTEP_Master_Out(2176) <= \<const0>\;
  LOCKSTEP_Master_Out(2177) <= \<const0>\;
  LOCKSTEP_Master_Out(2178) <= \<const0>\;
  LOCKSTEP_Master_Out(2179) <= \<const0>\;
  LOCKSTEP_Master_Out(2180) <= \<const0>\;
  LOCKSTEP_Master_Out(2181) <= \<const0>\;
  LOCKSTEP_Master_Out(2182) <= \<const0>\;
  LOCKSTEP_Master_Out(2183) <= \<const0>\;
  LOCKSTEP_Master_Out(2184) <= \<const0>\;
  LOCKSTEP_Master_Out(2185) <= \<const0>\;
  LOCKSTEP_Master_Out(2186) <= \<const0>\;
  LOCKSTEP_Master_Out(2187) <= \<const0>\;
  LOCKSTEP_Master_Out(2188) <= \<const0>\;
  LOCKSTEP_Master_Out(2189) <= \<const0>\;
  LOCKSTEP_Master_Out(2190) <= \<const0>\;
  LOCKSTEP_Master_Out(2191) <= \<const0>\;
  LOCKSTEP_Master_Out(2192) <= \<const0>\;
  LOCKSTEP_Master_Out(2193) <= \<const0>\;
  LOCKSTEP_Master_Out(2194) <= \<const0>\;
  LOCKSTEP_Master_Out(2195) <= \<const0>\;
  LOCKSTEP_Master_Out(2196) <= \<const0>\;
  LOCKSTEP_Master_Out(2197) <= \<const0>\;
  LOCKSTEP_Master_Out(2198) <= \<const0>\;
  LOCKSTEP_Master_Out(2199) <= \<const0>\;
  LOCKSTEP_Master_Out(2200) <= \<const0>\;
  LOCKSTEP_Master_Out(2201) <= \<const0>\;
  LOCKSTEP_Master_Out(2202) <= \<const0>\;
  LOCKSTEP_Master_Out(2203) <= \<const0>\;
  LOCKSTEP_Master_Out(2204) <= \<const0>\;
  LOCKSTEP_Master_Out(2205) <= \<const0>\;
  LOCKSTEP_Master_Out(2206) <= \<const0>\;
  LOCKSTEP_Master_Out(2207) <= \<const0>\;
  LOCKSTEP_Master_Out(2208) <= \<const0>\;
  LOCKSTEP_Master_Out(2209) <= \<const0>\;
  LOCKSTEP_Master_Out(2210) <= \<const0>\;
  LOCKSTEP_Master_Out(2211) <= \<const0>\;
  LOCKSTEP_Master_Out(2212) <= \<const0>\;
  LOCKSTEP_Master_Out(2213) <= \<const0>\;
  LOCKSTEP_Master_Out(2214) <= \<const0>\;
  LOCKSTEP_Master_Out(2215) <= \<const0>\;
  LOCKSTEP_Master_Out(2216) <= \<const0>\;
  LOCKSTEP_Master_Out(2217) <= \<const0>\;
  LOCKSTEP_Master_Out(2218) <= \<const0>\;
  LOCKSTEP_Master_Out(2219) <= \<const0>\;
  LOCKSTEP_Master_Out(2220) <= \<const0>\;
  LOCKSTEP_Master_Out(2221) <= \<const0>\;
  LOCKSTEP_Master_Out(2222) <= \<const0>\;
  LOCKSTEP_Master_Out(2223) <= \<const0>\;
  LOCKSTEP_Master_Out(2224) <= \<const0>\;
  LOCKSTEP_Master_Out(2225) <= \<const0>\;
  LOCKSTEP_Master_Out(2226) <= \<const0>\;
  LOCKSTEP_Master_Out(2227) <= \<const0>\;
  LOCKSTEP_Master_Out(2228) <= \<const0>\;
  LOCKSTEP_Master_Out(2229) <= \<const0>\;
  LOCKSTEP_Master_Out(2230) <= \<const0>\;
  LOCKSTEP_Master_Out(2231) <= \<const0>\;
  LOCKSTEP_Master_Out(2232) <= \<const0>\;
  LOCKSTEP_Master_Out(2233) <= \<const0>\;
  LOCKSTEP_Master_Out(2234) <= \<const0>\;
  LOCKSTEP_Master_Out(2235) <= \<const0>\;
  LOCKSTEP_Master_Out(2236) <= \<const0>\;
  LOCKSTEP_Master_Out(2237) <= \<const0>\;
  LOCKSTEP_Master_Out(2238) <= \<const0>\;
  LOCKSTEP_Master_Out(2239) <= \<const0>\;
  LOCKSTEP_Master_Out(2240) <= \<const0>\;
  LOCKSTEP_Master_Out(2241) <= \<const0>\;
  LOCKSTEP_Master_Out(2242) <= \<const0>\;
  LOCKSTEP_Master_Out(2243) <= \<const0>\;
  LOCKSTEP_Master_Out(2244) <= \<const0>\;
  LOCKSTEP_Master_Out(2245) <= \<const0>\;
  LOCKSTEP_Master_Out(2246) <= \<const0>\;
  LOCKSTEP_Master_Out(2247) <= \<const0>\;
  LOCKSTEP_Master_Out(2248) <= \<const0>\;
  LOCKSTEP_Master_Out(2249) <= \<const0>\;
  LOCKSTEP_Master_Out(2250) <= \<const0>\;
  LOCKSTEP_Master_Out(2251) <= \<const0>\;
  LOCKSTEP_Master_Out(2252) <= \<const0>\;
  LOCKSTEP_Master_Out(2253) <= \<const0>\;
  LOCKSTEP_Master_Out(2254) <= \<const0>\;
  LOCKSTEP_Master_Out(2255) <= \<const0>\;
  LOCKSTEP_Master_Out(2256) <= \<const0>\;
  LOCKSTEP_Master_Out(2257) <= \<const0>\;
  LOCKSTEP_Master_Out(2258) <= \<const0>\;
  LOCKSTEP_Master_Out(2259) <= \<const0>\;
  LOCKSTEP_Master_Out(2260) <= \<const0>\;
  LOCKSTEP_Master_Out(2261) <= \<const0>\;
  LOCKSTEP_Master_Out(2262) <= \<const0>\;
  LOCKSTEP_Master_Out(2263) <= \<const0>\;
  LOCKSTEP_Master_Out(2264) <= \<const0>\;
  LOCKSTEP_Master_Out(2265) <= \<const0>\;
  LOCKSTEP_Master_Out(2266) <= \<const0>\;
  LOCKSTEP_Master_Out(2267) <= \<const0>\;
  LOCKSTEP_Master_Out(2268) <= \<const0>\;
  LOCKSTEP_Master_Out(2269) <= \<const0>\;
  LOCKSTEP_Master_Out(2270) <= \<const0>\;
  LOCKSTEP_Master_Out(2271) <= \<const0>\;
  LOCKSTEP_Master_Out(2272) <= \<const0>\;
  LOCKSTEP_Master_Out(2273) <= \<const0>\;
  LOCKSTEP_Master_Out(2274) <= \<const0>\;
  LOCKSTEP_Master_Out(2275) <= \<const0>\;
  LOCKSTEP_Master_Out(2276) <= \<const0>\;
  LOCKSTEP_Master_Out(2277) <= \<const0>\;
  LOCKSTEP_Master_Out(2278) <= \<const0>\;
  LOCKSTEP_Master_Out(2279) <= \<const0>\;
  LOCKSTEP_Master_Out(2280) <= \<const0>\;
  LOCKSTEP_Master_Out(2281) <= \<const0>\;
  LOCKSTEP_Master_Out(2282) <= \<const0>\;
  LOCKSTEP_Master_Out(2283) <= \<const0>\;
  LOCKSTEP_Master_Out(2284) <= \<const0>\;
  LOCKSTEP_Master_Out(2285) <= \<const0>\;
  LOCKSTEP_Master_Out(2286) <= \<const0>\;
  LOCKSTEP_Master_Out(2287) <= \<const0>\;
  LOCKSTEP_Master_Out(2288) <= \<const0>\;
  LOCKSTEP_Master_Out(2289) <= \<const0>\;
  LOCKSTEP_Master_Out(2290) <= \<const0>\;
  LOCKSTEP_Master_Out(2291) <= \<const0>\;
  LOCKSTEP_Master_Out(2292) <= \<const0>\;
  LOCKSTEP_Master_Out(2293) <= \<const0>\;
  LOCKSTEP_Master_Out(2294) <= \<const0>\;
  LOCKSTEP_Master_Out(2295) <= \<const0>\;
  LOCKSTEP_Master_Out(2296) <= \<const0>\;
  LOCKSTEP_Master_Out(2297) <= \<const0>\;
  LOCKSTEP_Master_Out(2298) <= \<const0>\;
  LOCKSTEP_Master_Out(2299) <= \<const0>\;
  LOCKSTEP_Master_Out(2300) <= \<const0>\;
  LOCKSTEP_Master_Out(2301) <= \<const0>\;
  LOCKSTEP_Master_Out(2302) <= \<const0>\;
  LOCKSTEP_Master_Out(2303) <= \<const0>\;
  LOCKSTEP_Master_Out(2304) <= \<const0>\;
  LOCKSTEP_Master_Out(2305) <= \<const0>\;
  LOCKSTEP_Master_Out(2306) <= \<const0>\;
  LOCKSTEP_Master_Out(2307) <= \<const0>\;
  LOCKSTEP_Master_Out(2308) <= \<const0>\;
  LOCKSTEP_Master_Out(2309) <= \<const0>\;
  LOCKSTEP_Master_Out(2310) <= \<const0>\;
  LOCKSTEP_Master_Out(2311) <= \<const0>\;
  LOCKSTEP_Master_Out(2312) <= \<const0>\;
  LOCKSTEP_Master_Out(2313) <= \<const0>\;
  LOCKSTEP_Master_Out(2314) <= \<const0>\;
  LOCKSTEP_Master_Out(2315) <= \<const0>\;
  LOCKSTEP_Master_Out(2316) <= \<const0>\;
  LOCKSTEP_Master_Out(2317) <= \<const0>\;
  LOCKSTEP_Master_Out(2318) <= \<const0>\;
  LOCKSTEP_Master_Out(2319) <= \<const0>\;
  LOCKSTEP_Master_Out(2320) <= \<const0>\;
  LOCKSTEP_Master_Out(2321) <= \<const0>\;
  LOCKSTEP_Master_Out(2322) <= \<const0>\;
  LOCKSTEP_Master_Out(2323) <= \<const0>\;
  LOCKSTEP_Master_Out(2324) <= \<const0>\;
  LOCKSTEP_Master_Out(2325) <= \<const0>\;
  LOCKSTEP_Master_Out(2326) <= \<const0>\;
  LOCKSTEP_Master_Out(2327) <= \<const0>\;
  LOCKSTEP_Master_Out(2328) <= \<const0>\;
  LOCKSTEP_Master_Out(2329) <= \<const0>\;
  LOCKSTEP_Master_Out(2330) <= \<const0>\;
  LOCKSTEP_Master_Out(2331) <= \<const0>\;
  LOCKSTEP_Master_Out(2332) <= \<const0>\;
  LOCKSTEP_Master_Out(2333) <= \<const0>\;
  LOCKSTEP_Master_Out(2334) <= \<const0>\;
  LOCKSTEP_Master_Out(2335) <= \<const0>\;
  LOCKSTEP_Master_Out(2336) <= \<const0>\;
  LOCKSTEP_Master_Out(2337) <= \<const0>\;
  LOCKSTEP_Master_Out(2338) <= \<const0>\;
  LOCKSTEP_Master_Out(2339) <= \<const0>\;
  LOCKSTEP_Master_Out(2340) <= \<const0>\;
  LOCKSTEP_Master_Out(2341) <= \<const0>\;
  LOCKSTEP_Master_Out(2342) <= \<const0>\;
  LOCKSTEP_Master_Out(2343) <= \<const0>\;
  LOCKSTEP_Master_Out(2344) <= \<const0>\;
  LOCKSTEP_Master_Out(2345) <= \<const0>\;
  LOCKSTEP_Master_Out(2346) <= \<const0>\;
  LOCKSTEP_Master_Out(2347) <= \<const0>\;
  LOCKSTEP_Master_Out(2348) <= \<const0>\;
  LOCKSTEP_Master_Out(2349) <= \<const0>\;
  LOCKSTEP_Master_Out(2350) <= \<const0>\;
  LOCKSTEP_Master_Out(2351) <= \<const0>\;
  LOCKSTEP_Master_Out(2352) <= \<const0>\;
  LOCKSTEP_Master_Out(2353) <= \<const0>\;
  LOCKSTEP_Master_Out(2354) <= \<const0>\;
  LOCKSTEP_Master_Out(2355) <= \<const0>\;
  LOCKSTEP_Master_Out(2356) <= \<const0>\;
  LOCKSTEP_Master_Out(2357) <= \<const0>\;
  LOCKSTEP_Master_Out(2358) <= \<const0>\;
  LOCKSTEP_Master_Out(2359) <= \<const0>\;
  LOCKSTEP_Master_Out(2360) <= \<const0>\;
  LOCKSTEP_Master_Out(2361) <= \<const0>\;
  LOCKSTEP_Master_Out(2362) <= \<const0>\;
  LOCKSTEP_Master_Out(2363) <= \<const0>\;
  LOCKSTEP_Master_Out(2364) <= \<const0>\;
  LOCKSTEP_Master_Out(2365) <= \<const0>\;
  LOCKSTEP_Master_Out(2366) <= \<const0>\;
  LOCKSTEP_Master_Out(2367) <= \<const0>\;
  LOCKSTEP_Master_Out(2368) <= \<const0>\;
  LOCKSTEP_Master_Out(2369) <= \<const0>\;
  LOCKSTEP_Master_Out(2370) <= \<const0>\;
  LOCKSTEP_Master_Out(2371) <= \<const0>\;
  LOCKSTEP_Master_Out(2372) <= \<const0>\;
  LOCKSTEP_Master_Out(2373) <= \<const0>\;
  LOCKSTEP_Master_Out(2374) <= \<const0>\;
  LOCKSTEP_Master_Out(2375) <= \<const0>\;
  LOCKSTEP_Master_Out(2376) <= \<const0>\;
  LOCKSTEP_Master_Out(2377) <= \<const0>\;
  LOCKSTEP_Master_Out(2378) <= \<const0>\;
  LOCKSTEP_Master_Out(2379) <= \<const0>\;
  LOCKSTEP_Master_Out(2380) <= \<const0>\;
  LOCKSTEP_Master_Out(2381) <= \<const0>\;
  LOCKSTEP_Master_Out(2382) <= \<const0>\;
  LOCKSTEP_Master_Out(2383) <= \<const0>\;
  LOCKSTEP_Master_Out(2384) <= \<const0>\;
  LOCKSTEP_Master_Out(2385) <= \<const0>\;
  LOCKSTEP_Master_Out(2386) <= \<const0>\;
  LOCKSTEP_Master_Out(2387) <= \<const0>\;
  LOCKSTEP_Master_Out(2388) <= \<const0>\;
  LOCKSTEP_Master_Out(2389) <= \<const0>\;
  LOCKSTEP_Master_Out(2390) <= \<const0>\;
  LOCKSTEP_Master_Out(2391) <= \<const0>\;
  LOCKSTEP_Master_Out(2392) <= \<const0>\;
  LOCKSTEP_Master_Out(2393) <= \<const0>\;
  LOCKSTEP_Master_Out(2394) <= \<const0>\;
  LOCKSTEP_Master_Out(2395) <= \<const0>\;
  LOCKSTEP_Master_Out(2396) <= \<const0>\;
  LOCKSTEP_Master_Out(2397) <= \<const0>\;
  LOCKSTEP_Master_Out(2398) <= \<const0>\;
  LOCKSTEP_Master_Out(2399) <= \<const0>\;
  LOCKSTEP_Master_Out(2400) <= \<const0>\;
  LOCKSTEP_Master_Out(2401) <= \<const0>\;
  LOCKSTEP_Master_Out(2402) <= \<const0>\;
  LOCKSTEP_Master_Out(2403) <= \<const0>\;
  LOCKSTEP_Master_Out(2404) <= \<const0>\;
  LOCKSTEP_Master_Out(2405) <= \<const0>\;
  LOCKSTEP_Master_Out(2406) <= \<const0>\;
  LOCKSTEP_Master_Out(2407) <= \<const0>\;
  LOCKSTEP_Master_Out(2408) <= \<const0>\;
  LOCKSTEP_Master_Out(2409) <= \<const0>\;
  LOCKSTEP_Master_Out(2410) <= \<const0>\;
  LOCKSTEP_Master_Out(2411) <= \<const0>\;
  LOCKSTEP_Master_Out(2412) <= \<const0>\;
  LOCKSTEP_Master_Out(2413) <= \<const0>\;
  LOCKSTEP_Master_Out(2414) <= \<const0>\;
  LOCKSTEP_Master_Out(2415) <= \<const0>\;
  LOCKSTEP_Master_Out(2416) <= \<const0>\;
  LOCKSTEP_Master_Out(2417) <= \<const0>\;
  LOCKSTEP_Master_Out(2418) <= \<const0>\;
  LOCKSTEP_Master_Out(2419) <= \<const0>\;
  LOCKSTEP_Master_Out(2420) <= \<const0>\;
  LOCKSTEP_Master_Out(2421) <= \<const0>\;
  LOCKSTEP_Master_Out(2422) <= \<const0>\;
  LOCKSTEP_Master_Out(2423) <= \<const0>\;
  LOCKSTEP_Master_Out(2424) <= \<const0>\;
  LOCKSTEP_Master_Out(2425) <= \<const0>\;
  LOCKSTEP_Master_Out(2426) <= \<const0>\;
  LOCKSTEP_Master_Out(2427) <= \<const0>\;
  LOCKSTEP_Master_Out(2428) <= \<const0>\;
  LOCKSTEP_Master_Out(2429) <= \<const0>\;
  LOCKSTEP_Master_Out(2430) <= \<const0>\;
  LOCKSTEP_Master_Out(2431) <= \<const0>\;
  LOCKSTEP_Master_Out(2432) <= \<const0>\;
  LOCKSTEP_Master_Out(2433) <= \<const0>\;
  LOCKSTEP_Master_Out(2434) <= \<const0>\;
  LOCKSTEP_Master_Out(2435) <= \<const0>\;
  LOCKSTEP_Master_Out(2436) <= \<const0>\;
  LOCKSTEP_Master_Out(2437) <= \<const0>\;
  LOCKSTEP_Master_Out(2438) <= \<const0>\;
  LOCKSTEP_Master_Out(2439) <= \<const0>\;
  LOCKSTEP_Master_Out(2440) <= \<const0>\;
  LOCKSTEP_Master_Out(2441) <= \<const0>\;
  LOCKSTEP_Master_Out(2442) <= \<const0>\;
  LOCKSTEP_Master_Out(2443) <= \<const0>\;
  LOCKSTEP_Master_Out(2444) <= \<const0>\;
  LOCKSTEP_Master_Out(2445) <= \<const0>\;
  LOCKSTEP_Master_Out(2446) <= \<const0>\;
  LOCKSTEP_Master_Out(2447) <= \<const0>\;
  LOCKSTEP_Master_Out(2448) <= \<const0>\;
  LOCKSTEP_Master_Out(2449) <= \<const0>\;
  LOCKSTEP_Master_Out(2450) <= \<const0>\;
  LOCKSTEP_Master_Out(2451) <= \<const0>\;
  LOCKSTEP_Master_Out(2452) <= \<const0>\;
  LOCKSTEP_Master_Out(2453) <= \<const0>\;
  LOCKSTEP_Master_Out(2454) <= \<const0>\;
  LOCKSTEP_Master_Out(2455) <= \<const0>\;
  LOCKSTEP_Master_Out(2456) <= \<const0>\;
  LOCKSTEP_Master_Out(2457) <= \<const0>\;
  LOCKSTEP_Master_Out(2458) <= \<const0>\;
  LOCKSTEP_Master_Out(2459) <= \<const0>\;
  LOCKSTEP_Master_Out(2460) <= \<const0>\;
  LOCKSTEP_Master_Out(2461) <= \<const0>\;
  LOCKSTEP_Master_Out(2462) <= \<const0>\;
  LOCKSTEP_Master_Out(2463) <= \<const0>\;
  LOCKSTEP_Master_Out(2464) <= \<const0>\;
  LOCKSTEP_Master_Out(2465) <= \<const0>\;
  LOCKSTEP_Master_Out(2466) <= \<const0>\;
  LOCKSTEP_Master_Out(2467) <= \<const0>\;
  LOCKSTEP_Master_Out(2468) <= \<const0>\;
  LOCKSTEP_Master_Out(2469) <= \<const0>\;
  LOCKSTEP_Master_Out(2470) <= \<const0>\;
  LOCKSTEP_Master_Out(2471) <= \<const0>\;
  LOCKSTEP_Master_Out(2472) <= \<const0>\;
  LOCKSTEP_Master_Out(2473) <= \<const0>\;
  LOCKSTEP_Master_Out(2474) <= \<const0>\;
  LOCKSTEP_Master_Out(2475) <= \<const0>\;
  LOCKSTEP_Master_Out(2476) <= \<const0>\;
  LOCKSTEP_Master_Out(2477) <= \<const0>\;
  LOCKSTEP_Master_Out(2478) <= \<const0>\;
  LOCKSTEP_Master_Out(2479) <= \<const0>\;
  LOCKSTEP_Master_Out(2480) <= \<const0>\;
  LOCKSTEP_Master_Out(2481) <= \<const0>\;
  LOCKSTEP_Master_Out(2482) <= \<const0>\;
  LOCKSTEP_Master_Out(2483) <= \<const0>\;
  LOCKSTEP_Master_Out(2484) <= \<const0>\;
  LOCKSTEP_Master_Out(2485) <= \<const0>\;
  LOCKSTEP_Master_Out(2486) <= \<const0>\;
  LOCKSTEP_Master_Out(2487) <= \<const0>\;
  LOCKSTEP_Master_Out(2488) <= \<const0>\;
  LOCKSTEP_Master_Out(2489) <= \<const0>\;
  LOCKSTEP_Master_Out(2490) <= \<const0>\;
  LOCKSTEP_Master_Out(2491) <= \<const0>\;
  LOCKSTEP_Master_Out(2492) <= \<const0>\;
  LOCKSTEP_Master_Out(2493) <= \<const0>\;
  LOCKSTEP_Master_Out(2494) <= \<const0>\;
  LOCKSTEP_Master_Out(2495) <= \<const0>\;
  LOCKSTEP_Master_Out(2496) <= \<const0>\;
  LOCKSTEP_Master_Out(2497) <= \<const0>\;
  LOCKSTEP_Master_Out(2498) <= \<const0>\;
  LOCKSTEP_Master_Out(2499) <= \<const0>\;
  LOCKSTEP_Master_Out(2500) <= \<const0>\;
  LOCKSTEP_Master_Out(2501) <= \<const0>\;
  LOCKSTEP_Master_Out(2502) <= \<const0>\;
  LOCKSTEP_Master_Out(2503) <= \<const0>\;
  LOCKSTEP_Master_Out(2504) <= \<const0>\;
  LOCKSTEP_Master_Out(2505) <= \<const0>\;
  LOCKSTEP_Master_Out(2506) <= \<const0>\;
  LOCKSTEP_Master_Out(2507) <= \<const0>\;
  LOCKSTEP_Master_Out(2508) <= \<const0>\;
  LOCKSTEP_Master_Out(2509) <= \<const0>\;
  LOCKSTEP_Master_Out(2510) <= \<const0>\;
  LOCKSTEP_Master_Out(2511) <= \<const0>\;
  LOCKSTEP_Master_Out(2512) <= \<const0>\;
  LOCKSTEP_Master_Out(2513) <= \<const0>\;
  LOCKSTEP_Master_Out(2514) <= \<const0>\;
  LOCKSTEP_Master_Out(2515) <= \<const0>\;
  LOCKSTEP_Master_Out(2516) <= \<const0>\;
  LOCKSTEP_Master_Out(2517) <= \<const0>\;
  LOCKSTEP_Master_Out(2518) <= \<const0>\;
  LOCKSTEP_Master_Out(2519) <= \<const0>\;
  LOCKSTEP_Master_Out(2520) <= \<const0>\;
  LOCKSTEP_Master_Out(2521) <= \<const0>\;
  LOCKSTEP_Master_Out(2522) <= \<const0>\;
  LOCKSTEP_Master_Out(2523) <= \<const0>\;
  LOCKSTEP_Master_Out(2524) <= \<const0>\;
  LOCKSTEP_Master_Out(2525) <= \<const0>\;
  LOCKSTEP_Master_Out(2526) <= \<const0>\;
  LOCKSTEP_Master_Out(2527) <= \<const0>\;
  LOCKSTEP_Master_Out(2528) <= \<const0>\;
  LOCKSTEP_Master_Out(2529) <= \<const0>\;
  LOCKSTEP_Master_Out(2530) <= \<const0>\;
  LOCKSTEP_Master_Out(2531) <= \<const0>\;
  LOCKSTEP_Master_Out(2532) <= \<const0>\;
  LOCKSTEP_Master_Out(2533) <= \<const0>\;
  LOCKSTEP_Master_Out(2534) <= \<const0>\;
  LOCKSTEP_Master_Out(2535) <= \<const0>\;
  LOCKSTEP_Master_Out(2536) <= \<const0>\;
  LOCKSTEP_Master_Out(2537) <= \<const0>\;
  LOCKSTEP_Master_Out(2538) <= \<const0>\;
  LOCKSTEP_Master_Out(2539) <= \<const0>\;
  LOCKSTEP_Master_Out(2540) <= \<const0>\;
  LOCKSTEP_Master_Out(2541) <= \<const0>\;
  LOCKSTEP_Master_Out(2542) <= \<const0>\;
  LOCKSTEP_Master_Out(2543) <= \<const0>\;
  LOCKSTEP_Master_Out(2544) <= \<const0>\;
  LOCKSTEP_Master_Out(2545) <= \<const0>\;
  LOCKSTEP_Master_Out(2546) <= \<const0>\;
  LOCKSTEP_Master_Out(2547) <= \<const0>\;
  LOCKSTEP_Master_Out(2548) <= \<const0>\;
  LOCKSTEP_Master_Out(2549) <= \<const0>\;
  LOCKSTEP_Master_Out(2550) <= \<const0>\;
  LOCKSTEP_Master_Out(2551) <= \<const0>\;
  LOCKSTEP_Master_Out(2552) <= \<const0>\;
  LOCKSTEP_Master_Out(2553) <= \<const0>\;
  LOCKSTEP_Master_Out(2554) <= \<const0>\;
  LOCKSTEP_Master_Out(2555) <= \<const0>\;
  LOCKSTEP_Master_Out(2556) <= \<const0>\;
  LOCKSTEP_Master_Out(2557) <= \<const0>\;
  LOCKSTEP_Master_Out(2558) <= \<const0>\;
  LOCKSTEP_Master_Out(2559) <= \<const0>\;
  LOCKSTEP_Master_Out(2560) <= \<const0>\;
  LOCKSTEP_Master_Out(2561) <= \<const0>\;
  LOCKSTEP_Master_Out(2562) <= \<const0>\;
  LOCKSTEP_Master_Out(2563) <= \<const0>\;
  LOCKSTEP_Master_Out(2564) <= \<const0>\;
  LOCKSTEP_Master_Out(2565) <= \<const0>\;
  LOCKSTEP_Master_Out(2566) <= \<const0>\;
  LOCKSTEP_Master_Out(2567) <= \<const0>\;
  LOCKSTEP_Master_Out(2568) <= \<const0>\;
  LOCKSTEP_Master_Out(2569) <= \<const0>\;
  LOCKSTEP_Master_Out(2570) <= \<const0>\;
  LOCKSTEP_Master_Out(2571) <= \<const0>\;
  LOCKSTEP_Master_Out(2572) <= \<const0>\;
  LOCKSTEP_Master_Out(2573) <= \<const0>\;
  LOCKSTEP_Master_Out(2574) <= \<const0>\;
  LOCKSTEP_Master_Out(2575) <= \<const0>\;
  LOCKSTEP_Master_Out(2576) <= \<const0>\;
  LOCKSTEP_Master_Out(2577) <= \<const0>\;
  LOCKSTEP_Master_Out(2578) <= \<const0>\;
  LOCKSTEP_Master_Out(2579) <= \<const0>\;
  LOCKSTEP_Master_Out(2580) <= \<const0>\;
  LOCKSTEP_Master_Out(2581) <= \<const0>\;
  LOCKSTEP_Master_Out(2582) <= \<const0>\;
  LOCKSTEP_Master_Out(2583) <= \<const0>\;
  LOCKSTEP_Master_Out(2584) <= \<const0>\;
  LOCKSTEP_Master_Out(2585) <= \<const0>\;
  LOCKSTEP_Master_Out(2586) <= \<const0>\;
  LOCKSTEP_Master_Out(2587) <= \<const0>\;
  LOCKSTEP_Master_Out(2588) <= \<const0>\;
  LOCKSTEP_Master_Out(2589) <= \<const0>\;
  LOCKSTEP_Master_Out(2590) <= \<const0>\;
  LOCKSTEP_Master_Out(2591) <= \<const0>\;
  LOCKSTEP_Master_Out(2592) <= \<const0>\;
  LOCKSTEP_Master_Out(2593) <= \<const0>\;
  LOCKSTEP_Master_Out(2594) <= \<const0>\;
  LOCKSTEP_Master_Out(2595) <= \<const0>\;
  LOCKSTEP_Master_Out(2596) <= \<const0>\;
  LOCKSTEP_Master_Out(2597) <= \<const0>\;
  LOCKSTEP_Master_Out(2598) <= \<const0>\;
  LOCKSTEP_Master_Out(2599) <= \<const0>\;
  LOCKSTEP_Master_Out(2600) <= \<const0>\;
  LOCKSTEP_Master_Out(2601) <= \<const0>\;
  LOCKSTEP_Master_Out(2602) <= \<const0>\;
  LOCKSTEP_Master_Out(2603) <= \<const0>\;
  LOCKSTEP_Master_Out(2604) <= \<const0>\;
  LOCKSTEP_Master_Out(2605) <= \<const0>\;
  LOCKSTEP_Master_Out(2606) <= \<const0>\;
  LOCKSTEP_Master_Out(2607) <= \<const0>\;
  LOCKSTEP_Master_Out(2608) <= \<const0>\;
  LOCKSTEP_Master_Out(2609) <= \<const0>\;
  LOCKSTEP_Master_Out(2610) <= \<const0>\;
  LOCKSTEP_Master_Out(2611) <= \<const0>\;
  LOCKSTEP_Master_Out(2612) <= \<const0>\;
  LOCKSTEP_Master_Out(2613) <= \<const0>\;
  LOCKSTEP_Master_Out(2614) <= \<const0>\;
  LOCKSTEP_Master_Out(2615) <= \<const0>\;
  LOCKSTEP_Master_Out(2616) <= \<const0>\;
  LOCKSTEP_Master_Out(2617) <= \<const0>\;
  LOCKSTEP_Master_Out(2618) <= \<const0>\;
  LOCKSTEP_Master_Out(2619) <= \<const0>\;
  LOCKSTEP_Master_Out(2620) <= \<const0>\;
  LOCKSTEP_Master_Out(2621) <= \<const0>\;
  LOCKSTEP_Master_Out(2622) <= \<const0>\;
  LOCKSTEP_Master_Out(2623) <= \<const0>\;
  LOCKSTEP_Master_Out(2624) <= \<const0>\;
  LOCKSTEP_Master_Out(2625) <= \<const0>\;
  LOCKSTEP_Master_Out(2626) <= \<const0>\;
  LOCKSTEP_Master_Out(2627) <= \<const0>\;
  LOCKSTEP_Master_Out(2628) <= \<const0>\;
  LOCKSTEP_Master_Out(2629) <= \<const0>\;
  LOCKSTEP_Master_Out(2630) <= \<const0>\;
  LOCKSTEP_Master_Out(2631) <= \<const0>\;
  LOCKSTEP_Master_Out(2632) <= \<const0>\;
  LOCKSTEP_Master_Out(2633) <= \<const0>\;
  LOCKSTEP_Master_Out(2634) <= \<const0>\;
  LOCKSTEP_Master_Out(2635) <= \<const0>\;
  LOCKSTEP_Master_Out(2636) <= \<const0>\;
  LOCKSTEP_Master_Out(2637) <= \<const0>\;
  LOCKSTEP_Master_Out(2638) <= \<const0>\;
  LOCKSTEP_Master_Out(2639) <= \<const0>\;
  LOCKSTEP_Master_Out(2640) <= \<const0>\;
  LOCKSTEP_Master_Out(2641) <= \<const0>\;
  LOCKSTEP_Master_Out(2642) <= \<const0>\;
  LOCKSTEP_Master_Out(2643) <= \<const0>\;
  LOCKSTEP_Master_Out(2644) <= \<const0>\;
  LOCKSTEP_Master_Out(2645) <= \<const0>\;
  LOCKSTEP_Master_Out(2646) <= \<const0>\;
  LOCKSTEP_Master_Out(2647) <= \<const0>\;
  LOCKSTEP_Master_Out(2648) <= \<const0>\;
  LOCKSTEP_Master_Out(2649) <= \<const0>\;
  LOCKSTEP_Master_Out(2650) <= \<const0>\;
  LOCKSTEP_Master_Out(2651) <= \<const0>\;
  LOCKSTEP_Master_Out(2652) <= \<const0>\;
  LOCKSTEP_Master_Out(2653) <= \<const0>\;
  LOCKSTEP_Master_Out(2654) <= \<const0>\;
  LOCKSTEP_Master_Out(2655) <= \<const0>\;
  LOCKSTEP_Master_Out(2656) <= \<const0>\;
  LOCKSTEP_Master_Out(2657) <= \<const0>\;
  LOCKSTEP_Master_Out(2658) <= \<const0>\;
  LOCKSTEP_Master_Out(2659) <= \<const0>\;
  LOCKSTEP_Master_Out(2660) <= \<const0>\;
  LOCKSTEP_Master_Out(2661) <= \<const0>\;
  LOCKSTEP_Master_Out(2662) <= \<const0>\;
  LOCKSTEP_Master_Out(2663) <= \<const0>\;
  LOCKSTEP_Master_Out(2664) <= \<const0>\;
  LOCKSTEP_Master_Out(2665) <= \<const0>\;
  LOCKSTEP_Master_Out(2666) <= \<const0>\;
  LOCKSTEP_Master_Out(2667) <= \<const0>\;
  LOCKSTEP_Master_Out(2668) <= \<const0>\;
  LOCKSTEP_Master_Out(2669) <= \<const0>\;
  LOCKSTEP_Master_Out(2670) <= \<const0>\;
  LOCKSTEP_Master_Out(2671) <= \<const0>\;
  LOCKSTEP_Master_Out(2672) <= \<const0>\;
  LOCKSTEP_Master_Out(2673) <= \<const0>\;
  LOCKSTEP_Master_Out(2674) <= \<const0>\;
  LOCKSTEP_Master_Out(2675) <= \<const0>\;
  LOCKSTEP_Master_Out(2676) <= \<const0>\;
  LOCKSTEP_Master_Out(2677) <= \<const0>\;
  LOCKSTEP_Master_Out(2678) <= \<const0>\;
  LOCKSTEP_Master_Out(2679) <= \<const0>\;
  LOCKSTEP_Master_Out(2680) <= \<const0>\;
  LOCKSTEP_Master_Out(2681) <= \<const0>\;
  LOCKSTEP_Master_Out(2682) <= \<const0>\;
  LOCKSTEP_Master_Out(2683) <= \<const0>\;
  LOCKSTEP_Master_Out(2684) <= \<const0>\;
  LOCKSTEP_Master_Out(2685) <= \<const0>\;
  LOCKSTEP_Master_Out(2686) <= \<const0>\;
  LOCKSTEP_Master_Out(2687) <= \<const0>\;
  LOCKSTEP_Master_Out(2688) <= \<const0>\;
  LOCKSTEP_Master_Out(2689) <= \<const0>\;
  LOCKSTEP_Master_Out(2690) <= \<const0>\;
  LOCKSTEP_Master_Out(2691) <= \<const0>\;
  LOCKSTEP_Master_Out(2692) <= \<const0>\;
  LOCKSTEP_Master_Out(2693) <= \<const0>\;
  LOCKSTEP_Master_Out(2694) <= \<const0>\;
  LOCKSTEP_Master_Out(2695) <= \<const0>\;
  LOCKSTEP_Master_Out(2696) <= \<const0>\;
  LOCKSTEP_Master_Out(2697) <= \<const0>\;
  LOCKSTEP_Master_Out(2698) <= \<const0>\;
  LOCKSTEP_Master_Out(2699) <= \<const0>\;
  LOCKSTEP_Master_Out(2700) <= \<const0>\;
  LOCKSTEP_Master_Out(2701) <= \<const0>\;
  LOCKSTEP_Master_Out(2702) <= \<const0>\;
  LOCKSTEP_Master_Out(2703) <= \<const0>\;
  LOCKSTEP_Master_Out(2704) <= \<const0>\;
  LOCKSTEP_Master_Out(2705) <= \<const0>\;
  LOCKSTEP_Master_Out(2706) <= \<const0>\;
  LOCKSTEP_Master_Out(2707) <= \<const0>\;
  LOCKSTEP_Master_Out(2708) <= \<const0>\;
  LOCKSTEP_Master_Out(2709) <= \<const0>\;
  LOCKSTEP_Master_Out(2710) <= \<const0>\;
  LOCKSTEP_Master_Out(2711) <= \<const0>\;
  LOCKSTEP_Master_Out(2712) <= \<const0>\;
  LOCKSTEP_Master_Out(2713) <= \<const0>\;
  LOCKSTEP_Master_Out(2714) <= \<const0>\;
  LOCKSTEP_Master_Out(2715) <= \<const0>\;
  LOCKSTEP_Master_Out(2716) <= \<const0>\;
  LOCKSTEP_Master_Out(2717) <= \<const0>\;
  LOCKSTEP_Master_Out(2718) <= \<const0>\;
  LOCKSTEP_Master_Out(2719) <= \<const0>\;
  LOCKSTEP_Master_Out(2720) <= \<const0>\;
  LOCKSTEP_Master_Out(2721) <= \<const0>\;
  LOCKSTEP_Master_Out(2722) <= \<const0>\;
  LOCKSTEP_Master_Out(2723) <= \<const0>\;
  LOCKSTEP_Master_Out(2724) <= \<const0>\;
  LOCKSTEP_Master_Out(2725) <= \<const0>\;
  LOCKSTEP_Master_Out(2726) <= \<const0>\;
  LOCKSTEP_Master_Out(2727) <= \<const0>\;
  LOCKSTEP_Master_Out(2728) <= \<const0>\;
  LOCKSTEP_Master_Out(2729) <= \<const0>\;
  LOCKSTEP_Master_Out(2730) <= \<const0>\;
  LOCKSTEP_Master_Out(2731) <= \<const0>\;
  LOCKSTEP_Master_Out(2732) <= \<const0>\;
  LOCKSTEP_Master_Out(2733) <= \<const0>\;
  LOCKSTEP_Master_Out(2734) <= \<const0>\;
  LOCKSTEP_Master_Out(2735) <= \<const0>\;
  LOCKSTEP_Master_Out(2736) <= \<const0>\;
  LOCKSTEP_Master_Out(2737) <= \<const0>\;
  LOCKSTEP_Master_Out(2738) <= \<const0>\;
  LOCKSTEP_Master_Out(2739) <= \<const0>\;
  LOCKSTEP_Master_Out(2740) <= \<const0>\;
  LOCKSTEP_Master_Out(2741) <= \<const0>\;
  LOCKSTEP_Master_Out(2742) <= \<const0>\;
  LOCKSTEP_Master_Out(2743) <= \<const0>\;
  LOCKSTEP_Master_Out(2744) <= \<const0>\;
  LOCKSTEP_Master_Out(2745) <= \<const0>\;
  LOCKSTEP_Master_Out(2746) <= \<const0>\;
  LOCKSTEP_Master_Out(2747) <= \<const0>\;
  LOCKSTEP_Master_Out(2748) <= \<const0>\;
  LOCKSTEP_Master_Out(2749) <= \<const0>\;
  LOCKSTEP_Master_Out(2750) <= \<const0>\;
  LOCKSTEP_Master_Out(2751) <= \<const0>\;
  LOCKSTEP_Master_Out(2752) <= \<const0>\;
  LOCKSTEP_Master_Out(2753) <= \<const0>\;
  LOCKSTEP_Master_Out(2754) <= \<const0>\;
  LOCKSTEP_Master_Out(2755) <= \<const0>\;
  LOCKSTEP_Master_Out(2756) <= \<const0>\;
  LOCKSTEP_Master_Out(2757) <= \<const0>\;
  LOCKSTEP_Master_Out(2758) <= \<const0>\;
  LOCKSTEP_Master_Out(2759) <= \<const0>\;
  LOCKSTEP_Master_Out(2760) <= \<const0>\;
  LOCKSTEP_Master_Out(2761) <= \<const0>\;
  LOCKSTEP_Master_Out(2762) <= \<const0>\;
  LOCKSTEP_Master_Out(2763) <= \<const0>\;
  LOCKSTEP_Master_Out(2764) <= \<const0>\;
  LOCKSTEP_Master_Out(2765) <= \<const0>\;
  LOCKSTEP_Master_Out(2766) <= \<const0>\;
  LOCKSTEP_Master_Out(2767) <= \<const0>\;
  LOCKSTEP_Master_Out(2768) <= \<const0>\;
  LOCKSTEP_Master_Out(2769) <= \<const0>\;
  LOCKSTEP_Master_Out(2770) <= \<const0>\;
  LOCKSTEP_Master_Out(2771) <= \<const0>\;
  LOCKSTEP_Master_Out(2772) <= \<const0>\;
  LOCKSTEP_Master_Out(2773) <= \<const0>\;
  LOCKSTEP_Master_Out(2774) <= \<const0>\;
  LOCKSTEP_Master_Out(2775) <= \<const0>\;
  LOCKSTEP_Master_Out(2776) <= \<const0>\;
  LOCKSTEP_Master_Out(2777) <= \<const0>\;
  LOCKSTEP_Master_Out(2778) <= \<const0>\;
  LOCKSTEP_Master_Out(2779) <= \<const0>\;
  LOCKSTEP_Master_Out(2780) <= \<const0>\;
  LOCKSTEP_Master_Out(2781) <= \<const0>\;
  LOCKSTEP_Master_Out(2782) <= \<const0>\;
  LOCKSTEP_Master_Out(2783) <= \<const0>\;
  LOCKSTEP_Master_Out(2784) <= \<const0>\;
  LOCKSTEP_Master_Out(2785) <= \<const0>\;
  LOCKSTEP_Master_Out(2786) <= \<const0>\;
  LOCKSTEP_Master_Out(2787) <= \<const0>\;
  LOCKSTEP_Master_Out(2788) <= \<const0>\;
  LOCKSTEP_Master_Out(2789) <= \<const0>\;
  LOCKSTEP_Master_Out(2790) <= \<const0>\;
  LOCKSTEP_Master_Out(2791) <= \<const0>\;
  LOCKSTEP_Master_Out(2792) <= \<const0>\;
  LOCKSTEP_Master_Out(2793) <= \<const0>\;
  LOCKSTEP_Master_Out(2794) <= \<const0>\;
  LOCKSTEP_Master_Out(2795) <= \<const0>\;
  LOCKSTEP_Master_Out(2796) <= \<const0>\;
  LOCKSTEP_Master_Out(2797) <= \<const0>\;
  LOCKSTEP_Master_Out(2798) <= \<const0>\;
  LOCKSTEP_Master_Out(2799) <= \<const0>\;
  LOCKSTEP_Master_Out(2800) <= \<const0>\;
  LOCKSTEP_Master_Out(2801) <= \<const0>\;
  LOCKSTEP_Master_Out(2802) <= \<const0>\;
  LOCKSTEP_Master_Out(2803) <= \<const0>\;
  LOCKSTEP_Master_Out(2804) <= \<const0>\;
  LOCKSTEP_Master_Out(2805) <= \<const0>\;
  LOCKSTEP_Master_Out(2806) <= \<const0>\;
  LOCKSTEP_Master_Out(2807) <= \<const0>\;
  LOCKSTEP_Master_Out(2808) <= \<const0>\;
  LOCKSTEP_Master_Out(2809) <= \<const0>\;
  LOCKSTEP_Master_Out(2810) <= \<const0>\;
  LOCKSTEP_Master_Out(2811) <= \<const0>\;
  LOCKSTEP_Master_Out(2812) <= \<const0>\;
  LOCKSTEP_Master_Out(2813) <= \<const0>\;
  LOCKSTEP_Master_Out(2814) <= \<const0>\;
  LOCKSTEP_Master_Out(2815) <= \<const0>\;
  LOCKSTEP_Master_Out(2816) <= \<const0>\;
  LOCKSTEP_Master_Out(2817) <= \<const0>\;
  LOCKSTEP_Master_Out(2818) <= \<const0>\;
  LOCKSTEP_Master_Out(2819) <= \<const0>\;
  LOCKSTEP_Master_Out(2820) <= \<const0>\;
  LOCKSTEP_Master_Out(2821) <= \<const0>\;
  LOCKSTEP_Master_Out(2822) <= \<const0>\;
  LOCKSTEP_Master_Out(2823) <= \<const0>\;
  LOCKSTEP_Master_Out(2824) <= \<const0>\;
  LOCKSTEP_Master_Out(2825) <= \<const0>\;
  LOCKSTEP_Master_Out(2826) <= \<const0>\;
  LOCKSTEP_Master_Out(2827) <= \<const0>\;
  LOCKSTEP_Master_Out(2828) <= \<const0>\;
  LOCKSTEP_Master_Out(2829) <= \<const0>\;
  LOCKSTEP_Master_Out(2830) <= \<const0>\;
  LOCKSTEP_Master_Out(2831) <= \<const0>\;
  LOCKSTEP_Master_Out(2832) <= \<const0>\;
  LOCKSTEP_Master_Out(2833) <= \<const0>\;
  LOCKSTEP_Master_Out(2834) <= \<const0>\;
  LOCKSTEP_Master_Out(2835) <= \<const0>\;
  LOCKSTEP_Master_Out(2836) <= \<const0>\;
  LOCKSTEP_Master_Out(2837) <= \<const0>\;
  LOCKSTEP_Master_Out(2838) <= \<const0>\;
  LOCKSTEP_Master_Out(2839) <= \<const0>\;
  LOCKSTEP_Master_Out(2840) <= \<const0>\;
  LOCKSTEP_Master_Out(2841) <= \<const0>\;
  LOCKSTEP_Master_Out(2842) <= \<const0>\;
  LOCKSTEP_Master_Out(2843) <= \<const0>\;
  LOCKSTEP_Master_Out(2844) <= \<const0>\;
  LOCKSTEP_Master_Out(2845) <= \<const0>\;
  LOCKSTEP_Master_Out(2846) <= \<const0>\;
  LOCKSTEP_Master_Out(2847) <= \<const0>\;
  LOCKSTEP_Master_Out(2848) <= \<const0>\;
  LOCKSTEP_Master_Out(2849) <= \<const0>\;
  LOCKSTEP_Master_Out(2850) <= \<const0>\;
  LOCKSTEP_Master_Out(2851) <= \<const0>\;
  LOCKSTEP_Master_Out(2852) <= \<const0>\;
  LOCKSTEP_Master_Out(2853) <= \<const0>\;
  LOCKSTEP_Master_Out(2854) <= \<const0>\;
  LOCKSTEP_Master_Out(2855) <= \<const0>\;
  LOCKSTEP_Master_Out(2856) <= \<const0>\;
  LOCKSTEP_Master_Out(2857) <= \<const0>\;
  LOCKSTEP_Master_Out(2858) <= \<const0>\;
  LOCKSTEP_Master_Out(2859) <= \<const0>\;
  LOCKSTEP_Master_Out(2860) <= \<const0>\;
  LOCKSTEP_Master_Out(2861) <= \<const0>\;
  LOCKSTEP_Master_Out(2862) <= \<const0>\;
  LOCKSTEP_Master_Out(2863) <= \<const0>\;
  LOCKSTEP_Master_Out(2864) <= \<const0>\;
  LOCKSTEP_Master_Out(2865) <= \<const0>\;
  LOCKSTEP_Master_Out(2866) <= \<const0>\;
  LOCKSTEP_Master_Out(2867) <= \<const0>\;
  LOCKSTEP_Master_Out(2868) <= \<const0>\;
  LOCKSTEP_Master_Out(2869) <= \<const0>\;
  LOCKSTEP_Master_Out(2870) <= \<const0>\;
  LOCKSTEP_Master_Out(2871) <= \<const0>\;
  LOCKSTEP_Master_Out(2872) <= \<const0>\;
  LOCKSTEP_Master_Out(2873) <= \<const0>\;
  LOCKSTEP_Master_Out(2874) <= \<const0>\;
  LOCKSTEP_Master_Out(2875) <= \<const0>\;
  LOCKSTEP_Master_Out(2876) <= \<const0>\;
  LOCKSTEP_Master_Out(2877) <= \<const0>\;
  LOCKSTEP_Master_Out(2878) <= \<const0>\;
  LOCKSTEP_Master_Out(2879) <= \<const0>\;
  LOCKSTEP_Master_Out(2880) <= \<const0>\;
  LOCKSTEP_Master_Out(2881) <= \<const0>\;
  LOCKSTEP_Master_Out(2882) <= \<const0>\;
  LOCKSTEP_Master_Out(2883) <= \<const0>\;
  LOCKSTEP_Master_Out(2884) <= \<const0>\;
  LOCKSTEP_Master_Out(2885) <= \<const0>\;
  LOCKSTEP_Master_Out(2886) <= \<const0>\;
  LOCKSTEP_Master_Out(2887) <= \<const0>\;
  LOCKSTEP_Master_Out(2888) <= \<const0>\;
  LOCKSTEP_Master_Out(2889) <= \<const0>\;
  LOCKSTEP_Master_Out(2890) <= \<const0>\;
  LOCKSTEP_Master_Out(2891) <= \<const0>\;
  LOCKSTEP_Master_Out(2892) <= \<const0>\;
  LOCKSTEP_Master_Out(2893) <= \<const0>\;
  LOCKSTEP_Master_Out(2894) <= \<const0>\;
  LOCKSTEP_Master_Out(2895) <= \<const0>\;
  LOCKSTEP_Master_Out(2896) <= \<const0>\;
  LOCKSTEP_Master_Out(2897) <= \<const0>\;
  LOCKSTEP_Master_Out(2898) <= \<const0>\;
  LOCKSTEP_Master_Out(2899) <= \<const0>\;
  LOCKSTEP_Master_Out(2900) <= \<const0>\;
  LOCKSTEP_Master_Out(2901) <= \<const0>\;
  LOCKSTEP_Master_Out(2902) <= \<const0>\;
  LOCKSTEP_Master_Out(2903) <= \<const0>\;
  LOCKSTEP_Master_Out(2904) <= \<const0>\;
  LOCKSTEP_Master_Out(2905) <= \<const0>\;
  LOCKSTEP_Master_Out(2906) <= \<const0>\;
  LOCKSTEP_Master_Out(2907) <= \<const0>\;
  LOCKSTEP_Master_Out(2908) <= \<const0>\;
  LOCKSTEP_Master_Out(2909) <= \<const0>\;
  LOCKSTEP_Master_Out(2910) <= \<const0>\;
  LOCKSTEP_Master_Out(2911) <= \<const0>\;
  LOCKSTEP_Master_Out(2912) <= \<const0>\;
  LOCKSTEP_Master_Out(2913) <= \<const0>\;
  LOCKSTEP_Master_Out(2914) <= \<const0>\;
  LOCKSTEP_Master_Out(2915) <= \<const0>\;
  LOCKSTEP_Master_Out(2916) <= \<const0>\;
  LOCKSTEP_Master_Out(2917) <= \<const0>\;
  LOCKSTEP_Master_Out(2918) <= \<const0>\;
  LOCKSTEP_Master_Out(2919) <= \<const0>\;
  LOCKSTEP_Master_Out(2920) <= \<const0>\;
  LOCKSTEP_Master_Out(2921) <= \<const0>\;
  LOCKSTEP_Master_Out(2922) <= \<const0>\;
  LOCKSTEP_Master_Out(2923) <= \<const0>\;
  LOCKSTEP_Master_Out(2924) <= \<const0>\;
  LOCKSTEP_Master_Out(2925) <= \<const0>\;
  LOCKSTEP_Master_Out(2926) <= \<const0>\;
  LOCKSTEP_Master_Out(2927) <= \<const0>\;
  LOCKSTEP_Master_Out(2928) <= \<const0>\;
  LOCKSTEP_Master_Out(2929) <= \<const0>\;
  LOCKSTEP_Master_Out(2930) <= \<const0>\;
  LOCKSTEP_Master_Out(2931) <= \<const0>\;
  LOCKSTEP_Master_Out(2932) <= \<const0>\;
  LOCKSTEP_Master_Out(2933) <= \<const0>\;
  LOCKSTEP_Master_Out(2934) <= \<const0>\;
  LOCKSTEP_Master_Out(2935) <= \<const0>\;
  LOCKSTEP_Master_Out(2936) <= \<const0>\;
  LOCKSTEP_Master_Out(2937) <= \<const0>\;
  LOCKSTEP_Master_Out(2938) <= \<const0>\;
  LOCKSTEP_Master_Out(2939) <= \<const0>\;
  LOCKSTEP_Master_Out(2940) <= \<const0>\;
  LOCKSTEP_Master_Out(2941) <= \<const0>\;
  LOCKSTEP_Master_Out(2942) <= \<const0>\;
  LOCKSTEP_Master_Out(2943) <= \<const0>\;
  LOCKSTEP_Master_Out(2944) <= \<const0>\;
  LOCKSTEP_Master_Out(2945) <= \<const0>\;
  LOCKSTEP_Master_Out(2946) <= \<const0>\;
  LOCKSTEP_Master_Out(2947) <= \<const0>\;
  LOCKSTEP_Master_Out(2948) <= \<const0>\;
  LOCKSTEP_Master_Out(2949) <= \<const0>\;
  LOCKSTEP_Master_Out(2950) <= \<const0>\;
  LOCKSTEP_Master_Out(2951) <= \<const0>\;
  LOCKSTEP_Master_Out(2952) <= \<const0>\;
  LOCKSTEP_Master_Out(2953) <= \<const0>\;
  LOCKSTEP_Master_Out(2954) <= \<const0>\;
  LOCKSTEP_Master_Out(2955) <= \<const0>\;
  LOCKSTEP_Master_Out(2956) <= \<const0>\;
  LOCKSTEP_Master_Out(2957) <= \<const0>\;
  LOCKSTEP_Master_Out(2958) <= \<const0>\;
  LOCKSTEP_Master_Out(2959) <= \<const0>\;
  LOCKSTEP_Master_Out(2960) <= \<const0>\;
  LOCKSTEP_Master_Out(2961) <= \<const0>\;
  LOCKSTEP_Master_Out(2962) <= \<const0>\;
  LOCKSTEP_Master_Out(2963) <= \<const0>\;
  LOCKSTEP_Master_Out(2964) <= \<const0>\;
  LOCKSTEP_Master_Out(2965) <= \<const0>\;
  LOCKSTEP_Master_Out(2966) <= \<const0>\;
  LOCKSTEP_Master_Out(2967) <= \<const0>\;
  LOCKSTEP_Master_Out(2968) <= \<const0>\;
  LOCKSTEP_Master_Out(2969) <= \<const0>\;
  LOCKSTEP_Master_Out(2970) <= \<const0>\;
  LOCKSTEP_Master_Out(2971) <= \<const0>\;
  LOCKSTEP_Master_Out(2972) <= \<const0>\;
  LOCKSTEP_Master_Out(2973) <= \<const0>\;
  LOCKSTEP_Master_Out(2974) <= \<const0>\;
  LOCKSTEP_Master_Out(2975) <= \<const0>\;
  LOCKSTEP_Master_Out(2976) <= \<const0>\;
  LOCKSTEP_Master_Out(2977) <= \<const0>\;
  LOCKSTEP_Master_Out(2978) <= \<const0>\;
  LOCKSTEP_Master_Out(2979) <= \<const0>\;
  LOCKSTEP_Master_Out(2980) <= \<const0>\;
  LOCKSTEP_Master_Out(2981) <= \<const0>\;
  LOCKSTEP_Master_Out(2982) <= \<const0>\;
  LOCKSTEP_Master_Out(2983) <= \<const0>\;
  LOCKSTEP_Master_Out(2984) <= \<const0>\;
  LOCKSTEP_Master_Out(2985) <= \<const0>\;
  LOCKSTEP_Master_Out(2986) <= \<const0>\;
  LOCKSTEP_Master_Out(2987) <= \<const0>\;
  LOCKSTEP_Master_Out(2988) <= \<const0>\;
  LOCKSTEP_Master_Out(2989) <= \<const0>\;
  LOCKSTEP_Master_Out(2990) <= \<const0>\;
  LOCKSTEP_Master_Out(2991) <= \<const0>\;
  LOCKSTEP_Master_Out(2992) <= \<const0>\;
  LOCKSTEP_Master_Out(2993) <= \<const0>\;
  LOCKSTEP_Master_Out(2994) <= \<const0>\;
  LOCKSTEP_Master_Out(2995) <= \<const0>\;
  LOCKSTEP_Master_Out(2996) <= \<const0>\;
  LOCKSTEP_Master_Out(2997) <= \<const0>\;
  LOCKSTEP_Master_Out(2998) <= \<const0>\;
  LOCKSTEP_Master_Out(2999) <= \<const0>\;
  LOCKSTEP_Master_Out(3000) <= \<const0>\;
  LOCKSTEP_Master_Out(3001) <= \<const0>\;
  LOCKSTEP_Master_Out(3002) <= \<const0>\;
  LOCKSTEP_Master_Out(3003) <= \<const0>\;
  LOCKSTEP_Master_Out(3004) <= \<const0>\;
  LOCKSTEP_Master_Out(3005) <= \<const0>\;
  LOCKSTEP_Master_Out(3006) <= \<const0>\;
  LOCKSTEP_Master_Out(3007) <= \<const0>\;
  LOCKSTEP_Master_Out(3008) <= \<const0>\;
  LOCKSTEP_Master_Out(3009) <= \<const0>\;
  LOCKSTEP_Master_Out(3010) <= \<const0>\;
  LOCKSTEP_Master_Out(3011) <= \<const0>\;
  LOCKSTEP_Master_Out(3012) <= \<const0>\;
  LOCKSTEP_Master_Out(3013) <= \<const0>\;
  LOCKSTEP_Master_Out(3014) <= \<const0>\;
  LOCKSTEP_Master_Out(3015) <= \<const0>\;
  LOCKSTEP_Master_Out(3016) <= \<const0>\;
  LOCKSTEP_Master_Out(3017) <= \<const0>\;
  LOCKSTEP_Master_Out(3018) <= \<const0>\;
  LOCKSTEP_Master_Out(3019) <= \<const0>\;
  LOCKSTEP_Master_Out(3020) <= \<const0>\;
  LOCKSTEP_Master_Out(3021) <= \<const0>\;
  LOCKSTEP_Master_Out(3022) <= \<const0>\;
  LOCKSTEP_Master_Out(3023) <= \<const0>\;
  LOCKSTEP_Master_Out(3024) <= \<const0>\;
  LOCKSTEP_Master_Out(3025) <= \<const0>\;
  LOCKSTEP_Master_Out(3026) <= \<const0>\;
  LOCKSTEP_Master_Out(3027) <= \<const0>\;
  LOCKSTEP_Master_Out(3028) <= \<const0>\;
  LOCKSTEP_Master_Out(3029) <= \<const0>\;
  LOCKSTEP_Master_Out(3030) <= \<const0>\;
  LOCKSTEP_Master_Out(3031) <= \<const0>\;
  LOCKSTEP_Master_Out(3032) <= \<const0>\;
  LOCKSTEP_Master_Out(3033) <= \<const0>\;
  LOCKSTEP_Master_Out(3034) <= \<const0>\;
  LOCKSTEP_Master_Out(3035) <= \<const0>\;
  LOCKSTEP_Master_Out(3036) <= \<const0>\;
  LOCKSTEP_Master_Out(3037) <= \<const0>\;
  LOCKSTEP_Master_Out(3038) <= \<const0>\;
  LOCKSTEP_Master_Out(3039) <= \<const0>\;
  LOCKSTEP_Master_Out(3040) <= \<const0>\;
  LOCKSTEP_Master_Out(3041) <= \<const0>\;
  LOCKSTEP_Master_Out(3042) <= \<const0>\;
  LOCKSTEP_Master_Out(3043) <= \<const0>\;
  LOCKSTEP_Master_Out(3044) <= \<const0>\;
  LOCKSTEP_Master_Out(3045) <= \<const0>\;
  LOCKSTEP_Master_Out(3046) <= \<const0>\;
  LOCKSTEP_Master_Out(3047) <= \<const0>\;
  LOCKSTEP_Master_Out(3048) <= \<const0>\;
  LOCKSTEP_Master_Out(3049) <= \<const0>\;
  LOCKSTEP_Master_Out(3050) <= \<const0>\;
  LOCKSTEP_Master_Out(3051) <= \<const0>\;
  LOCKSTEP_Master_Out(3052) <= \<const0>\;
  LOCKSTEP_Master_Out(3053) <= \<const0>\;
  LOCKSTEP_Master_Out(3054) <= \<const0>\;
  LOCKSTEP_Master_Out(3055) <= \<const0>\;
  LOCKSTEP_Master_Out(3056) <= \<const0>\;
  LOCKSTEP_Master_Out(3057) <= \<const0>\;
  LOCKSTEP_Master_Out(3058) <= \<const0>\;
  LOCKSTEP_Master_Out(3059) <= \<const0>\;
  LOCKSTEP_Master_Out(3060) <= \<const0>\;
  LOCKSTEP_Master_Out(3061) <= \<const0>\;
  LOCKSTEP_Master_Out(3062) <= \<const0>\;
  LOCKSTEP_Master_Out(3063) <= \<const0>\;
  LOCKSTEP_Master_Out(3064) <= \<const0>\;
  LOCKSTEP_Master_Out(3065) <= \<const0>\;
  LOCKSTEP_Master_Out(3066) <= \<const0>\;
  LOCKSTEP_Master_Out(3067) <= \<const0>\;
  LOCKSTEP_Master_Out(3068) <= \<const0>\;
  LOCKSTEP_Master_Out(3069) <= \<const0>\;
  LOCKSTEP_Master_Out(3070) <= \<const0>\;
  LOCKSTEP_Master_Out(3071) <= \<const0>\;
  LOCKSTEP_Master_Out(3072) <= \<const0>\;
  LOCKSTEP_Master_Out(3073) <= \<const0>\;
  LOCKSTEP_Master_Out(3074) <= \<const0>\;
  LOCKSTEP_Master_Out(3075) <= \<const0>\;
  LOCKSTEP_Master_Out(3076) <= \<const0>\;
  LOCKSTEP_Master_Out(3077) <= \<const0>\;
  LOCKSTEP_Master_Out(3078) <= \<const0>\;
  LOCKSTEP_Master_Out(3079) <= \<const0>\;
  LOCKSTEP_Master_Out(3080) <= \<const0>\;
  LOCKSTEP_Master_Out(3081) <= \<const0>\;
  LOCKSTEP_Master_Out(3082) <= \<const0>\;
  LOCKSTEP_Master_Out(3083) <= \<const0>\;
  LOCKSTEP_Master_Out(3084) <= \<const0>\;
  LOCKSTEP_Master_Out(3085) <= \<const0>\;
  LOCKSTEP_Master_Out(3086) <= \<const0>\;
  LOCKSTEP_Master_Out(3087) <= \<const0>\;
  LOCKSTEP_Master_Out(3088) <= \<const0>\;
  LOCKSTEP_Master_Out(3089) <= \<const0>\;
  LOCKSTEP_Master_Out(3090) <= \<const0>\;
  LOCKSTEP_Master_Out(3091) <= \<const0>\;
  LOCKSTEP_Master_Out(3092) <= \<const0>\;
  LOCKSTEP_Master_Out(3093) <= \<const0>\;
  LOCKSTEP_Master_Out(3094) <= \<const0>\;
  LOCKSTEP_Master_Out(3095) <= \<const0>\;
  LOCKSTEP_Master_Out(3096) <= \<const0>\;
  LOCKSTEP_Master_Out(3097) <= \<const0>\;
  LOCKSTEP_Master_Out(3098) <= \<const0>\;
  LOCKSTEP_Master_Out(3099) <= \<const0>\;
  LOCKSTEP_Master_Out(3100) <= \<const0>\;
  LOCKSTEP_Master_Out(3101) <= \<const0>\;
  LOCKSTEP_Master_Out(3102) <= \<const0>\;
  LOCKSTEP_Master_Out(3103) <= \<const0>\;
  LOCKSTEP_Master_Out(3104) <= \<const0>\;
  LOCKSTEP_Master_Out(3105) <= \<const0>\;
  LOCKSTEP_Master_Out(3106) <= \<const0>\;
  LOCKSTEP_Master_Out(3107) <= \<const0>\;
  LOCKSTEP_Master_Out(3108) <= \<const0>\;
  LOCKSTEP_Master_Out(3109) <= \<const0>\;
  LOCKSTEP_Master_Out(3110) <= \<const0>\;
  LOCKSTEP_Master_Out(3111) <= \<const0>\;
  LOCKSTEP_Master_Out(3112) <= \<const0>\;
  LOCKSTEP_Master_Out(3113) <= \<const0>\;
  LOCKSTEP_Master_Out(3114) <= \<const0>\;
  LOCKSTEP_Master_Out(3115) <= \<const0>\;
  LOCKSTEP_Master_Out(3116) <= \<const0>\;
  LOCKSTEP_Master_Out(3117) <= \<const0>\;
  LOCKSTEP_Master_Out(3118) <= \<const0>\;
  LOCKSTEP_Master_Out(3119) <= \<const0>\;
  LOCKSTEP_Master_Out(3120) <= \<const0>\;
  LOCKSTEP_Master_Out(3121) <= \<const0>\;
  LOCKSTEP_Master_Out(3122) <= \<const0>\;
  LOCKSTEP_Master_Out(3123) <= \<const0>\;
  LOCKSTEP_Master_Out(3124) <= \<const0>\;
  LOCKSTEP_Master_Out(3125) <= \<const0>\;
  LOCKSTEP_Master_Out(3126) <= \<const0>\;
  LOCKSTEP_Master_Out(3127) <= \<const0>\;
  LOCKSTEP_Master_Out(3128) <= \<const0>\;
  LOCKSTEP_Master_Out(3129) <= \<const0>\;
  LOCKSTEP_Master_Out(3130) <= \<const0>\;
  LOCKSTEP_Master_Out(3131) <= \<const0>\;
  LOCKSTEP_Master_Out(3132) <= \<const0>\;
  LOCKSTEP_Master_Out(3133) <= \<const0>\;
  LOCKSTEP_Master_Out(3134) <= \<const0>\;
  LOCKSTEP_Master_Out(3135) <= \<const0>\;
  LOCKSTEP_Master_Out(3136) <= \<const0>\;
  LOCKSTEP_Master_Out(3137) <= \<const0>\;
  LOCKSTEP_Master_Out(3138) <= \<const0>\;
  LOCKSTEP_Master_Out(3139) <= \<const0>\;
  LOCKSTEP_Master_Out(3140) <= \<const0>\;
  LOCKSTEP_Master_Out(3141) <= \<const0>\;
  LOCKSTEP_Master_Out(3142) <= \<const0>\;
  LOCKSTEP_Master_Out(3143) <= \<const0>\;
  LOCKSTEP_Master_Out(3144) <= \<const0>\;
  LOCKSTEP_Master_Out(3145) <= \<const0>\;
  LOCKSTEP_Master_Out(3146) <= \<const0>\;
  LOCKSTEP_Master_Out(3147) <= \<const0>\;
  LOCKSTEP_Master_Out(3148) <= \<const0>\;
  LOCKSTEP_Master_Out(3149) <= \<const0>\;
  LOCKSTEP_Master_Out(3150) <= \<const0>\;
  LOCKSTEP_Master_Out(3151) <= \<const0>\;
  LOCKSTEP_Master_Out(3152) <= \<const0>\;
  LOCKSTEP_Master_Out(3153) <= \<const0>\;
  LOCKSTEP_Master_Out(3154) <= \<const0>\;
  LOCKSTEP_Master_Out(3155) <= \<const0>\;
  LOCKSTEP_Master_Out(3156) <= \<const0>\;
  LOCKSTEP_Master_Out(3157) <= \<const0>\;
  LOCKSTEP_Master_Out(3158) <= \<const0>\;
  LOCKSTEP_Master_Out(3159) <= \<const0>\;
  LOCKSTEP_Master_Out(3160) <= \<const0>\;
  LOCKSTEP_Master_Out(3161) <= \<const0>\;
  LOCKSTEP_Master_Out(3162) <= \<const0>\;
  LOCKSTEP_Master_Out(3163) <= \<const0>\;
  LOCKSTEP_Master_Out(3164) <= \<const0>\;
  LOCKSTEP_Master_Out(3165) <= \<const0>\;
  LOCKSTEP_Master_Out(3166) <= \<const0>\;
  LOCKSTEP_Master_Out(3167) <= \<const0>\;
  LOCKSTEP_Master_Out(3168) <= \<const0>\;
  LOCKSTEP_Master_Out(3169) <= \<const0>\;
  LOCKSTEP_Master_Out(3170) <= \<const0>\;
  LOCKSTEP_Master_Out(3171) <= \<const0>\;
  LOCKSTEP_Master_Out(3172) <= \<const0>\;
  LOCKSTEP_Master_Out(3173) <= \<const0>\;
  LOCKSTEP_Master_Out(3174) <= \<const0>\;
  LOCKSTEP_Master_Out(3175) <= \<const0>\;
  LOCKSTEP_Master_Out(3176) <= \<const0>\;
  LOCKSTEP_Master_Out(3177) <= \<const0>\;
  LOCKSTEP_Master_Out(3178) <= \<const0>\;
  LOCKSTEP_Master_Out(3179) <= \<const0>\;
  LOCKSTEP_Master_Out(3180) <= \<const0>\;
  LOCKSTEP_Master_Out(3181) <= \<const0>\;
  LOCKSTEP_Master_Out(3182) <= \<const0>\;
  LOCKSTEP_Master_Out(3183) <= \<const0>\;
  LOCKSTEP_Master_Out(3184) <= \<const0>\;
  LOCKSTEP_Master_Out(3185) <= \<const0>\;
  LOCKSTEP_Master_Out(3186) <= \<const0>\;
  LOCKSTEP_Master_Out(3187) <= \<const0>\;
  LOCKSTEP_Master_Out(3188) <= \<const0>\;
  LOCKSTEP_Master_Out(3189) <= \<const0>\;
  LOCKSTEP_Master_Out(3190) <= \<const0>\;
  LOCKSTEP_Master_Out(3191) <= \<const0>\;
  LOCKSTEP_Master_Out(3192) <= \<const0>\;
  LOCKSTEP_Master_Out(3193) <= \<const0>\;
  LOCKSTEP_Master_Out(3194) <= \<const0>\;
  LOCKSTEP_Master_Out(3195) <= \<const0>\;
  LOCKSTEP_Master_Out(3196) <= \<const0>\;
  LOCKSTEP_Master_Out(3197) <= \<const0>\;
  LOCKSTEP_Master_Out(3198) <= \<const0>\;
  LOCKSTEP_Master_Out(3199) <= \<const0>\;
  LOCKSTEP_Master_Out(3200) <= \<const0>\;
  LOCKSTEP_Master_Out(3201) <= \<const0>\;
  LOCKSTEP_Master_Out(3202) <= \<const0>\;
  LOCKSTEP_Master_Out(3203) <= \<const0>\;
  LOCKSTEP_Master_Out(3204) <= \<const0>\;
  LOCKSTEP_Master_Out(3205) <= \<const0>\;
  LOCKSTEP_Master_Out(3206) <= \<const0>\;
  LOCKSTEP_Master_Out(3207) <= \<const0>\;
  LOCKSTEP_Master_Out(3208) <= \<const0>\;
  LOCKSTEP_Master_Out(3209) <= \<const0>\;
  LOCKSTEP_Master_Out(3210) <= \<const0>\;
  LOCKSTEP_Master_Out(3211) <= \<const0>\;
  LOCKSTEP_Master_Out(3212) <= \<const0>\;
  LOCKSTEP_Master_Out(3213) <= \<const0>\;
  LOCKSTEP_Master_Out(3214) <= \<const0>\;
  LOCKSTEP_Master_Out(3215) <= \<const0>\;
  LOCKSTEP_Master_Out(3216) <= \<const0>\;
  LOCKSTEP_Master_Out(3217) <= \<const0>\;
  LOCKSTEP_Master_Out(3218) <= \<const0>\;
  LOCKSTEP_Master_Out(3219) <= \<const0>\;
  LOCKSTEP_Master_Out(3220) <= \<const0>\;
  LOCKSTEP_Master_Out(3221) <= \<const0>\;
  LOCKSTEP_Master_Out(3222) <= \<const0>\;
  LOCKSTEP_Master_Out(3223) <= \<const0>\;
  LOCKSTEP_Master_Out(3224) <= \<const0>\;
  LOCKSTEP_Master_Out(3225) <= \<const0>\;
  LOCKSTEP_Master_Out(3226) <= \<const0>\;
  LOCKSTEP_Master_Out(3227) <= \<const0>\;
  LOCKSTEP_Master_Out(3228) <= \<const0>\;
  LOCKSTEP_Master_Out(3229) <= \<const0>\;
  LOCKSTEP_Master_Out(3230) <= \<const0>\;
  LOCKSTEP_Master_Out(3231) <= \<const0>\;
  LOCKSTEP_Master_Out(3232) <= \<const0>\;
  LOCKSTEP_Master_Out(3233) <= \<const0>\;
  LOCKSTEP_Master_Out(3234) <= \<const0>\;
  LOCKSTEP_Master_Out(3235) <= \<const0>\;
  LOCKSTEP_Master_Out(3236) <= \<const0>\;
  LOCKSTEP_Master_Out(3237) <= \<const0>\;
  LOCKSTEP_Master_Out(3238) <= \<const0>\;
  LOCKSTEP_Master_Out(3239) <= \<const0>\;
  LOCKSTEP_Master_Out(3240) <= \<const0>\;
  LOCKSTEP_Master_Out(3241) <= \<const0>\;
  LOCKSTEP_Master_Out(3242) <= \<const0>\;
  LOCKSTEP_Master_Out(3243) <= \<const0>\;
  LOCKSTEP_Master_Out(3244) <= \<const0>\;
  LOCKSTEP_Master_Out(3245) <= \<const0>\;
  LOCKSTEP_Master_Out(3246) <= \<const0>\;
  LOCKSTEP_Master_Out(3247) <= \<const0>\;
  LOCKSTEP_Master_Out(3248) <= \<const0>\;
  LOCKSTEP_Master_Out(3249) <= \<const0>\;
  LOCKSTEP_Master_Out(3250) <= \<const0>\;
  LOCKSTEP_Master_Out(3251) <= \<const0>\;
  LOCKSTEP_Master_Out(3252) <= \<const0>\;
  LOCKSTEP_Master_Out(3253) <= \<const0>\;
  LOCKSTEP_Master_Out(3254) <= \<const0>\;
  LOCKSTEP_Master_Out(3255) <= \<const0>\;
  LOCKSTEP_Master_Out(3256) <= \<const0>\;
  LOCKSTEP_Master_Out(3257) <= \<const0>\;
  LOCKSTEP_Master_Out(3258) <= \<const0>\;
  LOCKSTEP_Master_Out(3259) <= \<const0>\;
  LOCKSTEP_Master_Out(3260) <= \<const0>\;
  LOCKSTEP_Master_Out(3261) <= \<const0>\;
  LOCKSTEP_Master_Out(3262) <= \<const0>\;
  LOCKSTEP_Master_Out(3263) <= \<const0>\;
  LOCKSTEP_Master_Out(3264) <= \<const0>\;
  LOCKSTEP_Master_Out(3265) <= \<const0>\;
  LOCKSTEP_Master_Out(3266) <= \<const0>\;
  LOCKSTEP_Master_Out(3267) <= \<const0>\;
  LOCKSTEP_Master_Out(3268) <= \<const0>\;
  LOCKSTEP_Master_Out(3269) <= \<const0>\;
  LOCKSTEP_Master_Out(3270) <= \<const0>\;
  LOCKSTEP_Master_Out(3271) <= \<const0>\;
  LOCKSTEP_Master_Out(3272) <= \<const0>\;
  LOCKSTEP_Master_Out(3273) <= \<const0>\;
  LOCKSTEP_Master_Out(3274) <= \<const0>\;
  LOCKSTEP_Master_Out(3275) <= \<const0>\;
  LOCKSTEP_Master_Out(3276) <= \<const0>\;
  LOCKSTEP_Master_Out(3277) <= \<const0>\;
  LOCKSTEP_Master_Out(3278) <= \<const0>\;
  LOCKSTEP_Master_Out(3279) <= \<const0>\;
  LOCKSTEP_Master_Out(3280) <= \<const0>\;
  LOCKSTEP_Master_Out(3281) <= \<const0>\;
  LOCKSTEP_Master_Out(3282) <= \<const0>\;
  LOCKSTEP_Master_Out(3283) <= \<const0>\;
  LOCKSTEP_Master_Out(3284) <= \<const0>\;
  LOCKSTEP_Master_Out(3285) <= \<const0>\;
  LOCKSTEP_Master_Out(3286) <= \<const0>\;
  LOCKSTEP_Master_Out(3287) <= \<const0>\;
  LOCKSTEP_Master_Out(3288) <= \<const0>\;
  LOCKSTEP_Master_Out(3289) <= \<const0>\;
  LOCKSTEP_Master_Out(3290) <= \<const0>\;
  LOCKSTEP_Master_Out(3291) <= \<const0>\;
  LOCKSTEP_Master_Out(3292) <= \<const0>\;
  LOCKSTEP_Master_Out(3293) <= \<const0>\;
  LOCKSTEP_Master_Out(3294) <= \<const0>\;
  LOCKSTEP_Master_Out(3295) <= \<const0>\;
  LOCKSTEP_Master_Out(3296) <= \<const0>\;
  LOCKSTEP_Master_Out(3297) <= \<const0>\;
  LOCKSTEP_Master_Out(3298) <= \<const0>\;
  LOCKSTEP_Master_Out(3299) <= \<const0>\;
  LOCKSTEP_Master_Out(3300) <= \<const0>\;
  LOCKSTEP_Master_Out(3301) <= \<const0>\;
  LOCKSTEP_Master_Out(3302) <= \<const0>\;
  LOCKSTEP_Master_Out(3303) <= \<const0>\;
  LOCKSTEP_Master_Out(3304) <= \<const0>\;
  LOCKSTEP_Master_Out(3305) <= \<const0>\;
  LOCKSTEP_Master_Out(3306) <= \<const0>\;
  LOCKSTEP_Master_Out(3307) <= \<const0>\;
  LOCKSTEP_Master_Out(3308) <= \<const0>\;
  LOCKSTEP_Master_Out(3309) <= \<const0>\;
  LOCKSTEP_Master_Out(3310) <= \<const0>\;
  LOCKSTEP_Master_Out(3311) <= \<const0>\;
  LOCKSTEP_Master_Out(3312) <= \<const0>\;
  LOCKSTEP_Master_Out(3313) <= \<const0>\;
  LOCKSTEP_Master_Out(3314) <= \<const0>\;
  LOCKSTEP_Master_Out(3315) <= \<const0>\;
  LOCKSTEP_Master_Out(3316) <= \<const0>\;
  LOCKSTEP_Master_Out(3317) <= \<const0>\;
  LOCKSTEP_Master_Out(3318) <= \<const0>\;
  LOCKSTEP_Master_Out(3319) <= \<const0>\;
  LOCKSTEP_Master_Out(3320) <= \<const0>\;
  LOCKSTEP_Master_Out(3321) <= \<const0>\;
  LOCKSTEP_Master_Out(3322) <= \<const0>\;
  LOCKSTEP_Master_Out(3323) <= \<const0>\;
  LOCKSTEP_Master_Out(3324) <= \<const0>\;
  LOCKSTEP_Master_Out(3325) <= \<const0>\;
  LOCKSTEP_Master_Out(3326) <= \<const0>\;
  LOCKSTEP_Master_Out(3327) <= \<const0>\;
  LOCKSTEP_Master_Out(3328) <= \<const0>\;
  LOCKSTEP_Master_Out(3329) <= \<const0>\;
  LOCKSTEP_Master_Out(3330) <= \<const0>\;
  LOCKSTEP_Master_Out(3331) <= \<const0>\;
  LOCKSTEP_Master_Out(3332) <= \<const0>\;
  LOCKSTEP_Master_Out(3333) <= \<const0>\;
  LOCKSTEP_Master_Out(3334) <= \<const0>\;
  LOCKSTEP_Master_Out(3335) <= \<const0>\;
  LOCKSTEP_Master_Out(3336) <= \<const0>\;
  LOCKSTEP_Master_Out(3337) <= \<const0>\;
  LOCKSTEP_Master_Out(3338) <= \<const0>\;
  LOCKSTEP_Master_Out(3339) <= \<const0>\;
  LOCKSTEP_Master_Out(3340) <= \<const0>\;
  LOCKSTEP_Master_Out(3341) <= \<const0>\;
  LOCKSTEP_Master_Out(3342) <= \<const0>\;
  LOCKSTEP_Master_Out(3343) <= \<const0>\;
  LOCKSTEP_Master_Out(3344) <= \<const0>\;
  LOCKSTEP_Master_Out(3345) <= \<const0>\;
  LOCKSTEP_Master_Out(3346) <= \<const0>\;
  LOCKSTEP_Master_Out(3347) <= \<const0>\;
  LOCKSTEP_Master_Out(3348) <= \<const0>\;
  LOCKSTEP_Master_Out(3349) <= \<const0>\;
  LOCKSTEP_Master_Out(3350) <= \<const0>\;
  LOCKSTEP_Master_Out(3351) <= \<const0>\;
  LOCKSTEP_Master_Out(3352) <= \<const0>\;
  LOCKSTEP_Master_Out(3353) <= \<const0>\;
  LOCKSTEP_Master_Out(3354) <= \<const0>\;
  LOCKSTEP_Master_Out(3355) <= \<const0>\;
  LOCKSTEP_Master_Out(3356) <= \<const0>\;
  LOCKSTEP_Master_Out(3357) <= \<const0>\;
  LOCKSTEP_Master_Out(3358) <= \<const0>\;
  LOCKSTEP_Master_Out(3359) <= \<const0>\;
  LOCKSTEP_Master_Out(3360) <= \<const0>\;
  LOCKSTEP_Master_Out(3361) <= \<const0>\;
  LOCKSTEP_Master_Out(3362) <= \<const0>\;
  LOCKSTEP_Master_Out(3363) <= \<const0>\;
  LOCKSTEP_Master_Out(3364) <= \<const0>\;
  LOCKSTEP_Master_Out(3365) <= \<const0>\;
  LOCKSTEP_Master_Out(3366) <= \<const0>\;
  LOCKSTEP_Master_Out(3367) <= \<const0>\;
  LOCKSTEP_Master_Out(3368) <= \<const0>\;
  LOCKSTEP_Master_Out(3369) <= \<const0>\;
  LOCKSTEP_Master_Out(3370) <= \<const0>\;
  LOCKSTEP_Master_Out(3371) <= \<const0>\;
  LOCKSTEP_Master_Out(3372) <= \<const0>\;
  LOCKSTEP_Master_Out(3373) <= \<const0>\;
  LOCKSTEP_Master_Out(3374) <= \<const0>\;
  LOCKSTEP_Master_Out(3375) <= \<const0>\;
  LOCKSTEP_Master_Out(3376) <= \<const0>\;
  LOCKSTEP_Master_Out(3377) <= \<const0>\;
  LOCKSTEP_Master_Out(3378) <= \<const0>\;
  LOCKSTEP_Master_Out(3379) <= \<const0>\;
  LOCKSTEP_Master_Out(3380) <= \<const0>\;
  LOCKSTEP_Master_Out(3381) <= \<const0>\;
  LOCKSTEP_Master_Out(3382) <= \<const0>\;
  LOCKSTEP_Master_Out(3383) <= \<const0>\;
  LOCKSTEP_Master_Out(3384) <= \<const0>\;
  LOCKSTEP_Master_Out(3385) <= \<const0>\;
  LOCKSTEP_Master_Out(3386) <= \<const0>\;
  LOCKSTEP_Master_Out(3387) <= \<const0>\;
  LOCKSTEP_Master_Out(3388) <= \<const0>\;
  LOCKSTEP_Master_Out(3389) <= \<const0>\;
  LOCKSTEP_Master_Out(3390) <= \<const0>\;
  LOCKSTEP_Master_Out(3391) <= \<const0>\;
  LOCKSTEP_Master_Out(3392) <= \<const0>\;
  LOCKSTEP_Master_Out(3393) <= \<const0>\;
  LOCKSTEP_Master_Out(3394) <= \<const0>\;
  LOCKSTEP_Master_Out(3395) <= \<const0>\;
  LOCKSTEP_Master_Out(3396) <= \<const0>\;
  LOCKSTEP_Master_Out(3397) <= \<const0>\;
  LOCKSTEP_Master_Out(3398) <= \<const0>\;
  LOCKSTEP_Master_Out(3399) <= \<const0>\;
  LOCKSTEP_Master_Out(3400) <= \<const0>\;
  LOCKSTEP_Master_Out(3401) <= \<const0>\;
  LOCKSTEP_Master_Out(3402) <= \<const0>\;
  LOCKSTEP_Master_Out(3403) <= \<const0>\;
  LOCKSTEP_Master_Out(3404) <= \<const0>\;
  LOCKSTEP_Master_Out(3405) <= \<const0>\;
  LOCKSTEP_Master_Out(3406) <= \<const0>\;
  LOCKSTEP_Master_Out(3407) <= \<const0>\;
  LOCKSTEP_Master_Out(3408) <= \<const0>\;
  LOCKSTEP_Master_Out(3409) <= \<const0>\;
  LOCKSTEP_Master_Out(3410) <= \<const0>\;
  LOCKSTEP_Master_Out(3411) <= \<const0>\;
  LOCKSTEP_Master_Out(3412) <= \<const0>\;
  LOCKSTEP_Master_Out(3413) <= \<const0>\;
  LOCKSTEP_Master_Out(3414) <= \<const0>\;
  LOCKSTEP_Master_Out(3415) <= \<const0>\;
  LOCKSTEP_Master_Out(3416) <= \<const0>\;
  LOCKSTEP_Master_Out(3417) <= \<const0>\;
  LOCKSTEP_Master_Out(3418) <= \<const0>\;
  LOCKSTEP_Master_Out(3419) <= \<const0>\;
  LOCKSTEP_Master_Out(3420) <= \<const0>\;
  LOCKSTEP_Master_Out(3421) <= \<const0>\;
  LOCKSTEP_Master_Out(3422) <= \<const0>\;
  LOCKSTEP_Master_Out(3423) <= \<const0>\;
  LOCKSTEP_Master_Out(3424) <= \<const0>\;
  LOCKSTEP_Master_Out(3425) <= \<const0>\;
  LOCKSTEP_Master_Out(3426) <= \<const0>\;
  LOCKSTEP_Master_Out(3427) <= \<const0>\;
  LOCKSTEP_Master_Out(3428) <= \<const0>\;
  LOCKSTEP_Master_Out(3429) <= \<const0>\;
  LOCKSTEP_Master_Out(3430) <= \<const0>\;
  LOCKSTEP_Master_Out(3431) <= \<const0>\;
  LOCKSTEP_Master_Out(3432) <= \<const0>\;
  LOCKSTEP_Master_Out(3433) <= \<const0>\;
  LOCKSTEP_Master_Out(3434) <= \<const0>\;
  LOCKSTEP_Master_Out(3435) <= \<const0>\;
  LOCKSTEP_Master_Out(3436) <= \<const0>\;
  LOCKSTEP_Master_Out(3437) <= \<const0>\;
  LOCKSTEP_Master_Out(3438) <= \<const0>\;
  LOCKSTEP_Master_Out(3439) <= \<const0>\;
  LOCKSTEP_Master_Out(3440) <= \<const0>\;
  LOCKSTEP_Master_Out(3441) <= \<const0>\;
  LOCKSTEP_Master_Out(3442) <= \<const0>\;
  LOCKSTEP_Master_Out(3443) <= \<const0>\;
  LOCKSTEP_Master_Out(3444) <= \<const0>\;
  LOCKSTEP_Master_Out(3445) <= \<const0>\;
  LOCKSTEP_Master_Out(3446) <= \<const0>\;
  LOCKSTEP_Master_Out(3447) <= \<const0>\;
  LOCKSTEP_Master_Out(3448) <= \<const0>\;
  LOCKSTEP_Master_Out(3449) <= \<const0>\;
  LOCKSTEP_Master_Out(3450) <= \<const0>\;
  LOCKSTEP_Master_Out(3451) <= \<const0>\;
  LOCKSTEP_Master_Out(3452) <= \<const0>\;
  LOCKSTEP_Master_Out(3453) <= \<const0>\;
  LOCKSTEP_Master_Out(3454) <= \<const0>\;
  LOCKSTEP_Master_Out(3455) <= \<const0>\;
  LOCKSTEP_Master_Out(3456) <= \<const0>\;
  LOCKSTEP_Master_Out(3457) <= \<const0>\;
  LOCKSTEP_Master_Out(3458) <= \<const0>\;
  LOCKSTEP_Master_Out(3459) <= \<const0>\;
  LOCKSTEP_Master_Out(3460) <= \<const0>\;
  LOCKSTEP_Master_Out(3461) <= \<const0>\;
  LOCKSTEP_Master_Out(3462) <= \<const0>\;
  LOCKSTEP_Master_Out(3463) <= \<const0>\;
  LOCKSTEP_Master_Out(3464) <= \<const0>\;
  LOCKSTEP_Master_Out(3465) <= \<const0>\;
  LOCKSTEP_Master_Out(3466) <= \<const0>\;
  LOCKSTEP_Master_Out(3467) <= \<const0>\;
  LOCKSTEP_Master_Out(3468) <= \<const0>\;
  LOCKSTEP_Master_Out(3469) <= \<const0>\;
  LOCKSTEP_Master_Out(3470) <= \<const0>\;
  LOCKSTEP_Master_Out(3471) <= \<const0>\;
  LOCKSTEP_Master_Out(3472) <= \<const0>\;
  LOCKSTEP_Master_Out(3473) <= \<const0>\;
  LOCKSTEP_Master_Out(3474) <= \<const0>\;
  LOCKSTEP_Master_Out(3475) <= \<const0>\;
  LOCKSTEP_Master_Out(3476) <= \<const0>\;
  LOCKSTEP_Master_Out(3477) <= \<const0>\;
  LOCKSTEP_Master_Out(3478) <= \<const0>\;
  LOCKSTEP_Master_Out(3479) <= \<const0>\;
  LOCKSTEP_Master_Out(3480) <= \<const0>\;
  LOCKSTEP_Master_Out(3481) <= \<const0>\;
  LOCKSTEP_Master_Out(3482) <= \<const0>\;
  LOCKSTEP_Master_Out(3483) <= \<const0>\;
  LOCKSTEP_Master_Out(3484) <= \<const0>\;
  LOCKSTEP_Master_Out(3485) <= \<const0>\;
  LOCKSTEP_Master_Out(3486) <= \<const0>\;
  LOCKSTEP_Master_Out(3487) <= \<const0>\;
  LOCKSTEP_Master_Out(3488) <= \<const0>\;
  LOCKSTEP_Master_Out(3489) <= \<const0>\;
  LOCKSTEP_Master_Out(3490) <= \<const0>\;
  LOCKSTEP_Master_Out(3491) <= \<const0>\;
  LOCKSTEP_Master_Out(3492) <= \<const0>\;
  LOCKSTEP_Master_Out(3493) <= \<const0>\;
  LOCKSTEP_Master_Out(3494) <= \<const0>\;
  LOCKSTEP_Master_Out(3495) <= \<const0>\;
  LOCKSTEP_Master_Out(3496) <= \<const0>\;
  LOCKSTEP_Master_Out(3497) <= \<const0>\;
  LOCKSTEP_Master_Out(3498) <= \<const0>\;
  LOCKSTEP_Master_Out(3499) <= \<const0>\;
  LOCKSTEP_Master_Out(3500) <= \<const0>\;
  LOCKSTEP_Master_Out(3501) <= \<const0>\;
  LOCKSTEP_Master_Out(3502) <= \<const0>\;
  LOCKSTEP_Master_Out(3503) <= \<const0>\;
  LOCKSTEP_Master_Out(3504) <= \<const0>\;
  LOCKSTEP_Master_Out(3505) <= \<const0>\;
  LOCKSTEP_Master_Out(3506) <= \<const0>\;
  LOCKSTEP_Master_Out(3507) <= \<const0>\;
  LOCKSTEP_Master_Out(3508) <= \<const0>\;
  LOCKSTEP_Master_Out(3509) <= \<const0>\;
  LOCKSTEP_Master_Out(3510) <= \<const0>\;
  LOCKSTEP_Master_Out(3511) <= \<const0>\;
  LOCKSTEP_Master_Out(3512) <= \<const0>\;
  LOCKSTEP_Master_Out(3513) <= \<const0>\;
  LOCKSTEP_Master_Out(3514) <= \<const0>\;
  LOCKSTEP_Master_Out(3515) <= \<const0>\;
  LOCKSTEP_Master_Out(3516) <= \<const0>\;
  LOCKSTEP_Master_Out(3517) <= \<const0>\;
  LOCKSTEP_Master_Out(3518) <= \<const0>\;
  LOCKSTEP_Master_Out(3519) <= \<const0>\;
  LOCKSTEP_Master_Out(3520) <= \<const0>\;
  LOCKSTEP_Master_Out(3521) <= \<const0>\;
  LOCKSTEP_Master_Out(3522) <= \<const0>\;
  LOCKSTEP_Master_Out(3523) <= \<const0>\;
  LOCKSTEP_Master_Out(3524) <= \<const0>\;
  LOCKSTEP_Master_Out(3525) <= \<const0>\;
  LOCKSTEP_Master_Out(3526) <= \<const0>\;
  LOCKSTEP_Master_Out(3527) <= \<const0>\;
  LOCKSTEP_Master_Out(3528) <= \<const0>\;
  LOCKSTEP_Master_Out(3529) <= \<const0>\;
  LOCKSTEP_Master_Out(3530) <= \<const0>\;
  LOCKSTEP_Master_Out(3531) <= \<const0>\;
  LOCKSTEP_Master_Out(3532) <= \<const0>\;
  LOCKSTEP_Master_Out(3533) <= \<const0>\;
  LOCKSTEP_Master_Out(3534) <= \<const0>\;
  LOCKSTEP_Master_Out(3535) <= \<const0>\;
  LOCKSTEP_Master_Out(3536) <= \<const0>\;
  LOCKSTEP_Master_Out(3537) <= \<const0>\;
  LOCKSTEP_Master_Out(3538) <= \<const0>\;
  LOCKSTEP_Master_Out(3539) <= \<const0>\;
  LOCKSTEP_Master_Out(3540) <= \<const0>\;
  LOCKSTEP_Master_Out(3541) <= \<const0>\;
  LOCKSTEP_Master_Out(3542) <= \<const0>\;
  LOCKSTEP_Master_Out(3543) <= \<const0>\;
  LOCKSTEP_Master_Out(3544) <= \<const0>\;
  LOCKSTEP_Master_Out(3545) <= \<const0>\;
  LOCKSTEP_Master_Out(3546) <= \<const0>\;
  LOCKSTEP_Master_Out(3547) <= \<const0>\;
  LOCKSTEP_Master_Out(3548) <= \<const0>\;
  LOCKSTEP_Master_Out(3549) <= \<const0>\;
  LOCKSTEP_Master_Out(3550) <= \<const0>\;
  LOCKSTEP_Master_Out(3551) <= \<const0>\;
  LOCKSTEP_Master_Out(3552) <= \<const0>\;
  LOCKSTEP_Master_Out(3553) <= \<const0>\;
  LOCKSTEP_Master_Out(3554) <= \<const0>\;
  LOCKSTEP_Master_Out(3555) <= \<const0>\;
  LOCKSTEP_Master_Out(3556) <= \<const0>\;
  LOCKSTEP_Master_Out(3557) <= \<const0>\;
  LOCKSTEP_Master_Out(3558) <= \<const0>\;
  LOCKSTEP_Master_Out(3559) <= \<const0>\;
  LOCKSTEP_Master_Out(3560) <= \<const0>\;
  LOCKSTEP_Master_Out(3561) <= \<const0>\;
  LOCKSTEP_Master_Out(3562) <= \<const0>\;
  LOCKSTEP_Master_Out(3563) <= \<const0>\;
  LOCKSTEP_Master_Out(3564) <= \<const0>\;
  LOCKSTEP_Master_Out(3565) <= \<const0>\;
  LOCKSTEP_Master_Out(3566) <= \<const0>\;
  LOCKSTEP_Master_Out(3567) <= \<const0>\;
  LOCKSTEP_Master_Out(3568) <= \<const0>\;
  LOCKSTEP_Master_Out(3569) <= \<const0>\;
  LOCKSTEP_Master_Out(3570) <= \<const0>\;
  LOCKSTEP_Master_Out(3571) <= \<const0>\;
  LOCKSTEP_Master_Out(3572) <= \<const0>\;
  LOCKSTEP_Master_Out(3573) <= \<const0>\;
  LOCKSTEP_Master_Out(3574) <= \<const0>\;
  LOCKSTEP_Master_Out(3575) <= \<const0>\;
  LOCKSTEP_Master_Out(3576) <= \<const0>\;
  LOCKSTEP_Master_Out(3577) <= \<const0>\;
  LOCKSTEP_Master_Out(3578) <= \<const0>\;
  LOCKSTEP_Master_Out(3579) <= \<const0>\;
  LOCKSTEP_Master_Out(3580) <= \<const0>\;
  LOCKSTEP_Master_Out(3581) <= \<const0>\;
  LOCKSTEP_Master_Out(3582) <= \<const0>\;
  LOCKSTEP_Master_Out(3583) <= \<const0>\;
  LOCKSTEP_Master_Out(3584) <= \<const0>\;
  LOCKSTEP_Master_Out(3585) <= \<const0>\;
  LOCKSTEP_Master_Out(3586) <= \<const0>\;
  LOCKSTEP_Master_Out(3587) <= \<const0>\;
  LOCKSTEP_Master_Out(3588) <= \<const0>\;
  LOCKSTEP_Master_Out(3589) <= \<const0>\;
  LOCKSTEP_Master_Out(3590) <= \<const0>\;
  LOCKSTEP_Master_Out(3591) <= \<const0>\;
  LOCKSTEP_Master_Out(3592) <= \<const0>\;
  LOCKSTEP_Master_Out(3593) <= \<const0>\;
  LOCKSTEP_Master_Out(3594) <= \<const0>\;
  LOCKSTEP_Master_Out(3595) <= \<const0>\;
  LOCKSTEP_Master_Out(3596) <= \<const0>\;
  LOCKSTEP_Master_Out(3597) <= \<const0>\;
  LOCKSTEP_Master_Out(3598) <= \<const0>\;
  LOCKSTEP_Master_Out(3599) <= \<const0>\;
  LOCKSTEP_Master_Out(3600) <= \<const0>\;
  LOCKSTEP_Master_Out(3601) <= \<const0>\;
  LOCKSTEP_Master_Out(3602) <= \<const0>\;
  LOCKSTEP_Master_Out(3603) <= \<const0>\;
  LOCKSTEP_Master_Out(3604) <= \<const0>\;
  LOCKSTEP_Master_Out(3605) <= \<const0>\;
  LOCKSTEP_Master_Out(3606) <= \<const0>\;
  LOCKSTEP_Master_Out(3607) <= \<const0>\;
  LOCKSTEP_Master_Out(3608) <= \<const0>\;
  LOCKSTEP_Master_Out(3609) <= \<const0>\;
  LOCKSTEP_Master_Out(3610) <= \<const0>\;
  LOCKSTEP_Master_Out(3611) <= \<const0>\;
  LOCKSTEP_Master_Out(3612) <= \<const0>\;
  LOCKSTEP_Master_Out(3613) <= \<const0>\;
  LOCKSTEP_Master_Out(3614) <= \<const0>\;
  LOCKSTEP_Master_Out(3615) <= \<const0>\;
  LOCKSTEP_Master_Out(3616) <= \<const0>\;
  LOCKSTEP_Master_Out(3617) <= \<const0>\;
  LOCKSTEP_Master_Out(3618) <= \<const0>\;
  LOCKSTEP_Master_Out(3619) <= \<const0>\;
  LOCKSTEP_Master_Out(3620) <= \<const0>\;
  LOCKSTEP_Master_Out(3621) <= \<const0>\;
  LOCKSTEP_Master_Out(3622) <= \<const0>\;
  LOCKSTEP_Master_Out(3623) <= \<const0>\;
  LOCKSTEP_Master_Out(3624) <= \<const0>\;
  LOCKSTEP_Master_Out(3625) <= \<const0>\;
  LOCKSTEP_Master_Out(3626) <= \<const0>\;
  LOCKSTEP_Master_Out(3627) <= \<const0>\;
  LOCKSTEP_Master_Out(3628) <= \<const0>\;
  LOCKSTEP_Master_Out(3629) <= \<const0>\;
  LOCKSTEP_Master_Out(3630) <= \<const0>\;
  LOCKSTEP_Master_Out(3631) <= \<const0>\;
  LOCKSTEP_Master_Out(3632) <= \<const0>\;
  LOCKSTEP_Master_Out(3633) <= \<const0>\;
  LOCKSTEP_Master_Out(3634) <= \<const0>\;
  LOCKSTEP_Master_Out(3635) <= \<const0>\;
  LOCKSTEP_Master_Out(3636) <= \<const0>\;
  LOCKSTEP_Master_Out(3637) <= \<const0>\;
  LOCKSTEP_Master_Out(3638) <= \<const0>\;
  LOCKSTEP_Master_Out(3639) <= \<const0>\;
  LOCKSTEP_Master_Out(3640) <= \<const0>\;
  LOCKSTEP_Master_Out(3641) <= \<const0>\;
  LOCKSTEP_Master_Out(3642) <= \<const0>\;
  LOCKSTEP_Master_Out(3643) <= \<const0>\;
  LOCKSTEP_Master_Out(3644) <= \<const0>\;
  LOCKSTEP_Master_Out(3645) <= \<const0>\;
  LOCKSTEP_Master_Out(3646) <= \<const0>\;
  LOCKSTEP_Master_Out(3647) <= \<const0>\;
  LOCKSTEP_Master_Out(3648) <= \<const0>\;
  LOCKSTEP_Master_Out(3649) <= \<const0>\;
  LOCKSTEP_Master_Out(3650) <= \<const0>\;
  LOCKSTEP_Master_Out(3651) <= \<const0>\;
  LOCKSTEP_Master_Out(3652) <= \<const0>\;
  LOCKSTEP_Master_Out(3653) <= \<const0>\;
  LOCKSTEP_Master_Out(3654) <= \<const0>\;
  LOCKSTEP_Master_Out(3655) <= \<const0>\;
  LOCKSTEP_Master_Out(3656) <= \<const0>\;
  LOCKSTEP_Master_Out(3657) <= \<const0>\;
  LOCKSTEP_Master_Out(3658) <= \<const0>\;
  LOCKSTEP_Master_Out(3659) <= \<const0>\;
  LOCKSTEP_Master_Out(3660) <= \<const0>\;
  LOCKSTEP_Master_Out(3661) <= \<const0>\;
  LOCKSTEP_Master_Out(3662) <= \<const0>\;
  LOCKSTEP_Master_Out(3663) <= \<const0>\;
  LOCKSTEP_Master_Out(3664) <= \<const0>\;
  LOCKSTEP_Master_Out(3665) <= \<const0>\;
  LOCKSTEP_Master_Out(3666) <= \<const0>\;
  LOCKSTEP_Master_Out(3667) <= \<const0>\;
  LOCKSTEP_Master_Out(3668) <= \<const0>\;
  LOCKSTEP_Master_Out(3669) <= \<const0>\;
  LOCKSTEP_Master_Out(3670) <= \<const0>\;
  LOCKSTEP_Master_Out(3671) <= \<const0>\;
  LOCKSTEP_Master_Out(3672) <= \<const0>\;
  LOCKSTEP_Master_Out(3673) <= \<const0>\;
  LOCKSTEP_Master_Out(3674) <= \<const0>\;
  LOCKSTEP_Master_Out(3675) <= \<const0>\;
  LOCKSTEP_Master_Out(3676) <= \<const0>\;
  LOCKSTEP_Master_Out(3677) <= \<const0>\;
  LOCKSTEP_Master_Out(3678) <= \<const0>\;
  LOCKSTEP_Master_Out(3679) <= \<const0>\;
  LOCKSTEP_Master_Out(3680) <= \<const0>\;
  LOCKSTEP_Master_Out(3681) <= \<const0>\;
  LOCKSTEP_Master_Out(3682) <= \<const0>\;
  LOCKSTEP_Master_Out(3683) <= \<const0>\;
  LOCKSTEP_Master_Out(3684) <= \<const0>\;
  LOCKSTEP_Master_Out(3685) <= \<const0>\;
  LOCKSTEP_Master_Out(3686) <= \<const0>\;
  LOCKSTEP_Master_Out(3687) <= \<const0>\;
  LOCKSTEP_Master_Out(3688) <= \<const0>\;
  LOCKSTEP_Master_Out(3689) <= \<const0>\;
  LOCKSTEP_Master_Out(3690) <= \<const0>\;
  LOCKSTEP_Master_Out(3691) <= \<const0>\;
  LOCKSTEP_Master_Out(3692) <= \<const0>\;
  LOCKSTEP_Master_Out(3693) <= \<const0>\;
  LOCKSTEP_Master_Out(3694) <= \<const0>\;
  LOCKSTEP_Master_Out(3695) <= \<const0>\;
  LOCKSTEP_Master_Out(3696) <= \<const0>\;
  LOCKSTEP_Master_Out(3697) <= \<const0>\;
  LOCKSTEP_Master_Out(3698) <= \<const0>\;
  LOCKSTEP_Master_Out(3699) <= \<const0>\;
  LOCKSTEP_Master_Out(3700) <= \<const0>\;
  LOCKSTEP_Master_Out(3701) <= \<const0>\;
  LOCKSTEP_Master_Out(3702) <= \<const0>\;
  LOCKSTEP_Master_Out(3703) <= \<const0>\;
  LOCKSTEP_Master_Out(3704) <= \<const0>\;
  LOCKSTEP_Master_Out(3705) <= \<const0>\;
  LOCKSTEP_Master_Out(3706) <= \<const0>\;
  LOCKSTEP_Master_Out(3707) <= \<const0>\;
  LOCKSTEP_Master_Out(3708) <= \<const0>\;
  LOCKSTEP_Master_Out(3709) <= \<const0>\;
  LOCKSTEP_Master_Out(3710) <= \<const0>\;
  LOCKSTEP_Master_Out(3711) <= \<const0>\;
  LOCKSTEP_Master_Out(3712) <= \<const0>\;
  LOCKSTEP_Master_Out(3713) <= \<const0>\;
  LOCKSTEP_Master_Out(3714) <= \<const0>\;
  LOCKSTEP_Master_Out(3715) <= \<const0>\;
  LOCKSTEP_Master_Out(3716) <= \<const0>\;
  LOCKSTEP_Master_Out(3717) <= \<const0>\;
  LOCKSTEP_Master_Out(3718) <= \<const0>\;
  LOCKSTEP_Master_Out(3719) <= \<const0>\;
  LOCKSTEP_Master_Out(3720) <= \<const0>\;
  LOCKSTEP_Master_Out(3721) <= \<const0>\;
  LOCKSTEP_Master_Out(3722) <= \<const0>\;
  LOCKSTEP_Master_Out(3723) <= \<const0>\;
  LOCKSTEP_Master_Out(3724) <= \<const0>\;
  LOCKSTEP_Master_Out(3725) <= \<const0>\;
  LOCKSTEP_Master_Out(3726) <= \<const0>\;
  LOCKSTEP_Master_Out(3727) <= \<const0>\;
  LOCKSTEP_Master_Out(3728) <= \<const0>\;
  LOCKSTEP_Master_Out(3729) <= \<const0>\;
  LOCKSTEP_Master_Out(3730) <= \<const0>\;
  LOCKSTEP_Master_Out(3731) <= \<const0>\;
  LOCKSTEP_Master_Out(3732) <= \<const0>\;
  LOCKSTEP_Master_Out(3733) <= \<const0>\;
  LOCKSTEP_Master_Out(3734) <= \<const0>\;
  LOCKSTEP_Master_Out(3735) <= \<const0>\;
  LOCKSTEP_Master_Out(3736) <= \<const0>\;
  LOCKSTEP_Master_Out(3737) <= \<const0>\;
  LOCKSTEP_Master_Out(3738) <= \<const0>\;
  LOCKSTEP_Master_Out(3739) <= \<const0>\;
  LOCKSTEP_Master_Out(3740) <= \<const0>\;
  LOCKSTEP_Master_Out(3741) <= \<const0>\;
  LOCKSTEP_Master_Out(3742) <= \<const0>\;
  LOCKSTEP_Master_Out(3743) <= \<const0>\;
  LOCKSTEP_Master_Out(3744) <= \<const0>\;
  LOCKSTEP_Master_Out(3745) <= \<const0>\;
  LOCKSTEP_Master_Out(3746) <= \<const0>\;
  LOCKSTEP_Master_Out(3747) <= \<const0>\;
  LOCKSTEP_Master_Out(3748) <= \<const0>\;
  LOCKSTEP_Master_Out(3749) <= \<const0>\;
  LOCKSTEP_Master_Out(3750) <= \<const0>\;
  LOCKSTEP_Master_Out(3751) <= \<const0>\;
  LOCKSTEP_Master_Out(3752) <= \<const0>\;
  LOCKSTEP_Master_Out(3753) <= \<const0>\;
  LOCKSTEP_Master_Out(3754) <= \<const0>\;
  LOCKSTEP_Master_Out(3755) <= \<const0>\;
  LOCKSTEP_Master_Out(3756) <= \<const0>\;
  LOCKSTEP_Master_Out(3757) <= \<const0>\;
  LOCKSTEP_Master_Out(3758) <= \<const0>\;
  LOCKSTEP_Master_Out(3759) <= \<const0>\;
  LOCKSTEP_Master_Out(3760) <= \<const0>\;
  LOCKSTEP_Master_Out(3761) <= \<const0>\;
  LOCKSTEP_Master_Out(3762) <= \<const0>\;
  LOCKSTEP_Master_Out(3763) <= \<const0>\;
  LOCKSTEP_Master_Out(3764) <= \<const0>\;
  LOCKSTEP_Master_Out(3765) <= \<const0>\;
  LOCKSTEP_Master_Out(3766) <= \<const0>\;
  LOCKSTEP_Master_Out(3767) <= \<const0>\;
  LOCKSTEP_Master_Out(3768) <= \<const0>\;
  LOCKSTEP_Master_Out(3769) <= \<const0>\;
  LOCKSTEP_Master_Out(3770) <= \<const0>\;
  LOCKSTEP_Master_Out(3771) <= \<const0>\;
  LOCKSTEP_Master_Out(3772) <= \<const0>\;
  LOCKSTEP_Master_Out(3773) <= \<const0>\;
  LOCKSTEP_Master_Out(3774) <= \<const0>\;
  LOCKSTEP_Master_Out(3775) <= \<const0>\;
  LOCKSTEP_Master_Out(3776) <= \<const0>\;
  LOCKSTEP_Master_Out(3777) <= \<const0>\;
  LOCKSTEP_Master_Out(3778) <= \<const0>\;
  LOCKSTEP_Master_Out(3779) <= \<const0>\;
  LOCKSTEP_Master_Out(3780) <= \<const0>\;
  LOCKSTEP_Master_Out(3781) <= \<const0>\;
  LOCKSTEP_Master_Out(3782) <= \<const0>\;
  LOCKSTEP_Master_Out(3783) <= \<const0>\;
  LOCKSTEP_Master_Out(3784) <= \<const0>\;
  LOCKSTEP_Master_Out(3785) <= \<const0>\;
  LOCKSTEP_Master_Out(3786) <= \<const0>\;
  LOCKSTEP_Master_Out(3787) <= \<const0>\;
  LOCKSTEP_Master_Out(3788) <= \<const0>\;
  LOCKSTEP_Master_Out(3789) <= \<const0>\;
  LOCKSTEP_Master_Out(3790) <= \<const0>\;
  LOCKSTEP_Master_Out(3791) <= \<const0>\;
  LOCKSTEP_Master_Out(3792) <= \<const0>\;
  LOCKSTEP_Master_Out(3793) <= \<const0>\;
  LOCKSTEP_Master_Out(3794) <= \<const0>\;
  LOCKSTEP_Master_Out(3795) <= \<const0>\;
  LOCKSTEP_Master_Out(3796) <= \<const0>\;
  LOCKSTEP_Master_Out(3797) <= \<const0>\;
  LOCKSTEP_Master_Out(3798) <= \<const0>\;
  LOCKSTEP_Master_Out(3799) <= \<const0>\;
  LOCKSTEP_Master_Out(3800) <= \<const0>\;
  LOCKSTEP_Master_Out(3801) <= \<const0>\;
  LOCKSTEP_Master_Out(3802) <= \<const0>\;
  LOCKSTEP_Master_Out(3803) <= \<const0>\;
  LOCKSTEP_Master_Out(3804) <= \<const0>\;
  LOCKSTEP_Master_Out(3805) <= \<const0>\;
  LOCKSTEP_Master_Out(3806) <= \<const0>\;
  LOCKSTEP_Master_Out(3807) <= \<const0>\;
  LOCKSTEP_Master_Out(3808) <= \<const0>\;
  LOCKSTEP_Master_Out(3809) <= \<const0>\;
  LOCKSTEP_Master_Out(3810) <= \<const0>\;
  LOCKSTEP_Master_Out(3811) <= \<const0>\;
  LOCKSTEP_Master_Out(3812) <= \<const0>\;
  LOCKSTEP_Master_Out(3813) <= \<const0>\;
  LOCKSTEP_Master_Out(3814) <= \<const0>\;
  LOCKSTEP_Master_Out(3815) <= \<const0>\;
  LOCKSTEP_Master_Out(3816) <= \<const0>\;
  LOCKSTEP_Master_Out(3817) <= \<const0>\;
  LOCKSTEP_Master_Out(3818) <= \<const0>\;
  LOCKSTEP_Master_Out(3819) <= \<const0>\;
  LOCKSTEP_Master_Out(3820) <= \<const0>\;
  LOCKSTEP_Master_Out(3821) <= \<const0>\;
  LOCKSTEP_Master_Out(3822) <= \<const0>\;
  LOCKSTEP_Master_Out(3823) <= \<const0>\;
  LOCKSTEP_Master_Out(3824) <= \<const0>\;
  LOCKSTEP_Master_Out(3825) <= \<const0>\;
  LOCKSTEP_Master_Out(3826) <= \<const0>\;
  LOCKSTEP_Master_Out(3827) <= \<const0>\;
  LOCKSTEP_Master_Out(3828) <= \<const0>\;
  LOCKSTEP_Master_Out(3829) <= \<const0>\;
  LOCKSTEP_Master_Out(3830) <= \<const0>\;
  LOCKSTEP_Master_Out(3831) <= \<const0>\;
  LOCKSTEP_Master_Out(3832) <= \<const0>\;
  LOCKSTEP_Master_Out(3833) <= \<const0>\;
  LOCKSTEP_Master_Out(3834) <= \<const0>\;
  LOCKSTEP_Master_Out(3835) <= \<const0>\;
  LOCKSTEP_Master_Out(3836) <= \<const0>\;
  LOCKSTEP_Master_Out(3837) <= \<const0>\;
  LOCKSTEP_Master_Out(3838) <= \<const0>\;
  LOCKSTEP_Master_Out(3839) <= \<const0>\;
  LOCKSTEP_Master_Out(3840) <= \<const0>\;
  LOCKSTEP_Master_Out(3841) <= \<const0>\;
  LOCKSTEP_Master_Out(3842) <= \<const0>\;
  LOCKSTEP_Master_Out(3843) <= \<const0>\;
  LOCKSTEP_Master_Out(3844) <= \<const0>\;
  LOCKSTEP_Master_Out(3845) <= \<const0>\;
  LOCKSTEP_Master_Out(3846) <= \<const0>\;
  LOCKSTEP_Master_Out(3847) <= \<const0>\;
  LOCKSTEP_Master_Out(3848) <= \<const0>\;
  LOCKSTEP_Master_Out(3849) <= \<const0>\;
  LOCKSTEP_Master_Out(3850) <= \<const0>\;
  LOCKSTEP_Master_Out(3851) <= \<const0>\;
  LOCKSTEP_Master_Out(3852) <= \<const0>\;
  LOCKSTEP_Master_Out(3853) <= \<const0>\;
  LOCKSTEP_Master_Out(3854) <= \<const0>\;
  LOCKSTEP_Master_Out(3855) <= \<const0>\;
  LOCKSTEP_Master_Out(3856) <= \<const0>\;
  LOCKSTEP_Master_Out(3857) <= \<const0>\;
  LOCKSTEP_Master_Out(3858) <= \<const0>\;
  LOCKSTEP_Master_Out(3859) <= \<const0>\;
  LOCKSTEP_Master_Out(3860) <= \<const0>\;
  LOCKSTEP_Master_Out(3861) <= \<const0>\;
  LOCKSTEP_Master_Out(3862) <= \<const0>\;
  LOCKSTEP_Master_Out(3863) <= \<const0>\;
  LOCKSTEP_Master_Out(3864) <= \<const0>\;
  LOCKSTEP_Master_Out(3865) <= \<const0>\;
  LOCKSTEP_Master_Out(3866) <= \<const0>\;
  LOCKSTEP_Master_Out(3867) <= \<const0>\;
  LOCKSTEP_Master_Out(3868) <= \<const0>\;
  LOCKSTEP_Master_Out(3869) <= \<const0>\;
  LOCKSTEP_Master_Out(3870) <= \<const0>\;
  LOCKSTEP_Master_Out(3871) <= \<const0>\;
  LOCKSTEP_Master_Out(3872) <= \<const0>\;
  LOCKSTEP_Master_Out(3873) <= \<const0>\;
  LOCKSTEP_Master_Out(3874) <= \<const0>\;
  LOCKSTEP_Master_Out(3875) <= \<const0>\;
  LOCKSTEP_Master_Out(3876) <= \<const0>\;
  LOCKSTEP_Master_Out(3877) <= \<const0>\;
  LOCKSTEP_Master_Out(3878) <= \<const0>\;
  LOCKSTEP_Master_Out(3879) <= \<const0>\;
  LOCKSTEP_Master_Out(3880) <= \<const0>\;
  LOCKSTEP_Master_Out(3881) <= \<const0>\;
  LOCKSTEP_Master_Out(3882) <= \<const0>\;
  LOCKSTEP_Master_Out(3883) <= \<const0>\;
  LOCKSTEP_Master_Out(3884) <= \<const0>\;
  LOCKSTEP_Master_Out(3885) <= \<const0>\;
  LOCKSTEP_Master_Out(3886) <= \<const0>\;
  LOCKSTEP_Master_Out(3887) <= \<const0>\;
  LOCKSTEP_Master_Out(3888) <= \<const0>\;
  LOCKSTEP_Master_Out(3889) <= \<const0>\;
  LOCKSTEP_Master_Out(3890) <= \<const0>\;
  LOCKSTEP_Master_Out(3891) <= \<const0>\;
  LOCKSTEP_Master_Out(3892) <= \<const0>\;
  LOCKSTEP_Master_Out(3893) <= \<const0>\;
  LOCKSTEP_Master_Out(3894) <= \<const0>\;
  LOCKSTEP_Master_Out(3895) <= \<const0>\;
  LOCKSTEP_Master_Out(3896) <= \<const0>\;
  LOCKSTEP_Master_Out(3897) <= \<const0>\;
  LOCKSTEP_Master_Out(3898) <= \<const0>\;
  LOCKSTEP_Master_Out(3899) <= \<const0>\;
  LOCKSTEP_Master_Out(3900) <= \<const0>\;
  LOCKSTEP_Master_Out(3901) <= \<const0>\;
  LOCKSTEP_Master_Out(3902) <= \<const0>\;
  LOCKSTEP_Master_Out(3903) <= \<const0>\;
  LOCKSTEP_Master_Out(3904) <= \<const0>\;
  LOCKSTEP_Master_Out(3905) <= \<const0>\;
  LOCKSTEP_Master_Out(3906) <= \<const0>\;
  LOCKSTEP_Master_Out(3907) <= \<const0>\;
  LOCKSTEP_Master_Out(3908) <= \<const0>\;
  LOCKSTEP_Master_Out(3909) <= \<const0>\;
  LOCKSTEP_Master_Out(3910) <= \<const0>\;
  LOCKSTEP_Master_Out(3911) <= \<const0>\;
  LOCKSTEP_Master_Out(3912) <= \<const0>\;
  LOCKSTEP_Master_Out(3913) <= \<const0>\;
  LOCKSTEP_Master_Out(3914) <= \<const0>\;
  LOCKSTEP_Master_Out(3915) <= \<const0>\;
  LOCKSTEP_Master_Out(3916) <= \<const0>\;
  LOCKSTEP_Master_Out(3917) <= \<const0>\;
  LOCKSTEP_Master_Out(3918) <= \<const0>\;
  LOCKSTEP_Master_Out(3919) <= \<const0>\;
  LOCKSTEP_Master_Out(3920) <= \<const0>\;
  LOCKSTEP_Master_Out(3921) <= \<const0>\;
  LOCKSTEP_Master_Out(3922) <= \<const0>\;
  LOCKSTEP_Master_Out(3923) <= \<const0>\;
  LOCKSTEP_Master_Out(3924) <= \<const0>\;
  LOCKSTEP_Master_Out(3925) <= \<const0>\;
  LOCKSTEP_Master_Out(3926) <= \<const0>\;
  LOCKSTEP_Master_Out(3927) <= \<const0>\;
  LOCKSTEP_Master_Out(3928) <= \<const0>\;
  LOCKSTEP_Master_Out(3929) <= \<const0>\;
  LOCKSTEP_Master_Out(3930) <= \<const0>\;
  LOCKSTEP_Master_Out(3931) <= \<const0>\;
  LOCKSTEP_Master_Out(3932) <= \<const0>\;
  LOCKSTEP_Master_Out(3933) <= \<const0>\;
  LOCKSTEP_Master_Out(3934) <= \<const0>\;
  LOCKSTEP_Master_Out(3935) <= \<const0>\;
  LOCKSTEP_Master_Out(3936) <= \<const0>\;
  LOCKSTEP_Master_Out(3937) <= \<const0>\;
  LOCKSTEP_Master_Out(3938) <= \<const0>\;
  LOCKSTEP_Master_Out(3939) <= \<const0>\;
  LOCKSTEP_Master_Out(3940) <= \<const0>\;
  LOCKSTEP_Master_Out(3941) <= \<const0>\;
  LOCKSTEP_Master_Out(3942) <= \<const0>\;
  LOCKSTEP_Master_Out(3943) <= \<const0>\;
  LOCKSTEP_Master_Out(3944) <= \<const0>\;
  LOCKSTEP_Master_Out(3945) <= \<const0>\;
  LOCKSTEP_Master_Out(3946) <= \<const0>\;
  LOCKSTEP_Master_Out(3947) <= \<const0>\;
  LOCKSTEP_Master_Out(3948) <= \<const0>\;
  LOCKSTEP_Master_Out(3949) <= \<const0>\;
  LOCKSTEP_Master_Out(3950) <= \<const0>\;
  LOCKSTEP_Master_Out(3951) <= \<const0>\;
  LOCKSTEP_Master_Out(3952) <= \<const0>\;
  LOCKSTEP_Master_Out(3953) <= \<const0>\;
  LOCKSTEP_Master_Out(3954) <= \<const0>\;
  LOCKSTEP_Master_Out(3955) <= \<const0>\;
  LOCKSTEP_Master_Out(3956) <= \<const0>\;
  LOCKSTEP_Master_Out(3957) <= \<const0>\;
  LOCKSTEP_Master_Out(3958) <= \<const0>\;
  LOCKSTEP_Master_Out(3959) <= \<const0>\;
  LOCKSTEP_Master_Out(3960) <= \<const0>\;
  LOCKSTEP_Master_Out(3961) <= \<const0>\;
  LOCKSTEP_Master_Out(3962) <= \<const0>\;
  LOCKSTEP_Master_Out(3963) <= \<const0>\;
  LOCKSTEP_Master_Out(3964) <= \<const0>\;
  LOCKSTEP_Master_Out(3965) <= \<const0>\;
  LOCKSTEP_Master_Out(3966) <= \<const0>\;
  LOCKSTEP_Master_Out(3967) <= \<const0>\;
  LOCKSTEP_Master_Out(3968) <= \<const0>\;
  LOCKSTEP_Master_Out(3969) <= \<const0>\;
  LOCKSTEP_Master_Out(3970) <= \<const0>\;
  LOCKSTEP_Master_Out(3971) <= \<const0>\;
  LOCKSTEP_Master_Out(3972) <= \<const0>\;
  LOCKSTEP_Master_Out(3973) <= \<const0>\;
  LOCKSTEP_Master_Out(3974) <= \<const0>\;
  LOCKSTEP_Master_Out(3975) <= \<const0>\;
  LOCKSTEP_Master_Out(3976) <= \<const0>\;
  LOCKSTEP_Master_Out(3977) <= \<const0>\;
  LOCKSTEP_Master_Out(3978) <= \<const0>\;
  LOCKSTEP_Master_Out(3979) <= \<const0>\;
  LOCKSTEP_Master_Out(3980) <= \<const0>\;
  LOCKSTEP_Master_Out(3981) <= \<const0>\;
  LOCKSTEP_Master_Out(3982) <= \<const0>\;
  LOCKSTEP_Master_Out(3983) <= \<const0>\;
  LOCKSTEP_Master_Out(3984) <= \<const0>\;
  LOCKSTEP_Master_Out(3985) <= \<const0>\;
  LOCKSTEP_Master_Out(3986) <= \<const0>\;
  LOCKSTEP_Master_Out(3987) <= \<const0>\;
  LOCKSTEP_Master_Out(3988) <= \<const0>\;
  LOCKSTEP_Master_Out(3989) <= \<const0>\;
  LOCKSTEP_Master_Out(3990) <= \<const0>\;
  LOCKSTEP_Master_Out(3991) <= \<const0>\;
  LOCKSTEP_Master_Out(3992) <= \<const0>\;
  LOCKSTEP_Master_Out(3993) <= \<const0>\;
  LOCKSTEP_Master_Out(3994) <= \<const0>\;
  LOCKSTEP_Master_Out(3995) <= \<const0>\;
  LOCKSTEP_Master_Out(3996) <= \<const0>\;
  LOCKSTEP_Master_Out(3997) <= \<const0>\;
  LOCKSTEP_Master_Out(3998) <= \<const0>\;
  LOCKSTEP_Master_Out(3999) <= \<const0>\;
  LOCKSTEP_Master_Out(4000) <= \<const0>\;
  LOCKSTEP_Master_Out(4001) <= \<const0>\;
  LOCKSTEP_Master_Out(4002) <= \<const0>\;
  LOCKSTEP_Master_Out(4003) <= \<const0>\;
  LOCKSTEP_Master_Out(4004) <= \<const0>\;
  LOCKSTEP_Master_Out(4005) <= \<const0>\;
  LOCKSTEP_Master_Out(4006) <= \<const0>\;
  LOCKSTEP_Master_Out(4007) <= \<const0>\;
  LOCKSTEP_Master_Out(4008) <= \<const0>\;
  LOCKSTEP_Master_Out(4009) <= \<const0>\;
  LOCKSTEP_Master_Out(4010) <= \<const0>\;
  LOCKSTEP_Master_Out(4011) <= \<const0>\;
  LOCKSTEP_Master_Out(4012) <= \<const0>\;
  LOCKSTEP_Master_Out(4013) <= \<const0>\;
  LOCKSTEP_Master_Out(4014) <= \<const0>\;
  LOCKSTEP_Master_Out(4015) <= \<const0>\;
  LOCKSTEP_Master_Out(4016) <= \<const0>\;
  LOCKSTEP_Master_Out(4017) <= \<const0>\;
  LOCKSTEP_Master_Out(4018) <= \<const0>\;
  LOCKSTEP_Master_Out(4019) <= \<const0>\;
  LOCKSTEP_Master_Out(4020) <= \<const0>\;
  LOCKSTEP_Master_Out(4021) <= \<const0>\;
  LOCKSTEP_Master_Out(4022) <= \<const0>\;
  LOCKSTEP_Master_Out(4023) <= \<const0>\;
  LOCKSTEP_Master_Out(4024) <= \<const0>\;
  LOCKSTEP_Master_Out(4025) <= \<const0>\;
  LOCKSTEP_Master_Out(4026) <= \<const0>\;
  LOCKSTEP_Master_Out(4027) <= \<const0>\;
  LOCKSTEP_Master_Out(4028) <= \<const0>\;
  LOCKSTEP_Master_Out(4029) <= \<const0>\;
  LOCKSTEP_Master_Out(4030) <= \<const0>\;
  LOCKSTEP_Master_Out(4031) <= \<const0>\;
  LOCKSTEP_Master_Out(4032) <= \<const0>\;
  LOCKSTEP_Master_Out(4033) <= \<const0>\;
  LOCKSTEP_Master_Out(4034) <= \<const0>\;
  LOCKSTEP_Master_Out(4035) <= \<const0>\;
  LOCKSTEP_Master_Out(4036) <= \<const0>\;
  LOCKSTEP_Master_Out(4037) <= \<const0>\;
  LOCKSTEP_Master_Out(4038) <= \<const0>\;
  LOCKSTEP_Master_Out(4039) <= \<const0>\;
  LOCKSTEP_Master_Out(4040) <= \<const0>\;
  LOCKSTEP_Master_Out(4041) <= \<const0>\;
  LOCKSTEP_Master_Out(4042) <= \<const0>\;
  LOCKSTEP_Master_Out(4043) <= \<const0>\;
  LOCKSTEP_Master_Out(4044) <= \<const0>\;
  LOCKSTEP_Master_Out(4045) <= \<const0>\;
  LOCKSTEP_Master_Out(4046) <= \<const0>\;
  LOCKSTEP_Master_Out(4047) <= \<const0>\;
  LOCKSTEP_Master_Out(4048) <= \<const0>\;
  LOCKSTEP_Master_Out(4049) <= \<const0>\;
  LOCKSTEP_Master_Out(4050) <= \<const0>\;
  LOCKSTEP_Master_Out(4051) <= \<const0>\;
  LOCKSTEP_Master_Out(4052) <= \<const0>\;
  LOCKSTEP_Master_Out(4053) <= \<const0>\;
  LOCKSTEP_Master_Out(4054) <= \<const0>\;
  LOCKSTEP_Master_Out(4055) <= \<const0>\;
  LOCKSTEP_Master_Out(4056) <= \<const0>\;
  LOCKSTEP_Master_Out(4057) <= \<const0>\;
  LOCKSTEP_Master_Out(4058) <= \<const0>\;
  LOCKSTEP_Master_Out(4059) <= \<const0>\;
  LOCKSTEP_Master_Out(4060) <= \<const0>\;
  LOCKSTEP_Master_Out(4061) <= \<const0>\;
  LOCKSTEP_Master_Out(4062) <= \<const0>\;
  LOCKSTEP_Master_Out(4063) <= \<const0>\;
  LOCKSTEP_Master_Out(4064) <= \<const0>\;
  LOCKSTEP_Master_Out(4065) <= \<const0>\;
  LOCKSTEP_Master_Out(4066) <= \<const0>\;
  LOCKSTEP_Master_Out(4067) <= \<const0>\;
  LOCKSTEP_Master_Out(4068) <= \<const0>\;
  LOCKSTEP_Master_Out(4069) <= \<const0>\;
  LOCKSTEP_Master_Out(4070) <= \<const0>\;
  LOCKSTEP_Master_Out(4071) <= \<const0>\;
  LOCKSTEP_Master_Out(4072) <= \<const0>\;
  LOCKSTEP_Master_Out(4073) <= \<const0>\;
  LOCKSTEP_Master_Out(4074) <= \<const0>\;
  LOCKSTEP_Master_Out(4075) <= \<const0>\;
  LOCKSTEP_Master_Out(4076) <= \<const0>\;
  LOCKSTEP_Master_Out(4077) <= \<const0>\;
  LOCKSTEP_Master_Out(4078) <= \<const0>\;
  LOCKSTEP_Master_Out(4079) <= \<const0>\;
  LOCKSTEP_Master_Out(4080) <= \<const0>\;
  LOCKSTEP_Master_Out(4081) <= \<const0>\;
  LOCKSTEP_Master_Out(4082) <= \<const0>\;
  LOCKSTEP_Master_Out(4083) <= \<const0>\;
  LOCKSTEP_Master_Out(4084) <= \<const0>\;
  LOCKSTEP_Master_Out(4085) <= \<const0>\;
  LOCKSTEP_Master_Out(4086) <= \<const0>\;
  LOCKSTEP_Master_Out(4087) <= \<const0>\;
  LOCKSTEP_Master_Out(4088) <= \<const0>\;
  LOCKSTEP_Master_Out(4089) <= \<const0>\;
  LOCKSTEP_Master_Out(4090) <= \<const0>\;
  LOCKSTEP_Master_Out(4091) <= \<const0>\;
  LOCKSTEP_Master_Out(4092) <= \<const0>\;
  LOCKSTEP_Master_Out(4093) <= \<const0>\;
  LOCKSTEP_Master_Out(4094) <= \<const0>\;
  LOCKSTEP_Master_Out(4095) <= \<const0>\;
  LOCKSTEP_Out(0) <= \^lockstep_out\(0);
  LOCKSTEP_Out(1) <= \<const0>\;
  LOCKSTEP_Out(2 to 35) <= \^lockstep_out\(2 to 35);
  LOCKSTEP_Out(36) <= \<const0>\;
  LOCKSTEP_Out(37) <= \<const0>\;
  LOCKSTEP_Out(38) <= \<const0>\;
  LOCKSTEP_Out(39) <= \<const0>\;
  LOCKSTEP_Out(40) <= \<const0>\;
  LOCKSTEP_Out(41) <= \<const0>\;
  LOCKSTEP_Out(42) <= \<const0>\;
  LOCKSTEP_Out(43) <= \<const0>\;
  LOCKSTEP_Out(44) <= \<const0>\;
  LOCKSTEP_Out(45) <= \<const0>\;
  LOCKSTEP_Out(46) <= \<const0>\;
  LOCKSTEP_Out(47) <= \<const0>\;
  LOCKSTEP_Out(48) <= \<const0>\;
  LOCKSTEP_Out(49) <= \<const0>\;
  LOCKSTEP_Out(50) <= \<const0>\;
  LOCKSTEP_Out(51) <= \<const0>\;
  LOCKSTEP_Out(52) <= \<const0>\;
  LOCKSTEP_Out(53) <= \<const0>\;
  LOCKSTEP_Out(54) <= \<const0>\;
  LOCKSTEP_Out(55) <= \<const0>\;
  LOCKSTEP_Out(56) <= \<const0>\;
  LOCKSTEP_Out(57) <= \<const0>\;
  LOCKSTEP_Out(58) <= \<const0>\;
  LOCKSTEP_Out(59) <= \<const0>\;
  LOCKSTEP_Out(60) <= \<const0>\;
  LOCKSTEP_Out(61) <= \<const0>\;
  LOCKSTEP_Out(62) <= \<const0>\;
  LOCKSTEP_Out(63) <= \<const0>\;
  LOCKSTEP_Out(64) <= \<const0>\;
  LOCKSTEP_Out(65) <= \<const0>\;
  LOCKSTEP_Out(66) <= \<const0>\;
  LOCKSTEP_Out(67) <= \<const0>\;
  LOCKSTEP_Out(68 to 99) <= \^lockstep_out\(68 to 99);
  LOCKSTEP_Out(100) <= \<const0>\;
  LOCKSTEP_Out(101) <= \<const0>\;
  LOCKSTEP_Out(102) <= \<const0>\;
  LOCKSTEP_Out(103) <= \<const0>\;
  LOCKSTEP_Out(104) <= \<const0>\;
  LOCKSTEP_Out(105) <= \<const0>\;
  LOCKSTEP_Out(106) <= \<const0>\;
  LOCKSTEP_Out(107) <= \<const0>\;
  LOCKSTEP_Out(108) <= \<const0>\;
  LOCKSTEP_Out(109) <= \<const0>\;
  LOCKSTEP_Out(110) <= \<const0>\;
  LOCKSTEP_Out(111) <= \<const0>\;
  LOCKSTEP_Out(112) <= \<const0>\;
  LOCKSTEP_Out(113) <= \<const0>\;
  LOCKSTEP_Out(114) <= \<const0>\;
  LOCKSTEP_Out(115) <= \<const0>\;
  LOCKSTEP_Out(116) <= \<const0>\;
  LOCKSTEP_Out(117) <= \<const0>\;
  LOCKSTEP_Out(118) <= \<const0>\;
  LOCKSTEP_Out(119) <= \<const0>\;
  LOCKSTEP_Out(120) <= \<const0>\;
  LOCKSTEP_Out(121) <= \<const0>\;
  LOCKSTEP_Out(122) <= \<const0>\;
  LOCKSTEP_Out(123) <= \<const0>\;
  LOCKSTEP_Out(124) <= \<const0>\;
  LOCKSTEP_Out(125) <= \<const0>\;
  LOCKSTEP_Out(126) <= \<const0>\;
  LOCKSTEP_Out(127) <= \<const0>\;
  LOCKSTEP_Out(128) <= \<const0>\;
  LOCKSTEP_Out(129) <= \<const0>\;
  LOCKSTEP_Out(130) <= \<const0>\;
  LOCKSTEP_Out(131) <= \<const0>\;
  LOCKSTEP_Out(132 to 163) <= \^lockstep_out\(132 to 163);
  LOCKSTEP_Out(164) <= \<const0>\;
  LOCKSTEP_Out(165) <= \<const0>\;
  LOCKSTEP_Out(166) <= \<const0>\;
  LOCKSTEP_Out(167) <= \<const0>\;
  LOCKSTEP_Out(168) <= \<const0>\;
  LOCKSTEP_Out(169) <= \<const0>\;
  LOCKSTEP_Out(170) <= \<const0>\;
  LOCKSTEP_Out(171) <= \<const0>\;
  LOCKSTEP_Out(172) <= \<const0>\;
  LOCKSTEP_Out(173) <= \<const0>\;
  LOCKSTEP_Out(174) <= \<const0>\;
  LOCKSTEP_Out(175) <= \<const0>\;
  LOCKSTEP_Out(176) <= \<const0>\;
  LOCKSTEP_Out(177) <= \<const0>\;
  LOCKSTEP_Out(178) <= \<const0>\;
  LOCKSTEP_Out(179) <= \<const0>\;
  LOCKSTEP_Out(180) <= \<const0>\;
  LOCKSTEP_Out(181) <= \<const0>\;
  LOCKSTEP_Out(182) <= \<const0>\;
  LOCKSTEP_Out(183) <= \<const0>\;
  LOCKSTEP_Out(184) <= \<const0>\;
  LOCKSTEP_Out(185) <= \<const0>\;
  LOCKSTEP_Out(186) <= \<const0>\;
  LOCKSTEP_Out(187) <= \<const0>\;
  LOCKSTEP_Out(188) <= \<const0>\;
  LOCKSTEP_Out(189) <= \<const0>\;
  LOCKSTEP_Out(190) <= \<const0>\;
  LOCKSTEP_Out(191) <= \<const0>\;
  LOCKSTEP_Out(192) <= \<const0>\;
  LOCKSTEP_Out(193) <= \<const0>\;
  LOCKSTEP_Out(194) <= \<const0>\;
  LOCKSTEP_Out(195) <= \<const0>\;
  LOCKSTEP_Out(196 to 202) <= \^lockstep_out\(196 to 202);
  LOCKSTEP_Out(203) <= \<const0>\;
  LOCKSTEP_Out(204) <= \<const0>\;
  LOCKSTEP_Out(205) <= \<const0>\;
  LOCKSTEP_Out(206) <= \<const0>\;
  LOCKSTEP_Out(207) <= \<const0>\;
  LOCKSTEP_Out(208) <= \<const0>\;
  LOCKSTEP_Out(209) <= \<const0>\;
  LOCKSTEP_Out(210) <= \<const0>\;
  LOCKSTEP_Out(211) <= \<const0>\;
  LOCKSTEP_Out(212) <= \<const0>\;
  LOCKSTEP_Out(213) <= \<const0>\;
  LOCKSTEP_Out(214) <= \<const0>\;
  LOCKSTEP_Out(215) <= \<const0>\;
  LOCKSTEP_Out(216) <= \<const0>\;
  LOCKSTEP_Out(217) <= \<const0>\;
  LOCKSTEP_Out(218) <= \<const0>\;
  LOCKSTEP_Out(219) <= \<const0>\;
  LOCKSTEP_Out(220) <= \<const0>\;
  LOCKSTEP_Out(221) <= \<const0>\;
  LOCKSTEP_Out(222) <= \<const0>\;
  LOCKSTEP_Out(223) <= \<const0>\;
  LOCKSTEP_Out(224) <= \<const0>\;
  LOCKSTEP_Out(225) <= \<const0>\;
  LOCKSTEP_Out(226) <= \<const0>\;
  LOCKSTEP_Out(227) <= \<const0>\;
  LOCKSTEP_Out(228) <= \<const0>\;
  LOCKSTEP_Out(229) <= \<const0>\;
  LOCKSTEP_Out(230) <= \<const0>\;
  LOCKSTEP_Out(231) <= \<const0>\;
  LOCKSTEP_Out(232) <= \<const0>\;
  LOCKSTEP_Out(233) <= \<const0>\;
  LOCKSTEP_Out(234) <= \<const0>\;
  LOCKSTEP_Out(235) <= \<const0>\;
  LOCKSTEP_Out(236) <= \<const0>\;
  LOCKSTEP_Out(237) <= \<const0>\;
  LOCKSTEP_Out(238) <= \<const0>\;
  LOCKSTEP_Out(239) <= \<const0>\;
  LOCKSTEP_Out(240) <= \<const0>\;
  LOCKSTEP_Out(241) <= \<const0>\;
  LOCKSTEP_Out(242) <= \<const0>\;
  LOCKSTEP_Out(243) <= \<const0>\;
  LOCKSTEP_Out(244) <= \<const0>\;
  LOCKSTEP_Out(245) <= \<const0>\;
  LOCKSTEP_Out(246) <= \<const0>\;
  LOCKSTEP_Out(247) <= \<const0>\;
  LOCKSTEP_Out(248) <= \<const0>\;
  LOCKSTEP_Out(249) <= \<const0>\;
  LOCKSTEP_Out(250) <= \<const0>\;
  LOCKSTEP_Out(251) <= \<const0>\;
  LOCKSTEP_Out(252) <= \<const0>\;
  LOCKSTEP_Out(253) <= \<const0>\;
  LOCKSTEP_Out(254) <= \<const0>\;
  LOCKSTEP_Out(255) <= \<const0>\;
  LOCKSTEP_Out(256) <= \<const0>\;
  LOCKSTEP_Out(257) <= \<const0>\;
  LOCKSTEP_Out(258) <= \<const0>\;
  LOCKSTEP_Out(259) <= \<const0>\;
  LOCKSTEP_Out(260) <= \<const0>\;
  LOCKSTEP_Out(261) <= \<const0>\;
  LOCKSTEP_Out(262) <= \<const0>\;
  LOCKSTEP_Out(263) <= \<const0>\;
  LOCKSTEP_Out(264) <= \<const0>\;
  LOCKSTEP_Out(265) <= \<const0>\;
  LOCKSTEP_Out(266) <= \<const0>\;
  LOCKSTEP_Out(267) <= \<const0>\;
  LOCKSTEP_Out(268) <= \<const0>\;
  LOCKSTEP_Out(269) <= \<const0>\;
  LOCKSTEP_Out(270) <= \<const0>\;
  LOCKSTEP_Out(271) <= \<const0>\;
  LOCKSTEP_Out(272) <= \<const0>\;
  LOCKSTEP_Out(273) <= \<const0>\;
  LOCKSTEP_Out(274) <= \<const0>\;
  LOCKSTEP_Out(275) <= \<const0>\;
  LOCKSTEP_Out(276) <= \<const0>\;
  LOCKSTEP_Out(277) <= \<const0>\;
  LOCKSTEP_Out(278) <= \<const0>\;
  LOCKSTEP_Out(279) <= \<const0>\;
  LOCKSTEP_Out(280) <= \<const0>\;
  LOCKSTEP_Out(281) <= \<const0>\;
  LOCKSTEP_Out(282) <= \<const0>\;
  LOCKSTEP_Out(283) <= \<const0>\;
  LOCKSTEP_Out(284) <= \<const0>\;
  LOCKSTEP_Out(285) <= \<const0>\;
  LOCKSTEP_Out(286) <= \<const0>\;
  LOCKSTEP_Out(287) <= \<const0>\;
  LOCKSTEP_Out(288) <= \<const0>\;
  LOCKSTEP_Out(289) <= \<const0>\;
  LOCKSTEP_Out(290) <= \<const0>\;
  LOCKSTEP_Out(291) <= \<const0>\;
  LOCKSTEP_Out(292) <= \<const0>\;
  LOCKSTEP_Out(293) <= \<const0>\;
  LOCKSTEP_Out(294) <= \<const0>\;
  LOCKSTEP_Out(295) <= \<const0>\;
  LOCKSTEP_Out(296) <= \<const0>\;
  LOCKSTEP_Out(297) <= \<const0>\;
  LOCKSTEP_Out(298) <= \<const0>\;
  LOCKSTEP_Out(299) <= \<const0>\;
  LOCKSTEP_Out(300) <= \<const0>\;
  LOCKSTEP_Out(301) <= \<const0>\;
  LOCKSTEP_Out(302) <= \<const0>\;
  LOCKSTEP_Out(303) <= \<const0>\;
  LOCKSTEP_Out(304) <= \<const0>\;
  LOCKSTEP_Out(305) <= \<const0>\;
  LOCKSTEP_Out(306) <= \<const0>\;
  LOCKSTEP_Out(307) <= \<const0>\;
  LOCKSTEP_Out(308) <= \<const0>\;
  LOCKSTEP_Out(309) <= \<const0>\;
  LOCKSTEP_Out(310) <= \<const0>\;
  LOCKSTEP_Out(311) <= \<const0>\;
  LOCKSTEP_Out(312) <= \<const0>\;
  LOCKSTEP_Out(313) <= \<const0>\;
  LOCKSTEP_Out(314) <= \<const0>\;
  LOCKSTEP_Out(315) <= \<const0>\;
  LOCKSTEP_Out(316) <= \<const0>\;
  LOCKSTEP_Out(317) <= \<const0>\;
  LOCKSTEP_Out(318) <= \<const0>\;
  LOCKSTEP_Out(319) <= \<const0>\;
  LOCKSTEP_Out(320) <= \<const0>\;
  LOCKSTEP_Out(321) <= \<const0>\;
  LOCKSTEP_Out(322) <= \<const0>\;
  LOCKSTEP_Out(323) <= \<const0>\;
  LOCKSTEP_Out(324) <= \<const0>\;
  LOCKSTEP_Out(325) <= \<const0>\;
  LOCKSTEP_Out(326) <= \<const0>\;
  LOCKSTEP_Out(327) <= \<const0>\;
  LOCKSTEP_Out(328) <= \<const0>\;
  LOCKSTEP_Out(329) <= \<const0>\;
  LOCKSTEP_Out(330) <= \<const0>\;
  LOCKSTEP_Out(331) <= \<const0>\;
  LOCKSTEP_Out(332) <= \<const0>\;
  LOCKSTEP_Out(333) <= \<const0>\;
  LOCKSTEP_Out(334) <= \<const0>\;
  LOCKSTEP_Out(335) <= \<const0>\;
  LOCKSTEP_Out(336) <= \<const0>\;
  LOCKSTEP_Out(337) <= \<const0>\;
  LOCKSTEP_Out(338) <= \<const0>\;
  LOCKSTEP_Out(339) <= \<const0>\;
  LOCKSTEP_Out(340) <= \<const0>\;
  LOCKSTEP_Out(341) <= \<const0>\;
  LOCKSTEP_Out(342) <= \<const0>\;
  LOCKSTEP_Out(343) <= \<const0>\;
  LOCKSTEP_Out(344) <= \<const0>\;
  LOCKSTEP_Out(345) <= \<const0>\;
  LOCKSTEP_Out(346) <= \<const0>\;
  LOCKSTEP_Out(347) <= \<const0>\;
  LOCKSTEP_Out(348) <= \<const0>\;
  LOCKSTEP_Out(349) <= \<const0>\;
  LOCKSTEP_Out(350) <= \<const0>\;
  LOCKSTEP_Out(351) <= \<const0>\;
  LOCKSTEP_Out(352) <= \<const0>\;
  LOCKSTEP_Out(353) <= \<const0>\;
  LOCKSTEP_Out(354) <= \<const0>\;
  LOCKSTEP_Out(355) <= \<const0>\;
  LOCKSTEP_Out(356) <= \<const0>\;
  LOCKSTEP_Out(357) <= \<const0>\;
  LOCKSTEP_Out(358) <= \<const0>\;
  LOCKSTEP_Out(359) <= \<const0>\;
  LOCKSTEP_Out(360) <= \<const0>\;
  LOCKSTEP_Out(361) <= \<const0>\;
  LOCKSTEP_Out(362) <= \<const0>\;
  LOCKSTEP_Out(363) <= \<const0>\;
  LOCKSTEP_Out(364) <= \<const0>\;
  LOCKSTEP_Out(365) <= \<const0>\;
  LOCKSTEP_Out(366) <= \<const0>\;
  LOCKSTEP_Out(367) <= \<const0>\;
  LOCKSTEP_Out(368) <= \<const0>\;
  LOCKSTEP_Out(369) <= \<const0>\;
  LOCKSTEP_Out(370) <= \<const0>\;
  LOCKSTEP_Out(371) <= \<const0>\;
  LOCKSTEP_Out(372) <= \<const0>\;
  LOCKSTEP_Out(373) <= \<const0>\;
  LOCKSTEP_Out(374) <= \<const0>\;
  LOCKSTEP_Out(375) <= \<const0>\;
  LOCKSTEP_Out(376) <= \<const0>\;
  LOCKSTEP_Out(377) <= \<const0>\;
  LOCKSTEP_Out(378) <= \<const0>\;
  LOCKSTEP_Out(379) <= \<const0>\;
  LOCKSTEP_Out(380) <= \<const0>\;
  LOCKSTEP_Out(381) <= \<const0>\;
  LOCKSTEP_Out(382) <= \<const0>\;
  LOCKSTEP_Out(383) <= \<const0>\;
  LOCKSTEP_Out(384) <= \<const0>\;
  LOCKSTEP_Out(385) <= \<const0>\;
  LOCKSTEP_Out(386) <= \<const0>\;
  LOCKSTEP_Out(387) <= \<const0>\;
  LOCKSTEP_Out(388) <= \<const0>\;
  LOCKSTEP_Out(389) <= \<const0>\;
  LOCKSTEP_Out(390) <= \<const0>\;
  LOCKSTEP_Out(391) <= \<const0>\;
  LOCKSTEP_Out(392) <= \<const0>\;
  LOCKSTEP_Out(393) <= \<const0>\;
  LOCKSTEP_Out(394) <= \<const0>\;
  LOCKSTEP_Out(395) <= \<const0>\;
  LOCKSTEP_Out(396) <= \<const0>\;
  LOCKSTEP_Out(397) <= \<const0>\;
  LOCKSTEP_Out(398) <= \<const0>\;
  LOCKSTEP_Out(399) <= \<const0>\;
  LOCKSTEP_Out(400) <= \<const0>\;
  LOCKSTEP_Out(401) <= \<const0>\;
  LOCKSTEP_Out(402) <= \<const0>\;
  LOCKSTEP_Out(403) <= \<const0>\;
  LOCKSTEP_Out(404) <= \<const0>\;
  LOCKSTEP_Out(405) <= \<const0>\;
  LOCKSTEP_Out(406) <= \<const0>\;
  LOCKSTEP_Out(407) <= \<const0>\;
  LOCKSTEP_Out(408) <= \<const0>\;
  LOCKSTEP_Out(409) <= \<const0>\;
  LOCKSTEP_Out(410) <= \<const0>\;
  LOCKSTEP_Out(411) <= \<const0>\;
  LOCKSTEP_Out(412) <= \<const0>\;
  LOCKSTEP_Out(413) <= \<const0>\;
  LOCKSTEP_Out(414) <= \<const0>\;
  LOCKSTEP_Out(415) <= \<const0>\;
  LOCKSTEP_Out(416) <= \<const0>\;
  LOCKSTEP_Out(417) <= \<const0>\;
  LOCKSTEP_Out(418) <= \<const0>\;
  LOCKSTEP_Out(419) <= \<const0>\;
  LOCKSTEP_Out(420) <= \<const0>\;
  LOCKSTEP_Out(421) <= \<const0>\;
  LOCKSTEP_Out(422) <= \<const0>\;
  LOCKSTEP_Out(423) <= \<const0>\;
  LOCKSTEP_Out(424) <= \<const0>\;
  LOCKSTEP_Out(425) <= \<const0>\;
  LOCKSTEP_Out(426) <= \<const0>\;
  LOCKSTEP_Out(427) <= \<const0>\;
  LOCKSTEP_Out(428) <= \<const0>\;
  LOCKSTEP_Out(429) <= \<const0>\;
  LOCKSTEP_Out(430) <= \<const0>\;
  LOCKSTEP_Out(431) <= \<const0>\;
  LOCKSTEP_Out(432) <= \<const0>\;
  LOCKSTEP_Out(433) <= \<const0>\;
  LOCKSTEP_Out(434) <= \<const0>\;
  LOCKSTEP_Out(435) <= \<const0>\;
  LOCKSTEP_Out(436) <= \<const0>\;
  LOCKSTEP_Out(437) <= \<const0>\;
  LOCKSTEP_Out(438) <= \<const0>\;
  LOCKSTEP_Out(439) <= \<const0>\;
  LOCKSTEP_Out(440) <= \<const0>\;
  LOCKSTEP_Out(441) <= \<const0>\;
  LOCKSTEP_Out(442) <= \<const0>\;
  LOCKSTEP_Out(443) <= \<const0>\;
  LOCKSTEP_Out(444) <= \<const0>\;
  LOCKSTEP_Out(445) <= \<const0>\;
  LOCKSTEP_Out(446) <= \<const0>\;
  LOCKSTEP_Out(447) <= \<const0>\;
  LOCKSTEP_Out(448) <= \<const0>\;
  LOCKSTEP_Out(449) <= \<const0>\;
  LOCKSTEP_Out(450) <= \<const0>\;
  LOCKSTEP_Out(451) <= \<const0>\;
  LOCKSTEP_Out(452) <= \<const0>\;
  LOCKSTEP_Out(453) <= \<const0>\;
  LOCKSTEP_Out(454) <= \<const0>\;
  LOCKSTEP_Out(455) <= \<const0>\;
  LOCKSTEP_Out(456) <= \<const0>\;
  LOCKSTEP_Out(457) <= \<const0>\;
  LOCKSTEP_Out(458) <= \<const0>\;
  LOCKSTEP_Out(459) <= \<const0>\;
  LOCKSTEP_Out(460) <= \<const0>\;
  LOCKSTEP_Out(461) <= \<const0>\;
  LOCKSTEP_Out(462) <= \<const0>\;
  LOCKSTEP_Out(463) <= \<const0>\;
  LOCKSTEP_Out(464) <= \<const0>\;
  LOCKSTEP_Out(465) <= \<const0>\;
  LOCKSTEP_Out(466 to 497) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(498) <= \<const0>\;
  LOCKSTEP_Out(499) <= \<const0>\;
  LOCKSTEP_Out(500) <= \<const0>\;
  LOCKSTEP_Out(501) <= \<const0>\;
  LOCKSTEP_Out(502) <= \<const0>\;
  LOCKSTEP_Out(503) <= \<const0>\;
  LOCKSTEP_Out(504) <= \<const0>\;
  LOCKSTEP_Out(505) <= \<const0>\;
  LOCKSTEP_Out(506) <= \<const0>\;
  LOCKSTEP_Out(507) <= \<const0>\;
  LOCKSTEP_Out(508) <= \<const0>\;
  LOCKSTEP_Out(509) <= \<const0>\;
  LOCKSTEP_Out(510) <= \<const0>\;
  LOCKSTEP_Out(511) <= \<const0>\;
  LOCKSTEP_Out(512) <= \<const0>\;
  LOCKSTEP_Out(513) <= \<const0>\;
  LOCKSTEP_Out(514) <= \<const0>\;
  LOCKSTEP_Out(515) <= \<const0>\;
  LOCKSTEP_Out(516) <= \<const0>\;
  LOCKSTEP_Out(517) <= \<const0>\;
  LOCKSTEP_Out(518) <= \<const0>\;
  LOCKSTEP_Out(519) <= \<const0>\;
  LOCKSTEP_Out(520) <= \<const0>\;
  LOCKSTEP_Out(521) <= \<const0>\;
  LOCKSTEP_Out(522) <= \<const0>\;
  LOCKSTEP_Out(523) <= \<const0>\;
  LOCKSTEP_Out(524) <= \<const0>\;
  LOCKSTEP_Out(525) <= \<const0>\;
  LOCKSTEP_Out(526) <= \<const0>\;
  LOCKSTEP_Out(527) <= \<const0>\;
  LOCKSTEP_Out(528) <= \<const0>\;
  LOCKSTEP_Out(529) <= \<const0>\;
  LOCKSTEP_Out(530) <= \<const0>\;
  LOCKSTEP_Out(531) <= \<const0>\;
  LOCKSTEP_Out(532) <= \<const0>\;
  LOCKSTEP_Out(533) <= \<const0>\;
  LOCKSTEP_Out(534) <= \<const0>\;
  LOCKSTEP_Out(535) <= \<const0>\;
  LOCKSTEP_Out(536) <= \<const0>\;
  LOCKSTEP_Out(537) <= \<const0>\;
  LOCKSTEP_Out(538) <= \<const0>\;
  LOCKSTEP_Out(539) <= \^lockstep_out\(542);
  LOCKSTEP_Out(540) <= \<const0>\;
  LOCKSTEP_Out(541) <= \<const0>\;
  LOCKSTEP_Out(542) <= \^lockstep_out\(542);
  LOCKSTEP_Out(543) <= \<const0>\;
  LOCKSTEP_Out(544) <= \<const0>\;
  LOCKSTEP_Out(545) <= \<const0>\;
  LOCKSTEP_Out(546) <= \^lockstep_out\(542);
  LOCKSTEP_Out(547) <= \<const0>\;
  LOCKSTEP_Out(548) <= \<const0>\;
  LOCKSTEP_Out(549) <= \<const0>\;
  LOCKSTEP_Out(550) <= \<const0>\;
  LOCKSTEP_Out(551) <= \^lockstep_out\(542);
  LOCKSTEP_Out(552) <= \<const0>\;
  LOCKSTEP_Out(553) <= \<const0>\;
  LOCKSTEP_Out(554) <= \<const0>\;
  LOCKSTEP_Out(555 to 587) <= \^lockstep_out\(555 to 587);
  LOCKSTEP_Out(588) <= \<const0>\;
  LOCKSTEP_Out(589) <= \<const0>\;
  LOCKSTEP_Out(590) <= \<const0>\;
  LOCKSTEP_Out(591) <= \<const0>\;
  LOCKSTEP_Out(592) <= \<const0>\;
  LOCKSTEP_Out(593) <= \<const0>\;
  LOCKSTEP_Out(594) <= \<const0>\;
  LOCKSTEP_Out(595) <= \<const0>\;
  LOCKSTEP_Out(596) <= \<const0>\;
  LOCKSTEP_Out(597) <= \<const0>\;
  LOCKSTEP_Out(598) <= \<const0>\;
  LOCKSTEP_Out(599) <= \<const0>\;
  LOCKSTEP_Out(600) <= \<const0>\;
  LOCKSTEP_Out(601) <= \<const0>\;
  LOCKSTEP_Out(602) <= \<const0>\;
  LOCKSTEP_Out(603) <= \<const0>\;
  LOCKSTEP_Out(604) <= \<const0>\;
  LOCKSTEP_Out(605) <= \<const0>\;
  LOCKSTEP_Out(606) <= \<const0>\;
  LOCKSTEP_Out(607) <= \<const0>\;
  LOCKSTEP_Out(608) <= \<const0>\;
  LOCKSTEP_Out(609) <= \<const0>\;
  LOCKSTEP_Out(610) <= \<const0>\;
  LOCKSTEP_Out(611) <= \<const0>\;
  LOCKSTEP_Out(612) <= \<const0>\;
  LOCKSTEP_Out(613) <= \<const0>\;
  LOCKSTEP_Out(614) <= \<const0>\;
  LOCKSTEP_Out(615) <= \<const0>\;
  LOCKSTEP_Out(616) <= \<const0>\;
  LOCKSTEP_Out(617) <= \<const0>\;
  LOCKSTEP_Out(618) <= \<const0>\;
  LOCKSTEP_Out(619) <= \<const0>\;
  LOCKSTEP_Out(620 to 623) <= \^lockstep_out\(620 to 623);
  LOCKSTEP_Out(624) <= \<const0>\;
  LOCKSTEP_Out(625) <= \<const0>\;
  LOCKSTEP_Out(626) <= \<const0>\;
  LOCKSTEP_Out(627) <= \<const0>\;
  LOCKSTEP_Out(628) <= \^lockstep_out\(542);
  LOCKSTEP_Out(629 to 630) <= \^lockstep_out\(629 to 630);
  LOCKSTEP_Out(631) <= \<const0>\;
  LOCKSTEP_Out(632 to 663) <= \^lockstep_out\(632 to 663);
  LOCKSTEP_Out(664) <= \<const0>\;
  LOCKSTEP_Out(665) <= \<const0>\;
  LOCKSTEP_Out(666) <= \<const0>\;
  LOCKSTEP_Out(667) <= \<const0>\;
  LOCKSTEP_Out(668) <= \<const0>\;
  LOCKSTEP_Out(669) <= \<const0>\;
  LOCKSTEP_Out(670) <= \<const0>\;
  LOCKSTEP_Out(671) <= \<const0>\;
  LOCKSTEP_Out(672) <= \<const0>\;
  LOCKSTEP_Out(673) <= \<const0>\;
  LOCKSTEP_Out(674) <= \<const0>\;
  LOCKSTEP_Out(675) <= \<const0>\;
  LOCKSTEP_Out(676) <= \<const0>\;
  LOCKSTEP_Out(677) <= \<const0>\;
  LOCKSTEP_Out(678) <= \<const0>\;
  LOCKSTEP_Out(679) <= \<const0>\;
  LOCKSTEP_Out(680) <= \<const0>\;
  LOCKSTEP_Out(681) <= \<const0>\;
  LOCKSTEP_Out(682) <= \<const0>\;
  LOCKSTEP_Out(683) <= \<const0>\;
  LOCKSTEP_Out(684) <= \<const0>\;
  LOCKSTEP_Out(685) <= \<const0>\;
  LOCKSTEP_Out(686) <= \<const0>\;
  LOCKSTEP_Out(687) <= \<const0>\;
  LOCKSTEP_Out(688) <= \<const0>\;
  LOCKSTEP_Out(689) <= \<const0>\;
  LOCKSTEP_Out(690) <= \<const0>\;
  LOCKSTEP_Out(691) <= \<const0>\;
  LOCKSTEP_Out(692) <= \<const0>\;
  LOCKSTEP_Out(693) <= \<const0>\;
  LOCKSTEP_Out(694) <= \<const0>\;
  LOCKSTEP_Out(695) <= \<const0>\;
  LOCKSTEP_Out(696) <= \<const0>\;
  LOCKSTEP_Out(697) <= \<const0>\;
  LOCKSTEP_Out(698) <= \<const0>\;
  LOCKSTEP_Out(699) <= \<const0>\;
  LOCKSTEP_Out(700) <= \<const0>\;
  LOCKSTEP_Out(701) <= \<const0>\;
  LOCKSTEP_Out(702) <= \<const0>\;
  LOCKSTEP_Out(703) <= \<const0>\;
  LOCKSTEP_Out(704) <= \<const0>\;
  LOCKSTEP_Out(705) <= \^lockstep_out\(542);
  LOCKSTEP_Out(706) <= \<const0>\;
  LOCKSTEP_Out(707) <= \<const0>\;
  LOCKSTEP_Out(708) <= \^lockstep_out\(542);
  LOCKSTEP_Out(709) <= \<const0>\;
  LOCKSTEP_Out(710) <= \<const0>\;
  LOCKSTEP_Out(711) <= \<const0>\;
  LOCKSTEP_Out(712) <= \^lockstep_out\(542);
  LOCKSTEP_Out(713) <= \<const0>\;
  LOCKSTEP_Out(714) <= \<const0>\;
  LOCKSTEP_Out(715) <= \<const0>\;
  LOCKSTEP_Out(716) <= \<const0>\;
  LOCKSTEP_Out(717) <= \^lockstep_out\(542);
  LOCKSTEP_Out(718) <= \<const0>\;
  LOCKSTEP_Out(719) <= \<const0>\;
  LOCKSTEP_Out(720) <= \<const0>\;
  LOCKSTEP_Out(721 to 722) <= \^lockstep_out\(721 to 722);
  LOCKSTEP_Out(723) <= \<const0>\;
  LOCKSTEP_Out(724) <= \<const0>\;
  LOCKSTEP_Out(725) <= \<const0>\;
  LOCKSTEP_Out(726) <= \<const0>\;
  LOCKSTEP_Out(727) <= \<const0>\;
  LOCKSTEP_Out(728) <= \<const0>\;
  LOCKSTEP_Out(729) <= \<const0>\;
  LOCKSTEP_Out(730) <= \<const0>\;
  LOCKSTEP_Out(731) <= \<const0>\;
  LOCKSTEP_Out(732) <= \<const0>\;
  LOCKSTEP_Out(733) <= \<const0>\;
  LOCKSTEP_Out(734) <= \<const0>\;
  LOCKSTEP_Out(735) <= \<const0>\;
  LOCKSTEP_Out(736) <= \<const0>\;
  LOCKSTEP_Out(737) <= \<const0>\;
  LOCKSTEP_Out(738) <= \<const0>\;
  LOCKSTEP_Out(739) <= \<const0>\;
  LOCKSTEP_Out(740) <= \<const0>\;
  LOCKSTEP_Out(741) <= \<const0>\;
  LOCKSTEP_Out(742) <= \<const0>\;
  LOCKSTEP_Out(743) <= \<const0>\;
  LOCKSTEP_Out(744) <= \<const0>\;
  LOCKSTEP_Out(745) <= \<const0>\;
  LOCKSTEP_Out(746) <= \<const0>\;
  LOCKSTEP_Out(747) <= \<const0>\;
  LOCKSTEP_Out(748) <= \<const0>\;
  LOCKSTEP_Out(749) <= \<const0>\;
  LOCKSTEP_Out(750) <= \<const0>\;
  LOCKSTEP_Out(751) <= \<const0>\;
  LOCKSTEP_Out(752) <= \<const0>\;
  LOCKSTEP_Out(753) <= \<const0>\;
  LOCKSTEP_Out(754) <= \<const0>\;
  LOCKSTEP_Out(755) <= \<const0>\;
  LOCKSTEP_Out(756) <= \<const0>\;
  LOCKSTEP_Out(757) <= \<const0>\;
  LOCKSTEP_Out(758) <= \<const0>\;
  LOCKSTEP_Out(759) <= \<const0>\;
  LOCKSTEP_Out(760) <= \<const0>\;
  LOCKSTEP_Out(761) <= \<const0>\;
  LOCKSTEP_Out(762) <= \<const0>\;
  LOCKSTEP_Out(763) <= \<const0>\;
  LOCKSTEP_Out(764) <= \<const0>\;
  LOCKSTEP_Out(765) <= \<const0>\;
  LOCKSTEP_Out(766) <= \<const0>\;
  LOCKSTEP_Out(767) <= \<const0>\;
  LOCKSTEP_Out(768) <= \<const0>\;
  LOCKSTEP_Out(769) <= \<const0>\;
  LOCKSTEP_Out(770) <= \<const0>\;
  LOCKSTEP_Out(771) <= \<const0>\;
  LOCKSTEP_Out(772) <= \<const0>\;
  LOCKSTEP_Out(773) <= \<const0>\;
  LOCKSTEP_Out(774) <= \<const0>\;
  LOCKSTEP_Out(775) <= \<const0>\;
  LOCKSTEP_Out(776) <= \<const0>\;
  LOCKSTEP_Out(777) <= \<const0>\;
  LOCKSTEP_Out(778) <= \<const0>\;
  LOCKSTEP_Out(779) <= \<const0>\;
  LOCKSTEP_Out(780) <= \<const0>\;
  LOCKSTEP_Out(781) <= \<const0>\;
  LOCKSTEP_Out(782) <= \<const0>\;
  LOCKSTEP_Out(783) <= \<const0>\;
  LOCKSTEP_Out(784) <= \<const0>\;
  LOCKSTEP_Out(785) <= \<const0>\;
  LOCKSTEP_Out(786) <= \<const0>\;
  LOCKSTEP_Out(787) <= \<const0>\;
  LOCKSTEP_Out(788) <= \<const0>\;
  LOCKSTEP_Out(789) <= \<const0>\;
  LOCKSTEP_Out(790) <= \<const0>\;
  LOCKSTEP_Out(791) <= \<const0>\;
  LOCKSTEP_Out(792) <= \<const0>\;
  LOCKSTEP_Out(793) <= \<const0>\;
  LOCKSTEP_Out(794) <= \<const0>\;
  LOCKSTEP_Out(795) <= \<const0>\;
  LOCKSTEP_Out(796) <= \<const0>\;
  LOCKSTEP_Out(797) <= \<const0>\;
  LOCKSTEP_Out(798) <= \<const0>\;
  LOCKSTEP_Out(799) <= \<const0>\;
  LOCKSTEP_Out(800) <= \<const0>\;
  LOCKSTEP_Out(801) <= \<const0>\;
  LOCKSTEP_Out(802) <= \<const0>\;
  LOCKSTEP_Out(803) <= \<const0>\;
  LOCKSTEP_Out(804) <= \<const0>\;
  LOCKSTEP_Out(805) <= \<const0>\;
  LOCKSTEP_Out(806) <= \<const0>\;
  LOCKSTEP_Out(807) <= \<const0>\;
  LOCKSTEP_Out(808) <= \<const0>\;
  LOCKSTEP_Out(809) <= \<const0>\;
  LOCKSTEP_Out(810) <= \<const0>\;
  LOCKSTEP_Out(811) <= \<const0>\;
  LOCKSTEP_Out(812) <= \<const0>\;
  LOCKSTEP_Out(813) <= \<const0>\;
  LOCKSTEP_Out(814) <= \<const0>\;
  LOCKSTEP_Out(815) <= \<const0>\;
  LOCKSTEP_Out(816) <= \<const0>\;
  LOCKSTEP_Out(817) <= \<const0>\;
  LOCKSTEP_Out(818) <= \<const0>\;
  LOCKSTEP_Out(819) <= \<const0>\;
  LOCKSTEP_Out(820) <= \<const0>\;
  LOCKSTEP_Out(821) <= \<const0>\;
  LOCKSTEP_Out(822) <= \<const0>\;
  LOCKSTEP_Out(823) <= \<const0>\;
  LOCKSTEP_Out(824) <= \<const0>\;
  LOCKSTEP_Out(825) <= \<const0>\;
  LOCKSTEP_Out(826) <= \<const0>\;
  LOCKSTEP_Out(827) <= \<const0>\;
  LOCKSTEP_Out(828) <= \<const0>\;
  LOCKSTEP_Out(829) <= \<const0>\;
  LOCKSTEP_Out(830) <= \<const0>\;
  LOCKSTEP_Out(831) <= \<const0>\;
  LOCKSTEP_Out(832) <= \<const0>\;
  LOCKSTEP_Out(833) <= \<const0>\;
  LOCKSTEP_Out(834) <= \<const0>\;
  LOCKSTEP_Out(835) <= \<const0>\;
  LOCKSTEP_Out(836) <= \<const0>\;
  LOCKSTEP_Out(837) <= \<const0>\;
  LOCKSTEP_Out(838) <= \<const0>\;
  LOCKSTEP_Out(839) <= \<const0>\;
  LOCKSTEP_Out(840) <= \<const0>\;
  LOCKSTEP_Out(841) <= \<const0>\;
  LOCKSTEP_Out(842) <= \<const0>\;
  LOCKSTEP_Out(843) <= \<const0>\;
  LOCKSTEP_Out(844) <= \<const0>\;
  LOCKSTEP_Out(845) <= \<const0>\;
  LOCKSTEP_Out(846) <= \<const0>\;
  LOCKSTEP_Out(847) <= \<const0>\;
  LOCKSTEP_Out(848) <= \<const0>\;
  LOCKSTEP_Out(849) <= \<const0>\;
  LOCKSTEP_Out(850) <= \<const0>\;
  LOCKSTEP_Out(851) <= \<const0>\;
  LOCKSTEP_Out(852) <= \<const0>\;
  LOCKSTEP_Out(853) <= \<const0>\;
  LOCKSTEP_Out(854) <= \<const0>\;
  LOCKSTEP_Out(855) <= \<const0>\;
  LOCKSTEP_Out(856) <= \<const0>\;
  LOCKSTEP_Out(857) <= \<const0>\;
  LOCKSTEP_Out(858) <= \<const0>\;
  LOCKSTEP_Out(859) <= \<const0>\;
  LOCKSTEP_Out(860) <= \<const0>\;
  LOCKSTEP_Out(861) <= \<const0>\;
  LOCKSTEP_Out(862) <= \<const0>\;
  LOCKSTEP_Out(863) <= \<const0>\;
  LOCKSTEP_Out(864) <= \<const0>\;
  LOCKSTEP_Out(865) <= \<const0>\;
  LOCKSTEP_Out(866) <= \<const0>\;
  LOCKSTEP_Out(867) <= \<const0>\;
  LOCKSTEP_Out(868) <= \<const0>\;
  LOCKSTEP_Out(869) <= \<const0>\;
  LOCKSTEP_Out(870) <= \<const0>\;
  LOCKSTEP_Out(871) <= \<const0>\;
  LOCKSTEP_Out(872) <= \<const0>\;
  LOCKSTEP_Out(873) <= \<const0>\;
  LOCKSTEP_Out(874) <= \<const0>\;
  LOCKSTEP_Out(875) <= \<const0>\;
  LOCKSTEP_Out(876) <= \<const0>\;
  LOCKSTEP_Out(877) <= \<const0>\;
  LOCKSTEP_Out(878) <= \<const0>\;
  LOCKSTEP_Out(879) <= \<const0>\;
  LOCKSTEP_Out(880) <= \<const0>\;
  LOCKSTEP_Out(881) <= \<const0>\;
  LOCKSTEP_Out(882) <= \<const0>\;
  LOCKSTEP_Out(883) <= \<const0>\;
  LOCKSTEP_Out(884) <= \<const0>\;
  LOCKSTEP_Out(885) <= \<const0>\;
  LOCKSTEP_Out(886) <= \<const0>\;
  LOCKSTEP_Out(887) <= \<const0>\;
  LOCKSTEP_Out(888) <= \<const0>\;
  LOCKSTEP_Out(889) <= \<const0>\;
  LOCKSTEP_Out(890) <= \<const0>\;
  LOCKSTEP_Out(891) <= \<const0>\;
  LOCKSTEP_Out(892) <= \<const0>\;
  LOCKSTEP_Out(893) <= \<const0>\;
  LOCKSTEP_Out(894) <= \<const0>\;
  LOCKSTEP_Out(895) <= \<const0>\;
  LOCKSTEP_Out(896) <= \<const0>\;
  LOCKSTEP_Out(897) <= \<const0>\;
  LOCKSTEP_Out(898) <= \<const0>\;
  LOCKSTEP_Out(899) <= \<const0>\;
  LOCKSTEP_Out(900) <= \<const0>\;
  LOCKSTEP_Out(901) <= \<const0>\;
  LOCKSTEP_Out(902) <= \<const0>\;
  LOCKSTEP_Out(903) <= \<const0>\;
  LOCKSTEP_Out(904) <= \<const0>\;
  LOCKSTEP_Out(905) <= \<const0>\;
  LOCKSTEP_Out(906) <= \<const0>\;
  LOCKSTEP_Out(907) <= \<const0>\;
  LOCKSTEP_Out(908) <= \<const0>\;
  LOCKSTEP_Out(909) <= \<const0>\;
  LOCKSTEP_Out(910) <= \<const0>\;
  LOCKSTEP_Out(911) <= \<const0>\;
  LOCKSTEP_Out(912) <= \<const0>\;
  LOCKSTEP_Out(913) <= \<const0>\;
  LOCKSTEP_Out(914) <= \<const0>\;
  LOCKSTEP_Out(915) <= \<const0>\;
  LOCKSTEP_Out(916) <= \<const0>\;
  LOCKSTEP_Out(917) <= \<const0>\;
  LOCKSTEP_Out(918) <= \<const0>\;
  LOCKSTEP_Out(919) <= \<const0>\;
  LOCKSTEP_Out(920) <= \<const0>\;
  LOCKSTEP_Out(921) <= \<const0>\;
  LOCKSTEP_Out(922) <= \<const0>\;
  LOCKSTEP_Out(923) <= \<const0>\;
  LOCKSTEP_Out(924) <= \<const0>\;
  LOCKSTEP_Out(925) <= \<const0>\;
  LOCKSTEP_Out(926) <= \<const0>\;
  LOCKSTEP_Out(927) <= \<const0>\;
  LOCKSTEP_Out(928) <= \<const0>\;
  LOCKSTEP_Out(929) <= \<const0>\;
  LOCKSTEP_Out(930) <= \<const0>\;
  LOCKSTEP_Out(931) <= \<const0>\;
  LOCKSTEP_Out(932) <= \<const0>\;
  LOCKSTEP_Out(933) <= \<const0>\;
  LOCKSTEP_Out(934) <= \<const0>\;
  LOCKSTEP_Out(935) <= \<const0>\;
  LOCKSTEP_Out(936) <= \<const0>\;
  LOCKSTEP_Out(937) <= \<const0>\;
  LOCKSTEP_Out(938) <= \<const0>\;
  LOCKSTEP_Out(939) <= \<const0>\;
  LOCKSTEP_Out(940) <= \<const0>\;
  LOCKSTEP_Out(941) <= \<const0>\;
  LOCKSTEP_Out(942) <= \<const0>\;
  LOCKSTEP_Out(943) <= \<const0>\;
  LOCKSTEP_Out(944) <= \<const0>\;
  LOCKSTEP_Out(945) <= \<const0>\;
  LOCKSTEP_Out(946) <= \<const0>\;
  LOCKSTEP_Out(947) <= \<const0>\;
  LOCKSTEP_Out(948) <= \<const0>\;
  LOCKSTEP_Out(949) <= \<const0>\;
  LOCKSTEP_Out(950) <= \<const0>\;
  LOCKSTEP_Out(951) <= \<const0>\;
  LOCKSTEP_Out(952) <= \<const0>\;
  LOCKSTEP_Out(953) <= \<const0>\;
  LOCKSTEP_Out(954) <= \<const0>\;
  LOCKSTEP_Out(955) <= \<const0>\;
  LOCKSTEP_Out(956) <= \<const0>\;
  LOCKSTEP_Out(957) <= \<const0>\;
  LOCKSTEP_Out(958) <= \<const0>\;
  LOCKSTEP_Out(959) <= \<const0>\;
  LOCKSTEP_Out(960) <= \<const0>\;
  LOCKSTEP_Out(961) <= \<const0>\;
  LOCKSTEP_Out(962) <= \<const0>\;
  LOCKSTEP_Out(963) <= \<const0>\;
  LOCKSTEP_Out(964) <= \<const0>\;
  LOCKSTEP_Out(965) <= \<const0>\;
  LOCKSTEP_Out(966) <= \<const0>\;
  LOCKSTEP_Out(967) <= \<const0>\;
  LOCKSTEP_Out(968) <= \<const0>\;
  LOCKSTEP_Out(969) <= \<const0>\;
  LOCKSTEP_Out(970) <= \<const0>\;
  LOCKSTEP_Out(971) <= \<const0>\;
  LOCKSTEP_Out(972) <= \<const0>\;
  LOCKSTEP_Out(973) <= \<const0>\;
  LOCKSTEP_Out(974) <= \<const0>\;
  LOCKSTEP_Out(975) <= \<const0>\;
  LOCKSTEP_Out(976) <= \<const0>\;
  LOCKSTEP_Out(977) <= \<const0>\;
  LOCKSTEP_Out(978) <= \<const0>\;
  LOCKSTEP_Out(979) <= \<const0>\;
  LOCKSTEP_Out(980) <= \<const0>\;
  LOCKSTEP_Out(981) <= \<const0>\;
  LOCKSTEP_Out(982) <= \<const0>\;
  LOCKSTEP_Out(983) <= \<const0>\;
  LOCKSTEP_Out(984) <= \<const0>\;
  LOCKSTEP_Out(985) <= \<const0>\;
  LOCKSTEP_Out(986) <= \<const0>\;
  LOCKSTEP_Out(987) <= \<const0>\;
  LOCKSTEP_Out(988) <= \<const0>\;
  LOCKSTEP_Out(989) <= \<const0>\;
  LOCKSTEP_Out(990) <= \<const0>\;
  LOCKSTEP_Out(991) <= \<const0>\;
  LOCKSTEP_Out(992) <= \<const0>\;
  LOCKSTEP_Out(993) <= \<const0>\;
  LOCKSTEP_Out(994) <= \<const0>\;
  LOCKSTEP_Out(995) <= \<const0>\;
  LOCKSTEP_Out(996) <= \<const0>\;
  LOCKSTEP_Out(997) <= \<const0>\;
  LOCKSTEP_Out(998) <= \<const0>\;
  LOCKSTEP_Out(999) <= \<const0>\;
  LOCKSTEP_Out(1000) <= \<const0>\;
  LOCKSTEP_Out(1001) <= \<const0>\;
  LOCKSTEP_Out(1002) <= \<const0>\;
  LOCKSTEP_Out(1003) <= \<const0>\;
  LOCKSTEP_Out(1004) <= \<const0>\;
  LOCKSTEP_Out(1005) <= \<const0>\;
  LOCKSTEP_Out(1006) <= \<const0>\;
  LOCKSTEP_Out(1007) <= \<const0>\;
  LOCKSTEP_Out(1008) <= \<const0>\;
  LOCKSTEP_Out(1009) <= \<const0>\;
  LOCKSTEP_Out(1010) <= \<const0>\;
  LOCKSTEP_Out(1011) <= \<const0>\;
  LOCKSTEP_Out(1012) <= \<const0>\;
  LOCKSTEP_Out(1013) <= \<const0>\;
  LOCKSTEP_Out(1014) <= \<const0>\;
  LOCKSTEP_Out(1015) <= \<const0>\;
  LOCKSTEP_Out(1016) <= \<const0>\;
  LOCKSTEP_Out(1017) <= \<const0>\;
  LOCKSTEP_Out(1018) <= \<const0>\;
  LOCKSTEP_Out(1019) <= \<const0>\;
  LOCKSTEP_Out(1020) <= \<const0>\;
  LOCKSTEP_Out(1021) <= \<const0>\;
  LOCKSTEP_Out(1022) <= \<const0>\;
  LOCKSTEP_Out(1023) <= \<const0>\;
  LOCKSTEP_Out(1024) <= \<const0>\;
  LOCKSTEP_Out(1025) <= \<const0>\;
  LOCKSTEP_Out(1026) <= \<const0>\;
  LOCKSTEP_Out(1027) <= \<const0>\;
  LOCKSTEP_Out(1028) <= \<const0>\;
  LOCKSTEP_Out(1029) <= \<const0>\;
  LOCKSTEP_Out(1030) <= \<const0>\;
  LOCKSTEP_Out(1031) <= \<const0>\;
  LOCKSTEP_Out(1032) <= \<const0>\;
  LOCKSTEP_Out(1033) <= \<const0>\;
  LOCKSTEP_Out(1034) <= \<const0>\;
  LOCKSTEP_Out(1035) <= \<const0>\;
  LOCKSTEP_Out(1036) <= \<const0>\;
  LOCKSTEP_Out(1037) <= \<const0>\;
  LOCKSTEP_Out(1038) <= \<const0>\;
  LOCKSTEP_Out(1039) <= \<const0>\;
  LOCKSTEP_Out(1040) <= \<const0>\;
  LOCKSTEP_Out(1041) <= \<const0>\;
  LOCKSTEP_Out(1042) <= \<const0>\;
  LOCKSTEP_Out(1043) <= \<const0>\;
  LOCKSTEP_Out(1044) <= \<const0>\;
  LOCKSTEP_Out(1045) <= \<const0>\;
  LOCKSTEP_Out(1046) <= \<const0>\;
  LOCKSTEP_Out(1047) <= \<const0>\;
  LOCKSTEP_Out(1048) <= \<const0>\;
  LOCKSTEP_Out(1049) <= \<const0>\;
  LOCKSTEP_Out(1050) <= \<const0>\;
  LOCKSTEP_Out(1051) <= \<const0>\;
  LOCKSTEP_Out(1052) <= \<const0>\;
  LOCKSTEP_Out(1053) <= \<const0>\;
  LOCKSTEP_Out(1054) <= \<const0>\;
  LOCKSTEP_Out(1055) <= \<const0>\;
  LOCKSTEP_Out(1056) <= \<const0>\;
  LOCKSTEP_Out(1057) <= \<const0>\;
  LOCKSTEP_Out(1058) <= \<const0>\;
  LOCKSTEP_Out(1059) <= \<const0>\;
  LOCKSTEP_Out(1060) <= \<const0>\;
  LOCKSTEP_Out(1061) <= \<const0>\;
  LOCKSTEP_Out(1062) <= \<const0>\;
  LOCKSTEP_Out(1063) <= \<const0>\;
  LOCKSTEP_Out(1064) <= \<const0>\;
  LOCKSTEP_Out(1065) <= \<const0>\;
  LOCKSTEP_Out(1066) <= \<const0>\;
  LOCKSTEP_Out(1067) <= \<const0>\;
  LOCKSTEP_Out(1068) <= \<const0>\;
  LOCKSTEP_Out(1069) <= \<const0>\;
  LOCKSTEP_Out(1070) <= \<const0>\;
  LOCKSTEP_Out(1071) <= \<const0>\;
  LOCKSTEP_Out(1072) <= \<const0>\;
  LOCKSTEP_Out(1073) <= \<const0>\;
  LOCKSTEP_Out(1074) <= \<const0>\;
  LOCKSTEP_Out(1075) <= \<const0>\;
  LOCKSTEP_Out(1076) <= \<const0>\;
  LOCKSTEP_Out(1077) <= \<const0>\;
  LOCKSTEP_Out(1078) <= \<const0>\;
  LOCKSTEP_Out(1079) <= \<const0>\;
  LOCKSTEP_Out(1080) <= \<const0>\;
  LOCKSTEP_Out(1081) <= \<const0>\;
  LOCKSTEP_Out(1082) <= \<const0>\;
  LOCKSTEP_Out(1083) <= \<const0>\;
  LOCKSTEP_Out(1084) <= \<const0>\;
  LOCKSTEP_Out(1085) <= \<const0>\;
  LOCKSTEP_Out(1086) <= \<const0>\;
  LOCKSTEP_Out(1087) <= \<const0>\;
  LOCKSTEP_Out(1088) <= \<const0>\;
  LOCKSTEP_Out(1089) <= \<const0>\;
  LOCKSTEP_Out(1090) <= \<const0>\;
  LOCKSTEP_Out(1091) <= \<const0>\;
  LOCKSTEP_Out(1092) <= \<const0>\;
  LOCKSTEP_Out(1093) <= \<const0>\;
  LOCKSTEP_Out(1094) <= \<const0>\;
  LOCKSTEP_Out(1095) <= \<const0>\;
  LOCKSTEP_Out(1096) <= \<const0>\;
  LOCKSTEP_Out(1097) <= \<const0>\;
  LOCKSTEP_Out(1098) <= \<const0>\;
  LOCKSTEP_Out(1099) <= \<const0>\;
  LOCKSTEP_Out(1100) <= \<const0>\;
  LOCKSTEP_Out(1101) <= \<const0>\;
  LOCKSTEP_Out(1102) <= \<const0>\;
  LOCKSTEP_Out(1103) <= \<const0>\;
  LOCKSTEP_Out(1104) <= \<const0>\;
  LOCKSTEP_Out(1105) <= \<const0>\;
  LOCKSTEP_Out(1106) <= \<const0>\;
  LOCKSTEP_Out(1107) <= \<const0>\;
  LOCKSTEP_Out(1108) <= \<const0>\;
  LOCKSTEP_Out(1109) <= \<const0>\;
  LOCKSTEP_Out(1110) <= \<const0>\;
  LOCKSTEP_Out(1111) <= \<const0>\;
  LOCKSTEP_Out(1112) <= \<const0>\;
  LOCKSTEP_Out(1113) <= \<const0>\;
  LOCKSTEP_Out(1114) <= \<const0>\;
  LOCKSTEP_Out(1115) <= \<const0>\;
  LOCKSTEP_Out(1116) <= \<const0>\;
  LOCKSTEP_Out(1117) <= \<const0>\;
  LOCKSTEP_Out(1118) <= \<const0>\;
  LOCKSTEP_Out(1119) <= \<const0>\;
  LOCKSTEP_Out(1120) <= \<const0>\;
  LOCKSTEP_Out(1121) <= \<const0>\;
  LOCKSTEP_Out(1122) <= \<const0>\;
  LOCKSTEP_Out(1123) <= \<const0>\;
  LOCKSTEP_Out(1124) <= \<const0>\;
  LOCKSTEP_Out(1125) <= \<const0>\;
  LOCKSTEP_Out(1126) <= \<const0>\;
  LOCKSTEP_Out(1127) <= \<const0>\;
  LOCKSTEP_Out(1128) <= \<const0>\;
  LOCKSTEP_Out(1129) <= \<const0>\;
  LOCKSTEP_Out(1130) <= \<const0>\;
  LOCKSTEP_Out(1131) <= \<const0>\;
  LOCKSTEP_Out(1132) <= \<const0>\;
  LOCKSTEP_Out(1133) <= \<const0>\;
  LOCKSTEP_Out(1134) <= \<const0>\;
  LOCKSTEP_Out(1135) <= \<const0>\;
  LOCKSTEP_Out(1136) <= \<const0>\;
  LOCKSTEP_Out(1137) <= \<const0>\;
  LOCKSTEP_Out(1138) <= \<const0>\;
  LOCKSTEP_Out(1139) <= \<const0>\;
  LOCKSTEP_Out(1140) <= \<const0>\;
  LOCKSTEP_Out(1141) <= \<const0>\;
  LOCKSTEP_Out(1142) <= \<const0>\;
  LOCKSTEP_Out(1143) <= \<const0>\;
  LOCKSTEP_Out(1144) <= \<const0>\;
  LOCKSTEP_Out(1145) <= \<const0>\;
  LOCKSTEP_Out(1146) <= \<const0>\;
  LOCKSTEP_Out(1147) <= \<const0>\;
  LOCKSTEP_Out(1148) <= \<const0>\;
  LOCKSTEP_Out(1149) <= \<const0>\;
  LOCKSTEP_Out(1150) <= \<const0>\;
  LOCKSTEP_Out(1151) <= \<const0>\;
  LOCKSTEP_Out(1152) <= \<const0>\;
  LOCKSTEP_Out(1153) <= \<const0>\;
  LOCKSTEP_Out(1154) <= \<const0>\;
  LOCKSTEP_Out(1155) <= \<const0>\;
  LOCKSTEP_Out(1156) <= \<const0>\;
  LOCKSTEP_Out(1157) <= \<const0>\;
  LOCKSTEP_Out(1158) <= \<const0>\;
  LOCKSTEP_Out(1159) <= \<const0>\;
  LOCKSTEP_Out(1160) <= \<const0>\;
  LOCKSTEP_Out(1161) <= \<const0>\;
  LOCKSTEP_Out(1162) <= \<const0>\;
  LOCKSTEP_Out(1163) <= \<const0>\;
  LOCKSTEP_Out(1164) <= \<const0>\;
  LOCKSTEP_Out(1165) <= \<const0>\;
  LOCKSTEP_Out(1166) <= \<const0>\;
  LOCKSTEP_Out(1167) <= \<const0>\;
  LOCKSTEP_Out(1168) <= \<const0>\;
  LOCKSTEP_Out(1169) <= \<const0>\;
  LOCKSTEP_Out(1170) <= \<const0>\;
  LOCKSTEP_Out(1171) <= \<const0>\;
  LOCKSTEP_Out(1172) <= \<const0>\;
  LOCKSTEP_Out(1173) <= \<const0>\;
  LOCKSTEP_Out(1174) <= \<const0>\;
  LOCKSTEP_Out(1175) <= \<const0>\;
  LOCKSTEP_Out(1176) <= \<const0>\;
  LOCKSTEP_Out(1177) <= \<const0>\;
  LOCKSTEP_Out(1178) <= \<const0>\;
  LOCKSTEP_Out(1179) <= \<const0>\;
  LOCKSTEP_Out(1180) <= \<const0>\;
  LOCKSTEP_Out(1181) <= \<const0>\;
  LOCKSTEP_Out(1182) <= \<const0>\;
  LOCKSTEP_Out(1183) <= \<const0>\;
  LOCKSTEP_Out(1184) <= \<const0>\;
  LOCKSTEP_Out(1185) <= \<const0>\;
  LOCKSTEP_Out(1186) <= \<const0>\;
  LOCKSTEP_Out(1187) <= \<const0>\;
  LOCKSTEP_Out(1188) <= \<const0>\;
  LOCKSTEP_Out(1189) <= \<const0>\;
  LOCKSTEP_Out(1190) <= \<const0>\;
  LOCKSTEP_Out(1191) <= \<const0>\;
  LOCKSTEP_Out(1192) <= \<const0>\;
  LOCKSTEP_Out(1193) <= \<const0>\;
  LOCKSTEP_Out(1194) <= \<const0>\;
  LOCKSTEP_Out(1195) <= \<const0>\;
  LOCKSTEP_Out(1196) <= \<const0>\;
  LOCKSTEP_Out(1197) <= \<const0>\;
  LOCKSTEP_Out(1198) <= \<const0>\;
  LOCKSTEP_Out(1199) <= \<const0>\;
  LOCKSTEP_Out(1200) <= \<const0>\;
  LOCKSTEP_Out(1201) <= \<const0>\;
  LOCKSTEP_Out(1202) <= \<const0>\;
  LOCKSTEP_Out(1203) <= \<const0>\;
  LOCKSTEP_Out(1204) <= \<const0>\;
  LOCKSTEP_Out(1205) <= \<const0>\;
  LOCKSTEP_Out(1206) <= \<const0>\;
  LOCKSTEP_Out(1207) <= \<const0>\;
  LOCKSTEP_Out(1208) <= \<const0>\;
  LOCKSTEP_Out(1209) <= \<const0>\;
  LOCKSTEP_Out(1210) <= \<const0>\;
  LOCKSTEP_Out(1211) <= \<const0>\;
  LOCKSTEP_Out(1212) <= \<const0>\;
  LOCKSTEP_Out(1213) <= \<const0>\;
  LOCKSTEP_Out(1214) <= \<const0>\;
  LOCKSTEP_Out(1215) <= \<const0>\;
  LOCKSTEP_Out(1216) <= \<const0>\;
  LOCKSTEP_Out(1217) <= \<const0>\;
  LOCKSTEP_Out(1218) <= \<const0>\;
  LOCKSTEP_Out(1219) <= \<const0>\;
  LOCKSTEP_Out(1220) <= \<const0>\;
  LOCKSTEP_Out(1221) <= \<const0>\;
  LOCKSTEP_Out(1222) <= \<const0>\;
  LOCKSTEP_Out(1223) <= \<const0>\;
  LOCKSTEP_Out(1224) <= \<const0>\;
  LOCKSTEP_Out(1225) <= \<const0>\;
  LOCKSTEP_Out(1226) <= \<const0>\;
  LOCKSTEP_Out(1227) <= \<const0>\;
  LOCKSTEP_Out(1228) <= \<const0>\;
  LOCKSTEP_Out(1229) <= \<const0>\;
  LOCKSTEP_Out(1230) <= \<const0>\;
  LOCKSTEP_Out(1231) <= \<const0>\;
  LOCKSTEP_Out(1232) <= \<const0>\;
  LOCKSTEP_Out(1233) <= \<const0>\;
  LOCKSTEP_Out(1234) <= \<const0>\;
  LOCKSTEP_Out(1235) <= \<const0>\;
  LOCKSTEP_Out(1236) <= \<const0>\;
  LOCKSTEP_Out(1237) <= \<const0>\;
  LOCKSTEP_Out(1238) <= \<const0>\;
  LOCKSTEP_Out(1239) <= \<const0>\;
  LOCKSTEP_Out(1240) <= \<const0>\;
  LOCKSTEP_Out(1241) <= \<const0>\;
  LOCKSTEP_Out(1242) <= \<const0>\;
  LOCKSTEP_Out(1243) <= \<const0>\;
  LOCKSTEP_Out(1244) <= \<const0>\;
  LOCKSTEP_Out(1245) <= \<const0>\;
  LOCKSTEP_Out(1246) <= \<const0>\;
  LOCKSTEP_Out(1247) <= \<const0>\;
  LOCKSTEP_Out(1248) <= \<const0>\;
  LOCKSTEP_Out(1249) <= \<const0>\;
  LOCKSTEP_Out(1250) <= \<const0>\;
  LOCKSTEP_Out(1251) <= \<const0>\;
  LOCKSTEP_Out(1252) <= \<const0>\;
  LOCKSTEP_Out(1253) <= \<const0>\;
  LOCKSTEP_Out(1254) <= \<const0>\;
  LOCKSTEP_Out(1255) <= \<const0>\;
  LOCKSTEP_Out(1256) <= \<const0>\;
  LOCKSTEP_Out(1257) <= \<const0>\;
  LOCKSTEP_Out(1258) <= \<const0>\;
  LOCKSTEP_Out(1259) <= \<const0>\;
  LOCKSTEP_Out(1260) <= \<const0>\;
  LOCKSTEP_Out(1261) <= \<const0>\;
  LOCKSTEP_Out(1262) <= \<const0>\;
  LOCKSTEP_Out(1263) <= \<const0>\;
  LOCKSTEP_Out(1264) <= \<const0>\;
  LOCKSTEP_Out(1265) <= \<const0>\;
  LOCKSTEP_Out(1266) <= \<const0>\;
  LOCKSTEP_Out(1267) <= \<const0>\;
  LOCKSTEP_Out(1268) <= \<const0>\;
  LOCKSTEP_Out(1269) <= \<const0>\;
  LOCKSTEP_Out(1270) <= \<const0>\;
  LOCKSTEP_Out(1271) <= \<const0>\;
  LOCKSTEP_Out(1272) <= \<const0>\;
  LOCKSTEP_Out(1273) <= \<const0>\;
  LOCKSTEP_Out(1274) <= \<const0>\;
  LOCKSTEP_Out(1275) <= \<const0>\;
  LOCKSTEP_Out(1276) <= \<const0>\;
  LOCKSTEP_Out(1277) <= \<const0>\;
  LOCKSTEP_Out(1278) <= \<const0>\;
  LOCKSTEP_Out(1279) <= \<const0>\;
  LOCKSTEP_Out(1280) <= \<const0>\;
  LOCKSTEP_Out(1281) <= \<const0>\;
  LOCKSTEP_Out(1282) <= \<const0>\;
  LOCKSTEP_Out(1283) <= \<const0>\;
  LOCKSTEP_Out(1284) <= \<const0>\;
  LOCKSTEP_Out(1285) <= \<const0>\;
  LOCKSTEP_Out(1286) <= \<const0>\;
  LOCKSTEP_Out(1287) <= \<const0>\;
  LOCKSTEP_Out(1288) <= \<const0>\;
  LOCKSTEP_Out(1289) <= \<const0>\;
  LOCKSTEP_Out(1290) <= \<const0>\;
  LOCKSTEP_Out(1291) <= \<const0>\;
  LOCKSTEP_Out(1292) <= \<const0>\;
  LOCKSTEP_Out(1293) <= \<const0>\;
  LOCKSTEP_Out(1294) <= \<const0>\;
  LOCKSTEP_Out(1295) <= \<const0>\;
  LOCKSTEP_Out(1296) <= \<const0>\;
  LOCKSTEP_Out(1297) <= \<const0>\;
  LOCKSTEP_Out(1298) <= \<const0>\;
  LOCKSTEP_Out(1299) <= \<const0>\;
  LOCKSTEP_Out(1300) <= \<const0>\;
  LOCKSTEP_Out(1301) <= \<const0>\;
  LOCKSTEP_Out(1302) <= \<const0>\;
  LOCKSTEP_Out(1303) <= \<const0>\;
  LOCKSTEP_Out(1304) <= \<const0>\;
  LOCKSTEP_Out(1305) <= \<const0>\;
  LOCKSTEP_Out(1306) <= \<const0>\;
  LOCKSTEP_Out(1307) <= \<const0>\;
  LOCKSTEP_Out(1308) <= \<const0>\;
  LOCKSTEP_Out(1309) <= \<const0>\;
  LOCKSTEP_Out(1310) <= \<const0>\;
  LOCKSTEP_Out(1311) <= \<const0>\;
  LOCKSTEP_Out(1312) <= \<const0>\;
  LOCKSTEP_Out(1313) <= \<const0>\;
  LOCKSTEP_Out(1314) <= \<const0>\;
  LOCKSTEP_Out(1315) <= \<const0>\;
  LOCKSTEP_Out(1316) <= \<const0>\;
  LOCKSTEP_Out(1317) <= \<const0>\;
  LOCKSTEP_Out(1318) <= \<const0>\;
  LOCKSTEP_Out(1319) <= \<const0>\;
  LOCKSTEP_Out(1320) <= \<const0>\;
  LOCKSTEP_Out(1321) <= \<const0>\;
  LOCKSTEP_Out(1322) <= \<const0>\;
  LOCKSTEP_Out(1323) <= \<const0>\;
  LOCKSTEP_Out(1324) <= \<const0>\;
  LOCKSTEP_Out(1325) <= \<const0>\;
  LOCKSTEP_Out(1326) <= \<const0>\;
  LOCKSTEP_Out(1327) <= \<const0>\;
  LOCKSTEP_Out(1328) <= \<const0>\;
  LOCKSTEP_Out(1329) <= \<const0>\;
  LOCKSTEP_Out(1330) <= \<const0>\;
  LOCKSTEP_Out(1331) <= \<const0>\;
  LOCKSTEP_Out(1332) <= \<const0>\;
  LOCKSTEP_Out(1333) <= \<const0>\;
  LOCKSTEP_Out(1334) <= \<const0>\;
  LOCKSTEP_Out(1335) <= \<const0>\;
  LOCKSTEP_Out(1336) <= \<const0>\;
  LOCKSTEP_Out(1337) <= \<const0>\;
  LOCKSTEP_Out(1338) <= \<const0>\;
  LOCKSTEP_Out(1339) <= \<const0>\;
  LOCKSTEP_Out(1340) <= \<const0>\;
  LOCKSTEP_Out(1341) <= \<const0>\;
  LOCKSTEP_Out(1342) <= \<const0>\;
  LOCKSTEP_Out(1343) <= \<const0>\;
  LOCKSTEP_Out(1344) <= \<const0>\;
  LOCKSTEP_Out(1345) <= \<const0>\;
  LOCKSTEP_Out(1346) <= \<const0>\;
  LOCKSTEP_Out(1347) <= \<const0>\;
  LOCKSTEP_Out(1348) <= \<const0>\;
  LOCKSTEP_Out(1349) <= \<const0>\;
  LOCKSTEP_Out(1350) <= \<const0>\;
  LOCKSTEP_Out(1351) <= \<const0>\;
  LOCKSTEP_Out(1352) <= \<const0>\;
  LOCKSTEP_Out(1353) <= \<const0>\;
  LOCKSTEP_Out(1354) <= \<const0>\;
  LOCKSTEP_Out(1355) <= \<const0>\;
  LOCKSTEP_Out(1356) <= \<const0>\;
  LOCKSTEP_Out(1357) <= \<const0>\;
  LOCKSTEP_Out(1358) <= \<const0>\;
  LOCKSTEP_Out(1359) <= \<const0>\;
  LOCKSTEP_Out(1360) <= \<const0>\;
  LOCKSTEP_Out(1361) <= \<const0>\;
  LOCKSTEP_Out(1362) <= \<const0>\;
  LOCKSTEP_Out(1363) <= \<const0>\;
  LOCKSTEP_Out(1364) <= \<const0>\;
  LOCKSTEP_Out(1365) <= \<const0>\;
  LOCKSTEP_Out(1366) <= \<const0>\;
  LOCKSTEP_Out(1367) <= \<const0>\;
  LOCKSTEP_Out(1368) <= \<const0>\;
  LOCKSTEP_Out(1369) <= \<const0>\;
  LOCKSTEP_Out(1370) <= \<const0>\;
  LOCKSTEP_Out(1371) <= \<const0>\;
  LOCKSTEP_Out(1372) <= \<const0>\;
  LOCKSTEP_Out(1373) <= \<const0>\;
  LOCKSTEP_Out(1374) <= \<const0>\;
  LOCKSTEP_Out(1375) <= \<const0>\;
  LOCKSTEP_Out(1376) <= \<const0>\;
  LOCKSTEP_Out(1377) <= \<const0>\;
  LOCKSTEP_Out(1378) <= \<const0>\;
  LOCKSTEP_Out(1379) <= \<const0>\;
  LOCKSTEP_Out(1380) <= \<const0>\;
  LOCKSTEP_Out(1381) <= \<const0>\;
  LOCKSTEP_Out(1382) <= \<const0>\;
  LOCKSTEP_Out(1383) <= \<const0>\;
  LOCKSTEP_Out(1384) <= \<const0>\;
  LOCKSTEP_Out(1385) <= \<const0>\;
  LOCKSTEP_Out(1386) <= \<const0>\;
  LOCKSTEP_Out(1387) <= \<const0>\;
  LOCKSTEP_Out(1388) <= \<const0>\;
  LOCKSTEP_Out(1389) <= \<const0>\;
  LOCKSTEP_Out(1390) <= \<const0>\;
  LOCKSTEP_Out(1391) <= \<const0>\;
  LOCKSTEP_Out(1392) <= \<const0>\;
  LOCKSTEP_Out(1393) <= \<const0>\;
  LOCKSTEP_Out(1394) <= \<const0>\;
  LOCKSTEP_Out(1395) <= \<const0>\;
  LOCKSTEP_Out(1396) <= \<const0>\;
  LOCKSTEP_Out(1397) <= \<const0>\;
  LOCKSTEP_Out(1398) <= \<const0>\;
  LOCKSTEP_Out(1399) <= \<const0>\;
  LOCKSTEP_Out(1400) <= \<const0>\;
  LOCKSTEP_Out(1401) <= \<const0>\;
  LOCKSTEP_Out(1402) <= \<const0>\;
  LOCKSTEP_Out(1403) <= \<const0>\;
  LOCKSTEP_Out(1404) <= \<const0>\;
  LOCKSTEP_Out(1405) <= \<const0>\;
  LOCKSTEP_Out(1406) <= \<const0>\;
  LOCKSTEP_Out(1407) <= \<const0>\;
  LOCKSTEP_Out(1408) <= \<const0>\;
  LOCKSTEP_Out(1409) <= \<const0>\;
  LOCKSTEP_Out(1410) <= \<const0>\;
  LOCKSTEP_Out(1411) <= \<const0>\;
  LOCKSTEP_Out(1412) <= \<const0>\;
  LOCKSTEP_Out(1413) <= \<const0>\;
  LOCKSTEP_Out(1414) <= \<const0>\;
  LOCKSTEP_Out(1415) <= \<const0>\;
  LOCKSTEP_Out(1416) <= \<const0>\;
  LOCKSTEP_Out(1417) <= \<const0>\;
  LOCKSTEP_Out(1418) <= \<const0>\;
  LOCKSTEP_Out(1419) <= \<const0>\;
  LOCKSTEP_Out(1420) <= \<const0>\;
  LOCKSTEP_Out(1421) <= \<const0>\;
  LOCKSTEP_Out(1422) <= \<const0>\;
  LOCKSTEP_Out(1423) <= \<const0>\;
  LOCKSTEP_Out(1424) <= \<const0>\;
  LOCKSTEP_Out(1425) <= \<const0>\;
  LOCKSTEP_Out(1426) <= \<const0>\;
  LOCKSTEP_Out(1427) <= \<const0>\;
  LOCKSTEP_Out(1428) <= \<const0>\;
  LOCKSTEP_Out(1429) <= \<const0>\;
  LOCKSTEP_Out(1430) <= \<const0>\;
  LOCKSTEP_Out(1431) <= \<const0>\;
  LOCKSTEP_Out(1432) <= \<const0>\;
  LOCKSTEP_Out(1433) <= \<const0>\;
  LOCKSTEP_Out(1434) <= \<const0>\;
  LOCKSTEP_Out(1435) <= \<const0>\;
  LOCKSTEP_Out(1436) <= \<const0>\;
  LOCKSTEP_Out(1437) <= \<const0>\;
  LOCKSTEP_Out(1438) <= \<const0>\;
  LOCKSTEP_Out(1439) <= \<const0>\;
  LOCKSTEP_Out(1440) <= \<const0>\;
  LOCKSTEP_Out(1441) <= \<const0>\;
  LOCKSTEP_Out(1442) <= \<const0>\;
  LOCKSTEP_Out(1443) <= \<const0>\;
  LOCKSTEP_Out(1444) <= \<const0>\;
  LOCKSTEP_Out(1445) <= \<const0>\;
  LOCKSTEP_Out(1446) <= \<const0>\;
  LOCKSTEP_Out(1447) <= \<const0>\;
  LOCKSTEP_Out(1448) <= \<const0>\;
  LOCKSTEP_Out(1449) <= \<const0>\;
  LOCKSTEP_Out(1450) <= \<const0>\;
  LOCKSTEP_Out(1451) <= \<const0>\;
  LOCKSTEP_Out(1452) <= \<const0>\;
  LOCKSTEP_Out(1453) <= \<const0>\;
  LOCKSTEP_Out(1454) <= \<const0>\;
  LOCKSTEP_Out(1455) <= \<const0>\;
  LOCKSTEP_Out(1456) <= \<const0>\;
  LOCKSTEP_Out(1457) <= \<const0>\;
  LOCKSTEP_Out(1458) <= \<const0>\;
  LOCKSTEP_Out(1459) <= \<const0>\;
  LOCKSTEP_Out(1460) <= \<const0>\;
  LOCKSTEP_Out(1461) <= \<const0>\;
  LOCKSTEP_Out(1462) <= \<const0>\;
  LOCKSTEP_Out(1463) <= \<const0>\;
  LOCKSTEP_Out(1464) <= \<const0>\;
  LOCKSTEP_Out(1465) <= \<const0>\;
  LOCKSTEP_Out(1466) <= \<const0>\;
  LOCKSTEP_Out(1467) <= \<const0>\;
  LOCKSTEP_Out(1468) <= \<const0>\;
  LOCKSTEP_Out(1469) <= \<const0>\;
  LOCKSTEP_Out(1470) <= \<const0>\;
  LOCKSTEP_Out(1471) <= \<const0>\;
  LOCKSTEP_Out(1472) <= \<const0>\;
  LOCKSTEP_Out(1473) <= \<const0>\;
  LOCKSTEP_Out(1474) <= \<const0>\;
  LOCKSTEP_Out(1475) <= \<const0>\;
  LOCKSTEP_Out(1476) <= \<const0>\;
  LOCKSTEP_Out(1477) <= \<const0>\;
  LOCKSTEP_Out(1478) <= \<const0>\;
  LOCKSTEP_Out(1479) <= \<const0>\;
  LOCKSTEP_Out(1480) <= \<const0>\;
  LOCKSTEP_Out(1481) <= \<const0>\;
  LOCKSTEP_Out(1482) <= \<const0>\;
  LOCKSTEP_Out(1483) <= \<const0>\;
  LOCKSTEP_Out(1484) <= \<const0>\;
  LOCKSTEP_Out(1485) <= \<const0>\;
  LOCKSTEP_Out(1486) <= \<const0>\;
  LOCKSTEP_Out(1487) <= \<const0>\;
  LOCKSTEP_Out(1488) <= \<const0>\;
  LOCKSTEP_Out(1489) <= \<const0>\;
  LOCKSTEP_Out(1490) <= \<const0>\;
  LOCKSTEP_Out(1491) <= \<const0>\;
  LOCKSTEP_Out(1492) <= \<const0>\;
  LOCKSTEP_Out(1493) <= \<const0>\;
  LOCKSTEP_Out(1494) <= \<const0>\;
  LOCKSTEP_Out(1495) <= \<const0>\;
  LOCKSTEP_Out(1496) <= \<const0>\;
  LOCKSTEP_Out(1497) <= \<const0>\;
  LOCKSTEP_Out(1498) <= \<const0>\;
  LOCKSTEP_Out(1499) <= \<const0>\;
  LOCKSTEP_Out(1500) <= \<const0>\;
  LOCKSTEP_Out(1501) <= \<const0>\;
  LOCKSTEP_Out(1502) <= \<const0>\;
  LOCKSTEP_Out(1503) <= \<const0>\;
  LOCKSTEP_Out(1504) <= \<const0>\;
  LOCKSTEP_Out(1505) <= \<const0>\;
  LOCKSTEP_Out(1506) <= \<const0>\;
  LOCKSTEP_Out(1507) <= \<const0>\;
  LOCKSTEP_Out(1508) <= \<const0>\;
  LOCKSTEP_Out(1509) <= \<const0>\;
  LOCKSTEP_Out(1510) <= \<const0>\;
  LOCKSTEP_Out(1511) <= \<const0>\;
  LOCKSTEP_Out(1512) <= \<const0>\;
  LOCKSTEP_Out(1513) <= \<const0>\;
  LOCKSTEP_Out(1514) <= \<const0>\;
  LOCKSTEP_Out(1515) <= \<const0>\;
  LOCKSTEP_Out(1516) <= \<const0>\;
  LOCKSTEP_Out(1517) <= \<const0>\;
  LOCKSTEP_Out(1518) <= \<const0>\;
  LOCKSTEP_Out(1519) <= \<const0>\;
  LOCKSTEP_Out(1520) <= \<const0>\;
  LOCKSTEP_Out(1521) <= \<const0>\;
  LOCKSTEP_Out(1522) <= \<const0>\;
  LOCKSTEP_Out(1523) <= \<const0>\;
  LOCKSTEP_Out(1524) <= \<const0>\;
  LOCKSTEP_Out(1525) <= \<const0>\;
  LOCKSTEP_Out(1526) <= \<const0>\;
  LOCKSTEP_Out(1527) <= \<const0>\;
  LOCKSTEP_Out(1528) <= \<const0>\;
  LOCKSTEP_Out(1529) <= \<const0>\;
  LOCKSTEP_Out(1530) <= \<const0>\;
  LOCKSTEP_Out(1531) <= \<const0>\;
  LOCKSTEP_Out(1532) <= \<const0>\;
  LOCKSTEP_Out(1533) <= \<const0>\;
  LOCKSTEP_Out(1534) <= \<const0>\;
  LOCKSTEP_Out(1535) <= \<const0>\;
  LOCKSTEP_Out(1536) <= \<const0>\;
  LOCKSTEP_Out(1537) <= \<const0>\;
  LOCKSTEP_Out(1538) <= \<const0>\;
  LOCKSTEP_Out(1539) <= \<const0>\;
  LOCKSTEP_Out(1540) <= \<const0>\;
  LOCKSTEP_Out(1541) <= \<const0>\;
  LOCKSTEP_Out(1542) <= \<const0>\;
  LOCKSTEP_Out(1543) <= \<const0>\;
  LOCKSTEP_Out(1544) <= \<const0>\;
  LOCKSTEP_Out(1545) <= \<const0>\;
  LOCKSTEP_Out(1546) <= \<const0>\;
  LOCKSTEP_Out(1547) <= \<const0>\;
  LOCKSTEP_Out(1548) <= \<const0>\;
  LOCKSTEP_Out(1549) <= \<const0>\;
  LOCKSTEP_Out(1550) <= \<const0>\;
  LOCKSTEP_Out(1551) <= \<const0>\;
  LOCKSTEP_Out(1552) <= \<const0>\;
  LOCKSTEP_Out(1553) <= \<const0>\;
  LOCKSTEP_Out(1554) <= \<const0>\;
  LOCKSTEP_Out(1555) <= \<const0>\;
  LOCKSTEP_Out(1556) <= \<const0>\;
  LOCKSTEP_Out(1557) <= \<const0>\;
  LOCKSTEP_Out(1558) <= \<const0>\;
  LOCKSTEP_Out(1559) <= \<const0>\;
  LOCKSTEP_Out(1560) <= \<const0>\;
  LOCKSTEP_Out(1561) <= \<const0>\;
  LOCKSTEP_Out(1562) <= \<const0>\;
  LOCKSTEP_Out(1563) <= \<const0>\;
  LOCKSTEP_Out(1564) <= \<const0>\;
  LOCKSTEP_Out(1565) <= \<const0>\;
  LOCKSTEP_Out(1566) <= \<const0>\;
  LOCKSTEP_Out(1567) <= \<const0>\;
  LOCKSTEP_Out(1568) <= \<const0>\;
  LOCKSTEP_Out(1569) <= \<const0>\;
  LOCKSTEP_Out(1570) <= \<const0>\;
  LOCKSTEP_Out(1571) <= \<const0>\;
  LOCKSTEP_Out(1572) <= \<const0>\;
  LOCKSTEP_Out(1573) <= \<const0>\;
  LOCKSTEP_Out(1574) <= \<const0>\;
  LOCKSTEP_Out(1575) <= \<const0>\;
  LOCKSTEP_Out(1576) <= \<const0>\;
  LOCKSTEP_Out(1577) <= \<const0>\;
  LOCKSTEP_Out(1578) <= \<const0>\;
  LOCKSTEP_Out(1579) <= \<const0>\;
  LOCKSTEP_Out(1580) <= \<const0>\;
  LOCKSTEP_Out(1581) <= \<const0>\;
  LOCKSTEP_Out(1582) <= \<const0>\;
  LOCKSTEP_Out(1583) <= \<const0>\;
  LOCKSTEP_Out(1584) <= \<const0>\;
  LOCKSTEP_Out(1585) <= \<const0>\;
  LOCKSTEP_Out(1586) <= \<const0>\;
  LOCKSTEP_Out(1587) <= \<const0>\;
  LOCKSTEP_Out(1588) <= \<const0>\;
  LOCKSTEP_Out(1589) <= \<const0>\;
  LOCKSTEP_Out(1590) <= \<const0>\;
  LOCKSTEP_Out(1591) <= \<const0>\;
  LOCKSTEP_Out(1592) <= \<const0>\;
  LOCKSTEP_Out(1593) <= \<const0>\;
  LOCKSTEP_Out(1594) <= \<const0>\;
  LOCKSTEP_Out(1595) <= \<const0>\;
  LOCKSTEP_Out(1596) <= \<const0>\;
  LOCKSTEP_Out(1597) <= \<const0>\;
  LOCKSTEP_Out(1598) <= \<const0>\;
  LOCKSTEP_Out(1599) <= \<const0>\;
  LOCKSTEP_Out(1600) <= \<const0>\;
  LOCKSTEP_Out(1601) <= \<const0>\;
  LOCKSTEP_Out(1602) <= \<const0>\;
  LOCKSTEP_Out(1603) <= \<const0>\;
  LOCKSTEP_Out(1604) <= \<const0>\;
  LOCKSTEP_Out(1605) <= \<const0>\;
  LOCKSTEP_Out(1606) <= \<const0>\;
  LOCKSTEP_Out(1607) <= \<const0>\;
  LOCKSTEP_Out(1608) <= \<const0>\;
  LOCKSTEP_Out(1609) <= \<const0>\;
  LOCKSTEP_Out(1610) <= \<const0>\;
  LOCKSTEP_Out(1611) <= \<const0>\;
  LOCKSTEP_Out(1612) <= \<const0>\;
  LOCKSTEP_Out(1613) <= \<const0>\;
  LOCKSTEP_Out(1614) <= \<const0>\;
  LOCKSTEP_Out(1615) <= \<const0>\;
  LOCKSTEP_Out(1616) <= \<const0>\;
  LOCKSTEP_Out(1617) <= \<const0>\;
  LOCKSTEP_Out(1618) <= \<const0>\;
  LOCKSTEP_Out(1619) <= \<const0>\;
  LOCKSTEP_Out(1620) <= \<const0>\;
  LOCKSTEP_Out(1621) <= \<const0>\;
  LOCKSTEP_Out(1622) <= \<const0>\;
  LOCKSTEP_Out(1623) <= \<const0>\;
  LOCKSTEP_Out(1624) <= \<const0>\;
  LOCKSTEP_Out(1625) <= \<const0>\;
  LOCKSTEP_Out(1626) <= \<const0>\;
  LOCKSTEP_Out(1627) <= \<const0>\;
  LOCKSTEP_Out(1628) <= \<const0>\;
  LOCKSTEP_Out(1629) <= \<const0>\;
  LOCKSTEP_Out(1630) <= \<const0>\;
  LOCKSTEP_Out(1631) <= \<const0>\;
  LOCKSTEP_Out(1632) <= \<const0>\;
  LOCKSTEP_Out(1633) <= \<const0>\;
  LOCKSTEP_Out(1634) <= \<const0>\;
  LOCKSTEP_Out(1635) <= \<const0>\;
  LOCKSTEP_Out(1636) <= \<const0>\;
  LOCKSTEP_Out(1637) <= \<const0>\;
  LOCKSTEP_Out(1638) <= \<const0>\;
  LOCKSTEP_Out(1639) <= \<const0>\;
  LOCKSTEP_Out(1640) <= \<const0>\;
  LOCKSTEP_Out(1641) <= \<const0>\;
  LOCKSTEP_Out(1642) <= \<const0>\;
  LOCKSTEP_Out(1643) <= \<const0>\;
  LOCKSTEP_Out(1644) <= \<const0>\;
  LOCKSTEP_Out(1645) <= \<const0>\;
  LOCKSTEP_Out(1646) <= \<const0>\;
  LOCKSTEP_Out(1647) <= \<const0>\;
  LOCKSTEP_Out(1648) <= \<const0>\;
  LOCKSTEP_Out(1649) <= \<const0>\;
  LOCKSTEP_Out(1650) <= \<const0>\;
  LOCKSTEP_Out(1651) <= \<const0>\;
  LOCKSTEP_Out(1652) <= \<const0>\;
  LOCKSTEP_Out(1653) <= \<const0>\;
  LOCKSTEP_Out(1654) <= \<const0>\;
  LOCKSTEP_Out(1655) <= \<const0>\;
  LOCKSTEP_Out(1656) <= \<const0>\;
  LOCKSTEP_Out(1657) <= \<const0>\;
  LOCKSTEP_Out(1658) <= \<const0>\;
  LOCKSTEP_Out(1659) <= \<const0>\;
  LOCKSTEP_Out(1660) <= \<const0>\;
  LOCKSTEP_Out(1661) <= \<const0>\;
  LOCKSTEP_Out(1662) <= \<const0>\;
  LOCKSTEP_Out(1663) <= \<const0>\;
  LOCKSTEP_Out(1664) <= \<const0>\;
  LOCKSTEP_Out(1665) <= \<const0>\;
  LOCKSTEP_Out(1666) <= \<const0>\;
  LOCKSTEP_Out(1667) <= \<const0>\;
  LOCKSTEP_Out(1668) <= \<const0>\;
  LOCKSTEP_Out(1669) <= \<const0>\;
  LOCKSTEP_Out(1670) <= \<const0>\;
  LOCKSTEP_Out(1671) <= \<const0>\;
  LOCKSTEP_Out(1672) <= \<const0>\;
  LOCKSTEP_Out(1673) <= \<const0>\;
  LOCKSTEP_Out(1674) <= \<const0>\;
  LOCKSTEP_Out(1675) <= \<const0>\;
  LOCKSTEP_Out(1676) <= \<const0>\;
  LOCKSTEP_Out(1677) <= \<const0>\;
  LOCKSTEP_Out(1678) <= \<const0>\;
  LOCKSTEP_Out(1679) <= \<const0>\;
  LOCKSTEP_Out(1680) <= \<const0>\;
  LOCKSTEP_Out(1681) <= \<const0>\;
  LOCKSTEP_Out(1682) <= \<const0>\;
  LOCKSTEP_Out(1683) <= \<const0>\;
  LOCKSTEP_Out(1684) <= \<const0>\;
  LOCKSTEP_Out(1685) <= \<const0>\;
  LOCKSTEP_Out(1686) <= \<const0>\;
  LOCKSTEP_Out(1687) <= \<const0>\;
  LOCKSTEP_Out(1688) <= \<const0>\;
  LOCKSTEP_Out(1689) <= \<const0>\;
  LOCKSTEP_Out(1690) <= \<const0>\;
  LOCKSTEP_Out(1691) <= \<const0>\;
  LOCKSTEP_Out(1692) <= \<const0>\;
  LOCKSTEP_Out(1693) <= \<const0>\;
  LOCKSTEP_Out(1694) <= \<const0>\;
  LOCKSTEP_Out(1695) <= \<const0>\;
  LOCKSTEP_Out(1696) <= \<const0>\;
  LOCKSTEP_Out(1697) <= \<const0>\;
  LOCKSTEP_Out(1698) <= \<const0>\;
  LOCKSTEP_Out(1699) <= \<const0>\;
  LOCKSTEP_Out(1700) <= \<const0>\;
  LOCKSTEP_Out(1701) <= \<const0>\;
  LOCKSTEP_Out(1702) <= \<const0>\;
  LOCKSTEP_Out(1703) <= \<const0>\;
  LOCKSTEP_Out(1704) <= \<const0>\;
  LOCKSTEP_Out(1705) <= \<const0>\;
  LOCKSTEP_Out(1706) <= \<const0>\;
  LOCKSTEP_Out(1707) <= \<const0>\;
  LOCKSTEP_Out(1708) <= \<const0>\;
  LOCKSTEP_Out(1709) <= \<const0>\;
  LOCKSTEP_Out(1710) <= \<const0>\;
  LOCKSTEP_Out(1711) <= \<const0>\;
  LOCKSTEP_Out(1712) <= \<const0>\;
  LOCKSTEP_Out(1713) <= \<const0>\;
  LOCKSTEP_Out(1714) <= \<const0>\;
  LOCKSTEP_Out(1715) <= \<const0>\;
  LOCKSTEP_Out(1716) <= \<const0>\;
  LOCKSTEP_Out(1717) <= \<const0>\;
  LOCKSTEP_Out(1718) <= \<const0>\;
  LOCKSTEP_Out(1719) <= \<const0>\;
  LOCKSTEP_Out(1720) <= \<const0>\;
  LOCKSTEP_Out(1721) <= \<const0>\;
  LOCKSTEP_Out(1722) <= \<const0>\;
  LOCKSTEP_Out(1723) <= \<const0>\;
  LOCKSTEP_Out(1724) <= \<const0>\;
  LOCKSTEP_Out(1725) <= \<const0>\;
  LOCKSTEP_Out(1726) <= \<const0>\;
  LOCKSTEP_Out(1727) <= \<const0>\;
  LOCKSTEP_Out(1728) <= \<const0>\;
  LOCKSTEP_Out(1729) <= \<const0>\;
  LOCKSTEP_Out(1730) <= \<const0>\;
  LOCKSTEP_Out(1731) <= \<const0>\;
  LOCKSTEP_Out(1732) <= \<const0>\;
  LOCKSTEP_Out(1733) <= \<const0>\;
  LOCKSTEP_Out(1734) <= \<const0>\;
  LOCKSTEP_Out(1735) <= \<const0>\;
  LOCKSTEP_Out(1736) <= \<const0>\;
  LOCKSTEP_Out(1737) <= \<const0>\;
  LOCKSTEP_Out(1738) <= \<const0>\;
  LOCKSTEP_Out(1739) <= \<const0>\;
  LOCKSTEP_Out(1740) <= \<const0>\;
  LOCKSTEP_Out(1741) <= \<const0>\;
  LOCKSTEP_Out(1742) <= \<const0>\;
  LOCKSTEP_Out(1743) <= \<const0>\;
  LOCKSTEP_Out(1744) <= \<const0>\;
  LOCKSTEP_Out(1745) <= \<const0>\;
  LOCKSTEP_Out(1746) <= \<const0>\;
  LOCKSTEP_Out(1747) <= \<const0>\;
  LOCKSTEP_Out(1748) <= \<const0>\;
  LOCKSTEP_Out(1749) <= \<const0>\;
  LOCKSTEP_Out(1750) <= \<const0>\;
  LOCKSTEP_Out(1751) <= \<const0>\;
  LOCKSTEP_Out(1752) <= \<const0>\;
  LOCKSTEP_Out(1753) <= \<const0>\;
  LOCKSTEP_Out(1754) <= \<const0>\;
  LOCKSTEP_Out(1755) <= \<const0>\;
  LOCKSTEP_Out(1756) <= \<const0>\;
  LOCKSTEP_Out(1757) <= \<const0>\;
  LOCKSTEP_Out(1758) <= \<const0>\;
  LOCKSTEP_Out(1759) <= \<const0>\;
  LOCKSTEP_Out(1760) <= \<const0>\;
  LOCKSTEP_Out(1761) <= \<const0>\;
  LOCKSTEP_Out(1762) <= \<const0>\;
  LOCKSTEP_Out(1763) <= \<const0>\;
  LOCKSTEP_Out(1764) <= \<const0>\;
  LOCKSTEP_Out(1765) <= \<const0>\;
  LOCKSTEP_Out(1766) <= \<const0>\;
  LOCKSTEP_Out(1767) <= \<const0>\;
  LOCKSTEP_Out(1768) <= \<const0>\;
  LOCKSTEP_Out(1769) <= \<const0>\;
  LOCKSTEP_Out(1770) <= \<const0>\;
  LOCKSTEP_Out(1771) <= \<const0>\;
  LOCKSTEP_Out(1772) <= \<const0>\;
  LOCKSTEP_Out(1773) <= \<const0>\;
  LOCKSTEP_Out(1774) <= \<const0>\;
  LOCKSTEP_Out(1775) <= \<const0>\;
  LOCKSTEP_Out(1776) <= \<const0>\;
  LOCKSTEP_Out(1777) <= \<const0>\;
  LOCKSTEP_Out(1778) <= \<const0>\;
  LOCKSTEP_Out(1779) <= \<const0>\;
  LOCKSTEP_Out(1780) <= \<const0>\;
  LOCKSTEP_Out(1781) <= \<const0>\;
  LOCKSTEP_Out(1782) <= \<const0>\;
  LOCKSTEP_Out(1783) <= \<const0>\;
  LOCKSTEP_Out(1784) <= \<const0>\;
  LOCKSTEP_Out(1785) <= \<const0>\;
  LOCKSTEP_Out(1786) <= \<const0>\;
  LOCKSTEP_Out(1787) <= \<const0>\;
  LOCKSTEP_Out(1788) <= \<const0>\;
  LOCKSTEP_Out(1789) <= \<const0>\;
  LOCKSTEP_Out(1790) <= \<const0>\;
  LOCKSTEP_Out(1791) <= \<const0>\;
  LOCKSTEP_Out(1792) <= \<const0>\;
  LOCKSTEP_Out(1793) <= \<const0>\;
  LOCKSTEP_Out(1794) <= \<const0>\;
  LOCKSTEP_Out(1795) <= \<const0>\;
  LOCKSTEP_Out(1796) <= \<const0>\;
  LOCKSTEP_Out(1797) <= \<const0>\;
  LOCKSTEP_Out(1798) <= \<const0>\;
  LOCKSTEP_Out(1799) <= \<const0>\;
  LOCKSTEP_Out(1800) <= \<const0>\;
  LOCKSTEP_Out(1801) <= \<const0>\;
  LOCKSTEP_Out(1802) <= \<const0>\;
  LOCKSTEP_Out(1803) <= \<const0>\;
  LOCKSTEP_Out(1804) <= \<const0>\;
  LOCKSTEP_Out(1805) <= \<const0>\;
  LOCKSTEP_Out(1806) <= \<const0>\;
  LOCKSTEP_Out(1807) <= \<const0>\;
  LOCKSTEP_Out(1808) <= \<const0>\;
  LOCKSTEP_Out(1809) <= \<const0>\;
  LOCKSTEP_Out(1810) <= \<const0>\;
  LOCKSTEP_Out(1811) <= \<const0>\;
  LOCKSTEP_Out(1812) <= \<const0>\;
  LOCKSTEP_Out(1813) <= \<const0>\;
  LOCKSTEP_Out(1814) <= \<const0>\;
  LOCKSTEP_Out(1815) <= \<const0>\;
  LOCKSTEP_Out(1816) <= \<const0>\;
  LOCKSTEP_Out(1817) <= \<const0>\;
  LOCKSTEP_Out(1818) <= \<const0>\;
  LOCKSTEP_Out(1819) <= \<const0>\;
  LOCKSTEP_Out(1820) <= \<const0>\;
  LOCKSTEP_Out(1821) <= \<const0>\;
  LOCKSTEP_Out(1822) <= \<const0>\;
  LOCKSTEP_Out(1823) <= \<const0>\;
  LOCKSTEP_Out(1824) <= \<const0>\;
  LOCKSTEP_Out(1825) <= \<const0>\;
  LOCKSTEP_Out(1826) <= \<const0>\;
  LOCKSTEP_Out(1827) <= \<const0>\;
  LOCKSTEP_Out(1828) <= \<const0>\;
  LOCKSTEP_Out(1829) <= \<const0>\;
  LOCKSTEP_Out(1830) <= \<const0>\;
  LOCKSTEP_Out(1831) <= \<const0>\;
  LOCKSTEP_Out(1832) <= \<const0>\;
  LOCKSTEP_Out(1833) <= \<const0>\;
  LOCKSTEP_Out(1834) <= \<const0>\;
  LOCKSTEP_Out(1835) <= \<const0>\;
  LOCKSTEP_Out(1836) <= \<const0>\;
  LOCKSTEP_Out(1837) <= \<const0>\;
  LOCKSTEP_Out(1838) <= \<const0>\;
  LOCKSTEP_Out(1839) <= \<const0>\;
  LOCKSTEP_Out(1840) <= \<const0>\;
  LOCKSTEP_Out(1841) <= \<const0>\;
  LOCKSTEP_Out(1842) <= \<const0>\;
  LOCKSTEP_Out(1843) <= \<const0>\;
  LOCKSTEP_Out(1844) <= \<const0>\;
  LOCKSTEP_Out(1845) <= \<const0>\;
  LOCKSTEP_Out(1846) <= \<const0>\;
  LOCKSTEP_Out(1847) <= \<const0>\;
  LOCKSTEP_Out(1848) <= \<const0>\;
  LOCKSTEP_Out(1849) <= \<const0>\;
  LOCKSTEP_Out(1850) <= \<const0>\;
  LOCKSTEP_Out(1851) <= \<const0>\;
  LOCKSTEP_Out(1852) <= \<const0>\;
  LOCKSTEP_Out(1853) <= \<const0>\;
  LOCKSTEP_Out(1854) <= \<const0>\;
  LOCKSTEP_Out(1855) <= \<const0>\;
  LOCKSTEP_Out(1856) <= \<const0>\;
  LOCKSTEP_Out(1857) <= \<const0>\;
  LOCKSTEP_Out(1858) <= \<const0>\;
  LOCKSTEP_Out(1859) <= \<const0>\;
  LOCKSTEP_Out(1860) <= \<const0>\;
  LOCKSTEP_Out(1861) <= \<const0>\;
  LOCKSTEP_Out(1862) <= \<const0>\;
  LOCKSTEP_Out(1863) <= \<const0>\;
  LOCKSTEP_Out(1864) <= \<const0>\;
  LOCKSTEP_Out(1865) <= \<const0>\;
  LOCKSTEP_Out(1866) <= \<const0>\;
  LOCKSTEP_Out(1867) <= \<const0>\;
  LOCKSTEP_Out(1868) <= \<const0>\;
  LOCKSTEP_Out(1869) <= \<const0>\;
  LOCKSTEP_Out(1870) <= \<const0>\;
  LOCKSTEP_Out(1871) <= \<const0>\;
  LOCKSTEP_Out(1872) <= \<const0>\;
  LOCKSTEP_Out(1873) <= \<const0>\;
  LOCKSTEP_Out(1874) <= \<const0>\;
  LOCKSTEP_Out(1875) <= \<const0>\;
  LOCKSTEP_Out(1876) <= \<const0>\;
  LOCKSTEP_Out(1877) <= \<const0>\;
  LOCKSTEP_Out(1878) <= \<const0>\;
  LOCKSTEP_Out(1879) <= \<const0>\;
  LOCKSTEP_Out(1880) <= \<const0>\;
  LOCKSTEP_Out(1881) <= \<const0>\;
  LOCKSTEP_Out(1882) <= \<const0>\;
  LOCKSTEP_Out(1883) <= \<const0>\;
  LOCKSTEP_Out(1884) <= \<const0>\;
  LOCKSTEP_Out(1885) <= \<const0>\;
  LOCKSTEP_Out(1886) <= \<const0>\;
  LOCKSTEP_Out(1887) <= \<const0>\;
  LOCKSTEP_Out(1888) <= \<const0>\;
  LOCKSTEP_Out(1889) <= \<const0>\;
  LOCKSTEP_Out(1890) <= \<const0>\;
  LOCKSTEP_Out(1891) <= \<const0>\;
  LOCKSTEP_Out(1892) <= \<const0>\;
  LOCKSTEP_Out(1893) <= \<const0>\;
  LOCKSTEP_Out(1894) <= \<const0>\;
  LOCKSTEP_Out(1895) <= \<const0>\;
  LOCKSTEP_Out(1896) <= \<const0>\;
  LOCKSTEP_Out(1897) <= \<const0>\;
  LOCKSTEP_Out(1898) <= \<const0>\;
  LOCKSTEP_Out(1899) <= \<const0>\;
  LOCKSTEP_Out(1900) <= \<const0>\;
  LOCKSTEP_Out(1901) <= \<const0>\;
  LOCKSTEP_Out(1902) <= \<const0>\;
  LOCKSTEP_Out(1903) <= \<const0>\;
  LOCKSTEP_Out(1904) <= \<const0>\;
  LOCKSTEP_Out(1905) <= \<const0>\;
  LOCKSTEP_Out(1906) <= \<const0>\;
  LOCKSTEP_Out(1907) <= \<const0>\;
  LOCKSTEP_Out(1908) <= \<const0>\;
  LOCKSTEP_Out(1909) <= \<const0>\;
  LOCKSTEP_Out(1910) <= \<const0>\;
  LOCKSTEP_Out(1911) <= \<const0>\;
  LOCKSTEP_Out(1912) <= \<const0>\;
  LOCKSTEP_Out(1913) <= \<const0>\;
  LOCKSTEP_Out(1914) <= \<const0>\;
  LOCKSTEP_Out(1915) <= \<const0>\;
  LOCKSTEP_Out(1916) <= \<const0>\;
  LOCKSTEP_Out(1917) <= \<const0>\;
  LOCKSTEP_Out(1918) <= \<const0>\;
  LOCKSTEP_Out(1919) <= \<const0>\;
  LOCKSTEP_Out(1920) <= \<const0>\;
  LOCKSTEP_Out(1921) <= \<const0>\;
  LOCKSTEP_Out(1922) <= \<const0>\;
  LOCKSTEP_Out(1923) <= \<const0>\;
  LOCKSTEP_Out(1924) <= \<const0>\;
  LOCKSTEP_Out(1925) <= \<const0>\;
  LOCKSTEP_Out(1926) <= \<const0>\;
  LOCKSTEP_Out(1927) <= \<const0>\;
  LOCKSTEP_Out(1928) <= \<const0>\;
  LOCKSTEP_Out(1929) <= \<const0>\;
  LOCKSTEP_Out(1930) <= \<const0>\;
  LOCKSTEP_Out(1931) <= \<const0>\;
  LOCKSTEP_Out(1932) <= \<const0>\;
  LOCKSTEP_Out(1933) <= \<const0>\;
  LOCKSTEP_Out(1934) <= \<const0>\;
  LOCKSTEP_Out(1935) <= \<const0>\;
  LOCKSTEP_Out(1936) <= \<const0>\;
  LOCKSTEP_Out(1937) <= \<const0>\;
  LOCKSTEP_Out(1938) <= \<const0>\;
  LOCKSTEP_Out(1939) <= \<const0>\;
  LOCKSTEP_Out(1940) <= \<const0>\;
  LOCKSTEP_Out(1941) <= \<const0>\;
  LOCKSTEP_Out(1942) <= \<const0>\;
  LOCKSTEP_Out(1943) <= \<const0>\;
  LOCKSTEP_Out(1944) <= \<const0>\;
  LOCKSTEP_Out(1945) <= \<const0>\;
  LOCKSTEP_Out(1946) <= \<const0>\;
  LOCKSTEP_Out(1947) <= \<const0>\;
  LOCKSTEP_Out(1948) <= \<const0>\;
  LOCKSTEP_Out(1949) <= \<const0>\;
  LOCKSTEP_Out(1950) <= \<const0>\;
  LOCKSTEP_Out(1951) <= \<const0>\;
  LOCKSTEP_Out(1952) <= \<const0>\;
  LOCKSTEP_Out(1953) <= \<const0>\;
  LOCKSTEP_Out(1954) <= \<const0>\;
  LOCKSTEP_Out(1955) <= \<const0>\;
  LOCKSTEP_Out(1956) <= \<const0>\;
  LOCKSTEP_Out(1957) <= \<const0>\;
  LOCKSTEP_Out(1958) <= \<const0>\;
  LOCKSTEP_Out(1959) <= \<const0>\;
  LOCKSTEP_Out(1960) <= \<const0>\;
  LOCKSTEP_Out(1961) <= \<const0>\;
  LOCKSTEP_Out(1962) <= \<const0>\;
  LOCKSTEP_Out(1963) <= \<const0>\;
  LOCKSTEP_Out(1964) <= \<const0>\;
  LOCKSTEP_Out(1965) <= \<const0>\;
  LOCKSTEP_Out(1966) <= \<const0>\;
  LOCKSTEP_Out(1967) <= \<const0>\;
  LOCKSTEP_Out(1968) <= \<const0>\;
  LOCKSTEP_Out(1969) <= \<const0>\;
  LOCKSTEP_Out(1970) <= \<const0>\;
  LOCKSTEP_Out(1971) <= \<const0>\;
  LOCKSTEP_Out(1972) <= \<const0>\;
  LOCKSTEP_Out(1973) <= \<const0>\;
  LOCKSTEP_Out(1974) <= \<const0>\;
  LOCKSTEP_Out(1975) <= \<const0>\;
  LOCKSTEP_Out(1976) <= \<const0>\;
  LOCKSTEP_Out(1977) <= \<const0>\;
  LOCKSTEP_Out(1978) <= \<const0>\;
  LOCKSTEP_Out(1979) <= \<const0>\;
  LOCKSTEP_Out(1980) <= \<const0>\;
  LOCKSTEP_Out(1981) <= \<const0>\;
  LOCKSTEP_Out(1982) <= \<const0>\;
  LOCKSTEP_Out(1983) <= \<const0>\;
  LOCKSTEP_Out(1984) <= \<const0>\;
  LOCKSTEP_Out(1985) <= \<const0>\;
  LOCKSTEP_Out(1986) <= \<const0>\;
  LOCKSTEP_Out(1987) <= \<const0>\;
  LOCKSTEP_Out(1988) <= \<const0>\;
  LOCKSTEP_Out(1989) <= \<const0>\;
  LOCKSTEP_Out(1990) <= \<const0>\;
  LOCKSTEP_Out(1991) <= \<const0>\;
  LOCKSTEP_Out(1992) <= \<const0>\;
  LOCKSTEP_Out(1993) <= \<const0>\;
  LOCKSTEP_Out(1994) <= \<const0>\;
  LOCKSTEP_Out(1995) <= \<const0>\;
  LOCKSTEP_Out(1996) <= \<const0>\;
  LOCKSTEP_Out(1997) <= \<const0>\;
  LOCKSTEP_Out(1998) <= \<const0>\;
  LOCKSTEP_Out(1999) <= \<const0>\;
  LOCKSTEP_Out(2000) <= \<const0>\;
  LOCKSTEP_Out(2001) <= \<const0>\;
  LOCKSTEP_Out(2002) <= \<const0>\;
  LOCKSTEP_Out(2003) <= \<const0>\;
  LOCKSTEP_Out(2004) <= \<const0>\;
  LOCKSTEP_Out(2005) <= \<const0>\;
  LOCKSTEP_Out(2006) <= \<const0>\;
  LOCKSTEP_Out(2007) <= \<const0>\;
  LOCKSTEP_Out(2008) <= \<const0>\;
  LOCKSTEP_Out(2009) <= \<const0>\;
  LOCKSTEP_Out(2010) <= \<const0>\;
  LOCKSTEP_Out(2011) <= \<const0>\;
  LOCKSTEP_Out(2012) <= \<const0>\;
  LOCKSTEP_Out(2013) <= \<const0>\;
  LOCKSTEP_Out(2014) <= \<const0>\;
  LOCKSTEP_Out(2015) <= \<const0>\;
  LOCKSTEP_Out(2016) <= \<const0>\;
  LOCKSTEP_Out(2017) <= \<const0>\;
  LOCKSTEP_Out(2018) <= \<const0>\;
  LOCKSTEP_Out(2019) <= \<const0>\;
  LOCKSTEP_Out(2020) <= \<const0>\;
  LOCKSTEP_Out(2021) <= \<const0>\;
  LOCKSTEP_Out(2022) <= \<const0>\;
  LOCKSTEP_Out(2023) <= \<const0>\;
  LOCKSTEP_Out(2024) <= \<const0>\;
  LOCKSTEP_Out(2025) <= \<const0>\;
  LOCKSTEP_Out(2026) <= \<const0>\;
  LOCKSTEP_Out(2027) <= \<const0>\;
  LOCKSTEP_Out(2028) <= \<const0>\;
  LOCKSTEP_Out(2029) <= \<const0>\;
  LOCKSTEP_Out(2030) <= \<const0>\;
  LOCKSTEP_Out(2031) <= \<const0>\;
  LOCKSTEP_Out(2032) <= \<const0>\;
  LOCKSTEP_Out(2033) <= \<const0>\;
  LOCKSTEP_Out(2034) <= \<const0>\;
  LOCKSTEP_Out(2035) <= \<const0>\;
  LOCKSTEP_Out(2036) <= \<const0>\;
  LOCKSTEP_Out(2037) <= \<const0>\;
  LOCKSTEP_Out(2038) <= \<const0>\;
  LOCKSTEP_Out(2039) <= \<const0>\;
  LOCKSTEP_Out(2040) <= \<const0>\;
  LOCKSTEP_Out(2041) <= \<const0>\;
  LOCKSTEP_Out(2042) <= \<const0>\;
  LOCKSTEP_Out(2043) <= \<const0>\;
  LOCKSTEP_Out(2044) <= \<const0>\;
  LOCKSTEP_Out(2045) <= \<const0>\;
  LOCKSTEP_Out(2046) <= \<const0>\;
  LOCKSTEP_Out(2047) <= \<const0>\;
  LOCKSTEP_Out(2048) <= \<const0>\;
  LOCKSTEP_Out(2049) <= \<const0>\;
  LOCKSTEP_Out(2050) <= \<const0>\;
  LOCKSTEP_Out(2051) <= \<const0>\;
  LOCKSTEP_Out(2052) <= \<const0>\;
  LOCKSTEP_Out(2053) <= \<const0>\;
  LOCKSTEP_Out(2054) <= \<const0>\;
  LOCKSTEP_Out(2055) <= \<const0>\;
  LOCKSTEP_Out(2056) <= \<const0>\;
  LOCKSTEP_Out(2057) <= \<const0>\;
  LOCKSTEP_Out(2058) <= \<const0>\;
  LOCKSTEP_Out(2059) <= \<const0>\;
  LOCKSTEP_Out(2060) <= \<const0>\;
  LOCKSTEP_Out(2061) <= \<const0>\;
  LOCKSTEP_Out(2062) <= \<const0>\;
  LOCKSTEP_Out(2063) <= \<const0>\;
  LOCKSTEP_Out(2064) <= \<const0>\;
  LOCKSTEP_Out(2065) <= \<const0>\;
  LOCKSTEP_Out(2066) <= \<const0>\;
  LOCKSTEP_Out(2067) <= \<const0>\;
  LOCKSTEP_Out(2068) <= \<const0>\;
  LOCKSTEP_Out(2069) <= \<const0>\;
  LOCKSTEP_Out(2070) <= \<const0>\;
  LOCKSTEP_Out(2071) <= \<const0>\;
  LOCKSTEP_Out(2072) <= \<const0>\;
  LOCKSTEP_Out(2073) <= \<const0>\;
  LOCKSTEP_Out(2074) <= \<const0>\;
  LOCKSTEP_Out(2075) <= \<const0>\;
  LOCKSTEP_Out(2076) <= \<const0>\;
  LOCKSTEP_Out(2077) <= \<const0>\;
  LOCKSTEP_Out(2078) <= \<const0>\;
  LOCKSTEP_Out(2079) <= \<const0>\;
  LOCKSTEP_Out(2080) <= \<const0>\;
  LOCKSTEP_Out(2081) <= \<const0>\;
  LOCKSTEP_Out(2082) <= \<const0>\;
  LOCKSTEP_Out(2083) <= \<const0>\;
  LOCKSTEP_Out(2084) <= \<const0>\;
  LOCKSTEP_Out(2085) <= \<const0>\;
  LOCKSTEP_Out(2086) <= \<const0>\;
  LOCKSTEP_Out(2087) <= \<const0>\;
  LOCKSTEP_Out(2088) <= \<const0>\;
  LOCKSTEP_Out(2089) <= \<const0>\;
  LOCKSTEP_Out(2090) <= \<const0>\;
  LOCKSTEP_Out(2091) <= \<const0>\;
  LOCKSTEP_Out(2092) <= \<const0>\;
  LOCKSTEP_Out(2093) <= \<const0>\;
  LOCKSTEP_Out(2094) <= \<const0>\;
  LOCKSTEP_Out(2095) <= \<const0>\;
  LOCKSTEP_Out(2096) <= \<const0>\;
  LOCKSTEP_Out(2097) <= \<const0>\;
  LOCKSTEP_Out(2098) <= \<const0>\;
  LOCKSTEP_Out(2099) <= \<const0>\;
  LOCKSTEP_Out(2100) <= \<const0>\;
  LOCKSTEP_Out(2101) <= \<const0>\;
  LOCKSTEP_Out(2102) <= \<const0>\;
  LOCKSTEP_Out(2103) <= \<const0>\;
  LOCKSTEP_Out(2104) <= \<const0>\;
  LOCKSTEP_Out(2105) <= \<const0>\;
  LOCKSTEP_Out(2106) <= \<const0>\;
  LOCKSTEP_Out(2107) <= \<const0>\;
  LOCKSTEP_Out(2108) <= \<const0>\;
  LOCKSTEP_Out(2109) <= \<const0>\;
  LOCKSTEP_Out(2110) <= \<const0>\;
  LOCKSTEP_Out(2111) <= \<const0>\;
  LOCKSTEP_Out(2112) <= \<const0>\;
  LOCKSTEP_Out(2113) <= \<const0>\;
  LOCKSTEP_Out(2114) <= \<const0>\;
  LOCKSTEP_Out(2115) <= \<const0>\;
  LOCKSTEP_Out(2116) <= \<const0>\;
  LOCKSTEP_Out(2117) <= \<const0>\;
  LOCKSTEP_Out(2118) <= \<const0>\;
  LOCKSTEP_Out(2119) <= \<const0>\;
  LOCKSTEP_Out(2120) <= \<const0>\;
  LOCKSTEP_Out(2121) <= \<const0>\;
  LOCKSTEP_Out(2122) <= \<const0>\;
  LOCKSTEP_Out(2123) <= \<const0>\;
  LOCKSTEP_Out(2124) <= \<const0>\;
  LOCKSTEP_Out(2125) <= \<const0>\;
  LOCKSTEP_Out(2126) <= \<const0>\;
  LOCKSTEP_Out(2127) <= \<const0>\;
  LOCKSTEP_Out(2128) <= \<const0>\;
  LOCKSTEP_Out(2129) <= \<const0>\;
  LOCKSTEP_Out(2130) <= \<const0>\;
  LOCKSTEP_Out(2131) <= \<const0>\;
  LOCKSTEP_Out(2132) <= \<const0>\;
  LOCKSTEP_Out(2133) <= \<const0>\;
  LOCKSTEP_Out(2134) <= \<const0>\;
  LOCKSTEP_Out(2135) <= \<const0>\;
  LOCKSTEP_Out(2136) <= \<const0>\;
  LOCKSTEP_Out(2137) <= \<const0>\;
  LOCKSTEP_Out(2138) <= \<const0>\;
  LOCKSTEP_Out(2139) <= \<const0>\;
  LOCKSTEP_Out(2140) <= \<const0>\;
  LOCKSTEP_Out(2141) <= \<const0>\;
  LOCKSTEP_Out(2142) <= \<const0>\;
  LOCKSTEP_Out(2143) <= \<const0>\;
  LOCKSTEP_Out(2144) <= \<const0>\;
  LOCKSTEP_Out(2145) <= \<const0>\;
  LOCKSTEP_Out(2146) <= \<const0>\;
  LOCKSTEP_Out(2147) <= \<const0>\;
  LOCKSTEP_Out(2148) <= \<const0>\;
  LOCKSTEP_Out(2149) <= \<const0>\;
  LOCKSTEP_Out(2150) <= \<const0>\;
  LOCKSTEP_Out(2151) <= \<const0>\;
  LOCKSTEP_Out(2152) <= \<const0>\;
  LOCKSTEP_Out(2153) <= \<const0>\;
  LOCKSTEP_Out(2154) <= \<const0>\;
  LOCKSTEP_Out(2155) <= \<const0>\;
  LOCKSTEP_Out(2156) <= \<const0>\;
  LOCKSTEP_Out(2157) <= \<const0>\;
  LOCKSTEP_Out(2158) <= \<const0>\;
  LOCKSTEP_Out(2159) <= \<const0>\;
  LOCKSTEP_Out(2160) <= \<const0>\;
  LOCKSTEP_Out(2161) <= \<const0>\;
  LOCKSTEP_Out(2162) <= \<const0>\;
  LOCKSTEP_Out(2163) <= \<const0>\;
  LOCKSTEP_Out(2164) <= \<const0>\;
  LOCKSTEP_Out(2165) <= \<const0>\;
  LOCKSTEP_Out(2166) <= \<const0>\;
  LOCKSTEP_Out(2167) <= \<const0>\;
  LOCKSTEP_Out(2168) <= \<const0>\;
  LOCKSTEP_Out(2169) <= \<const0>\;
  LOCKSTEP_Out(2170) <= \<const0>\;
  LOCKSTEP_Out(2171) <= \<const0>\;
  LOCKSTEP_Out(2172) <= \<const0>\;
  LOCKSTEP_Out(2173) <= \<const0>\;
  LOCKSTEP_Out(2174) <= \<const0>\;
  LOCKSTEP_Out(2175) <= \<const0>\;
  LOCKSTEP_Out(2176) <= \<const0>\;
  LOCKSTEP_Out(2177) <= \<const0>\;
  LOCKSTEP_Out(2178) <= \<const0>\;
  LOCKSTEP_Out(2179) <= \<const0>\;
  LOCKSTEP_Out(2180) <= \<const0>\;
  LOCKSTEP_Out(2181) <= \<const0>\;
  LOCKSTEP_Out(2182) <= \<const0>\;
  LOCKSTEP_Out(2183) <= \<const0>\;
  LOCKSTEP_Out(2184) <= \<const0>\;
  LOCKSTEP_Out(2185) <= \<const0>\;
  LOCKSTEP_Out(2186) <= \<const0>\;
  LOCKSTEP_Out(2187) <= \<const0>\;
  LOCKSTEP_Out(2188) <= \<const0>\;
  LOCKSTEP_Out(2189) <= \<const0>\;
  LOCKSTEP_Out(2190) <= \<const0>\;
  LOCKSTEP_Out(2191) <= \<const0>\;
  LOCKSTEP_Out(2192) <= \<const0>\;
  LOCKSTEP_Out(2193) <= \<const0>\;
  LOCKSTEP_Out(2194) <= \<const0>\;
  LOCKSTEP_Out(2195) <= \<const0>\;
  LOCKSTEP_Out(2196) <= \<const0>\;
  LOCKSTEP_Out(2197) <= \<const0>\;
  LOCKSTEP_Out(2198) <= \<const0>\;
  LOCKSTEP_Out(2199) <= \<const0>\;
  LOCKSTEP_Out(2200) <= \<const0>\;
  LOCKSTEP_Out(2201) <= \<const0>\;
  LOCKSTEP_Out(2202) <= \<const0>\;
  LOCKSTEP_Out(2203) <= \<const0>\;
  LOCKSTEP_Out(2204) <= \<const0>\;
  LOCKSTEP_Out(2205) <= \<const0>\;
  LOCKSTEP_Out(2206) <= \<const0>\;
  LOCKSTEP_Out(2207) <= \<const0>\;
  LOCKSTEP_Out(2208) <= \<const0>\;
  LOCKSTEP_Out(2209) <= \<const0>\;
  LOCKSTEP_Out(2210) <= \<const0>\;
  LOCKSTEP_Out(2211) <= \<const0>\;
  LOCKSTEP_Out(2212) <= \<const0>\;
  LOCKSTEP_Out(2213) <= \<const0>\;
  LOCKSTEP_Out(2214) <= \<const0>\;
  LOCKSTEP_Out(2215) <= \<const0>\;
  LOCKSTEP_Out(2216) <= \<const0>\;
  LOCKSTEP_Out(2217) <= \<const0>\;
  LOCKSTEP_Out(2218) <= \<const0>\;
  LOCKSTEP_Out(2219) <= \<const0>\;
  LOCKSTEP_Out(2220) <= \<const0>\;
  LOCKSTEP_Out(2221) <= \<const0>\;
  LOCKSTEP_Out(2222) <= \<const0>\;
  LOCKSTEP_Out(2223) <= \<const0>\;
  LOCKSTEP_Out(2224) <= \<const0>\;
  LOCKSTEP_Out(2225) <= \<const0>\;
  LOCKSTEP_Out(2226) <= \<const0>\;
  LOCKSTEP_Out(2227) <= \<const0>\;
  LOCKSTEP_Out(2228) <= \<const0>\;
  LOCKSTEP_Out(2229) <= \<const0>\;
  LOCKSTEP_Out(2230) <= \<const0>\;
  LOCKSTEP_Out(2231) <= \<const0>\;
  LOCKSTEP_Out(2232) <= \<const0>\;
  LOCKSTEP_Out(2233) <= \<const0>\;
  LOCKSTEP_Out(2234) <= \<const0>\;
  LOCKSTEP_Out(2235) <= \<const0>\;
  LOCKSTEP_Out(2236) <= \<const0>\;
  LOCKSTEP_Out(2237) <= \<const0>\;
  LOCKSTEP_Out(2238) <= \<const0>\;
  LOCKSTEP_Out(2239) <= \<const0>\;
  LOCKSTEP_Out(2240) <= \<const0>\;
  LOCKSTEP_Out(2241) <= \<const0>\;
  LOCKSTEP_Out(2242) <= \<const0>\;
  LOCKSTEP_Out(2243) <= \<const0>\;
  LOCKSTEP_Out(2244) <= \<const0>\;
  LOCKSTEP_Out(2245) <= \<const0>\;
  LOCKSTEP_Out(2246) <= \<const0>\;
  LOCKSTEP_Out(2247) <= \<const0>\;
  LOCKSTEP_Out(2248) <= \<const0>\;
  LOCKSTEP_Out(2249) <= \<const0>\;
  LOCKSTEP_Out(2250) <= \<const0>\;
  LOCKSTEP_Out(2251) <= \<const0>\;
  LOCKSTEP_Out(2252) <= \<const0>\;
  LOCKSTEP_Out(2253) <= \<const0>\;
  LOCKSTEP_Out(2254) <= \<const0>\;
  LOCKSTEP_Out(2255) <= \<const0>\;
  LOCKSTEP_Out(2256) <= \<const0>\;
  LOCKSTEP_Out(2257) <= \<const0>\;
  LOCKSTEP_Out(2258) <= \<const0>\;
  LOCKSTEP_Out(2259) <= \<const0>\;
  LOCKSTEP_Out(2260) <= \<const0>\;
  LOCKSTEP_Out(2261) <= \<const0>\;
  LOCKSTEP_Out(2262) <= \<const0>\;
  LOCKSTEP_Out(2263) <= \<const0>\;
  LOCKSTEP_Out(2264) <= \<const0>\;
  LOCKSTEP_Out(2265) <= \<const0>\;
  LOCKSTEP_Out(2266) <= \<const0>\;
  LOCKSTEP_Out(2267) <= \<const0>\;
  LOCKSTEP_Out(2268) <= \<const0>\;
  LOCKSTEP_Out(2269) <= \<const0>\;
  LOCKSTEP_Out(2270) <= \<const0>\;
  LOCKSTEP_Out(2271) <= \<const0>\;
  LOCKSTEP_Out(2272) <= \<const0>\;
  LOCKSTEP_Out(2273) <= \<const0>\;
  LOCKSTEP_Out(2274) <= \<const0>\;
  LOCKSTEP_Out(2275) <= \<const0>\;
  LOCKSTEP_Out(2276) <= \<const0>\;
  LOCKSTEP_Out(2277) <= \<const0>\;
  LOCKSTEP_Out(2278) <= \<const0>\;
  LOCKSTEP_Out(2279) <= \<const0>\;
  LOCKSTEP_Out(2280) <= \<const0>\;
  LOCKSTEP_Out(2281) <= \<const0>\;
  LOCKSTEP_Out(2282) <= \<const0>\;
  LOCKSTEP_Out(2283) <= \<const0>\;
  LOCKSTEP_Out(2284) <= \<const0>\;
  LOCKSTEP_Out(2285) <= \<const0>\;
  LOCKSTEP_Out(2286) <= \<const0>\;
  LOCKSTEP_Out(2287) <= \<const0>\;
  LOCKSTEP_Out(2288) <= \<const0>\;
  LOCKSTEP_Out(2289) <= \<const0>\;
  LOCKSTEP_Out(2290) <= \<const0>\;
  LOCKSTEP_Out(2291) <= \<const0>\;
  LOCKSTEP_Out(2292) <= \<const0>\;
  LOCKSTEP_Out(2293) <= \<const0>\;
  LOCKSTEP_Out(2294) <= \<const0>\;
  LOCKSTEP_Out(2295) <= \<const0>\;
  LOCKSTEP_Out(2296) <= \<const0>\;
  LOCKSTEP_Out(2297) <= \<const0>\;
  LOCKSTEP_Out(2298) <= \<const0>\;
  LOCKSTEP_Out(2299) <= \<const0>\;
  LOCKSTEP_Out(2300) <= \<const0>\;
  LOCKSTEP_Out(2301) <= \<const0>\;
  LOCKSTEP_Out(2302) <= \<const0>\;
  LOCKSTEP_Out(2303) <= \<const0>\;
  LOCKSTEP_Out(2304) <= \<const0>\;
  LOCKSTEP_Out(2305) <= \<const0>\;
  LOCKSTEP_Out(2306) <= \<const0>\;
  LOCKSTEP_Out(2307) <= \<const0>\;
  LOCKSTEP_Out(2308) <= \<const0>\;
  LOCKSTEP_Out(2309) <= \<const0>\;
  LOCKSTEP_Out(2310) <= \<const0>\;
  LOCKSTEP_Out(2311) <= \<const0>\;
  LOCKSTEP_Out(2312) <= \<const0>\;
  LOCKSTEP_Out(2313) <= \<const0>\;
  LOCKSTEP_Out(2314) <= \<const0>\;
  LOCKSTEP_Out(2315) <= \<const0>\;
  LOCKSTEP_Out(2316) <= \<const0>\;
  LOCKSTEP_Out(2317) <= \<const0>\;
  LOCKSTEP_Out(2318) <= \<const0>\;
  LOCKSTEP_Out(2319) <= \<const0>\;
  LOCKSTEP_Out(2320) <= \<const0>\;
  LOCKSTEP_Out(2321) <= \<const0>\;
  LOCKSTEP_Out(2322) <= \<const0>\;
  LOCKSTEP_Out(2323) <= \<const0>\;
  LOCKSTEP_Out(2324) <= \<const0>\;
  LOCKSTEP_Out(2325) <= \<const0>\;
  LOCKSTEP_Out(2326) <= \<const0>\;
  LOCKSTEP_Out(2327) <= \<const0>\;
  LOCKSTEP_Out(2328) <= \<const0>\;
  LOCKSTEP_Out(2329) <= \<const0>\;
  LOCKSTEP_Out(2330) <= \<const0>\;
  LOCKSTEP_Out(2331) <= \<const0>\;
  LOCKSTEP_Out(2332) <= \<const0>\;
  LOCKSTEP_Out(2333) <= \<const0>\;
  LOCKSTEP_Out(2334) <= \<const0>\;
  LOCKSTEP_Out(2335) <= \<const0>\;
  LOCKSTEP_Out(2336) <= \<const0>\;
  LOCKSTEP_Out(2337) <= \<const0>\;
  LOCKSTEP_Out(2338) <= \<const0>\;
  LOCKSTEP_Out(2339) <= \<const0>\;
  LOCKSTEP_Out(2340) <= \<const0>\;
  LOCKSTEP_Out(2341) <= \<const0>\;
  LOCKSTEP_Out(2342) <= \<const0>\;
  LOCKSTEP_Out(2343) <= \<const0>\;
  LOCKSTEP_Out(2344) <= \<const0>\;
  LOCKSTEP_Out(2345) <= \<const0>\;
  LOCKSTEP_Out(2346) <= \<const0>\;
  LOCKSTEP_Out(2347) <= \<const0>\;
  LOCKSTEP_Out(2348) <= \<const0>\;
  LOCKSTEP_Out(2349) <= \<const0>\;
  LOCKSTEP_Out(2350) <= \<const0>\;
  LOCKSTEP_Out(2351) <= \<const0>\;
  LOCKSTEP_Out(2352) <= \<const0>\;
  LOCKSTEP_Out(2353) <= \<const0>\;
  LOCKSTEP_Out(2354) <= \<const0>\;
  LOCKSTEP_Out(2355) <= \<const0>\;
  LOCKSTEP_Out(2356) <= \<const0>\;
  LOCKSTEP_Out(2357) <= \<const0>\;
  LOCKSTEP_Out(2358) <= \<const0>\;
  LOCKSTEP_Out(2359) <= \<const0>\;
  LOCKSTEP_Out(2360) <= \<const0>\;
  LOCKSTEP_Out(2361) <= \<const0>\;
  LOCKSTEP_Out(2362) <= \<const0>\;
  LOCKSTEP_Out(2363) <= \<const0>\;
  LOCKSTEP_Out(2364) <= \<const0>\;
  LOCKSTEP_Out(2365) <= \<const0>\;
  LOCKSTEP_Out(2366) <= \<const0>\;
  LOCKSTEP_Out(2367) <= \<const0>\;
  LOCKSTEP_Out(2368) <= \<const0>\;
  LOCKSTEP_Out(2369) <= \<const0>\;
  LOCKSTEP_Out(2370) <= \<const0>\;
  LOCKSTEP_Out(2371) <= \<const0>\;
  LOCKSTEP_Out(2372) <= \<const0>\;
  LOCKSTEP_Out(2373) <= \<const0>\;
  LOCKSTEP_Out(2374) <= \<const0>\;
  LOCKSTEP_Out(2375) <= \<const0>\;
  LOCKSTEP_Out(2376) <= \<const0>\;
  LOCKSTEP_Out(2377) <= \<const0>\;
  LOCKSTEP_Out(2378) <= \<const0>\;
  LOCKSTEP_Out(2379) <= \<const0>\;
  LOCKSTEP_Out(2380) <= \<const0>\;
  LOCKSTEP_Out(2381) <= \<const0>\;
  LOCKSTEP_Out(2382) <= \<const0>\;
  LOCKSTEP_Out(2383) <= \<const0>\;
  LOCKSTEP_Out(2384) <= \<const0>\;
  LOCKSTEP_Out(2385) <= \<const0>\;
  LOCKSTEP_Out(2386) <= \<const0>\;
  LOCKSTEP_Out(2387) <= \<const0>\;
  LOCKSTEP_Out(2388) <= \<const0>\;
  LOCKSTEP_Out(2389) <= \<const0>\;
  LOCKSTEP_Out(2390) <= \<const0>\;
  LOCKSTEP_Out(2391) <= \<const0>\;
  LOCKSTEP_Out(2392) <= \<const0>\;
  LOCKSTEP_Out(2393) <= \<const0>\;
  LOCKSTEP_Out(2394) <= \<const0>\;
  LOCKSTEP_Out(2395) <= \<const0>\;
  LOCKSTEP_Out(2396) <= \<const0>\;
  LOCKSTEP_Out(2397) <= \<const0>\;
  LOCKSTEP_Out(2398) <= \<const0>\;
  LOCKSTEP_Out(2399) <= \<const0>\;
  LOCKSTEP_Out(2400) <= \<const0>\;
  LOCKSTEP_Out(2401) <= \<const0>\;
  LOCKSTEP_Out(2402) <= \<const0>\;
  LOCKSTEP_Out(2403) <= \<const0>\;
  LOCKSTEP_Out(2404) <= \<const0>\;
  LOCKSTEP_Out(2405) <= \<const0>\;
  LOCKSTEP_Out(2406) <= \<const0>\;
  LOCKSTEP_Out(2407) <= \<const0>\;
  LOCKSTEP_Out(2408) <= \<const0>\;
  LOCKSTEP_Out(2409) <= \<const0>\;
  LOCKSTEP_Out(2410) <= \<const0>\;
  LOCKSTEP_Out(2411) <= \<const0>\;
  LOCKSTEP_Out(2412) <= \<const0>\;
  LOCKSTEP_Out(2413) <= \<const0>\;
  LOCKSTEP_Out(2414) <= \<const0>\;
  LOCKSTEP_Out(2415) <= \<const0>\;
  LOCKSTEP_Out(2416) <= \<const0>\;
  LOCKSTEP_Out(2417) <= \<const0>\;
  LOCKSTEP_Out(2418) <= \<const0>\;
  LOCKSTEP_Out(2419) <= \<const0>\;
  LOCKSTEP_Out(2420) <= \<const0>\;
  LOCKSTEP_Out(2421) <= \<const0>\;
  LOCKSTEP_Out(2422) <= \<const0>\;
  LOCKSTEP_Out(2423) <= \<const0>\;
  LOCKSTEP_Out(2424) <= \<const0>\;
  LOCKSTEP_Out(2425) <= \<const0>\;
  LOCKSTEP_Out(2426) <= \<const0>\;
  LOCKSTEP_Out(2427) <= \<const0>\;
  LOCKSTEP_Out(2428) <= \<const0>\;
  LOCKSTEP_Out(2429) <= \<const0>\;
  LOCKSTEP_Out(2430) <= \<const0>\;
  LOCKSTEP_Out(2431) <= \<const0>\;
  LOCKSTEP_Out(2432) <= \<const0>\;
  LOCKSTEP_Out(2433) <= \<const0>\;
  LOCKSTEP_Out(2434) <= \<const0>\;
  LOCKSTEP_Out(2435) <= \<const0>\;
  LOCKSTEP_Out(2436) <= \<const0>\;
  LOCKSTEP_Out(2437) <= \<const0>\;
  LOCKSTEP_Out(2438) <= \<const0>\;
  LOCKSTEP_Out(2439) <= \<const0>\;
  LOCKSTEP_Out(2440) <= \<const0>\;
  LOCKSTEP_Out(2441) <= \<const0>\;
  LOCKSTEP_Out(2442) <= \<const0>\;
  LOCKSTEP_Out(2443) <= \<const0>\;
  LOCKSTEP_Out(2444) <= \<const0>\;
  LOCKSTEP_Out(2445) <= \<const0>\;
  LOCKSTEP_Out(2446) <= \<const0>\;
  LOCKSTEP_Out(2447) <= \<const0>\;
  LOCKSTEP_Out(2448) <= \<const0>\;
  LOCKSTEP_Out(2449) <= \<const0>\;
  LOCKSTEP_Out(2450) <= \<const0>\;
  LOCKSTEP_Out(2451) <= \<const0>\;
  LOCKSTEP_Out(2452) <= \<const0>\;
  LOCKSTEP_Out(2453) <= \<const0>\;
  LOCKSTEP_Out(2454) <= \<const0>\;
  LOCKSTEP_Out(2455) <= \<const0>\;
  LOCKSTEP_Out(2456) <= \<const0>\;
  LOCKSTEP_Out(2457) <= \<const0>\;
  LOCKSTEP_Out(2458) <= \<const0>\;
  LOCKSTEP_Out(2459) <= \<const0>\;
  LOCKSTEP_Out(2460) <= \<const0>\;
  LOCKSTEP_Out(2461) <= \<const0>\;
  LOCKSTEP_Out(2462) <= \<const0>\;
  LOCKSTEP_Out(2463) <= \<const0>\;
  LOCKSTEP_Out(2464) <= \<const0>\;
  LOCKSTEP_Out(2465) <= \<const0>\;
  LOCKSTEP_Out(2466) <= \<const0>\;
  LOCKSTEP_Out(2467) <= \<const0>\;
  LOCKSTEP_Out(2468) <= \<const0>\;
  LOCKSTEP_Out(2469) <= \<const0>\;
  LOCKSTEP_Out(2470) <= \<const0>\;
  LOCKSTEP_Out(2471) <= \<const0>\;
  LOCKSTEP_Out(2472) <= \<const0>\;
  LOCKSTEP_Out(2473) <= \<const0>\;
  LOCKSTEP_Out(2474) <= \<const0>\;
  LOCKSTEP_Out(2475) <= \<const0>\;
  LOCKSTEP_Out(2476) <= \<const0>\;
  LOCKSTEP_Out(2477) <= \<const0>\;
  LOCKSTEP_Out(2478) <= \<const0>\;
  LOCKSTEP_Out(2479) <= \<const0>\;
  LOCKSTEP_Out(2480) <= \<const0>\;
  LOCKSTEP_Out(2481) <= \<const0>\;
  LOCKSTEP_Out(2482) <= \<const0>\;
  LOCKSTEP_Out(2483) <= \<const0>\;
  LOCKSTEP_Out(2484) <= \<const0>\;
  LOCKSTEP_Out(2485) <= \<const0>\;
  LOCKSTEP_Out(2486) <= \<const0>\;
  LOCKSTEP_Out(2487) <= \<const0>\;
  LOCKSTEP_Out(2488) <= \<const0>\;
  LOCKSTEP_Out(2489) <= \<const0>\;
  LOCKSTEP_Out(2490) <= \<const0>\;
  LOCKSTEP_Out(2491) <= \<const0>\;
  LOCKSTEP_Out(2492) <= \<const0>\;
  LOCKSTEP_Out(2493) <= \<const0>\;
  LOCKSTEP_Out(2494) <= \<const0>\;
  LOCKSTEP_Out(2495) <= \<const0>\;
  LOCKSTEP_Out(2496) <= \<const0>\;
  LOCKSTEP_Out(2497) <= \<const0>\;
  LOCKSTEP_Out(2498) <= \<const0>\;
  LOCKSTEP_Out(2499) <= \<const0>\;
  LOCKSTEP_Out(2500) <= \<const0>\;
  LOCKSTEP_Out(2501) <= \<const0>\;
  LOCKSTEP_Out(2502) <= \<const0>\;
  LOCKSTEP_Out(2503) <= \<const0>\;
  LOCKSTEP_Out(2504) <= \<const0>\;
  LOCKSTEP_Out(2505) <= \<const0>\;
  LOCKSTEP_Out(2506) <= \<const0>\;
  LOCKSTEP_Out(2507) <= \<const0>\;
  LOCKSTEP_Out(2508) <= \<const0>\;
  LOCKSTEP_Out(2509) <= \<const0>\;
  LOCKSTEP_Out(2510) <= \<const0>\;
  LOCKSTEP_Out(2511) <= \<const0>\;
  LOCKSTEP_Out(2512) <= \<const0>\;
  LOCKSTEP_Out(2513) <= \<const0>\;
  LOCKSTEP_Out(2514) <= \<const0>\;
  LOCKSTEP_Out(2515) <= \<const0>\;
  LOCKSTEP_Out(2516) <= \<const0>\;
  LOCKSTEP_Out(2517) <= \<const0>\;
  LOCKSTEP_Out(2518) <= \<const0>\;
  LOCKSTEP_Out(2519) <= \<const0>\;
  LOCKSTEP_Out(2520) <= \<const0>\;
  LOCKSTEP_Out(2521) <= \<const0>\;
  LOCKSTEP_Out(2522) <= \<const0>\;
  LOCKSTEP_Out(2523) <= \<const0>\;
  LOCKSTEP_Out(2524) <= \<const0>\;
  LOCKSTEP_Out(2525) <= \<const0>\;
  LOCKSTEP_Out(2526) <= \<const0>\;
  LOCKSTEP_Out(2527) <= \<const0>\;
  LOCKSTEP_Out(2528) <= \<const0>\;
  LOCKSTEP_Out(2529) <= \<const0>\;
  LOCKSTEP_Out(2530) <= \<const0>\;
  LOCKSTEP_Out(2531) <= \<const0>\;
  LOCKSTEP_Out(2532) <= \<const0>\;
  LOCKSTEP_Out(2533) <= \<const0>\;
  LOCKSTEP_Out(2534) <= \<const0>\;
  LOCKSTEP_Out(2535) <= \<const0>\;
  LOCKSTEP_Out(2536) <= \<const0>\;
  LOCKSTEP_Out(2537) <= \<const0>\;
  LOCKSTEP_Out(2538) <= \<const0>\;
  LOCKSTEP_Out(2539) <= \<const0>\;
  LOCKSTEP_Out(2540) <= \<const0>\;
  LOCKSTEP_Out(2541) <= \<const0>\;
  LOCKSTEP_Out(2542) <= \<const0>\;
  LOCKSTEP_Out(2543) <= \<const0>\;
  LOCKSTEP_Out(2544) <= \<const0>\;
  LOCKSTEP_Out(2545) <= \<const0>\;
  LOCKSTEP_Out(2546) <= \<const0>\;
  LOCKSTEP_Out(2547) <= \<const0>\;
  LOCKSTEP_Out(2548) <= \<const0>\;
  LOCKSTEP_Out(2549) <= \<const0>\;
  LOCKSTEP_Out(2550) <= \<const0>\;
  LOCKSTEP_Out(2551) <= \<const0>\;
  LOCKSTEP_Out(2552) <= \<const0>\;
  LOCKSTEP_Out(2553) <= \<const0>\;
  LOCKSTEP_Out(2554) <= \<const0>\;
  LOCKSTEP_Out(2555) <= \<const0>\;
  LOCKSTEP_Out(2556) <= \<const0>\;
  LOCKSTEP_Out(2557) <= \<const0>\;
  LOCKSTEP_Out(2558) <= \<const0>\;
  LOCKSTEP_Out(2559) <= \<const0>\;
  LOCKSTEP_Out(2560) <= \<const0>\;
  LOCKSTEP_Out(2561) <= \<const0>\;
  LOCKSTEP_Out(2562) <= \<const0>\;
  LOCKSTEP_Out(2563) <= \<const0>\;
  LOCKSTEP_Out(2564) <= \<const0>\;
  LOCKSTEP_Out(2565) <= \<const0>\;
  LOCKSTEP_Out(2566) <= \<const0>\;
  LOCKSTEP_Out(2567) <= \<const0>\;
  LOCKSTEP_Out(2568) <= \<const0>\;
  LOCKSTEP_Out(2569) <= \<const0>\;
  LOCKSTEP_Out(2570) <= \<const0>\;
  LOCKSTEP_Out(2571) <= \<const0>\;
  LOCKSTEP_Out(2572) <= \<const0>\;
  LOCKSTEP_Out(2573) <= \<const0>\;
  LOCKSTEP_Out(2574) <= \<const0>\;
  LOCKSTEP_Out(2575) <= \<const0>\;
  LOCKSTEP_Out(2576) <= \<const0>\;
  LOCKSTEP_Out(2577) <= \<const0>\;
  LOCKSTEP_Out(2578) <= \<const0>\;
  LOCKSTEP_Out(2579) <= \<const0>\;
  LOCKSTEP_Out(2580) <= \<const0>\;
  LOCKSTEP_Out(2581) <= \<const0>\;
  LOCKSTEP_Out(2582) <= \<const0>\;
  LOCKSTEP_Out(2583) <= \<const0>\;
  LOCKSTEP_Out(2584) <= \<const0>\;
  LOCKSTEP_Out(2585) <= \<const0>\;
  LOCKSTEP_Out(2586) <= \<const0>\;
  LOCKSTEP_Out(2587) <= \<const0>\;
  LOCKSTEP_Out(2588) <= \<const0>\;
  LOCKSTEP_Out(2589) <= \<const0>\;
  LOCKSTEP_Out(2590) <= \<const0>\;
  LOCKSTEP_Out(2591) <= \<const0>\;
  LOCKSTEP_Out(2592) <= \<const0>\;
  LOCKSTEP_Out(2593) <= \<const0>\;
  LOCKSTEP_Out(2594) <= \<const0>\;
  LOCKSTEP_Out(2595) <= \<const0>\;
  LOCKSTEP_Out(2596) <= \<const0>\;
  LOCKSTEP_Out(2597) <= \<const0>\;
  LOCKSTEP_Out(2598) <= \<const0>\;
  LOCKSTEP_Out(2599) <= \<const0>\;
  LOCKSTEP_Out(2600) <= \<const0>\;
  LOCKSTEP_Out(2601) <= \<const0>\;
  LOCKSTEP_Out(2602) <= \<const0>\;
  LOCKSTEP_Out(2603) <= \<const0>\;
  LOCKSTEP_Out(2604) <= \<const0>\;
  LOCKSTEP_Out(2605) <= \<const0>\;
  LOCKSTEP_Out(2606) <= \<const0>\;
  LOCKSTEP_Out(2607) <= \<const0>\;
  LOCKSTEP_Out(2608) <= \<const0>\;
  LOCKSTEP_Out(2609) <= \<const0>\;
  LOCKSTEP_Out(2610) <= \<const0>\;
  LOCKSTEP_Out(2611) <= \<const0>\;
  LOCKSTEP_Out(2612) <= \<const0>\;
  LOCKSTEP_Out(2613) <= \<const0>\;
  LOCKSTEP_Out(2614) <= \<const0>\;
  LOCKSTEP_Out(2615) <= \<const0>\;
  LOCKSTEP_Out(2616) <= \<const0>\;
  LOCKSTEP_Out(2617) <= \<const0>\;
  LOCKSTEP_Out(2618) <= \<const0>\;
  LOCKSTEP_Out(2619) <= \<const0>\;
  LOCKSTEP_Out(2620) <= \<const0>\;
  LOCKSTEP_Out(2621) <= \<const0>\;
  LOCKSTEP_Out(2622) <= \<const0>\;
  LOCKSTEP_Out(2623) <= \<const0>\;
  LOCKSTEP_Out(2624) <= \<const0>\;
  LOCKSTEP_Out(2625) <= \<const0>\;
  LOCKSTEP_Out(2626) <= \<const0>\;
  LOCKSTEP_Out(2627) <= \<const0>\;
  LOCKSTEP_Out(2628) <= \<const0>\;
  LOCKSTEP_Out(2629) <= \<const0>\;
  LOCKSTEP_Out(2630) <= \<const0>\;
  LOCKSTEP_Out(2631) <= \<const0>\;
  LOCKSTEP_Out(2632) <= \<const0>\;
  LOCKSTEP_Out(2633) <= \<const0>\;
  LOCKSTEP_Out(2634) <= \<const0>\;
  LOCKSTEP_Out(2635) <= \<const0>\;
  LOCKSTEP_Out(2636) <= \<const0>\;
  LOCKSTEP_Out(2637) <= \<const0>\;
  LOCKSTEP_Out(2638) <= \<const0>\;
  LOCKSTEP_Out(2639) <= \<const0>\;
  LOCKSTEP_Out(2640) <= \<const0>\;
  LOCKSTEP_Out(2641) <= \<const0>\;
  LOCKSTEP_Out(2642) <= \<const0>\;
  LOCKSTEP_Out(2643) <= \<const0>\;
  LOCKSTEP_Out(2644) <= \<const0>\;
  LOCKSTEP_Out(2645) <= \<const0>\;
  LOCKSTEP_Out(2646) <= \<const0>\;
  LOCKSTEP_Out(2647) <= \<const0>\;
  LOCKSTEP_Out(2648) <= \<const0>\;
  LOCKSTEP_Out(2649) <= \<const0>\;
  LOCKSTEP_Out(2650) <= \<const0>\;
  LOCKSTEP_Out(2651) <= \<const0>\;
  LOCKSTEP_Out(2652) <= \<const0>\;
  LOCKSTEP_Out(2653) <= \<const0>\;
  LOCKSTEP_Out(2654) <= \<const0>\;
  LOCKSTEP_Out(2655) <= \<const0>\;
  LOCKSTEP_Out(2656) <= \<const0>\;
  LOCKSTEP_Out(2657) <= \<const0>\;
  LOCKSTEP_Out(2658) <= \<const0>\;
  LOCKSTEP_Out(2659) <= \<const0>\;
  LOCKSTEP_Out(2660) <= \<const0>\;
  LOCKSTEP_Out(2661) <= \<const0>\;
  LOCKSTEP_Out(2662) <= \<const0>\;
  LOCKSTEP_Out(2663) <= \<const0>\;
  LOCKSTEP_Out(2664) <= \<const0>\;
  LOCKSTEP_Out(2665) <= \<const0>\;
  LOCKSTEP_Out(2666) <= \<const0>\;
  LOCKSTEP_Out(2667) <= \<const0>\;
  LOCKSTEP_Out(2668) <= \<const0>\;
  LOCKSTEP_Out(2669) <= \<const0>\;
  LOCKSTEP_Out(2670) <= \<const0>\;
  LOCKSTEP_Out(2671) <= \<const0>\;
  LOCKSTEP_Out(2672) <= \<const0>\;
  LOCKSTEP_Out(2673) <= \<const0>\;
  LOCKSTEP_Out(2674) <= \<const0>\;
  LOCKSTEP_Out(2675) <= \<const0>\;
  LOCKSTEP_Out(2676) <= \<const0>\;
  LOCKSTEP_Out(2677) <= \<const0>\;
  LOCKSTEP_Out(2678) <= \<const0>\;
  LOCKSTEP_Out(2679) <= \<const0>\;
  LOCKSTEP_Out(2680) <= \<const0>\;
  LOCKSTEP_Out(2681) <= \<const0>\;
  LOCKSTEP_Out(2682) <= \<const0>\;
  LOCKSTEP_Out(2683) <= \<const0>\;
  LOCKSTEP_Out(2684) <= \<const0>\;
  LOCKSTEP_Out(2685) <= \<const0>\;
  LOCKSTEP_Out(2686) <= \<const0>\;
  LOCKSTEP_Out(2687) <= \<const0>\;
  LOCKSTEP_Out(2688) <= \<const0>\;
  LOCKSTEP_Out(2689) <= \<const0>\;
  LOCKSTEP_Out(2690) <= \<const0>\;
  LOCKSTEP_Out(2691) <= \<const0>\;
  LOCKSTEP_Out(2692) <= \<const0>\;
  LOCKSTEP_Out(2693) <= \<const0>\;
  LOCKSTEP_Out(2694) <= \<const0>\;
  LOCKSTEP_Out(2695) <= \<const0>\;
  LOCKSTEP_Out(2696) <= \<const0>\;
  LOCKSTEP_Out(2697) <= \<const0>\;
  LOCKSTEP_Out(2698) <= \<const0>\;
  LOCKSTEP_Out(2699) <= \<const0>\;
  LOCKSTEP_Out(2700) <= \<const0>\;
  LOCKSTEP_Out(2701) <= \<const0>\;
  LOCKSTEP_Out(2702) <= \<const0>\;
  LOCKSTEP_Out(2703) <= \<const0>\;
  LOCKSTEP_Out(2704) <= \<const0>\;
  LOCKSTEP_Out(2705) <= \<const0>\;
  LOCKSTEP_Out(2706) <= \<const0>\;
  LOCKSTEP_Out(2707) <= \<const0>\;
  LOCKSTEP_Out(2708) <= \<const0>\;
  LOCKSTEP_Out(2709) <= \<const0>\;
  LOCKSTEP_Out(2710) <= \<const0>\;
  LOCKSTEP_Out(2711) <= \<const0>\;
  LOCKSTEP_Out(2712) <= \<const0>\;
  LOCKSTEP_Out(2713) <= \<const0>\;
  LOCKSTEP_Out(2714) <= \<const0>\;
  LOCKSTEP_Out(2715) <= \<const0>\;
  LOCKSTEP_Out(2716) <= \<const0>\;
  LOCKSTEP_Out(2717) <= \<const0>\;
  LOCKSTEP_Out(2718) <= \<const0>\;
  LOCKSTEP_Out(2719) <= \<const0>\;
  LOCKSTEP_Out(2720) <= \<const0>\;
  LOCKSTEP_Out(2721) <= \<const0>\;
  LOCKSTEP_Out(2722) <= \<const0>\;
  LOCKSTEP_Out(2723) <= \<const0>\;
  LOCKSTEP_Out(2724) <= \<const0>\;
  LOCKSTEP_Out(2725) <= \<const0>\;
  LOCKSTEP_Out(2726) <= \<const0>\;
  LOCKSTEP_Out(2727) <= \<const0>\;
  LOCKSTEP_Out(2728) <= \<const0>\;
  LOCKSTEP_Out(2729) <= \<const0>\;
  LOCKSTEP_Out(2730) <= \<const0>\;
  LOCKSTEP_Out(2731) <= \<const0>\;
  LOCKSTEP_Out(2732) <= \<const0>\;
  LOCKSTEP_Out(2733) <= \<const0>\;
  LOCKSTEP_Out(2734) <= \<const0>\;
  LOCKSTEP_Out(2735) <= \<const0>\;
  LOCKSTEP_Out(2736) <= \<const0>\;
  LOCKSTEP_Out(2737) <= \<const0>\;
  LOCKSTEP_Out(2738) <= \<const0>\;
  LOCKSTEP_Out(2739) <= \<const0>\;
  LOCKSTEP_Out(2740) <= \<const0>\;
  LOCKSTEP_Out(2741) <= \<const0>\;
  LOCKSTEP_Out(2742) <= \<const0>\;
  LOCKSTEP_Out(2743) <= \<const0>\;
  LOCKSTEP_Out(2744) <= \<const0>\;
  LOCKSTEP_Out(2745) <= \<const0>\;
  LOCKSTEP_Out(2746) <= \<const0>\;
  LOCKSTEP_Out(2747) <= \<const0>\;
  LOCKSTEP_Out(2748) <= \<const0>\;
  LOCKSTEP_Out(2749) <= \<const0>\;
  LOCKSTEP_Out(2750) <= \<const0>\;
  LOCKSTEP_Out(2751) <= \<const0>\;
  LOCKSTEP_Out(2752) <= \<const0>\;
  LOCKSTEP_Out(2753) <= \<const0>\;
  LOCKSTEP_Out(2754) <= \<const0>\;
  LOCKSTEP_Out(2755) <= \<const0>\;
  LOCKSTEP_Out(2756) <= \<const0>\;
  LOCKSTEP_Out(2757) <= \<const0>\;
  LOCKSTEP_Out(2758) <= \<const0>\;
  LOCKSTEP_Out(2759) <= \<const0>\;
  LOCKSTEP_Out(2760) <= \<const0>\;
  LOCKSTEP_Out(2761) <= \<const0>\;
  LOCKSTEP_Out(2762) <= \<const0>\;
  LOCKSTEP_Out(2763) <= \<const0>\;
  LOCKSTEP_Out(2764) <= \<const0>\;
  LOCKSTEP_Out(2765) <= \<const0>\;
  LOCKSTEP_Out(2766) <= \<const0>\;
  LOCKSTEP_Out(2767) <= \<const0>\;
  LOCKSTEP_Out(2768) <= \<const0>\;
  LOCKSTEP_Out(2769) <= \<const0>\;
  LOCKSTEP_Out(2770) <= \<const0>\;
  LOCKSTEP_Out(2771) <= \<const0>\;
  LOCKSTEP_Out(2772) <= \<const0>\;
  LOCKSTEP_Out(2773) <= \<const0>\;
  LOCKSTEP_Out(2774) <= \<const0>\;
  LOCKSTEP_Out(2775) <= \<const0>\;
  LOCKSTEP_Out(2776) <= \<const0>\;
  LOCKSTEP_Out(2777) <= \<const0>\;
  LOCKSTEP_Out(2778) <= \<const0>\;
  LOCKSTEP_Out(2779) <= \<const0>\;
  LOCKSTEP_Out(2780) <= \<const0>\;
  LOCKSTEP_Out(2781) <= \<const0>\;
  LOCKSTEP_Out(2782) <= \<const0>\;
  LOCKSTEP_Out(2783) <= \<const0>\;
  LOCKSTEP_Out(2784) <= \<const0>\;
  LOCKSTEP_Out(2785) <= \<const0>\;
  LOCKSTEP_Out(2786) <= \<const0>\;
  LOCKSTEP_Out(2787) <= \<const0>\;
  LOCKSTEP_Out(2788) <= \<const0>\;
  LOCKSTEP_Out(2789) <= \<const0>\;
  LOCKSTEP_Out(2790) <= \<const0>\;
  LOCKSTEP_Out(2791) <= \<const0>\;
  LOCKSTEP_Out(2792) <= \<const0>\;
  LOCKSTEP_Out(2793) <= \<const0>\;
  LOCKSTEP_Out(2794) <= \<const0>\;
  LOCKSTEP_Out(2795) <= \<const0>\;
  LOCKSTEP_Out(2796) <= \<const0>\;
  LOCKSTEP_Out(2797) <= \<const0>\;
  LOCKSTEP_Out(2798) <= \<const0>\;
  LOCKSTEP_Out(2799) <= \<const0>\;
  LOCKSTEP_Out(2800) <= \<const0>\;
  LOCKSTEP_Out(2801) <= \<const0>\;
  LOCKSTEP_Out(2802) <= \<const0>\;
  LOCKSTEP_Out(2803) <= \<const0>\;
  LOCKSTEP_Out(2804) <= \<const0>\;
  LOCKSTEP_Out(2805) <= \<const0>\;
  LOCKSTEP_Out(2806) <= \<const0>\;
  LOCKSTEP_Out(2807) <= \<const0>\;
  LOCKSTEP_Out(2808) <= \<const0>\;
  LOCKSTEP_Out(2809) <= \<const0>\;
  LOCKSTEP_Out(2810) <= \<const0>\;
  LOCKSTEP_Out(2811) <= \<const0>\;
  LOCKSTEP_Out(2812) <= \<const0>\;
  LOCKSTEP_Out(2813) <= \<const0>\;
  LOCKSTEP_Out(2814) <= \<const0>\;
  LOCKSTEP_Out(2815) <= \<const0>\;
  LOCKSTEP_Out(2816) <= \<const0>\;
  LOCKSTEP_Out(2817) <= \<const0>\;
  LOCKSTEP_Out(2818) <= \<const0>\;
  LOCKSTEP_Out(2819) <= \<const0>\;
  LOCKSTEP_Out(2820) <= \<const0>\;
  LOCKSTEP_Out(2821) <= \<const0>\;
  LOCKSTEP_Out(2822) <= \<const0>\;
  LOCKSTEP_Out(2823) <= \<const0>\;
  LOCKSTEP_Out(2824) <= \<const0>\;
  LOCKSTEP_Out(2825) <= \<const0>\;
  LOCKSTEP_Out(2826) <= \<const0>\;
  LOCKSTEP_Out(2827) <= \<const0>\;
  LOCKSTEP_Out(2828) <= \<const0>\;
  LOCKSTEP_Out(2829) <= \<const0>\;
  LOCKSTEP_Out(2830) <= \<const0>\;
  LOCKSTEP_Out(2831) <= \<const0>\;
  LOCKSTEP_Out(2832) <= \<const0>\;
  LOCKSTEP_Out(2833) <= \<const0>\;
  LOCKSTEP_Out(2834) <= \<const0>\;
  LOCKSTEP_Out(2835) <= \<const0>\;
  LOCKSTEP_Out(2836) <= \<const0>\;
  LOCKSTEP_Out(2837) <= \<const0>\;
  LOCKSTEP_Out(2838) <= \<const0>\;
  LOCKSTEP_Out(2839) <= \<const0>\;
  LOCKSTEP_Out(2840) <= \<const0>\;
  LOCKSTEP_Out(2841) <= \<const0>\;
  LOCKSTEP_Out(2842) <= \<const0>\;
  LOCKSTEP_Out(2843) <= \<const0>\;
  LOCKSTEP_Out(2844) <= \<const0>\;
  LOCKSTEP_Out(2845) <= \<const0>\;
  LOCKSTEP_Out(2846) <= \<const0>\;
  LOCKSTEP_Out(2847) <= \<const0>\;
  LOCKSTEP_Out(2848) <= \<const0>\;
  LOCKSTEP_Out(2849) <= \<const0>\;
  LOCKSTEP_Out(2850) <= \<const0>\;
  LOCKSTEP_Out(2851) <= \<const0>\;
  LOCKSTEP_Out(2852) <= \<const0>\;
  LOCKSTEP_Out(2853) <= \<const0>\;
  LOCKSTEP_Out(2854) <= \<const0>\;
  LOCKSTEP_Out(2855) <= \<const0>\;
  LOCKSTEP_Out(2856) <= \<const0>\;
  LOCKSTEP_Out(2857) <= \<const0>\;
  LOCKSTEP_Out(2858) <= \<const0>\;
  LOCKSTEP_Out(2859) <= \<const0>\;
  LOCKSTEP_Out(2860) <= \<const0>\;
  LOCKSTEP_Out(2861) <= \<const0>\;
  LOCKSTEP_Out(2862) <= \<const0>\;
  LOCKSTEP_Out(2863) <= \<const0>\;
  LOCKSTEP_Out(2864) <= \<const0>\;
  LOCKSTEP_Out(2865) <= \<const0>\;
  LOCKSTEP_Out(2866) <= \<const0>\;
  LOCKSTEP_Out(2867) <= \<const0>\;
  LOCKSTEP_Out(2868) <= \<const0>\;
  LOCKSTEP_Out(2869) <= \<const0>\;
  LOCKSTEP_Out(2870) <= \<const0>\;
  LOCKSTEP_Out(2871) <= \<const0>\;
  LOCKSTEP_Out(2872) <= \<const0>\;
  LOCKSTEP_Out(2873) <= \<const0>\;
  LOCKSTEP_Out(2874) <= \<const0>\;
  LOCKSTEP_Out(2875) <= \<const0>\;
  LOCKSTEP_Out(2876) <= \<const0>\;
  LOCKSTEP_Out(2877) <= \<const0>\;
  LOCKSTEP_Out(2878) <= \<const0>\;
  LOCKSTEP_Out(2879) <= \<const0>\;
  LOCKSTEP_Out(2880) <= \<const0>\;
  LOCKSTEP_Out(2881 to 2945) <= \^lockstep_out\(2881 to 2945);
  LOCKSTEP_Out(2946) <= \<const0>\;
  LOCKSTEP_Out(2947) <= \<const0>\;
  LOCKSTEP_Out(2948) <= \<const0>\;
  LOCKSTEP_Out(2949) <= \<const0>\;
  LOCKSTEP_Out(2950) <= \<const0>\;
  LOCKSTEP_Out(2951) <= \<const0>\;
  LOCKSTEP_Out(2952) <= \<const0>\;
  LOCKSTEP_Out(2953) <= \<const0>\;
  LOCKSTEP_Out(2954) <= \<const0>\;
  LOCKSTEP_Out(2955) <= \<const0>\;
  LOCKSTEP_Out(2956) <= \<const0>\;
  LOCKSTEP_Out(2957) <= \<const0>\;
  LOCKSTEP_Out(2958) <= \<const0>\;
  LOCKSTEP_Out(2959) <= \<const0>\;
  LOCKSTEP_Out(2960) <= \<const0>\;
  LOCKSTEP_Out(2961) <= \<const0>\;
  LOCKSTEP_Out(2962) <= \<const0>\;
  LOCKSTEP_Out(2963) <= \<const0>\;
  LOCKSTEP_Out(2964) <= \<const0>\;
  LOCKSTEP_Out(2965) <= \<const0>\;
  LOCKSTEP_Out(2966) <= \<const0>\;
  LOCKSTEP_Out(2967) <= \<const0>\;
  LOCKSTEP_Out(2968) <= \<const0>\;
  LOCKSTEP_Out(2969) <= \<const0>\;
  LOCKSTEP_Out(2970) <= \<const0>\;
  LOCKSTEP_Out(2971) <= \<const0>\;
  LOCKSTEP_Out(2972) <= \<const0>\;
  LOCKSTEP_Out(2973) <= \<const0>\;
  LOCKSTEP_Out(2974) <= \<const0>\;
  LOCKSTEP_Out(2975) <= \<const0>\;
  LOCKSTEP_Out(2976) <= \<const0>\;
  LOCKSTEP_Out(2977) <= \<const0>\;
  LOCKSTEP_Out(2978 to 2983) <= \^lockstep_out\(2978 to 2983);
  LOCKSTEP_Out(2984) <= \<const0>\;
  LOCKSTEP_Out(2985) <= \<const0>\;
  LOCKSTEP_Out(2986) <= \<const0>\;
  LOCKSTEP_Out(2987) <= \<const0>\;
  LOCKSTEP_Out(2988) <= \<const0>\;
  LOCKSTEP_Out(2989) <= \<const0>\;
  LOCKSTEP_Out(2990) <= \<const0>\;
  LOCKSTEP_Out(2991) <= \<const0>\;
  LOCKSTEP_Out(2992) <= \^lockstep_out\(2992);
  LOCKSTEP_Out(2993) <= \<const0>\;
  LOCKSTEP_Out(2994) <= \<const0>\;
  LOCKSTEP_Out(2995 to 2997) <= \^lockstep_out\(2995 to 2997);
  LOCKSTEP_Out(2998) <= \<const0>\;
  LOCKSTEP_Out(2999) <= \<const0>\;
  LOCKSTEP_Out(3000) <= \<const0>\;
  LOCKSTEP_Out(3001) <= \<const0>\;
  LOCKSTEP_Out(3002) <= \<const0>\;
  LOCKSTEP_Out(3003) <= \<const0>\;
  LOCKSTEP_Out(3004) <= \<const0>\;
  LOCKSTEP_Out(3005) <= \<const0>\;
  LOCKSTEP_Out(3006) <= \<const0>\;
  LOCKSTEP_Out(3007 to 3038) <= \^lockstep_out\(3007 to 3038);
  LOCKSTEP_Out(3039) <= \<const0>\;
  LOCKSTEP_Out(3040) <= \<const0>\;
  LOCKSTEP_Out(3041) <= \<const0>\;
  LOCKSTEP_Out(3042) <= \<const0>\;
  LOCKSTEP_Out(3043) <= \<const0>\;
  LOCKSTEP_Out(3044) <= \<const0>\;
  LOCKSTEP_Out(3045) <= \<const0>\;
  LOCKSTEP_Out(3046) <= \<const0>\;
  LOCKSTEP_Out(3047) <= \<const0>\;
  LOCKSTEP_Out(3048) <= \<const0>\;
  LOCKSTEP_Out(3049) <= \<const0>\;
  LOCKSTEP_Out(3050) <= \<const0>\;
  LOCKSTEP_Out(3051) <= \<const0>\;
  LOCKSTEP_Out(3052) <= \<const0>\;
  LOCKSTEP_Out(3053) <= \<const0>\;
  LOCKSTEP_Out(3054) <= \<const0>\;
  LOCKSTEP_Out(3055) <= \<const0>\;
  LOCKSTEP_Out(3056) <= \<const0>\;
  LOCKSTEP_Out(3057) <= \<const0>\;
  LOCKSTEP_Out(3058) <= \<const0>\;
  LOCKSTEP_Out(3059) <= \<const0>\;
  LOCKSTEP_Out(3060) <= \<const0>\;
  LOCKSTEP_Out(3061) <= \<const0>\;
  LOCKSTEP_Out(3062) <= \<const0>\;
  LOCKSTEP_Out(3063) <= \<const0>\;
  LOCKSTEP_Out(3064) <= \<const0>\;
  LOCKSTEP_Out(3065) <= \<const0>\;
  LOCKSTEP_Out(3066) <= \<const0>\;
  LOCKSTEP_Out(3067) <= \<const0>\;
  LOCKSTEP_Out(3068) <= \<const0>\;
  LOCKSTEP_Out(3069) <= \<const0>\;
  LOCKSTEP_Out(3070) <= \<const0>\;
  LOCKSTEP_Out(3071) <= \^lockstep_out\(3071);
  LOCKSTEP_Out(3072) <= \<const0>\;
  LOCKSTEP_Out(3073) <= \^lockstep_out\(3073);
  LOCKSTEP_Out(3074) <= \<const0>\;
  LOCKSTEP_Out(3075 to 3110) <= \^lockstep_out\(3075 to 3110);
  LOCKSTEP_Out(3111) <= \<const0>\;
  LOCKSTEP_Out(3112) <= \<const0>\;
  LOCKSTEP_Out(3113) <= \<const0>\;
  LOCKSTEP_Out(3114) <= \<const0>\;
  LOCKSTEP_Out(3115) <= \<const0>\;
  LOCKSTEP_Out(3116) <= \<const0>\;
  LOCKSTEP_Out(3117) <= \<const0>\;
  LOCKSTEP_Out(3118) <= \<const0>\;
  LOCKSTEP_Out(3119) <= \<const0>\;
  LOCKSTEP_Out(3120) <= \<const0>\;
  LOCKSTEP_Out(3121) <= \<const0>\;
  LOCKSTEP_Out(3122) <= \<const0>\;
  LOCKSTEP_Out(3123) <= \<const0>\;
  LOCKSTEP_Out(3124) <= \<const0>\;
  LOCKSTEP_Out(3125) <= \<const0>\;
  LOCKSTEP_Out(3126) <= \<const0>\;
  LOCKSTEP_Out(3127) <= \<const0>\;
  LOCKSTEP_Out(3128) <= \<const0>\;
  LOCKSTEP_Out(3129) <= \<const0>\;
  LOCKSTEP_Out(3130) <= \<const0>\;
  LOCKSTEP_Out(3131) <= \<const0>\;
  LOCKSTEP_Out(3132) <= \<const0>\;
  LOCKSTEP_Out(3133) <= \<const0>\;
  LOCKSTEP_Out(3134) <= \<const0>\;
  LOCKSTEP_Out(3135) <= \<const0>\;
  LOCKSTEP_Out(3136) <= \<const0>\;
  LOCKSTEP_Out(3137) <= \<const0>\;
  LOCKSTEP_Out(3138) <= \<const0>\;
  LOCKSTEP_Out(3139) <= \<const0>\;
  LOCKSTEP_Out(3140) <= \<const0>\;
  LOCKSTEP_Out(3141) <= \<const0>\;
  LOCKSTEP_Out(3142) <= \<const0>\;
  LOCKSTEP_Out(3143 to 3174) <= \^lockstep_out\(3143 to 3174);
  LOCKSTEP_Out(3175) <= \<const0>\;
  LOCKSTEP_Out(3176) <= \<const0>\;
  LOCKSTEP_Out(3177) <= \<const0>\;
  LOCKSTEP_Out(3178) <= \<const0>\;
  LOCKSTEP_Out(3179) <= \<const0>\;
  LOCKSTEP_Out(3180) <= \<const0>\;
  LOCKSTEP_Out(3181) <= \<const0>\;
  LOCKSTEP_Out(3182) <= \<const0>\;
  LOCKSTEP_Out(3183) <= \<const0>\;
  LOCKSTEP_Out(3184) <= \<const0>\;
  LOCKSTEP_Out(3185) <= \<const0>\;
  LOCKSTEP_Out(3186) <= \<const0>\;
  LOCKSTEP_Out(3187) <= \<const0>\;
  LOCKSTEP_Out(3188) <= \<const0>\;
  LOCKSTEP_Out(3189) <= \<const0>\;
  LOCKSTEP_Out(3190) <= \<const0>\;
  LOCKSTEP_Out(3191) <= \<const0>\;
  LOCKSTEP_Out(3192) <= \<const0>\;
  LOCKSTEP_Out(3193) <= \<const0>\;
  LOCKSTEP_Out(3194) <= \<const0>\;
  LOCKSTEP_Out(3195) <= \<const0>\;
  LOCKSTEP_Out(3196) <= \<const0>\;
  LOCKSTEP_Out(3197) <= \<const0>\;
  LOCKSTEP_Out(3198) <= \<const0>\;
  LOCKSTEP_Out(3199) <= \<const0>\;
  LOCKSTEP_Out(3200) <= \<const0>\;
  LOCKSTEP_Out(3201) <= \<const0>\;
  LOCKSTEP_Out(3202) <= \<const0>\;
  LOCKSTEP_Out(3203) <= \<const0>\;
  LOCKSTEP_Out(3204) <= \<const0>\;
  LOCKSTEP_Out(3205) <= \<const0>\;
  LOCKSTEP_Out(3206) <= \<const0>\;
  LOCKSTEP_Out(3207 to 3210) <= \^lockstep_out\(3207 to 3210);
  LOCKSTEP_Out(3211) <= \<const0>\;
  LOCKSTEP_Out(3212) <= \<const0>\;
  LOCKSTEP_Out(3213) <= \<const0>\;
  LOCKSTEP_Out(3214) <= \<const0>\;
  LOCKSTEP_Out(3215 to 3217) <= \^lockstep_out\(3215 to 3217);
  LOCKSTEP_Out(3218) <= \<const0>\;
  LOCKSTEP_Out(3219) <= \<const0>\;
  LOCKSTEP_Out(3220) <= \<const0>\;
  LOCKSTEP_Out(3221) <= \<const0>\;
  LOCKSTEP_Out(3222) <= \<const0>\;
  LOCKSTEP_Out(3223) <= \<const0>\;
  LOCKSTEP_Out(3224) <= \<const0>\;
  LOCKSTEP_Out(3225 to 3228) <= \^lockstep_out\(3225 to 3228);
  LOCKSTEP_Out(3229) <= \<const0>\;
  LOCKSTEP_Out(3230) <= \<const0>\;
  LOCKSTEP_Out(3231) <= \<const0>\;
  LOCKSTEP_Out(3232) <= \<const0>\;
  LOCKSTEP_Out(3233) <= \<const0>\;
  LOCKSTEP_Out(3234) <= \<const0>\;
  LOCKSTEP_Out(3235) <= \<const0>\;
  LOCKSTEP_Out(3236) <= \<const0>\;
  LOCKSTEP_Out(3237) <= \<const0>\;
  LOCKSTEP_Out(3238) <= \<const0>\;
  LOCKSTEP_Out(3239) <= \<const0>\;
  LOCKSTEP_Out(3240) <= \<const0>\;
  LOCKSTEP_Out(3241) <= \<const0>\;
  LOCKSTEP_Out(3242) <= \<const0>\;
  LOCKSTEP_Out(3243) <= \<const0>\;
  LOCKSTEP_Out(3244) <= \<const0>\;
  LOCKSTEP_Out(3245) <= \<const0>\;
  LOCKSTEP_Out(3246) <= \<const0>\;
  LOCKSTEP_Out(3247) <= \<const0>\;
  LOCKSTEP_Out(3248) <= \<const0>\;
  LOCKSTEP_Out(3249) <= \<const0>\;
  LOCKSTEP_Out(3250) <= \<const0>\;
  LOCKSTEP_Out(3251) <= \<const0>\;
  LOCKSTEP_Out(3252) <= \<const0>\;
  LOCKSTEP_Out(3253) <= \<const0>\;
  LOCKSTEP_Out(3254) <= \<const0>\;
  LOCKSTEP_Out(3255) <= \<const0>\;
  LOCKSTEP_Out(3256) <= \<const0>\;
  LOCKSTEP_Out(3257) <= \<const0>\;
  LOCKSTEP_Out(3258) <= \<const0>\;
  LOCKSTEP_Out(3259) <= \<const0>\;
  LOCKSTEP_Out(3260) <= \<const0>\;
  LOCKSTEP_Out(3261) <= \<const0>\;
  LOCKSTEP_Out(3262) <= \<const0>\;
  LOCKSTEP_Out(3263) <= \<const0>\;
  LOCKSTEP_Out(3264) <= \<const0>\;
  LOCKSTEP_Out(3265) <= \<const0>\;
  LOCKSTEP_Out(3266) <= \<const0>\;
  LOCKSTEP_Out(3267) <= \<const0>\;
  LOCKSTEP_Out(3268) <= \<const0>\;
  LOCKSTEP_Out(3269) <= \<const0>\;
  LOCKSTEP_Out(3270) <= \<const0>\;
  LOCKSTEP_Out(3271) <= \<const0>\;
  LOCKSTEP_Out(3272) <= \<const0>\;
  LOCKSTEP_Out(3273) <= \<const0>\;
  LOCKSTEP_Out(3274) <= \<const0>\;
  LOCKSTEP_Out(3275) <= \<const0>\;
  LOCKSTEP_Out(3276) <= \<const0>\;
  LOCKSTEP_Out(3277) <= \<const0>\;
  LOCKSTEP_Out(3278) <= \<const0>\;
  LOCKSTEP_Out(3279) <= \<const0>\;
  LOCKSTEP_Out(3280) <= \<const0>\;
  LOCKSTEP_Out(3281) <= \<const0>\;
  LOCKSTEP_Out(3282) <= \<const0>\;
  LOCKSTEP_Out(3283) <= \<const0>\;
  LOCKSTEP_Out(3284) <= \<const0>\;
  LOCKSTEP_Out(3285) <= \<const0>\;
  LOCKSTEP_Out(3286) <= \<const0>\;
  LOCKSTEP_Out(3287) <= \<const0>\;
  LOCKSTEP_Out(3288) <= \<const0>\;
  LOCKSTEP_Out(3289) <= \<const0>\;
  LOCKSTEP_Out(3290) <= \<const0>\;
  LOCKSTEP_Out(3291) <= \<const0>\;
  LOCKSTEP_Out(3292) <= \<const0>\;
  LOCKSTEP_Out(3293) <= \<const0>\;
  LOCKSTEP_Out(3294) <= \<const0>\;
  LOCKSTEP_Out(3295) <= \<const0>\;
  LOCKSTEP_Out(3296) <= \<const0>\;
  LOCKSTEP_Out(3297) <= \<const0>\;
  LOCKSTEP_Out(3298) <= \<const0>\;
  LOCKSTEP_Out(3299) <= \<const0>\;
  LOCKSTEP_Out(3300) <= \<const0>\;
  LOCKSTEP_Out(3301) <= \<const0>\;
  LOCKSTEP_Out(3302) <= \<const0>\;
  LOCKSTEP_Out(3303) <= \<const0>\;
  LOCKSTEP_Out(3304) <= \<const0>\;
  LOCKSTEP_Out(3305) <= \<const0>\;
  LOCKSTEP_Out(3306) <= \<const0>\;
  LOCKSTEP_Out(3307) <= \<const0>\;
  LOCKSTEP_Out(3308) <= \<const0>\;
  LOCKSTEP_Out(3309) <= \<const0>\;
  LOCKSTEP_Out(3310) <= \<const0>\;
  LOCKSTEP_Out(3311) <= \<const0>\;
  LOCKSTEP_Out(3312) <= \<const0>\;
  LOCKSTEP_Out(3313) <= \<const0>\;
  LOCKSTEP_Out(3314) <= \<const0>\;
  LOCKSTEP_Out(3315) <= \<const0>\;
  LOCKSTEP_Out(3316) <= \<const0>\;
  LOCKSTEP_Out(3317) <= \<const0>\;
  LOCKSTEP_Out(3318) <= \<const0>\;
  LOCKSTEP_Out(3319) <= \<const0>\;
  LOCKSTEP_Out(3320) <= \<const0>\;
  LOCKSTEP_Out(3321) <= \<const0>\;
  LOCKSTEP_Out(3322) <= \<const0>\;
  LOCKSTEP_Out(3323) <= \<const0>\;
  LOCKSTEP_Out(3324) <= \<const0>\;
  LOCKSTEP_Out(3325) <= \<const0>\;
  LOCKSTEP_Out(3326) <= \<const0>\;
  LOCKSTEP_Out(3327) <= \<const0>\;
  LOCKSTEP_Out(3328) <= \<const0>\;
  LOCKSTEP_Out(3329) <= \<const0>\;
  LOCKSTEP_Out(3330) <= \<const0>\;
  LOCKSTEP_Out(3331) <= \<const0>\;
  LOCKSTEP_Out(3332) <= \<const0>\;
  LOCKSTEP_Out(3333) <= \<const0>\;
  LOCKSTEP_Out(3334) <= \<const0>\;
  LOCKSTEP_Out(3335) <= \<const0>\;
  LOCKSTEP_Out(3336) <= \<const0>\;
  LOCKSTEP_Out(3337) <= \<const0>\;
  LOCKSTEP_Out(3338) <= \<const0>\;
  LOCKSTEP_Out(3339) <= \<const0>\;
  LOCKSTEP_Out(3340) <= \<const0>\;
  LOCKSTEP_Out(3341) <= \<const0>\;
  LOCKSTEP_Out(3342) <= \<const0>\;
  LOCKSTEP_Out(3343) <= \<const0>\;
  LOCKSTEP_Out(3344) <= \<const0>\;
  LOCKSTEP_Out(3345) <= \<const0>\;
  LOCKSTEP_Out(3346) <= \<const0>\;
  LOCKSTEP_Out(3347) <= \<const0>\;
  LOCKSTEP_Out(3348) <= \<const0>\;
  LOCKSTEP_Out(3349) <= \<const0>\;
  LOCKSTEP_Out(3350) <= \<const0>\;
  LOCKSTEP_Out(3351) <= \<const0>\;
  LOCKSTEP_Out(3352) <= \<const0>\;
  LOCKSTEP_Out(3353) <= \<const0>\;
  LOCKSTEP_Out(3354) <= \<const0>\;
  LOCKSTEP_Out(3355) <= \<const0>\;
  LOCKSTEP_Out(3356) <= \<const0>\;
  LOCKSTEP_Out(3357) <= \<const0>\;
  LOCKSTEP_Out(3358) <= \<const0>\;
  LOCKSTEP_Out(3359) <= \<const0>\;
  LOCKSTEP_Out(3360) <= \<const0>\;
  LOCKSTEP_Out(3361) <= \<const0>\;
  LOCKSTEP_Out(3362) <= \<const0>\;
  LOCKSTEP_Out(3363) <= \<const0>\;
  LOCKSTEP_Out(3364) <= \<const0>\;
  LOCKSTEP_Out(3365) <= \<const0>\;
  LOCKSTEP_Out(3366) <= \<const0>\;
  LOCKSTEP_Out(3367) <= \<const0>\;
  LOCKSTEP_Out(3368) <= \<const0>\;
  LOCKSTEP_Out(3369) <= \<const0>\;
  LOCKSTEP_Out(3370) <= \<const0>\;
  LOCKSTEP_Out(3371) <= \<const0>\;
  LOCKSTEP_Out(3372) <= \<const0>\;
  LOCKSTEP_Out(3373) <= \<const0>\;
  LOCKSTEP_Out(3374) <= \<const0>\;
  LOCKSTEP_Out(3375) <= \<const0>\;
  LOCKSTEP_Out(3376) <= \<const0>\;
  LOCKSTEP_Out(3377) <= \<const0>\;
  LOCKSTEP_Out(3378) <= \<const0>\;
  LOCKSTEP_Out(3379) <= \<const0>\;
  LOCKSTEP_Out(3380) <= \<const0>\;
  LOCKSTEP_Out(3381) <= \<const0>\;
  LOCKSTEP_Out(3382) <= \<const0>\;
  LOCKSTEP_Out(3383) <= \<const0>\;
  LOCKSTEP_Out(3384) <= \<const0>\;
  LOCKSTEP_Out(3385) <= \<const0>\;
  LOCKSTEP_Out(3386) <= \<const0>\;
  LOCKSTEP_Out(3387) <= \<const0>\;
  LOCKSTEP_Out(3388) <= \<const0>\;
  LOCKSTEP_Out(3389) <= \<const0>\;
  LOCKSTEP_Out(3390) <= \<const0>\;
  LOCKSTEP_Out(3391) <= \<const0>\;
  LOCKSTEP_Out(3392) <= \<const0>\;
  LOCKSTEP_Out(3393) <= \<const0>\;
  LOCKSTEP_Out(3394) <= \<const0>\;
  LOCKSTEP_Out(3395) <= \<const0>\;
  LOCKSTEP_Out(3396) <= \<const0>\;
  LOCKSTEP_Out(3397) <= \<const0>\;
  LOCKSTEP_Out(3398) <= \<const0>\;
  LOCKSTEP_Out(3399) <= \<const0>\;
  LOCKSTEP_Out(3400) <= \<const0>\;
  LOCKSTEP_Out(3401) <= \<const0>\;
  LOCKSTEP_Out(3402) <= \<const0>\;
  LOCKSTEP_Out(3403) <= \<const0>\;
  LOCKSTEP_Out(3404) <= \<const0>\;
  LOCKSTEP_Out(3405) <= \<const0>\;
  LOCKSTEP_Out(3406) <= \<const0>\;
  LOCKSTEP_Out(3407) <= \<const0>\;
  LOCKSTEP_Out(3408) <= \<const0>\;
  LOCKSTEP_Out(3409) <= \<const0>\;
  LOCKSTEP_Out(3410) <= \<const0>\;
  LOCKSTEP_Out(3411) <= \<const0>\;
  LOCKSTEP_Out(3412) <= \<const0>\;
  LOCKSTEP_Out(3413) <= \<const0>\;
  LOCKSTEP_Out(3414) <= \<const0>\;
  LOCKSTEP_Out(3415) <= \<const0>\;
  LOCKSTEP_Out(3416) <= \<const0>\;
  LOCKSTEP_Out(3417) <= \<const0>\;
  LOCKSTEP_Out(3418) <= \<const0>\;
  LOCKSTEP_Out(3419) <= \<const0>\;
  LOCKSTEP_Out(3420) <= \<const0>\;
  LOCKSTEP_Out(3421) <= \<const0>\;
  LOCKSTEP_Out(3422) <= \<const0>\;
  LOCKSTEP_Out(3423) <= \<const0>\;
  LOCKSTEP_Out(3424) <= \<const0>\;
  LOCKSTEP_Out(3425) <= \<const0>\;
  LOCKSTEP_Out(3426) <= \<const0>\;
  LOCKSTEP_Out(3427) <= \<const0>\;
  LOCKSTEP_Out(3428) <= \<const0>\;
  LOCKSTEP_Out(3429) <= \<const0>\;
  LOCKSTEP_Out(3430) <= \<const0>\;
  LOCKSTEP_Out(3431) <= \<const0>\;
  LOCKSTEP_Out(3432) <= \<const0>\;
  LOCKSTEP_Out(3433) <= \<const0>\;
  LOCKSTEP_Out(3434) <= \<const0>\;
  LOCKSTEP_Out(3435) <= \<const0>\;
  LOCKSTEP_Out(3436) <= \<const0>\;
  LOCKSTEP_Out(3437) <= \<const0>\;
  LOCKSTEP_Out(3438) <= \<const0>\;
  LOCKSTEP_Out(3439) <= \<const0>\;
  LOCKSTEP_Out(3440) <= \<const0>\;
  LOCKSTEP_Out(3441) <= \<const0>\;
  LOCKSTEP_Out(3442) <= \<const0>\;
  LOCKSTEP_Out(3443) <= \<const0>\;
  LOCKSTEP_Out(3444) <= \<const0>\;
  LOCKSTEP_Out(3445) <= \<const0>\;
  LOCKSTEP_Out(3446) <= \<const0>\;
  LOCKSTEP_Out(3447) <= \<const0>\;
  LOCKSTEP_Out(3448) <= \<const0>\;
  LOCKSTEP_Out(3449) <= \<const0>\;
  LOCKSTEP_Out(3450) <= \<const0>\;
  LOCKSTEP_Out(3451) <= \<const0>\;
  LOCKSTEP_Out(3452) <= \<const0>\;
  LOCKSTEP_Out(3453) <= \<const0>\;
  LOCKSTEP_Out(3454) <= \<const0>\;
  LOCKSTEP_Out(3455) <= \<const0>\;
  LOCKSTEP_Out(3456) <= \<const0>\;
  LOCKSTEP_Out(3457) <= \<const0>\;
  LOCKSTEP_Out(3458) <= \<const0>\;
  LOCKSTEP_Out(3459) <= \<const0>\;
  LOCKSTEP_Out(3460) <= \<const0>\;
  LOCKSTEP_Out(3461) <= \<const0>\;
  LOCKSTEP_Out(3462) <= \<const0>\;
  LOCKSTEP_Out(3463) <= \<const0>\;
  LOCKSTEP_Out(3464) <= \<const0>\;
  LOCKSTEP_Out(3465) <= \<const0>\;
  LOCKSTEP_Out(3466) <= \<const0>\;
  LOCKSTEP_Out(3467) <= \<const0>\;
  LOCKSTEP_Out(3468) <= \<const0>\;
  LOCKSTEP_Out(3469) <= \<const0>\;
  LOCKSTEP_Out(3470) <= \<const0>\;
  LOCKSTEP_Out(3471) <= \<const0>\;
  LOCKSTEP_Out(3472) <= \<const0>\;
  LOCKSTEP_Out(3473) <= \<const0>\;
  LOCKSTEP_Out(3474) <= \<const0>\;
  LOCKSTEP_Out(3475) <= \<const0>\;
  LOCKSTEP_Out(3476) <= \<const0>\;
  LOCKSTEP_Out(3477) <= \<const0>\;
  LOCKSTEP_Out(3478) <= \<const0>\;
  LOCKSTEP_Out(3479) <= \<const0>\;
  LOCKSTEP_Out(3480) <= \<const0>\;
  LOCKSTEP_Out(3481) <= \<const0>\;
  LOCKSTEP_Out(3482) <= \<const0>\;
  LOCKSTEP_Out(3483) <= \<const0>\;
  LOCKSTEP_Out(3484) <= \<const0>\;
  LOCKSTEP_Out(3485) <= \<const0>\;
  LOCKSTEP_Out(3486) <= \<const0>\;
  LOCKSTEP_Out(3487) <= \<const0>\;
  LOCKSTEP_Out(3488) <= \<const0>\;
  LOCKSTEP_Out(3489) <= \<const0>\;
  LOCKSTEP_Out(3490) <= \<const0>\;
  LOCKSTEP_Out(3491) <= \<const0>\;
  LOCKSTEP_Out(3492) <= \<const0>\;
  LOCKSTEP_Out(3493) <= \<const0>\;
  LOCKSTEP_Out(3494) <= \<const0>\;
  LOCKSTEP_Out(3495) <= \<const0>\;
  LOCKSTEP_Out(3496) <= \<const0>\;
  LOCKSTEP_Out(3497) <= \<const0>\;
  LOCKSTEP_Out(3498) <= \<const0>\;
  LOCKSTEP_Out(3499) <= \<const0>\;
  LOCKSTEP_Out(3500) <= \<const0>\;
  LOCKSTEP_Out(3501) <= \<const0>\;
  LOCKSTEP_Out(3502) <= \<const0>\;
  LOCKSTEP_Out(3503) <= \<const0>\;
  LOCKSTEP_Out(3504) <= \<const0>\;
  LOCKSTEP_Out(3505) <= \<const0>\;
  LOCKSTEP_Out(3506) <= \<const0>\;
  LOCKSTEP_Out(3507) <= \<const0>\;
  LOCKSTEP_Out(3508) <= \<const0>\;
  LOCKSTEP_Out(3509) <= \<const0>\;
  LOCKSTEP_Out(3510) <= \<const0>\;
  LOCKSTEP_Out(3511) <= \<const0>\;
  LOCKSTEP_Out(3512) <= \<const0>\;
  LOCKSTEP_Out(3513) <= \<const0>\;
  LOCKSTEP_Out(3514) <= \<const0>\;
  LOCKSTEP_Out(3515) <= \<const0>\;
  LOCKSTEP_Out(3516) <= \<const0>\;
  LOCKSTEP_Out(3517) <= \<const0>\;
  LOCKSTEP_Out(3518) <= \<const0>\;
  LOCKSTEP_Out(3519) <= \<const0>\;
  LOCKSTEP_Out(3520) <= \<const0>\;
  LOCKSTEP_Out(3521) <= \<const0>\;
  LOCKSTEP_Out(3522) <= \<const0>\;
  LOCKSTEP_Out(3523) <= \<const0>\;
  LOCKSTEP_Out(3524) <= \<const0>\;
  LOCKSTEP_Out(3525) <= \<const0>\;
  LOCKSTEP_Out(3526) <= \<const0>\;
  LOCKSTEP_Out(3527) <= \<const0>\;
  LOCKSTEP_Out(3528) <= \<const0>\;
  LOCKSTEP_Out(3529) <= \<const0>\;
  LOCKSTEP_Out(3530) <= \<const0>\;
  LOCKSTEP_Out(3531) <= \<const0>\;
  LOCKSTEP_Out(3532) <= \<const0>\;
  LOCKSTEP_Out(3533) <= \<const0>\;
  LOCKSTEP_Out(3534) <= \<const0>\;
  LOCKSTEP_Out(3535) <= \<const0>\;
  LOCKSTEP_Out(3536) <= \<const0>\;
  LOCKSTEP_Out(3537) <= \<const0>\;
  LOCKSTEP_Out(3538) <= \<const0>\;
  LOCKSTEP_Out(3539) <= \<const0>\;
  LOCKSTEP_Out(3540) <= \<const0>\;
  LOCKSTEP_Out(3541) <= \<const0>\;
  LOCKSTEP_Out(3542) <= \<const0>\;
  LOCKSTEP_Out(3543) <= \<const0>\;
  LOCKSTEP_Out(3544) <= \<const0>\;
  LOCKSTEP_Out(3545) <= \<const0>\;
  LOCKSTEP_Out(3546) <= \<const0>\;
  LOCKSTEP_Out(3547) <= \<const0>\;
  LOCKSTEP_Out(3548) <= \<const0>\;
  LOCKSTEP_Out(3549) <= \<const0>\;
  LOCKSTEP_Out(3550) <= \<const0>\;
  LOCKSTEP_Out(3551) <= \<const0>\;
  LOCKSTEP_Out(3552) <= \<const0>\;
  LOCKSTEP_Out(3553) <= \<const0>\;
  LOCKSTEP_Out(3554) <= \<const0>\;
  LOCKSTEP_Out(3555) <= \<const0>\;
  LOCKSTEP_Out(3556) <= \<const0>\;
  LOCKSTEP_Out(3557) <= \<const0>\;
  LOCKSTEP_Out(3558) <= \<const0>\;
  LOCKSTEP_Out(3559) <= \<const0>\;
  LOCKSTEP_Out(3560) <= \<const0>\;
  LOCKSTEP_Out(3561) <= \<const0>\;
  LOCKSTEP_Out(3562) <= \<const0>\;
  LOCKSTEP_Out(3563) <= \<const0>\;
  LOCKSTEP_Out(3564) <= \<const0>\;
  LOCKSTEP_Out(3565) <= \<const0>\;
  LOCKSTEP_Out(3566) <= \<const0>\;
  LOCKSTEP_Out(3567) <= \<const0>\;
  LOCKSTEP_Out(3568) <= \<const0>\;
  LOCKSTEP_Out(3569) <= \<const0>\;
  LOCKSTEP_Out(3570) <= \<const0>\;
  LOCKSTEP_Out(3571) <= \<const0>\;
  LOCKSTEP_Out(3572) <= \<const0>\;
  LOCKSTEP_Out(3573) <= \<const0>\;
  LOCKSTEP_Out(3574) <= \<const0>\;
  LOCKSTEP_Out(3575) <= \<const0>\;
  LOCKSTEP_Out(3576) <= \<const0>\;
  LOCKSTEP_Out(3577) <= \<const0>\;
  LOCKSTEP_Out(3578) <= \<const0>\;
  LOCKSTEP_Out(3579) <= \<const0>\;
  LOCKSTEP_Out(3580) <= \<const0>\;
  LOCKSTEP_Out(3581) <= \<const0>\;
  LOCKSTEP_Out(3582) <= \<const0>\;
  LOCKSTEP_Out(3583) <= \<const0>\;
  LOCKSTEP_Out(3584) <= \<const0>\;
  LOCKSTEP_Out(3585) <= \<const0>\;
  LOCKSTEP_Out(3586) <= \<const0>\;
  LOCKSTEP_Out(3587) <= \<const0>\;
  LOCKSTEP_Out(3588) <= \<const0>\;
  LOCKSTEP_Out(3589) <= \<const0>\;
  LOCKSTEP_Out(3590) <= \<const0>\;
  LOCKSTEP_Out(3591) <= \<const0>\;
  LOCKSTEP_Out(3592) <= \<const0>\;
  LOCKSTEP_Out(3593) <= \<const0>\;
  LOCKSTEP_Out(3594) <= \<const0>\;
  LOCKSTEP_Out(3595) <= \<const0>\;
  LOCKSTEP_Out(3596) <= \<const0>\;
  LOCKSTEP_Out(3597) <= \<const0>\;
  LOCKSTEP_Out(3598) <= \<const0>\;
  LOCKSTEP_Out(3599) <= \<const0>\;
  LOCKSTEP_Out(3600) <= \<const0>\;
  LOCKSTEP_Out(3601) <= \<const0>\;
  LOCKSTEP_Out(3602) <= \<const0>\;
  LOCKSTEP_Out(3603) <= \<const0>\;
  LOCKSTEP_Out(3604) <= \<const0>\;
  LOCKSTEP_Out(3605) <= \<const0>\;
  LOCKSTEP_Out(3606) <= \<const0>\;
  LOCKSTEP_Out(3607) <= \<const0>\;
  LOCKSTEP_Out(3608) <= \<const0>\;
  LOCKSTEP_Out(3609) <= \<const0>\;
  LOCKSTEP_Out(3610) <= \<const0>\;
  LOCKSTEP_Out(3611) <= \<const0>\;
  LOCKSTEP_Out(3612) <= \<const0>\;
  LOCKSTEP_Out(3613) <= \<const0>\;
  LOCKSTEP_Out(3614) <= \<const0>\;
  LOCKSTEP_Out(3615) <= \<const0>\;
  LOCKSTEP_Out(3616) <= \<const0>\;
  LOCKSTEP_Out(3617) <= \<const0>\;
  LOCKSTEP_Out(3618) <= \<const0>\;
  LOCKSTEP_Out(3619) <= \<const0>\;
  LOCKSTEP_Out(3620) <= \<const0>\;
  LOCKSTEP_Out(3621) <= \<const0>\;
  LOCKSTEP_Out(3622) <= \<const0>\;
  LOCKSTEP_Out(3623) <= \<const0>\;
  LOCKSTEP_Out(3624) <= \<const0>\;
  LOCKSTEP_Out(3625) <= \<const0>\;
  LOCKSTEP_Out(3626) <= \<const0>\;
  LOCKSTEP_Out(3627) <= \<const0>\;
  LOCKSTEP_Out(3628) <= \<const0>\;
  LOCKSTEP_Out(3629) <= \<const0>\;
  LOCKSTEP_Out(3630) <= \<const0>\;
  LOCKSTEP_Out(3631) <= \<const0>\;
  LOCKSTEP_Out(3632) <= \<const0>\;
  LOCKSTEP_Out(3633) <= \<const0>\;
  LOCKSTEP_Out(3634) <= \<const0>\;
  LOCKSTEP_Out(3635) <= \<const0>\;
  LOCKSTEP_Out(3636) <= \<const0>\;
  LOCKSTEP_Out(3637) <= \<const0>\;
  LOCKSTEP_Out(3638) <= \<const0>\;
  LOCKSTEP_Out(3639) <= \<const0>\;
  LOCKSTEP_Out(3640) <= \<const0>\;
  LOCKSTEP_Out(3641) <= \<const0>\;
  LOCKSTEP_Out(3642) <= \<const0>\;
  LOCKSTEP_Out(3643) <= \<const0>\;
  LOCKSTEP_Out(3644) <= \<const0>\;
  LOCKSTEP_Out(3645) <= \<const0>\;
  LOCKSTEP_Out(3646) <= \<const0>\;
  LOCKSTEP_Out(3647) <= \<const0>\;
  LOCKSTEP_Out(3648) <= \<const0>\;
  LOCKSTEP_Out(3649) <= \<const0>\;
  LOCKSTEP_Out(3650) <= \<const0>\;
  LOCKSTEP_Out(3651) <= \<const0>\;
  LOCKSTEP_Out(3652) <= \<const0>\;
  LOCKSTEP_Out(3653) <= \<const0>\;
  LOCKSTEP_Out(3654) <= \<const0>\;
  LOCKSTEP_Out(3655) <= \<const0>\;
  LOCKSTEP_Out(3656) <= \<const0>\;
  LOCKSTEP_Out(3657) <= \<const0>\;
  LOCKSTEP_Out(3658) <= \<const0>\;
  LOCKSTEP_Out(3659) <= \<const0>\;
  LOCKSTEP_Out(3660) <= \<const0>\;
  LOCKSTEP_Out(3661) <= \<const0>\;
  LOCKSTEP_Out(3662) <= \<const0>\;
  LOCKSTEP_Out(3663) <= \<const0>\;
  LOCKSTEP_Out(3664) <= \<const0>\;
  LOCKSTEP_Out(3665) <= \<const0>\;
  LOCKSTEP_Out(3666) <= \<const0>\;
  LOCKSTEP_Out(3667) <= \<const0>\;
  LOCKSTEP_Out(3668) <= \<const0>\;
  LOCKSTEP_Out(3669) <= \<const0>\;
  LOCKSTEP_Out(3670) <= \<const0>\;
  LOCKSTEP_Out(3671) <= \<const0>\;
  LOCKSTEP_Out(3672) <= \<const0>\;
  LOCKSTEP_Out(3673) <= \<const0>\;
  LOCKSTEP_Out(3674) <= \<const0>\;
  LOCKSTEP_Out(3675) <= \<const0>\;
  LOCKSTEP_Out(3676) <= \<const0>\;
  LOCKSTEP_Out(3677) <= \<const0>\;
  LOCKSTEP_Out(3678) <= \<const0>\;
  LOCKSTEP_Out(3679) <= \<const0>\;
  LOCKSTEP_Out(3680) <= \<const0>\;
  LOCKSTEP_Out(3681) <= \<const0>\;
  LOCKSTEP_Out(3682) <= \<const0>\;
  LOCKSTEP_Out(3683) <= \<const0>\;
  LOCKSTEP_Out(3684) <= \<const0>\;
  LOCKSTEP_Out(3685) <= \<const0>\;
  LOCKSTEP_Out(3686) <= \<const0>\;
  LOCKSTEP_Out(3687) <= \<const0>\;
  LOCKSTEP_Out(3688) <= \<const0>\;
  LOCKSTEP_Out(3689) <= \<const0>\;
  LOCKSTEP_Out(3690) <= \<const0>\;
  LOCKSTEP_Out(3691) <= \<const0>\;
  LOCKSTEP_Out(3692) <= \<const0>\;
  LOCKSTEP_Out(3693) <= \<const0>\;
  LOCKSTEP_Out(3694) <= \<const0>\;
  LOCKSTEP_Out(3695) <= \<const0>\;
  LOCKSTEP_Out(3696) <= \<const0>\;
  LOCKSTEP_Out(3697) <= \<const0>\;
  LOCKSTEP_Out(3698) <= \<const0>\;
  LOCKSTEP_Out(3699) <= \<const0>\;
  LOCKSTEP_Out(3700) <= \<const0>\;
  LOCKSTEP_Out(3701) <= \<const0>\;
  LOCKSTEP_Out(3702) <= \<const0>\;
  LOCKSTEP_Out(3703) <= \<const0>\;
  LOCKSTEP_Out(3704) <= \<const0>\;
  LOCKSTEP_Out(3705) <= \<const0>\;
  LOCKSTEP_Out(3706) <= \<const0>\;
  LOCKSTEP_Out(3707) <= \<const0>\;
  LOCKSTEP_Out(3708) <= \<const0>\;
  LOCKSTEP_Out(3709) <= \<const0>\;
  LOCKSTEP_Out(3710) <= \<const0>\;
  LOCKSTEP_Out(3711) <= \<const0>\;
  LOCKSTEP_Out(3712) <= \<const0>\;
  LOCKSTEP_Out(3713) <= \<const0>\;
  LOCKSTEP_Out(3714) <= \<const0>\;
  LOCKSTEP_Out(3715) <= \<const0>\;
  LOCKSTEP_Out(3716) <= \<const0>\;
  LOCKSTEP_Out(3717) <= \<const0>\;
  LOCKSTEP_Out(3718) <= \<const0>\;
  LOCKSTEP_Out(3719) <= \<const0>\;
  LOCKSTEP_Out(3720) <= \<const0>\;
  LOCKSTEP_Out(3721) <= \<const0>\;
  LOCKSTEP_Out(3722) <= \<const0>\;
  LOCKSTEP_Out(3723) <= \<const0>\;
  LOCKSTEP_Out(3724) <= \<const0>\;
  LOCKSTEP_Out(3725) <= \<const0>\;
  LOCKSTEP_Out(3726) <= \<const0>\;
  LOCKSTEP_Out(3727) <= \<const0>\;
  LOCKSTEP_Out(3728) <= \<const0>\;
  LOCKSTEP_Out(3729) <= \<const0>\;
  LOCKSTEP_Out(3730) <= \<const0>\;
  LOCKSTEP_Out(3731) <= \<const0>\;
  LOCKSTEP_Out(3732) <= \<const0>\;
  LOCKSTEP_Out(3733) <= \<const0>\;
  LOCKSTEP_Out(3734) <= \<const0>\;
  LOCKSTEP_Out(3735) <= \<const0>\;
  LOCKSTEP_Out(3736) <= \<const0>\;
  LOCKSTEP_Out(3737) <= \<const0>\;
  LOCKSTEP_Out(3738) <= \<const0>\;
  LOCKSTEP_Out(3739) <= \<const0>\;
  LOCKSTEP_Out(3740) <= \<const0>\;
  LOCKSTEP_Out(3741) <= \<const0>\;
  LOCKSTEP_Out(3742) <= \<const0>\;
  LOCKSTEP_Out(3743) <= \<const0>\;
  LOCKSTEP_Out(3744) <= \<const0>\;
  LOCKSTEP_Out(3745) <= \<const0>\;
  LOCKSTEP_Out(3746) <= \<const0>\;
  LOCKSTEP_Out(3747) <= \<const0>\;
  LOCKSTEP_Out(3748) <= \<const0>\;
  LOCKSTEP_Out(3749) <= \<const0>\;
  LOCKSTEP_Out(3750) <= \<const0>\;
  LOCKSTEP_Out(3751) <= \<const0>\;
  LOCKSTEP_Out(3752) <= \<const0>\;
  LOCKSTEP_Out(3753) <= \<const0>\;
  LOCKSTEP_Out(3754) <= \<const0>\;
  LOCKSTEP_Out(3755) <= \<const0>\;
  LOCKSTEP_Out(3756) <= \<const0>\;
  LOCKSTEP_Out(3757) <= \<const0>\;
  LOCKSTEP_Out(3758) <= \<const0>\;
  LOCKSTEP_Out(3759) <= \<const0>\;
  LOCKSTEP_Out(3760) <= \<const0>\;
  LOCKSTEP_Out(3761) <= \<const0>\;
  LOCKSTEP_Out(3762) <= \<const0>\;
  LOCKSTEP_Out(3763) <= \<const0>\;
  LOCKSTEP_Out(3764) <= \<const0>\;
  LOCKSTEP_Out(3765) <= \<const0>\;
  LOCKSTEP_Out(3766) <= \<const0>\;
  LOCKSTEP_Out(3767) <= \<const0>\;
  LOCKSTEP_Out(3768) <= \<const0>\;
  LOCKSTEP_Out(3769) <= \<const0>\;
  LOCKSTEP_Out(3770) <= \<const0>\;
  LOCKSTEP_Out(3771) <= \<const0>\;
  LOCKSTEP_Out(3772) <= \<const0>\;
  LOCKSTEP_Out(3773) <= \<const0>\;
  LOCKSTEP_Out(3774) <= \<const0>\;
  LOCKSTEP_Out(3775) <= \<const0>\;
  LOCKSTEP_Out(3776) <= \<const0>\;
  LOCKSTEP_Out(3777) <= \<const0>\;
  LOCKSTEP_Out(3778) <= \<const0>\;
  LOCKSTEP_Out(3779) <= \<const0>\;
  LOCKSTEP_Out(3780) <= \<const0>\;
  LOCKSTEP_Out(3781) <= \<const0>\;
  LOCKSTEP_Out(3782) <= \<const0>\;
  LOCKSTEP_Out(3783) <= \<const0>\;
  LOCKSTEP_Out(3784) <= \<const0>\;
  LOCKSTEP_Out(3785) <= \<const0>\;
  LOCKSTEP_Out(3786) <= \<const0>\;
  LOCKSTEP_Out(3787) <= \<const0>\;
  LOCKSTEP_Out(3788) <= \<const0>\;
  LOCKSTEP_Out(3789) <= \<const0>\;
  LOCKSTEP_Out(3790) <= \<const0>\;
  LOCKSTEP_Out(3791) <= \<const0>\;
  LOCKSTEP_Out(3792) <= \<const0>\;
  LOCKSTEP_Out(3793) <= \<const0>\;
  LOCKSTEP_Out(3794) <= \<const0>\;
  LOCKSTEP_Out(3795) <= \<const0>\;
  LOCKSTEP_Out(3796) <= \<const0>\;
  LOCKSTEP_Out(3797) <= \<const0>\;
  LOCKSTEP_Out(3798) <= \<const0>\;
  LOCKSTEP_Out(3799) <= \<const0>\;
  LOCKSTEP_Out(3800) <= \<const0>\;
  LOCKSTEP_Out(3801) <= \<const0>\;
  LOCKSTEP_Out(3802) <= \<const0>\;
  LOCKSTEP_Out(3803) <= \<const0>\;
  LOCKSTEP_Out(3804) <= \<const0>\;
  LOCKSTEP_Out(3805) <= \<const0>\;
  LOCKSTEP_Out(3806) <= \<const0>\;
  LOCKSTEP_Out(3807) <= \<const0>\;
  LOCKSTEP_Out(3808) <= \<const0>\;
  LOCKSTEP_Out(3809) <= \<const0>\;
  LOCKSTEP_Out(3810) <= \<const0>\;
  LOCKSTEP_Out(3811) <= \<const0>\;
  LOCKSTEP_Out(3812) <= \<const0>\;
  LOCKSTEP_Out(3813) <= \<const0>\;
  LOCKSTEP_Out(3814) <= \<const0>\;
  LOCKSTEP_Out(3815) <= \<const0>\;
  LOCKSTEP_Out(3816) <= \<const0>\;
  LOCKSTEP_Out(3817) <= \<const0>\;
  LOCKSTEP_Out(3818) <= \<const0>\;
  LOCKSTEP_Out(3819) <= \<const0>\;
  LOCKSTEP_Out(3820) <= \<const0>\;
  LOCKSTEP_Out(3821) <= \<const0>\;
  LOCKSTEP_Out(3822) <= \<const0>\;
  LOCKSTEP_Out(3823) <= \<const0>\;
  LOCKSTEP_Out(3824) <= \<const0>\;
  LOCKSTEP_Out(3825) <= \<const0>\;
  LOCKSTEP_Out(3826) <= \<const0>\;
  LOCKSTEP_Out(3827) <= \<const0>\;
  LOCKSTEP_Out(3828) <= \<const0>\;
  LOCKSTEP_Out(3829) <= \<const0>\;
  LOCKSTEP_Out(3830) <= \<const0>\;
  LOCKSTEP_Out(3831) <= \<const0>\;
  LOCKSTEP_Out(3832) <= \<const0>\;
  LOCKSTEP_Out(3833) <= \<const0>\;
  LOCKSTEP_Out(3834) <= \<const0>\;
  LOCKSTEP_Out(3835) <= \<const0>\;
  LOCKSTEP_Out(3836) <= \<const0>\;
  LOCKSTEP_Out(3837) <= \<const0>\;
  LOCKSTEP_Out(3838) <= \<const0>\;
  LOCKSTEP_Out(3839) <= \<const0>\;
  LOCKSTEP_Out(3840) <= \<const0>\;
  LOCKSTEP_Out(3841) <= \<const0>\;
  LOCKSTEP_Out(3842) <= \<const0>\;
  LOCKSTEP_Out(3843) <= \<const0>\;
  LOCKSTEP_Out(3844) <= \<const0>\;
  LOCKSTEP_Out(3845) <= \<const0>\;
  LOCKSTEP_Out(3846) <= \<const0>\;
  LOCKSTEP_Out(3847) <= \<const0>\;
  LOCKSTEP_Out(3848) <= \<const0>\;
  LOCKSTEP_Out(3849) <= \<const0>\;
  LOCKSTEP_Out(3850) <= \<const0>\;
  LOCKSTEP_Out(3851) <= \<const0>\;
  LOCKSTEP_Out(3852) <= \<const0>\;
  LOCKSTEP_Out(3853) <= \<const0>\;
  LOCKSTEP_Out(3854) <= \<const0>\;
  LOCKSTEP_Out(3855) <= \<const0>\;
  LOCKSTEP_Out(3856) <= \<const0>\;
  LOCKSTEP_Out(3857) <= \<const0>\;
  LOCKSTEP_Out(3858) <= \<const0>\;
  LOCKSTEP_Out(3859) <= \<const0>\;
  LOCKSTEP_Out(3860) <= \<const0>\;
  LOCKSTEP_Out(3861) <= \<const0>\;
  LOCKSTEP_Out(3862) <= \<const0>\;
  LOCKSTEP_Out(3863) <= \<const0>\;
  LOCKSTEP_Out(3864) <= \<const0>\;
  LOCKSTEP_Out(3865) <= \<const0>\;
  LOCKSTEP_Out(3866) <= \<const0>\;
  LOCKSTEP_Out(3867) <= \<const0>\;
  LOCKSTEP_Out(3868) <= \<const0>\;
  LOCKSTEP_Out(3869) <= \<const0>\;
  LOCKSTEP_Out(3870) <= \<const0>\;
  LOCKSTEP_Out(3871) <= \<const0>\;
  LOCKSTEP_Out(3872) <= \<const0>\;
  LOCKSTEP_Out(3873) <= \<const0>\;
  LOCKSTEP_Out(3874) <= \<const0>\;
  LOCKSTEP_Out(3875) <= \<const0>\;
  LOCKSTEP_Out(3876) <= \<const0>\;
  LOCKSTEP_Out(3877) <= \<const0>\;
  LOCKSTEP_Out(3878) <= \<const0>\;
  LOCKSTEP_Out(3879) <= \<const0>\;
  LOCKSTEP_Out(3880) <= \<const0>\;
  LOCKSTEP_Out(3881) <= \<const0>\;
  LOCKSTEP_Out(3882) <= \<const0>\;
  LOCKSTEP_Out(3883) <= \<const0>\;
  LOCKSTEP_Out(3884) <= \<const0>\;
  LOCKSTEP_Out(3885) <= \<const0>\;
  LOCKSTEP_Out(3886) <= \<const0>\;
  LOCKSTEP_Out(3887) <= \<const0>\;
  LOCKSTEP_Out(3888) <= \<const0>\;
  LOCKSTEP_Out(3889) <= \<const0>\;
  LOCKSTEP_Out(3890) <= \<const0>\;
  LOCKSTEP_Out(3891) <= \<const0>\;
  LOCKSTEP_Out(3892) <= \<const0>\;
  LOCKSTEP_Out(3893) <= \<const0>\;
  LOCKSTEP_Out(3894) <= \<const0>\;
  LOCKSTEP_Out(3895) <= \<const0>\;
  LOCKSTEP_Out(3896) <= \<const0>\;
  LOCKSTEP_Out(3897) <= \<const0>\;
  LOCKSTEP_Out(3898) <= \<const0>\;
  LOCKSTEP_Out(3899) <= \<const0>\;
  LOCKSTEP_Out(3900) <= \<const0>\;
  LOCKSTEP_Out(3901) <= \<const0>\;
  LOCKSTEP_Out(3902) <= \<const0>\;
  LOCKSTEP_Out(3903) <= \<const0>\;
  LOCKSTEP_Out(3904) <= \<const0>\;
  LOCKSTEP_Out(3905) <= \<const0>\;
  LOCKSTEP_Out(3906) <= \<const0>\;
  LOCKSTEP_Out(3907) <= \<const0>\;
  LOCKSTEP_Out(3908) <= \<const0>\;
  LOCKSTEP_Out(3909) <= \<const0>\;
  LOCKSTEP_Out(3910) <= \<const0>\;
  LOCKSTEP_Out(3911) <= \<const0>\;
  LOCKSTEP_Out(3912) <= \<const0>\;
  LOCKSTEP_Out(3913) <= \<const0>\;
  LOCKSTEP_Out(3914) <= \<const0>\;
  LOCKSTEP_Out(3915) <= \<const0>\;
  LOCKSTEP_Out(3916) <= \<const0>\;
  LOCKSTEP_Out(3917) <= \<const0>\;
  LOCKSTEP_Out(3918) <= \<const0>\;
  LOCKSTEP_Out(3919) <= \<const0>\;
  LOCKSTEP_Out(3920) <= \<const0>\;
  LOCKSTEP_Out(3921) <= \<const0>\;
  LOCKSTEP_Out(3922) <= \<const0>\;
  LOCKSTEP_Out(3923) <= \<const0>\;
  LOCKSTEP_Out(3924) <= \<const0>\;
  LOCKSTEP_Out(3925) <= \<const0>\;
  LOCKSTEP_Out(3926) <= \<const0>\;
  LOCKSTEP_Out(3927) <= \<const0>\;
  LOCKSTEP_Out(3928) <= \<const0>\;
  LOCKSTEP_Out(3929) <= \<const0>\;
  LOCKSTEP_Out(3930) <= \<const0>\;
  LOCKSTEP_Out(3931) <= \<const0>\;
  LOCKSTEP_Out(3932) <= \<const0>\;
  LOCKSTEP_Out(3933) <= \<const0>\;
  LOCKSTEP_Out(3934) <= \<const0>\;
  LOCKSTEP_Out(3935) <= \<const0>\;
  LOCKSTEP_Out(3936) <= \<const0>\;
  LOCKSTEP_Out(3937) <= \<const0>\;
  LOCKSTEP_Out(3938) <= \<const0>\;
  LOCKSTEP_Out(3939) <= \<const0>\;
  LOCKSTEP_Out(3940) <= \<const0>\;
  LOCKSTEP_Out(3941) <= \<const0>\;
  LOCKSTEP_Out(3942) <= \<const0>\;
  LOCKSTEP_Out(3943) <= \<const0>\;
  LOCKSTEP_Out(3944) <= \<const0>\;
  LOCKSTEP_Out(3945) <= \<const0>\;
  LOCKSTEP_Out(3946) <= \<const0>\;
  LOCKSTEP_Out(3947) <= \<const0>\;
  LOCKSTEP_Out(3948) <= \<const0>\;
  LOCKSTEP_Out(3949) <= \<const0>\;
  LOCKSTEP_Out(3950) <= \<const0>\;
  LOCKSTEP_Out(3951) <= \<const0>\;
  LOCKSTEP_Out(3952) <= \<const0>\;
  LOCKSTEP_Out(3953) <= \<const0>\;
  LOCKSTEP_Out(3954) <= \<const0>\;
  LOCKSTEP_Out(3955) <= \<const0>\;
  LOCKSTEP_Out(3956) <= \<const0>\;
  LOCKSTEP_Out(3957) <= \<const0>\;
  LOCKSTEP_Out(3958) <= \<const0>\;
  LOCKSTEP_Out(3959) <= \<const0>\;
  LOCKSTEP_Out(3960) <= \<const0>\;
  LOCKSTEP_Out(3961) <= \<const0>\;
  LOCKSTEP_Out(3962) <= \<const0>\;
  LOCKSTEP_Out(3963) <= \<const0>\;
  LOCKSTEP_Out(3964) <= \<const0>\;
  LOCKSTEP_Out(3965) <= \<const0>\;
  LOCKSTEP_Out(3966) <= \<const0>\;
  LOCKSTEP_Out(3967) <= \<const0>\;
  LOCKSTEP_Out(3968) <= \<const0>\;
  LOCKSTEP_Out(3969) <= \<const0>\;
  LOCKSTEP_Out(3970) <= \<const0>\;
  LOCKSTEP_Out(3971) <= \<const0>\;
  LOCKSTEP_Out(3972) <= \<const0>\;
  LOCKSTEP_Out(3973) <= \<const0>\;
  LOCKSTEP_Out(3974) <= \<const0>\;
  LOCKSTEP_Out(3975) <= \<const0>\;
  LOCKSTEP_Out(3976) <= \<const0>\;
  LOCKSTEP_Out(3977) <= \<const0>\;
  LOCKSTEP_Out(3978) <= \<const0>\;
  LOCKSTEP_Out(3979) <= \<const0>\;
  LOCKSTEP_Out(3980) <= \<const0>\;
  LOCKSTEP_Out(3981) <= \<const0>\;
  LOCKSTEP_Out(3982) <= \<const0>\;
  LOCKSTEP_Out(3983) <= \<const0>\;
  LOCKSTEP_Out(3984) <= \<const0>\;
  LOCKSTEP_Out(3985) <= \<const0>\;
  LOCKSTEP_Out(3986) <= \<const0>\;
  LOCKSTEP_Out(3987) <= \<const0>\;
  LOCKSTEP_Out(3988) <= \<const0>\;
  LOCKSTEP_Out(3989) <= \<const0>\;
  LOCKSTEP_Out(3990) <= \<const0>\;
  LOCKSTEP_Out(3991) <= \<const0>\;
  LOCKSTEP_Out(3992) <= \<const0>\;
  LOCKSTEP_Out(3993) <= \<const0>\;
  LOCKSTEP_Out(3994) <= \<const0>\;
  LOCKSTEP_Out(3995) <= \<const0>\;
  LOCKSTEP_Out(3996) <= \<const0>\;
  LOCKSTEP_Out(3997) <= \<const0>\;
  LOCKSTEP_Out(3998) <= \<const0>\;
  LOCKSTEP_Out(3999) <= \<const0>\;
  LOCKSTEP_Out(4000) <= \<const0>\;
  LOCKSTEP_Out(4001) <= \<const0>\;
  LOCKSTEP_Out(4002) <= \<const0>\;
  LOCKSTEP_Out(4003) <= \<const0>\;
  LOCKSTEP_Out(4004) <= \<const0>\;
  LOCKSTEP_Out(4005) <= \<const0>\;
  LOCKSTEP_Out(4006) <= \<const0>\;
  LOCKSTEP_Out(4007) <= \<const0>\;
  LOCKSTEP_Out(4008) <= \<const0>\;
  LOCKSTEP_Out(4009) <= \<const0>\;
  LOCKSTEP_Out(4010) <= \<const0>\;
  LOCKSTEP_Out(4011) <= \<const0>\;
  LOCKSTEP_Out(4012) <= \<const0>\;
  LOCKSTEP_Out(4013) <= \<const0>\;
  LOCKSTEP_Out(4014) <= \<const0>\;
  LOCKSTEP_Out(4015) <= \<const0>\;
  LOCKSTEP_Out(4016) <= \<const0>\;
  LOCKSTEP_Out(4017) <= \<const0>\;
  LOCKSTEP_Out(4018) <= \<const0>\;
  LOCKSTEP_Out(4019) <= \<const0>\;
  LOCKSTEP_Out(4020) <= \<const0>\;
  LOCKSTEP_Out(4021) <= \<const0>\;
  LOCKSTEP_Out(4022) <= \<const0>\;
  LOCKSTEP_Out(4023) <= \<const0>\;
  LOCKSTEP_Out(4024) <= \<const0>\;
  LOCKSTEP_Out(4025) <= \<const0>\;
  LOCKSTEP_Out(4026) <= \<const0>\;
  LOCKSTEP_Out(4027) <= \<const0>\;
  LOCKSTEP_Out(4028) <= \<const0>\;
  LOCKSTEP_Out(4029) <= \<const0>\;
  LOCKSTEP_Out(4030) <= \<const0>\;
  LOCKSTEP_Out(4031) <= \<const0>\;
  LOCKSTEP_Out(4032) <= \<const0>\;
  LOCKSTEP_Out(4033) <= \<const0>\;
  LOCKSTEP_Out(4034) <= \<const0>\;
  LOCKSTEP_Out(4035) <= \<const0>\;
  LOCKSTEP_Out(4036) <= \<const0>\;
  LOCKSTEP_Out(4037) <= \<const0>\;
  LOCKSTEP_Out(4038) <= \<const0>\;
  LOCKSTEP_Out(4039) <= \<const0>\;
  LOCKSTEP_Out(4040) <= \<const0>\;
  LOCKSTEP_Out(4041) <= \<const0>\;
  LOCKSTEP_Out(4042) <= \<const0>\;
  LOCKSTEP_Out(4043) <= \<const0>\;
  LOCKSTEP_Out(4044) <= \<const0>\;
  LOCKSTEP_Out(4045) <= \<const0>\;
  LOCKSTEP_Out(4046) <= \<const0>\;
  LOCKSTEP_Out(4047) <= \<const0>\;
  LOCKSTEP_Out(4048) <= \<const0>\;
  LOCKSTEP_Out(4049) <= \<const0>\;
  LOCKSTEP_Out(4050) <= \<const0>\;
  LOCKSTEP_Out(4051) <= \<const0>\;
  LOCKSTEP_Out(4052) <= \<const0>\;
  LOCKSTEP_Out(4053) <= \<const0>\;
  LOCKSTEP_Out(4054) <= \<const0>\;
  LOCKSTEP_Out(4055) <= \<const0>\;
  LOCKSTEP_Out(4056) <= \<const0>\;
  LOCKSTEP_Out(4057) <= \<const0>\;
  LOCKSTEP_Out(4058) <= \<const0>\;
  LOCKSTEP_Out(4059) <= \<const0>\;
  LOCKSTEP_Out(4060) <= \<const0>\;
  LOCKSTEP_Out(4061) <= \<const0>\;
  LOCKSTEP_Out(4062) <= \<const0>\;
  LOCKSTEP_Out(4063) <= \<const0>\;
  LOCKSTEP_Out(4064) <= \<const0>\;
  LOCKSTEP_Out(4065) <= \<const0>\;
  LOCKSTEP_Out(4066) <= \<const0>\;
  LOCKSTEP_Out(4067) <= \<const0>\;
  LOCKSTEP_Out(4068) <= \<const0>\;
  LOCKSTEP_Out(4069) <= \<const0>\;
  LOCKSTEP_Out(4070) <= \<const0>\;
  LOCKSTEP_Out(4071) <= \<const0>\;
  LOCKSTEP_Out(4072) <= \<const0>\;
  LOCKSTEP_Out(4073) <= \<const0>\;
  LOCKSTEP_Out(4074) <= \<const0>\;
  LOCKSTEP_Out(4075) <= \<const0>\;
  LOCKSTEP_Out(4076) <= \<const0>\;
  LOCKSTEP_Out(4077) <= \<const0>\;
  LOCKSTEP_Out(4078) <= \<const0>\;
  LOCKSTEP_Out(4079) <= \<const0>\;
  LOCKSTEP_Out(4080) <= \<const0>\;
  LOCKSTEP_Out(4081) <= \<const0>\;
  LOCKSTEP_Out(4082) <= \<const0>\;
  LOCKSTEP_Out(4083) <= \<const0>\;
  LOCKSTEP_Out(4084) <= \<const0>\;
  LOCKSTEP_Out(4085) <= \<const0>\;
  LOCKSTEP_Out(4086) <= \<const0>\;
  LOCKSTEP_Out(4087) <= \<const0>\;
  LOCKSTEP_Out(4088) <= \<const0>\;
  LOCKSTEP_Out(4089) <= \<const0>\;
  LOCKSTEP_Out(4090) <= \<const0>\;
  LOCKSTEP_Out(4091) <= \<const0>\;
  LOCKSTEP_Out(4092) <= \<const0>\;
  LOCKSTEP_Out(4093) <= \<const0>\;
  LOCKSTEP_Out(4094) <= \<const0>\;
  LOCKSTEP_Out(4095) <= \<const0>\;
  M0_AXIS_TDATA(31) <= \<const0>\;
  M0_AXIS_TDATA(30) <= \<const0>\;
  M0_AXIS_TDATA(29) <= \<const0>\;
  M0_AXIS_TDATA(28) <= \<const0>\;
  M0_AXIS_TDATA(27) <= \<const0>\;
  M0_AXIS_TDATA(26) <= \<const0>\;
  M0_AXIS_TDATA(25) <= \<const0>\;
  M0_AXIS_TDATA(24) <= \<const0>\;
  M0_AXIS_TDATA(23) <= \<const0>\;
  M0_AXIS_TDATA(22) <= \<const0>\;
  M0_AXIS_TDATA(21) <= \<const0>\;
  M0_AXIS_TDATA(20) <= \<const0>\;
  M0_AXIS_TDATA(19) <= \<const0>\;
  M0_AXIS_TDATA(18) <= \<const0>\;
  M0_AXIS_TDATA(17) <= \<const0>\;
  M0_AXIS_TDATA(16) <= \<const0>\;
  M0_AXIS_TDATA(15) <= \<const0>\;
  M0_AXIS_TDATA(14) <= \<const0>\;
  M0_AXIS_TDATA(13) <= \<const0>\;
  M0_AXIS_TDATA(12) <= \<const0>\;
  M0_AXIS_TDATA(11) <= \<const0>\;
  M0_AXIS_TDATA(10) <= \<const0>\;
  M0_AXIS_TDATA(9) <= \<const0>\;
  M0_AXIS_TDATA(8) <= \<const0>\;
  M0_AXIS_TDATA(7) <= \<const0>\;
  M0_AXIS_TDATA(6) <= \<const0>\;
  M0_AXIS_TDATA(5) <= \<const0>\;
  M0_AXIS_TDATA(4) <= \<const0>\;
  M0_AXIS_TDATA(3) <= \<const0>\;
  M0_AXIS_TDATA(2) <= \<const0>\;
  M0_AXIS_TDATA(1) <= \<const0>\;
  M0_AXIS_TDATA(0) <= \<const0>\;
  M0_AXIS_TLAST <= \<const0>\;
  M0_AXIS_TVALID <= \<const0>\;
  M10_AXIS_TDATA(31) <= \<const0>\;
  M10_AXIS_TDATA(30) <= \<const0>\;
  M10_AXIS_TDATA(29) <= \<const0>\;
  M10_AXIS_TDATA(28) <= \<const0>\;
  M10_AXIS_TDATA(27) <= \<const0>\;
  M10_AXIS_TDATA(26) <= \<const0>\;
  M10_AXIS_TDATA(25) <= \<const0>\;
  M10_AXIS_TDATA(24) <= \<const0>\;
  M10_AXIS_TDATA(23) <= \<const0>\;
  M10_AXIS_TDATA(22) <= \<const0>\;
  M10_AXIS_TDATA(21) <= \<const0>\;
  M10_AXIS_TDATA(20) <= \<const0>\;
  M10_AXIS_TDATA(19) <= \<const0>\;
  M10_AXIS_TDATA(18) <= \<const0>\;
  M10_AXIS_TDATA(17) <= \<const0>\;
  M10_AXIS_TDATA(16) <= \<const0>\;
  M10_AXIS_TDATA(15) <= \<const0>\;
  M10_AXIS_TDATA(14) <= \<const0>\;
  M10_AXIS_TDATA(13) <= \<const0>\;
  M10_AXIS_TDATA(12) <= \<const0>\;
  M10_AXIS_TDATA(11) <= \<const0>\;
  M10_AXIS_TDATA(10) <= \<const0>\;
  M10_AXIS_TDATA(9) <= \<const0>\;
  M10_AXIS_TDATA(8) <= \<const0>\;
  M10_AXIS_TDATA(7) <= \<const0>\;
  M10_AXIS_TDATA(6) <= \<const0>\;
  M10_AXIS_TDATA(5) <= \<const0>\;
  M10_AXIS_TDATA(4) <= \<const0>\;
  M10_AXIS_TDATA(3) <= \<const0>\;
  M10_AXIS_TDATA(2) <= \<const0>\;
  M10_AXIS_TDATA(1) <= \<const0>\;
  M10_AXIS_TDATA(0) <= \<const0>\;
  M10_AXIS_TLAST <= \<const0>\;
  M10_AXIS_TVALID <= \<const0>\;
  M11_AXIS_TDATA(31) <= \<const0>\;
  M11_AXIS_TDATA(30) <= \<const0>\;
  M11_AXIS_TDATA(29) <= \<const0>\;
  M11_AXIS_TDATA(28) <= \<const0>\;
  M11_AXIS_TDATA(27) <= \<const0>\;
  M11_AXIS_TDATA(26) <= \<const0>\;
  M11_AXIS_TDATA(25) <= \<const0>\;
  M11_AXIS_TDATA(24) <= \<const0>\;
  M11_AXIS_TDATA(23) <= \<const0>\;
  M11_AXIS_TDATA(22) <= \<const0>\;
  M11_AXIS_TDATA(21) <= \<const0>\;
  M11_AXIS_TDATA(20) <= \<const0>\;
  M11_AXIS_TDATA(19) <= \<const0>\;
  M11_AXIS_TDATA(18) <= \<const0>\;
  M11_AXIS_TDATA(17) <= \<const0>\;
  M11_AXIS_TDATA(16) <= \<const0>\;
  M11_AXIS_TDATA(15) <= \<const0>\;
  M11_AXIS_TDATA(14) <= \<const0>\;
  M11_AXIS_TDATA(13) <= \<const0>\;
  M11_AXIS_TDATA(12) <= \<const0>\;
  M11_AXIS_TDATA(11) <= \<const0>\;
  M11_AXIS_TDATA(10) <= \<const0>\;
  M11_AXIS_TDATA(9) <= \<const0>\;
  M11_AXIS_TDATA(8) <= \<const0>\;
  M11_AXIS_TDATA(7) <= \<const0>\;
  M11_AXIS_TDATA(6) <= \<const0>\;
  M11_AXIS_TDATA(5) <= \<const0>\;
  M11_AXIS_TDATA(4) <= \<const0>\;
  M11_AXIS_TDATA(3) <= \<const0>\;
  M11_AXIS_TDATA(2) <= \<const0>\;
  M11_AXIS_TDATA(1) <= \<const0>\;
  M11_AXIS_TDATA(0) <= \<const0>\;
  M11_AXIS_TLAST <= \<const0>\;
  M11_AXIS_TVALID <= \<const0>\;
  M12_AXIS_TDATA(31) <= \<const0>\;
  M12_AXIS_TDATA(30) <= \<const0>\;
  M12_AXIS_TDATA(29) <= \<const0>\;
  M12_AXIS_TDATA(28) <= \<const0>\;
  M12_AXIS_TDATA(27) <= \<const0>\;
  M12_AXIS_TDATA(26) <= \<const0>\;
  M12_AXIS_TDATA(25) <= \<const0>\;
  M12_AXIS_TDATA(24) <= \<const0>\;
  M12_AXIS_TDATA(23) <= \<const0>\;
  M12_AXIS_TDATA(22) <= \<const0>\;
  M12_AXIS_TDATA(21) <= \<const0>\;
  M12_AXIS_TDATA(20) <= \<const0>\;
  M12_AXIS_TDATA(19) <= \<const0>\;
  M12_AXIS_TDATA(18) <= \<const0>\;
  M12_AXIS_TDATA(17) <= \<const0>\;
  M12_AXIS_TDATA(16) <= \<const0>\;
  M12_AXIS_TDATA(15) <= \<const0>\;
  M12_AXIS_TDATA(14) <= \<const0>\;
  M12_AXIS_TDATA(13) <= \<const0>\;
  M12_AXIS_TDATA(12) <= \<const0>\;
  M12_AXIS_TDATA(11) <= \<const0>\;
  M12_AXIS_TDATA(10) <= \<const0>\;
  M12_AXIS_TDATA(9) <= \<const0>\;
  M12_AXIS_TDATA(8) <= \<const0>\;
  M12_AXIS_TDATA(7) <= \<const0>\;
  M12_AXIS_TDATA(6) <= \<const0>\;
  M12_AXIS_TDATA(5) <= \<const0>\;
  M12_AXIS_TDATA(4) <= \<const0>\;
  M12_AXIS_TDATA(3) <= \<const0>\;
  M12_AXIS_TDATA(2) <= \<const0>\;
  M12_AXIS_TDATA(1) <= \<const0>\;
  M12_AXIS_TDATA(0) <= \<const0>\;
  M12_AXIS_TLAST <= \<const0>\;
  M12_AXIS_TVALID <= \<const0>\;
  M13_AXIS_TDATA(31) <= \<const0>\;
  M13_AXIS_TDATA(30) <= \<const0>\;
  M13_AXIS_TDATA(29) <= \<const0>\;
  M13_AXIS_TDATA(28) <= \<const0>\;
  M13_AXIS_TDATA(27) <= \<const0>\;
  M13_AXIS_TDATA(26) <= \<const0>\;
  M13_AXIS_TDATA(25) <= \<const0>\;
  M13_AXIS_TDATA(24) <= \<const0>\;
  M13_AXIS_TDATA(23) <= \<const0>\;
  M13_AXIS_TDATA(22) <= \<const0>\;
  M13_AXIS_TDATA(21) <= \<const0>\;
  M13_AXIS_TDATA(20) <= \<const0>\;
  M13_AXIS_TDATA(19) <= \<const0>\;
  M13_AXIS_TDATA(18) <= \<const0>\;
  M13_AXIS_TDATA(17) <= \<const0>\;
  M13_AXIS_TDATA(16) <= \<const0>\;
  M13_AXIS_TDATA(15) <= \<const0>\;
  M13_AXIS_TDATA(14) <= \<const0>\;
  M13_AXIS_TDATA(13) <= \<const0>\;
  M13_AXIS_TDATA(12) <= \<const0>\;
  M13_AXIS_TDATA(11) <= \<const0>\;
  M13_AXIS_TDATA(10) <= \<const0>\;
  M13_AXIS_TDATA(9) <= \<const0>\;
  M13_AXIS_TDATA(8) <= \<const0>\;
  M13_AXIS_TDATA(7) <= \<const0>\;
  M13_AXIS_TDATA(6) <= \<const0>\;
  M13_AXIS_TDATA(5) <= \<const0>\;
  M13_AXIS_TDATA(4) <= \<const0>\;
  M13_AXIS_TDATA(3) <= \<const0>\;
  M13_AXIS_TDATA(2) <= \<const0>\;
  M13_AXIS_TDATA(1) <= \<const0>\;
  M13_AXIS_TDATA(0) <= \<const0>\;
  M13_AXIS_TLAST <= \<const0>\;
  M13_AXIS_TVALID <= \<const0>\;
  M14_AXIS_TDATA(31) <= \<const0>\;
  M14_AXIS_TDATA(30) <= \<const0>\;
  M14_AXIS_TDATA(29) <= \<const0>\;
  M14_AXIS_TDATA(28) <= \<const0>\;
  M14_AXIS_TDATA(27) <= \<const0>\;
  M14_AXIS_TDATA(26) <= \<const0>\;
  M14_AXIS_TDATA(25) <= \<const0>\;
  M14_AXIS_TDATA(24) <= \<const0>\;
  M14_AXIS_TDATA(23) <= \<const0>\;
  M14_AXIS_TDATA(22) <= \<const0>\;
  M14_AXIS_TDATA(21) <= \<const0>\;
  M14_AXIS_TDATA(20) <= \<const0>\;
  M14_AXIS_TDATA(19) <= \<const0>\;
  M14_AXIS_TDATA(18) <= \<const0>\;
  M14_AXIS_TDATA(17) <= \<const0>\;
  M14_AXIS_TDATA(16) <= \<const0>\;
  M14_AXIS_TDATA(15) <= \<const0>\;
  M14_AXIS_TDATA(14) <= \<const0>\;
  M14_AXIS_TDATA(13) <= \<const0>\;
  M14_AXIS_TDATA(12) <= \<const0>\;
  M14_AXIS_TDATA(11) <= \<const0>\;
  M14_AXIS_TDATA(10) <= \<const0>\;
  M14_AXIS_TDATA(9) <= \<const0>\;
  M14_AXIS_TDATA(8) <= \<const0>\;
  M14_AXIS_TDATA(7) <= \<const0>\;
  M14_AXIS_TDATA(6) <= \<const0>\;
  M14_AXIS_TDATA(5) <= \<const0>\;
  M14_AXIS_TDATA(4) <= \<const0>\;
  M14_AXIS_TDATA(3) <= \<const0>\;
  M14_AXIS_TDATA(2) <= \<const0>\;
  M14_AXIS_TDATA(1) <= \<const0>\;
  M14_AXIS_TDATA(0) <= \<const0>\;
  M14_AXIS_TLAST <= \<const0>\;
  M14_AXIS_TVALID <= \<const0>\;
  M15_AXIS_TDATA(31) <= \<const0>\;
  M15_AXIS_TDATA(30) <= \<const0>\;
  M15_AXIS_TDATA(29) <= \<const0>\;
  M15_AXIS_TDATA(28) <= \<const0>\;
  M15_AXIS_TDATA(27) <= \<const0>\;
  M15_AXIS_TDATA(26) <= \<const0>\;
  M15_AXIS_TDATA(25) <= \<const0>\;
  M15_AXIS_TDATA(24) <= \<const0>\;
  M15_AXIS_TDATA(23) <= \<const0>\;
  M15_AXIS_TDATA(22) <= \<const0>\;
  M15_AXIS_TDATA(21) <= \<const0>\;
  M15_AXIS_TDATA(20) <= \<const0>\;
  M15_AXIS_TDATA(19) <= \<const0>\;
  M15_AXIS_TDATA(18) <= \<const0>\;
  M15_AXIS_TDATA(17) <= \<const0>\;
  M15_AXIS_TDATA(16) <= \<const0>\;
  M15_AXIS_TDATA(15) <= \<const0>\;
  M15_AXIS_TDATA(14) <= \<const0>\;
  M15_AXIS_TDATA(13) <= \<const0>\;
  M15_AXIS_TDATA(12) <= \<const0>\;
  M15_AXIS_TDATA(11) <= \<const0>\;
  M15_AXIS_TDATA(10) <= \<const0>\;
  M15_AXIS_TDATA(9) <= \<const0>\;
  M15_AXIS_TDATA(8) <= \<const0>\;
  M15_AXIS_TDATA(7) <= \<const0>\;
  M15_AXIS_TDATA(6) <= \<const0>\;
  M15_AXIS_TDATA(5) <= \<const0>\;
  M15_AXIS_TDATA(4) <= \<const0>\;
  M15_AXIS_TDATA(3) <= \<const0>\;
  M15_AXIS_TDATA(2) <= \<const0>\;
  M15_AXIS_TDATA(1) <= \<const0>\;
  M15_AXIS_TDATA(0) <= \<const0>\;
  M15_AXIS_TLAST <= \<const0>\;
  M15_AXIS_TVALID <= \<const0>\;
  M1_AXIS_TDATA(31) <= \<const0>\;
  M1_AXIS_TDATA(30) <= \<const0>\;
  M1_AXIS_TDATA(29) <= \<const0>\;
  M1_AXIS_TDATA(28) <= \<const0>\;
  M1_AXIS_TDATA(27) <= \<const0>\;
  M1_AXIS_TDATA(26) <= \<const0>\;
  M1_AXIS_TDATA(25) <= \<const0>\;
  M1_AXIS_TDATA(24) <= \<const0>\;
  M1_AXIS_TDATA(23) <= \<const0>\;
  M1_AXIS_TDATA(22) <= \<const0>\;
  M1_AXIS_TDATA(21) <= \<const0>\;
  M1_AXIS_TDATA(20) <= \<const0>\;
  M1_AXIS_TDATA(19) <= \<const0>\;
  M1_AXIS_TDATA(18) <= \<const0>\;
  M1_AXIS_TDATA(17) <= \<const0>\;
  M1_AXIS_TDATA(16) <= \<const0>\;
  M1_AXIS_TDATA(15) <= \<const0>\;
  M1_AXIS_TDATA(14) <= \<const0>\;
  M1_AXIS_TDATA(13) <= \<const0>\;
  M1_AXIS_TDATA(12) <= \<const0>\;
  M1_AXIS_TDATA(11) <= \<const0>\;
  M1_AXIS_TDATA(10) <= \<const0>\;
  M1_AXIS_TDATA(9) <= \<const0>\;
  M1_AXIS_TDATA(8) <= \<const0>\;
  M1_AXIS_TDATA(7) <= \<const0>\;
  M1_AXIS_TDATA(6) <= \<const0>\;
  M1_AXIS_TDATA(5) <= \<const0>\;
  M1_AXIS_TDATA(4) <= \<const0>\;
  M1_AXIS_TDATA(3) <= \<const0>\;
  M1_AXIS_TDATA(2) <= \<const0>\;
  M1_AXIS_TDATA(1) <= \<const0>\;
  M1_AXIS_TDATA(0) <= \<const0>\;
  M1_AXIS_TLAST <= \<const0>\;
  M1_AXIS_TVALID <= \<const0>\;
  M2_AXIS_TDATA(31) <= \<const0>\;
  M2_AXIS_TDATA(30) <= \<const0>\;
  M2_AXIS_TDATA(29) <= \<const0>\;
  M2_AXIS_TDATA(28) <= \<const0>\;
  M2_AXIS_TDATA(27) <= \<const0>\;
  M2_AXIS_TDATA(26) <= \<const0>\;
  M2_AXIS_TDATA(25) <= \<const0>\;
  M2_AXIS_TDATA(24) <= \<const0>\;
  M2_AXIS_TDATA(23) <= \<const0>\;
  M2_AXIS_TDATA(22) <= \<const0>\;
  M2_AXIS_TDATA(21) <= \<const0>\;
  M2_AXIS_TDATA(20) <= \<const0>\;
  M2_AXIS_TDATA(19) <= \<const0>\;
  M2_AXIS_TDATA(18) <= \<const0>\;
  M2_AXIS_TDATA(17) <= \<const0>\;
  M2_AXIS_TDATA(16) <= \<const0>\;
  M2_AXIS_TDATA(15) <= \<const0>\;
  M2_AXIS_TDATA(14) <= \<const0>\;
  M2_AXIS_TDATA(13) <= \<const0>\;
  M2_AXIS_TDATA(12) <= \<const0>\;
  M2_AXIS_TDATA(11) <= \<const0>\;
  M2_AXIS_TDATA(10) <= \<const0>\;
  M2_AXIS_TDATA(9) <= \<const0>\;
  M2_AXIS_TDATA(8) <= \<const0>\;
  M2_AXIS_TDATA(7) <= \<const0>\;
  M2_AXIS_TDATA(6) <= \<const0>\;
  M2_AXIS_TDATA(5) <= \<const0>\;
  M2_AXIS_TDATA(4) <= \<const0>\;
  M2_AXIS_TDATA(3) <= \<const0>\;
  M2_AXIS_TDATA(2) <= \<const0>\;
  M2_AXIS_TDATA(1) <= \<const0>\;
  M2_AXIS_TDATA(0) <= \<const0>\;
  M2_AXIS_TLAST <= \<const0>\;
  M2_AXIS_TVALID <= \<const0>\;
  M3_AXIS_TDATA(31) <= \<const0>\;
  M3_AXIS_TDATA(30) <= \<const0>\;
  M3_AXIS_TDATA(29) <= \<const0>\;
  M3_AXIS_TDATA(28) <= \<const0>\;
  M3_AXIS_TDATA(27) <= \<const0>\;
  M3_AXIS_TDATA(26) <= \<const0>\;
  M3_AXIS_TDATA(25) <= \<const0>\;
  M3_AXIS_TDATA(24) <= \<const0>\;
  M3_AXIS_TDATA(23) <= \<const0>\;
  M3_AXIS_TDATA(22) <= \<const0>\;
  M3_AXIS_TDATA(21) <= \<const0>\;
  M3_AXIS_TDATA(20) <= \<const0>\;
  M3_AXIS_TDATA(19) <= \<const0>\;
  M3_AXIS_TDATA(18) <= \<const0>\;
  M3_AXIS_TDATA(17) <= \<const0>\;
  M3_AXIS_TDATA(16) <= \<const0>\;
  M3_AXIS_TDATA(15) <= \<const0>\;
  M3_AXIS_TDATA(14) <= \<const0>\;
  M3_AXIS_TDATA(13) <= \<const0>\;
  M3_AXIS_TDATA(12) <= \<const0>\;
  M3_AXIS_TDATA(11) <= \<const0>\;
  M3_AXIS_TDATA(10) <= \<const0>\;
  M3_AXIS_TDATA(9) <= \<const0>\;
  M3_AXIS_TDATA(8) <= \<const0>\;
  M3_AXIS_TDATA(7) <= \<const0>\;
  M3_AXIS_TDATA(6) <= \<const0>\;
  M3_AXIS_TDATA(5) <= \<const0>\;
  M3_AXIS_TDATA(4) <= \<const0>\;
  M3_AXIS_TDATA(3) <= \<const0>\;
  M3_AXIS_TDATA(2) <= \<const0>\;
  M3_AXIS_TDATA(1) <= \<const0>\;
  M3_AXIS_TDATA(0) <= \<const0>\;
  M3_AXIS_TLAST <= \<const0>\;
  M3_AXIS_TVALID <= \<const0>\;
  M4_AXIS_TDATA(31) <= \<const0>\;
  M4_AXIS_TDATA(30) <= \<const0>\;
  M4_AXIS_TDATA(29) <= \<const0>\;
  M4_AXIS_TDATA(28) <= \<const0>\;
  M4_AXIS_TDATA(27) <= \<const0>\;
  M4_AXIS_TDATA(26) <= \<const0>\;
  M4_AXIS_TDATA(25) <= \<const0>\;
  M4_AXIS_TDATA(24) <= \<const0>\;
  M4_AXIS_TDATA(23) <= \<const0>\;
  M4_AXIS_TDATA(22) <= \<const0>\;
  M4_AXIS_TDATA(21) <= \<const0>\;
  M4_AXIS_TDATA(20) <= \<const0>\;
  M4_AXIS_TDATA(19) <= \<const0>\;
  M4_AXIS_TDATA(18) <= \<const0>\;
  M4_AXIS_TDATA(17) <= \<const0>\;
  M4_AXIS_TDATA(16) <= \<const0>\;
  M4_AXIS_TDATA(15) <= \<const0>\;
  M4_AXIS_TDATA(14) <= \<const0>\;
  M4_AXIS_TDATA(13) <= \<const0>\;
  M4_AXIS_TDATA(12) <= \<const0>\;
  M4_AXIS_TDATA(11) <= \<const0>\;
  M4_AXIS_TDATA(10) <= \<const0>\;
  M4_AXIS_TDATA(9) <= \<const0>\;
  M4_AXIS_TDATA(8) <= \<const0>\;
  M4_AXIS_TDATA(7) <= \<const0>\;
  M4_AXIS_TDATA(6) <= \<const0>\;
  M4_AXIS_TDATA(5) <= \<const0>\;
  M4_AXIS_TDATA(4) <= \<const0>\;
  M4_AXIS_TDATA(3) <= \<const0>\;
  M4_AXIS_TDATA(2) <= \<const0>\;
  M4_AXIS_TDATA(1) <= \<const0>\;
  M4_AXIS_TDATA(0) <= \<const0>\;
  M4_AXIS_TLAST <= \<const0>\;
  M4_AXIS_TVALID <= \<const0>\;
  M5_AXIS_TDATA(31) <= \<const0>\;
  M5_AXIS_TDATA(30) <= \<const0>\;
  M5_AXIS_TDATA(29) <= \<const0>\;
  M5_AXIS_TDATA(28) <= \<const0>\;
  M5_AXIS_TDATA(27) <= \<const0>\;
  M5_AXIS_TDATA(26) <= \<const0>\;
  M5_AXIS_TDATA(25) <= \<const0>\;
  M5_AXIS_TDATA(24) <= \<const0>\;
  M5_AXIS_TDATA(23) <= \<const0>\;
  M5_AXIS_TDATA(22) <= \<const0>\;
  M5_AXIS_TDATA(21) <= \<const0>\;
  M5_AXIS_TDATA(20) <= \<const0>\;
  M5_AXIS_TDATA(19) <= \<const0>\;
  M5_AXIS_TDATA(18) <= \<const0>\;
  M5_AXIS_TDATA(17) <= \<const0>\;
  M5_AXIS_TDATA(16) <= \<const0>\;
  M5_AXIS_TDATA(15) <= \<const0>\;
  M5_AXIS_TDATA(14) <= \<const0>\;
  M5_AXIS_TDATA(13) <= \<const0>\;
  M5_AXIS_TDATA(12) <= \<const0>\;
  M5_AXIS_TDATA(11) <= \<const0>\;
  M5_AXIS_TDATA(10) <= \<const0>\;
  M5_AXIS_TDATA(9) <= \<const0>\;
  M5_AXIS_TDATA(8) <= \<const0>\;
  M5_AXIS_TDATA(7) <= \<const0>\;
  M5_AXIS_TDATA(6) <= \<const0>\;
  M5_AXIS_TDATA(5) <= \<const0>\;
  M5_AXIS_TDATA(4) <= \<const0>\;
  M5_AXIS_TDATA(3) <= \<const0>\;
  M5_AXIS_TDATA(2) <= \<const0>\;
  M5_AXIS_TDATA(1) <= \<const0>\;
  M5_AXIS_TDATA(0) <= \<const0>\;
  M5_AXIS_TLAST <= \<const0>\;
  M5_AXIS_TVALID <= \<const0>\;
  M6_AXIS_TDATA(31) <= \<const0>\;
  M6_AXIS_TDATA(30) <= \<const0>\;
  M6_AXIS_TDATA(29) <= \<const0>\;
  M6_AXIS_TDATA(28) <= \<const0>\;
  M6_AXIS_TDATA(27) <= \<const0>\;
  M6_AXIS_TDATA(26) <= \<const0>\;
  M6_AXIS_TDATA(25) <= \<const0>\;
  M6_AXIS_TDATA(24) <= \<const0>\;
  M6_AXIS_TDATA(23) <= \<const0>\;
  M6_AXIS_TDATA(22) <= \<const0>\;
  M6_AXIS_TDATA(21) <= \<const0>\;
  M6_AXIS_TDATA(20) <= \<const0>\;
  M6_AXIS_TDATA(19) <= \<const0>\;
  M6_AXIS_TDATA(18) <= \<const0>\;
  M6_AXIS_TDATA(17) <= \<const0>\;
  M6_AXIS_TDATA(16) <= \<const0>\;
  M6_AXIS_TDATA(15) <= \<const0>\;
  M6_AXIS_TDATA(14) <= \<const0>\;
  M6_AXIS_TDATA(13) <= \<const0>\;
  M6_AXIS_TDATA(12) <= \<const0>\;
  M6_AXIS_TDATA(11) <= \<const0>\;
  M6_AXIS_TDATA(10) <= \<const0>\;
  M6_AXIS_TDATA(9) <= \<const0>\;
  M6_AXIS_TDATA(8) <= \<const0>\;
  M6_AXIS_TDATA(7) <= \<const0>\;
  M6_AXIS_TDATA(6) <= \<const0>\;
  M6_AXIS_TDATA(5) <= \<const0>\;
  M6_AXIS_TDATA(4) <= \<const0>\;
  M6_AXIS_TDATA(3) <= \<const0>\;
  M6_AXIS_TDATA(2) <= \<const0>\;
  M6_AXIS_TDATA(1) <= \<const0>\;
  M6_AXIS_TDATA(0) <= \<const0>\;
  M6_AXIS_TLAST <= \<const0>\;
  M6_AXIS_TVALID <= \<const0>\;
  M7_AXIS_TDATA(31) <= \<const0>\;
  M7_AXIS_TDATA(30) <= \<const0>\;
  M7_AXIS_TDATA(29) <= \<const0>\;
  M7_AXIS_TDATA(28) <= \<const0>\;
  M7_AXIS_TDATA(27) <= \<const0>\;
  M7_AXIS_TDATA(26) <= \<const0>\;
  M7_AXIS_TDATA(25) <= \<const0>\;
  M7_AXIS_TDATA(24) <= \<const0>\;
  M7_AXIS_TDATA(23) <= \<const0>\;
  M7_AXIS_TDATA(22) <= \<const0>\;
  M7_AXIS_TDATA(21) <= \<const0>\;
  M7_AXIS_TDATA(20) <= \<const0>\;
  M7_AXIS_TDATA(19) <= \<const0>\;
  M7_AXIS_TDATA(18) <= \<const0>\;
  M7_AXIS_TDATA(17) <= \<const0>\;
  M7_AXIS_TDATA(16) <= \<const0>\;
  M7_AXIS_TDATA(15) <= \<const0>\;
  M7_AXIS_TDATA(14) <= \<const0>\;
  M7_AXIS_TDATA(13) <= \<const0>\;
  M7_AXIS_TDATA(12) <= \<const0>\;
  M7_AXIS_TDATA(11) <= \<const0>\;
  M7_AXIS_TDATA(10) <= \<const0>\;
  M7_AXIS_TDATA(9) <= \<const0>\;
  M7_AXIS_TDATA(8) <= \<const0>\;
  M7_AXIS_TDATA(7) <= \<const0>\;
  M7_AXIS_TDATA(6) <= \<const0>\;
  M7_AXIS_TDATA(5) <= \<const0>\;
  M7_AXIS_TDATA(4) <= \<const0>\;
  M7_AXIS_TDATA(3) <= \<const0>\;
  M7_AXIS_TDATA(2) <= \<const0>\;
  M7_AXIS_TDATA(1) <= \<const0>\;
  M7_AXIS_TDATA(0) <= \<const0>\;
  M7_AXIS_TLAST <= \<const0>\;
  M7_AXIS_TVALID <= \<const0>\;
  M8_AXIS_TDATA(31) <= \<const0>\;
  M8_AXIS_TDATA(30) <= \<const0>\;
  M8_AXIS_TDATA(29) <= \<const0>\;
  M8_AXIS_TDATA(28) <= \<const0>\;
  M8_AXIS_TDATA(27) <= \<const0>\;
  M8_AXIS_TDATA(26) <= \<const0>\;
  M8_AXIS_TDATA(25) <= \<const0>\;
  M8_AXIS_TDATA(24) <= \<const0>\;
  M8_AXIS_TDATA(23) <= \<const0>\;
  M8_AXIS_TDATA(22) <= \<const0>\;
  M8_AXIS_TDATA(21) <= \<const0>\;
  M8_AXIS_TDATA(20) <= \<const0>\;
  M8_AXIS_TDATA(19) <= \<const0>\;
  M8_AXIS_TDATA(18) <= \<const0>\;
  M8_AXIS_TDATA(17) <= \<const0>\;
  M8_AXIS_TDATA(16) <= \<const0>\;
  M8_AXIS_TDATA(15) <= \<const0>\;
  M8_AXIS_TDATA(14) <= \<const0>\;
  M8_AXIS_TDATA(13) <= \<const0>\;
  M8_AXIS_TDATA(12) <= \<const0>\;
  M8_AXIS_TDATA(11) <= \<const0>\;
  M8_AXIS_TDATA(10) <= \<const0>\;
  M8_AXIS_TDATA(9) <= \<const0>\;
  M8_AXIS_TDATA(8) <= \<const0>\;
  M8_AXIS_TDATA(7) <= \<const0>\;
  M8_AXIS_TDATA(6) <= \<const0>\;
  M8_AXIS_TDATA(5) <= \<const0>\;
  M8_AXIS_TDATA(4) <= \<const0>\;
  M8_AXIS_TDATA(3) <= \<const0>\;
  M8_AXIS_TDATA(2) <= \<const0>\;
  M8_AXIS_TDATA(1) <= \<const0>\;
  M8_AXIS_TDATA(0) <= \<const0>\;
  M8_AXIS_TLAST <= \<const0>\;
  M8_AXIS_TVALID <= \<const0>\;
  M9_AXIS_TDATA(31) <= \<const0>\;
  M9_AXIS_TDATA(30) <= \<const0>\;
  M9_AXIS_TDATA(29) <= \<const0>\;
  M9_AXIS_TDATA(28) <= \<const0>\;
  M9_AXIS_TDATA(27) <= \<const0>\;
  M9_AXIS_TDATA(26) <= \<const0>\;
  M9_AXIS_TDATA(25) <= \<const0>\;
  M9_AXIS_TDATA(24) <= \<const0>\;
  M9_AXIS_TDATA(23) <= \<const0>\;
  M9_AXIS_TDATA(22) <= \<const0>\;
  M9_AXIS_TDATA(21) <= \<const0>\;
  M9_AXIS_TDATA(20) <= \<const0>\;
  M9_AXIS_TDATA(19) <= \<const0>\;
  M9_AXIS_TDATA(18) <= \<const0>\;
  M9_AXIS_TDATA(17) <= \<const0>\;
  M9_AXIS_TDATA(16) <= \<const0>\;
  M9_AXIS_TDATA(15) <= \<const0>\;
  M9_AXIS_TDATA(14) <= \<const0>\;
  M9_AXIS_TDATA(13) <= \<const0>\;
  M9_AXIS_TDATA(12) <= \<const0>\;
  M9_AXIS_TDATA(11) <= \<const0>\;
  M9_AXIS_TDATA(10) <= \<const0>\;
  M9_AXIS_TDATA(9) <= \<const0>\;
  M9_AXIS_TDATA(8) <= \<const0>\;
  M9_AXIS_TDATA(7) <= \<const0>\;
  M9_AXIS_TDATA(6) <= \<const0>\;
  M9_AXIS_TDATA(5) <= \<const0>\;
  M9_AXIS_TDATA(4) <= \<const0>\;
  M9_AXIS_TDATA(3) <= \<const0>\;
  M9_AXIS_TDATA(2) <= \<const0>\;
  M9_AXIS_TDATA(1) <= \<const0>\;
  M9_AXIS_TDATA(0) <= \<const0>\;
  M9_AXIS_TLAST <= \<const0>\;
  M9_AXIS_TVALID <= \<const0>\;
  MB_Error <= \<const0>\;
  MB_Halted <= \^mb_halted\;
  M_AXI_DC_ACREADY <= \<const0>\;
  M_AXI_DC_ARADDR(31) <= \<const0>\;
  M_AXI_DC_ARADDR(30) <= \<const0>\;
  M_AXI_DC_ARADDR(29) <= \<const0>\;
  M_AXI_DC_ARADDR(28) <= \<const0>\;
  M_AXI_DC_ARADDR(27) <= \<const0>\;
  M_AXI_DC_ARADDR(26) <= \<const0>\;
  M_AXI_DC_ARADDR(25) <= \<const0>\;
  M_AXI_DC_ARADDR(24) <= \<const0>\;
  M_AXI_DC_ARADDR(23) <= \<const0>\;
  M_AXI_DC_ARADDR(22) <= \<const0>\;
  M_AXI_DC_ARADDR(21) <= \<const0>\;
  M_AXI_DC_ARADDR(20) <= \<const0>\;
  M_AXI_DC_ARADDR(19) <= \<const0>\;
  M_AXI_DC_ARADDR(18) <= \<const0>\;
  M_AXI_DC_ARADDR(17) <= \<const0>\;
  M_AXI_DC_ARADDR(16) <= \<const0>\;
  M_AXI_DC_ARADDR(15) <= \<const0>\;
  M_AXI_DC_ARADDR(14) <= \<const0>\;
  M_AXI_DC_ARADDR(13) <= \<const0>\;
  M_AXI_DC_ARADDR(12) <= \<const0>\;
  M_AXI_DC_ARADDR(11) <= \<const0>\;
  M_AXI_DC_ARADDR(10) <= \<const0>\;
  M_AXI_DC_ARADDR(9) <= \<const0>\;
  M_AXI_DC_ARADDR(8) <= \<const0>\;
  M_AXI_DC_ARADDR(7) <= \<const0>\;
  M_AXI_DC_ARADDR(6) <= \<const0>\;
  M_AXI_DC_ARADDR(5) <= \<const0>\;
  M_AXI_DC_ARADDR(4) <= \<const0>\;
  M_AXI_DC_ARADDR(3) <= \<const0>\;
  M_AXI_DC_ARADDR(2) <= \<const0>\;
  M_AXI_DC_ARADDR(1) <= \<const0>\;
  M_AXI_DC_ARADDR(0) <= \<const0>\;
  M_AXI_DC_ARBAR(1) <= \<const0>\;
  M_AXI_DC_ARBAR(0) <= \<const0>\;
  M_AXI_DC_ARBURST(1) <= \<const0>\;
  M_AXI_DC_ARBURST(0) <= \<const0>\;
  M_AXI_DC_ARCACHE(3) <= \<const0>\;
  M_AXI_DC_ARCACHE(2) <= \<const0>\;
  M_AXI_DC_ARCACHE(1) <= \<const0>\;
  M_AXI_DC_ARCACHE(0) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_DC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_DC_ARID(0) <= \<const0>\;
  M_AXI_DC_ARLEN(7) <= \<const0>\;
  M_AXI_DC_ARLEN(6) <= \<const0>\;
  M_AXI_DC_ARLEN(5) <= \<const0>\;
  M_AXI_DC_ARLEN(4) <= \<const0>\;
  M_AXI_DC_ARLEN(3) <= \<const0>\;
  M_AXI_DC_ARLEN(2) <= \<const0>\;
  M_AXI_DC_ARLEN(1) <= \<const0>\;
  M_AXI_DC_ARLEN(0) <= \<const0>\;
  M_AXI_DC_ARLOCK <= \<const0>\;
  M_AXI_DC_ARPROT(2) <= \<const0>\;
  M_AXI_DC_ARPROT(1) <= \<const0>\;
  M_AXI_DC_ARPROT(0) <= \<const0>\;
  M_AXI_DC_ARQOS(3) <= \<const0>\;
  M_AXI_DC_ARQOS(2) <= \<const0>\;
  M_AXI_DC_ARQOS(1) <= \<const0>\;
  M_AXI_DC_ARQOS(0) <= \<const0>\;
  M_AXI_DC_ARSIZE(2) <= \<const0>\;
  M_AXI_DC_ARSIZE(1) <= \<const0>\;
  M_AXI_DC_ARSIZE(0) <= \<const0>\;
  M_AXI_DC_ARSNOOP(3) <= \<const0>\;
  M_AXI_DC_ARSNOOP(2) <= \<const0>\;
  M_AXI_DC_ARSNOOP(1) <= \<const0>\;
  M_AXI_DC_ARSNOOP(0) <= \<const0>\;
  M_AXI_DC_ARUSER(4) <= \<const0>\;
  M_AXI_DC_ARUSER(3) <= \<const0>\;
  M_AXI_DC_ARUSER(2) <= \<const0>\;
  M_AXI_DC_ARUSER(1) <= \<const0>\;
  M_AXI_DC_ARUSER(0) <= \<const0>\;
  M_AXI_DC_ARVALID <= \<const0>\;
  M_AXI_DC_AWADDR(31) <= \<const0>\;
  M_AXI_DC_AWADDR(30) <= \<const0>\;
  M_AXI_DC_AWADDR(29) <= \<const0>\;
  M_AXI_DC_AWADDR(28) <= \<const0>\;
  M_AXI_DC_AWADDR(27) <= \<const0>\;
  M_AXI_DC_AWADDR(26) <= \<const0>\;
  M_AXI_DC_AWADDR(25) <= \<const0>\;
  M_AXI_DC_AWADDR(24) <= \<const0>\;
  M_AXI_DC_AWADDR(23) <= \<const0>\;
  M_AXI_DC_AWADDR(22) <= \<const0>\;
  M_AXI_DC_AWADDR(21) <= \<const0>\;
  M_AXI_DC_AWADDR(20) <= \<const0>\;
  M_AXI_DC_AWADDR(19) <= \<const0>\;
  M_AXI_DC_AWADDR(18) <= \<const0>\;
  M_AXI_DC_AWADDR(17) <= \<const0>\;
  M_AXI_DC_AWADDR(16) <= \<const0>\;
  M_AXI_DC_AWADDR(15) <= \<const0>\;
  M_AXI_DC_AWADDR(14) <= \<const0>\;
  M_AXI_DC_AWADDR(13) <= \<const0>\;
  M_AXI_DC_AWADDR(12) <= \<const0>\;
  M_AXI_DC_AWADDR(11) <= \<const0>\;
  M_AXI_DC_AWADDR(10) <= \<const0>\;
  M_AXI_DC_AWADDR(9) <= \<const0>\;
  M_AXI_DC_AWADDR(8) <= \<const0>\;
  M_AXI_DC_AWADDR(7) <= \<const0>\;
  M_AXI_DC_AWADDR(6) <= \<const0>\;
  M_AXI_DC_AWADDR(5) <= \<const0>\;
  M_AXI_DC_AWADDR(4) <= \<const0>\;
  M_AXI_DC_AWADDR(3) <= \<const0>\;
  M_AXI_DC_AWADDR(2) <= \<const0>\;
  M_AXI_DC_AWADDR(1) <= \<const0>\;
  M_AXI_DC_AWADDR(0) <= \<const0>\;
  M_AXI_DC_AWBAR(1) <= \<const0>\;
  M_AXI_DC_AWBAR(0) <= \<const0>\;
  M_AXI_DC_AWBURST(1) <= \<const0>\;
  M_AXI_DC_AWBURST(0) <= \<const0>\;
  M_AXI_DC_AWCACHE(3) <= \<const0>\;
  M_AXI_DC_AWCACHE(2) <= \<const0>\;
  M_AXI_DC_AWCACHE(1) <= \<const0>\;
  M_AXI_DC_AWCACHE(0) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_DC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_DC_AWID(0) <= \<const0>\;
  M_AXI_DC_AWLEN(7) <= \<const0>\;
  M_AXI_DC_AWLEN(6) <= \<const0>\;
  M_AXI_DC_AWLEN(5) <= \<const0>\;
  M_AXI_DC_AWLEN(4) <= \<const0>\;
  M_AXI_DC_AWLEN(3) <= \<const0>\;
  M_AXI_DC_AWLEN(2) <= \<const0>\;
  M_AXI_DC_AWLEN(1) <= \<const0>\;
  M_AXI_DC_AWLEN(0) <= \<const0>\;
  M_AXI_DC_AWLOCK <= \<const0>\;
  M_AXI_DC_AWPROT(2) <= \<const0>\;
  M_AXI_DC_AWPROT(1) <= \<const0>\;
  M_AXI_DC_AWPROT(0) <= \<const0>\;
  M_AXI_DC_AWQOS(3) <= \<const0>\;
  M_AXI_DC_AWQOS(2) <= \<const0>\;
  M_AXI_DC_AWQOS(1) <= \<const0>\;
  M_AXI_DC_AWQOS(0) <= \<const0>\;
  M_AXI_DC_AWSIZE(2) <= \<const0>\;
  M_AXI_DC_AWSIZE(1) <= \<const0>\;
  M_AXI_DC_AWSIZE(0) <= \<const0>\;
  M_AXI_DC_AWSNOOP(2) <= \<const0>\;
  M_AXI_DC_AWSNOOP(1) <= \<const0>\;
  M_AXI_DC_AWSNOOP(0) <= \<const0>\;
  M_AXI_DC_AWUSER(4) <= \<const0>\;
  M_AXI_DC_AWUSER(3) <= \<const0>\;
  M_AXI_DC_AWUSER(2) <= \<const0>\;
  M_AXI_DC_AWUSER(1) <= \<const0>\;
  M_AXI_DC_AWUSER(0) <= \<const0>\;
  M_AXI_DC_AWVALID <= \<const0>\;
  M_AXI_DC_BREADY <= \<const0>\;
  M_AXI_DC_CDDATA(31) <= \<const0>\;
  M_AXI_DC_CDDATA(30) <= \<const0>\;
  M_AXI_DC_CDDATA(29) <= \<const0>\;
  M_AXI_DC_CDDATA(28) <= \<const0>\;
  M_AXI_DC_CDDATA(27) <= \<const0>\;
  M_AXI_DC_CDDATA(26) <= \<const0>\;
  M_AXI_DC_CDDATA(25) <= \<const0>\;
  M_AXI_DC_CDDATA(24) <= \<const0>\;
  M_AXI_DC_CDDATA(23) <= \<const0>\;
  M_AXI_DC_CDDATA(22) <= \<const0>\;
  M_AXI_DC_CDDATA(21) <= \<const0>\;
  M_AXI_DC_CDDATA(20) <= \<const0>\;
  M_AXI_DC_CDDATA(19) <= \<const0>\;
  M_AXI_DC_CDDATA(18) <= \<const0>\;
  M_AXI_DC_CDDATA(17) <= \<const0>\;
  M_AXI_DC_CDDATA(16) <= \<const0>\;
  M_AXI_DC_CDDATA(15) <= \<const0>\;
  M_AXI_DC_CDDATA(14) <= \<const0>\;
  M_AXI_DC_CDDATA(13) <= \<const0>\;
  M_AXI_DC_CDDATA(12) <= \<const0>\;
  M_AXI_DC_CDDATA(11) <= \<const0>\;
  M_AXI_DC_CDDATA(10) <= \<const0>\;
  M_AXI_DC_CDDATA(9) <= \<const0>\;
  M_AXI_DC_CDDATA(8) <= \<const0>\;
  M_AXI_DC_CDDATA(7) <= \<const0>\;
  M_AXI_DC_CDDATA(6) <= \<const0>\;
  M_AXI_DC_CDDATA(5) <= \<const0>\;
  M_AXI_DC_CDDATA(4) <= \<const0>\;
  M_AXI_DC_CDDATA(3) <= \<const0>\;
  M_AXI_DC_CDDATA(2) <= \<const0>\;
  M_AXI_DC_CDDATA(1) <= \<const0>\;
  M_AXI_DC_CDDATA(0) <= \<const0>\;
  M_AXI_DC_CDLAST <= \<const0>\;
  M_AXI_DC_CDVALID <= \<const0>\;
  M_AXI_DC_CRRESP(4) <= \<const0>\;
  M_AXI_DC_CRRESP(3) <= \<const0>\;
  M_AXI_DC_CRRESP(2) <= \<const0>\;
  M_AXI_DC_CRRESP(1) <= \<const0>\;
  M_AXI_DC_CRRESP(0) <= \<const0>\;
  M_AXI_DC_CRVALID <= \<const0>\;
  M_AXI_DC_RACK <= \<const0>\;
  M_AXI_DC_RREADY <= \<const0>\;
  M_AXI_DC_WACK <= \<const0>\;
  M_AXI_DC_WDATA(31) <= \<const0>\;
  M_AXI_DC_WDATA(30) <= \<const0>\;
  M_AXI_DC_WDATA(29) <= \<const0>\;
  M_AXI_DC_WDATA(28) <= \<const0>\;
  M_AXI_DC_WDATA(27) <= \<const0>\;
  M_AXI_DC_WDATA(26) <= \<const0>\;
  M_AXI_DC_WDATA(25) <= \<const0>\;
  M_AXI_DC_WDATA(24) <= \<const0>\;
  M_AXI_DC_WDATA(23) <= \<const0>\;
  M_AXI_DC_WDATA(22) <= \<const0>\;
  M_AXI_DC_WDATA(21) <= \<const0>\;
  M_AXI_DC_WDATA(20) <= \<const0>\;
  M_AXI_DC_WDATA(19) <= \<const0>\;
  M_AXI_DC_WDATA(18) <= \<const0>\;
  M_AXI_DC_WDATA(17) <= \<const0>\;
  M_AXI_DC_WDATA(16) <= \<const0>\;
  M_AXI_DC_WDATA(15) <= \<const0>\;
  M_AXI_DC_WDATA(14) <= \<const0>\;
  M_AXI_DC_WDATA(13) <= \<const0>\;
  M_AXI_DC_WDATA(12) <= \<const0>\;
  M_AXI_DC_WDATA(11) <= \<const0>\;
  M_AXI_DC_WDATA(10) <= \<const0>\;
  M_AXI_DC_WDATA(9) <= \<const0>\;
  M_AXI_DC_WDATA(8) <= \<const0>\;
  M_AXI_DC_WDATA(7) <= \<const0>\;
  M_AXI_DC_WDATA(6) <= \<const0>\;
  M_AXI_DC_WDATA(5) <= \<const0>\;
  M_AXI_DC_WDATA(4) <= \<const0>\;
  M_AXI_DC_WDATA(3) <= \<const0>\;
  M_AXI_DC_WDATA(2) <= \<const0>\;
  M_AXI_DC_WDATA(1) <= \<const0>\;
  M_AXI_DC_WDATA(0) <= \<const0>\;
  M_AXI_DC_WLAST <= \<const0>\;
  M_AXI_DC_WSTRB(3) <= \<const0>\;
  M_AXI_DC_WSTRB(2) <= \<const0>\;
  M_AXI_DC_WSTRB(1) <= \<const0>\;
  M_AXI_DC_WSTRB(0) <= \<const0>\;
  M_AXI_DC_WUSER(0) <= \<const0>\;
  M_AXI_DC_WVALID <= \<const0>\;
  M_AXI_DP_ARADDR(31 downto 0) <= \^m_axi_dp_awaddr\(31 downto 0);
  M_AXI_DP_ARBURST(1) <= \<const0>\;
  M_AXI_DP_ARBURST(0) <= \<const1>\;
  M_AXI_DP_ARCACHE(3) <= \<const0>\;
  M_AXI_DP_ARCACHE(2) <= \<const0>\;
  M_AXI_DP_ARCACHE(1) <= \<const1>\;
  M_AXI_DP_ARCACHE(0) <= \<const0>\;
  M_AXI_DP_ARID(0) <= \<const0>\;
  M_AXI_DP_ARLEN(7) <= \<const0>\;
  M_AXI_DP_ARLEN(6) <= \<const0>\;
  M_AXI_DP_ARLEN(5) <= \<const0>\;
  M_AXI_DP_ARLEN(4) <= \<const0>\;
  M_AXI_DP_ARLEN(3) <= \<const0>\;
  M_AXI_DP_ARLEN(2) <= \<const0>\;
  M_AXI_DP_ARLEN(1) <= \<const0>\;
  M_AXI_DP_ARLEN(0) <= \<const0>\;
  M_AXI_DP_ARLOCK <= \<const0>\;
  M_AXI_DP_ARPROT(2) <= \<const0>\;
  M_AXI_DP_ARPROT(1) <= \<const0>\;
  M_AXI_DP_ARPROT(0) <= \<const0>\;
  M_AXI_DP_ARQOS(3) <= \<const1>\;
  M_AXI_DP_ARQOS(2) <= \<const0>\;
  M_AXI_DP_ARQOS(1) <= \<const0>\;
  M_AXI_DP_ARQOS(0) <= \<const0>\;
  M_AXI_DP_ARSIZE(2) <= \<const0>\;
  M_AXI_DP_ARSIZE(1) <= \<const1>\;
  M_AXI_DP_ARSIZE(0) <= \<const0>\;
  M_AXI_DP_ARVALID <= \^m_axi_dp_arvalid\;
  M_AXI_DP_AWADDR(31 downto 0) <= \^m_axi_dp_awaddr\(31 downto 0);
  M_AXI_DP_AWBURST(1) <= \<const0>\;
  M_AXI_DP_AWBURST(0) <= \<const1>\;
  M_AXI_DP_AWCACHE(3) <= \<const0>\;
  M_AXI_DP_AWCACHE(2) <= \<const0>\;
  M_AXI_DP_AWCACHE(1) <= \<const1>\;
  M_AXI_DP_AWCACHE(0) <= \<const0>\;
  M_AXI_DP_AWID(0) <= \<const0>\;
  M_AXI_DP_AWLEN(7) <= \<const0>\;
  M_AXI_DP_AWLEN(6) <= \<const0>\;
  M_AXI_DP_AWLEN(5) <= \<const0>\;
  M_AXI_DP_AWLEN(4) <= \<const0>\;
  M_AXI_DP_AWLEN(3) <= \<const0>\;
  M_AXI_DP_AWLEN(2) <= \<const0>\;
  M_AXI_DP_AWLEN(1) <= \<const0>\;
  M_AXI_DP_AWLEN(0) <= \<const0>\;
  M_AXI_DP_AWLOCK <= \<const0>\;
  M_AXI_DP_AWPROT(2) <= \<const0>\;
  M_AXI_DP_AWPROT(1) <= \<const0>\;
  M_AXI_DP_AWPROT(0) <= \<const0>\;
  M_AXI_DP_AWQOS(3) <= \<const1>\;
  M_AXI_DP_AWQOS(2) <= \<const0>\;
  M_AXI_DP_AWQOS(1) <= \<const0>\;
  M_AXI_DP_AWQOS(0) <= \<const0>\;
  M_AXI_DP_AWSIZE(2) <= \<const0>\;
  M_AXI_DP_AWSIZE(1) <= \<const1>\;
  M_AXI_DP_AWSIZE(0) <= \<const0>\;
  M_AXI_DP_AWVALID <= \^m_axi_dp_awvalid\;
  M_AXI_DP_BREADY <= \^m_axi_dp_bready\;
  M_AXI_DP_RREADY <= \^m_axi_dp_rready\;
  M_AXI_DP_WDATA(31 downto 0) <= \^m_axi_dp_wdata\(31 downto 0);
  M_AXI_DP_WLAST <= \<const1>\;
  M_AXI_DP_WSTRB(3 downto 0) <= \^m_axi_dp_wstrb\(3 downto 0);
  M_AXI_DP_WVALID <= \^m_axi_dp_wvalid\;
  M_AXI_IC_ACREADY <= \<const0>\;
  M_AXI_IC_ARADDR(31) <= \<const0>\;
  M_AXI_IC_ARADDR(30) <= \<const0>\;
  M_AXI_IC_ARADDR(29) <= \<const0>\;
  M_AXI_IC_ARADDR(28) <= \<const0>\;
  M_AXI_IC_ARADDR(27) <= \<const0>\;
  M_AXI_IC_ARADDR(26) <= \<const0>\;
  M_AXI_IC_ARADDR(25) <= \<const0>\;
  M_AXI_IC_ARADDR(24) <= \<const0>\;
  M_AXI_IC_ARADDR(23) <= \<const0>\;
  M_AXI_IC_ARADDR(22) <= \<const0>\;
  M_AXI_IC_ARADDR(21) <= \<const0>\;
  M_AXI_IC_ARADDR(20) <= \<const0>\;
  M_AXI_IC_ARADDR(19) <= \<const0>\;
  M_AXI_IC_ARADDR(18) <= \<const0>\;
  M_AXI_IC_ARADDR(17) <= \<const0>\;
  M_AXI_IC_ARADDR(16) <= \<const0>\;
  M_AXI_IC_ARADDR(15) <= \<const0>\;
  M_AXI_IC_ARADDR(14) <= \<const0>\;
  M_AXI_IC_ARADDR(13) <= \<const0>\;
  M_AXI_IC_ARADDR(12) <= \<const0>\;
  M_AXI_IC_ARADDR(11) <= \<const0>\;
  M_AXI_IC_ARADDR(10) <= \<const0>\;
  M_AXI_IC_ARADDR(9) <= \<const0>\;
  M_AXI_IC_ARADDR(8) <= \<const0>\;
  M_AXI_IC_ARADDR(7) <= \<const0>\;
  M_AXI_IC_ARADDR(6) <= \<const0>\;
  M_AXI_IC_ARADDR(5) <= \<const0>\;
  M_AXI_IC_ARADDR(4) <= \<const0>\;
  M_AXI_IC_ARADDR(3) <= \<const0>\;
  M_AXI_IC_ARADDR(2) <= \<const0>\;
  M_AXI_IC_ARADDR(1) <= \<const0>\;
  M_AXI_IC_ARADDR(0) <= \<const0>\;
  M_AXI_IC_ARBAR(1) <= \<const0>\;
  M_AXI_IC_ARBAR(0) <= \<const0>\;
  M_AXI_IC_ARBURST(1) <= \<const0>\;
  M_AXI_IC_ARBURST(0) <= \<const0>\;
  M_AXI_IC_ARCACHE(3) <= \<const0>\;
  M_AXI_IC_ARCACHE(2) <= \<const0>\;
  M_AXI_IC_ARCACHE(1) <= \<const0>\;
  M_AXI_IC_ARCACHE(0) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(1) <= \<const0>\;
  M_AXI_IC_ARDOMAIN(0) <= \<const0>\;
  M_AXI_IC_ARID(0) <= \<const0>\;
  M_AXI_IC_ARLEN(7) <= \<const0>\;
  M_AXI_IC_ARLEN(6) <= \<const0>\;
  M_AXI_IC_ARLEN(5) <= \<const0>\;
  M_AXI_IC_ARLEN(4) <= \<const0>\;
  M_AXI_IC_ARLEN(3) <= \<const0>\;
  M_AXI_IC_ARLEN(2) <= \<const0>\;
  M_AXI_IC_ARLEN(1) <= \<const0>\;
  M_AXI_IC_ARLEN(0) <= \<const0>\;
  M_AXI_IC_ARLOCK <= \<const0>\;
  M_AXI_IC_ARPROT(2) <= \<const0>\;
  M_AXI_IC_ARPROT(1) <= \<const0>\;
  M_AXI_IC_ARPROT(0) <= \<const0>\;
  M_AXI_IC_ARQOS(3) <= \<const0>\;
  M_AXI_IC_ARQOS(2) <= \<const0>\;
  M_AXI_IC_ARQOS(1) <= \<const0>\;
  M_AXI_IC_ARQOS(0) <= \<const0>\;
  M_AXI_IC_ARSIZE(2) <= \<const0>\;
  M_AXI_IC_ARSIZE(1) <= \<const0>\;
  M_AXI_IC_ARSIZE(0) <= \<const0>\;
  M_AXI_IC_ARSNOOP(3) <= \<const0>\;
  M_AXI_IC_ARSNOOP(2) <= \<const0>\;
  M_AXI_IC_ARSNOOP(1) <= \<const0>\;
  M_AXI_IC_ARSNOOP(0) <= \<const0>\;
  M_AXI_IC_ARUSER(4) <= \<const0>\;
  M_AXI_IC_ARUSER(3) <= \<const0>\;
  M_AXI_IC_ARUSER(2) <= \<const0>\;
  M_AXI_IC_ARUSER(1) <= \<const0>\;
  M_AXI_IC_ARUSER(0) <= \<const0>\;
  M_AXI_IC_ARVALID <= \<const0>\;
  M_AXI_IC_AWADDR(31) <= \<const0>\;
  M_AXI_IC_AWADDR(30) <= \<const0>\;
  M_AXI_IC_AWADDR(29) <= \<const0>\;
  M_AXI_IC_AWADDR(28) <= \<const0>\;
  M_AXI_IC_AWADDR(27) <= \<const0>\;
  M_AXI_IC_AWADDR(26) <= \<const0>\;
  M_AXI_IC_AWADDR(25) <= \<const0>\;
  M_AXI_IC_AWADDR(24) <= \<const0>\;
  M_AXI_IC_AWADDR(23) <= \<const0>\;
  M_AXI_IC_AWADDR(22) <= \<const0>\;
  M_AXI_IC_AWADDR(21) <= \<const0>\;
  M_AXI_IC_AWADDR(20) <= \<const0>\;
  M_AXI_IC_AWADDR(19) <= \<const0>\;
  M_AXI_IC_AWADDR(18) <= \<const0>\;
  M_AXI_IC_AWADDR(17) <= \<const0>\;
  M_AXI_IC_AWADDR(16) <= \<const0>\;
  M_AXI_IC_AWADDR(15) <= \<const0>\;
  M_AXI_IC_AWADDR(14) <= \<const0>\;
  M_AXI_IC_AWADDR(13) <= \<const0>\;
  M_AXI_IC_AWADDR(12) <= \<const0>\;
  M_AXI_IC_AWADDR(11) <= \<const0>\;
  M_AXI_IC_AWADDR(10) <= \<const0>\;
  M_AXI_IC_AWADDR(9) <= \<const0>\;
  M_AXI_IC_AWADDR(8) <= \<const0>\;
  M_AXI_IC_AWADDR(7) <= \<const0>\;
  M_AXI_IC_AWADDR(6) <= \<const0>\;
  M_AXI_IC_AWADDR(5) <= \<const0>\;
  M_AXI_IC_AWADDR(4) <= \<const0>\;
  M_AXI_IC_AWADDR(3) <= \<const0>\;
  M_AXI_IC_AWADDR(2) <= \<const0>\;
  M_AXI_IC_AWADDR(1) <= \<const0>\;
  M_AXI_IC_AWADDR(0) <= \<const0>\;
  M_AXI_IC_AWBAR(1) <= \<const0>\;
  M_AXI_IC_AWBAR(0) <= \<const0>\;
  M_AXI_IC_AWBURST(1) <= \<const0>\;
  M_AXI_IC_AWBURST(0) <= \<const0>\;
  M_AXI_IC_AWCACHE(3) <= \<const0>\;
  M_AXI_IC_AWCACHE(2) <= \<const0>\;
  M_AXI_IC_AWCACHE(1) <= \<const0>\;
  M_AXI_IC_AWCACHE(0) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(1) <= \<const0>\;
  M_AXI_IC_AWDOMAIN(0) <= \<const0>\;
  M_AXI_IC_AWID(0) <= \<const0>\;
  M_AXI_IC_AWLEN(7) <= \<const0>\;
  M_AXI_IC_AWLEN(6) <= \<const0>\;
  M_AXI_IC_AWLEN(5) <= \<const0>\;
  M_AXI_IC_AWLEN(4) <= \<const0>\;
  M_AXI_IC_AWLEN(3) <= \<const0>\;
  M_AXI_IC_AWLEN(2) <= \<const0>\;
  M_AXI_IC_AWLEN(1) <= \<const0>\;
  M_AXI_IC_AWLEN(0) <= \<const0>\;
  M_AXI_IC_AWLOCK <= \<const0>\;
  M_AXI_IC_AWPROT(2) <= \<const0>\;
  M_AXI_IC_AWPROT(1) <= \<const0>\;
  M_AXI_IC_AWPROT(0) <= \<const0>\;
  M_AXI_IC_AWQOS(3) <= \<const0>\;
  M_AXI_IC_AWQOS(2) <= \<const0>\;
  M_AXI_IC_AWQOS(1) <= \<const0>\;
  M_AXI_IC_AWQOS(0) <= \<const0>\;
  M_AXI_IC_AWSIZE(2) <= \<const0>\;
  M_AXI_IC_AWSIZE(1) <= \<const0>\;
  M_AXI_IC_AWSIZE(0) <= \<const0>\;
  M_AXI_IC_AWSNOOP(2) <= \<const0>\;
  M_AXI_IC_AWSNOOP(1) <= \<const0>\;
  M_AXI_IC_AWSNOOP(0) <= \<const0>\;
  M_AXI_IC_AWUSER(4) <= \<const0>\;
  M_AXI_IC_AWUSER(3) <= \<const0>\;
  M_AXI_IC_AWUSER(2) <= \<const0>\;
  M_AXI_IC_AWUSER(1) <= \<const0>\;
  M_AXI_IC_AWUSER(0) <= \<const0>\;
  M_AXI_IC_AWVALID <= \<const0>\;
  M_AXI_IC_BREADY <= \<const0>\;
  M_AXI_IC_CDDATA(31) <= \<const0>\;
  M_AXI_IC_CDDATA(30) <= \<const0>\;
  M_AXI_IC_CDDATA(29) <= \<const0>\;
  M_AXI_IC_CDDATA(28) <= \<const0>\;
  M_AXI_IC_CDDATA(27) <= \<const0>\;
  M_AXI_IC_CDDATA(26) <= \<const0>\;
  M_AXI_IC_CDDATA(25) <= \<const0>\;
  M_AXI_IC_CDDATA(24) <= \<const0>\;
  M_AXI_IC_CDDATA(23) <= \<const0>\;
  M_AXI_IC_CDDATA(22) <= \<const0>\;
  M_AXI_IC_CDDATA(21) <= \<const0>\;
  M_AXI_IC_CDDATA(20) <= \<const0>\;
  M_AXI_IC_CDDATA(19) <= \<const0>\;
  M_AXI_IC_CDDATA(18) <= \<const0>\;
  M_AXI_IC_CDDATA(17) <= \<const0>\;
  M_AXI_IC_CDDATA(16) <= \<const0>\;
  M_AXI_IC_CDDATA(15) <= \<const0>\;
  M_AXI_IC_CDDATA(14) <= \<const0>\;
  M_AXI_IC_CDDATA(13) <= \<const0>\;
  M_AXI_IC_CDDATA(12) <= \<const0>\;
  M_AXI_IC_CDDATA(11) <= \<const0>\;
  M_AXI_IC_CDDATA(10) <= \<const0>\;
  M_AXI_IC_CDDATA(9) <= \<const0>\;
  M_AXI_IC_CDDATA(8) <= \<const0>\;
  M_AXI_IC_CDDATA(7) <= \<const0>\;
  M_AXI_IC_CDDATA(6) <= \<const0>\;
  M_AXI_IC_CDDATA(5) <= \<const0>\;
  M_AXI_IC_CDDATA(4) <= \<const0>\;
  M_AXI_IC_CDDATA(3) <= \<const0>\;
  M_AXI_IC_CDDATA(2) <= \<const0>\;
  M_AXI_IC_CDDATA(1) <= \<const0>\;
  M_AXI_IC_CDDATA(0) <= \<const0>\;
  M_AXI_IC_CDLAST <= \<const0>\;
  M_AXI_IC_CDVALID <= \<const0>\;
  M_AXI_IC_CRRESP(4) <= \<const0>\;
  M_AXI_IC_CRRESP(3) <= \<const0>\;
  M_AXI_IC_CRRESP(2) <= \<const0>\;
  M_AXI_IC_CRRESP(1) <= \<const0>\;
  M_AXI_IC_CRRESP(0) <= \<const0>\;
  M_AXI_IC_CRVALID <= \<const0>\;
  M_AXI_IC_RACK <= \<const0>\;
  M_AXI_IC_RREADY <= \<const0>\;
  M_AXI_IC_WACK <= \<const0>\;
  M_AXI_IC_WDATA(31) <= \<const0>\;
  M_AXI_IC_WDATA(30) <= \<const0>\;
  M_AXI_IC_WDATA(29) <= \<const0>\;
  M_AXI_IC_WDATA(28) <= \<const0>\;
  M_AXI_IC_WDATA(27) <= \<const0>\;
  M_AXI_IC_WDATA(26) <= \<const0>\;
  M_AXI_IC_WDATA(25) <= \<const0>\;
  M_AXI_IC_WDATA(24) <= \<const0>\;
  M_AXI_IC_WDATA(23) <= \<const0>\;
  M_AXI_IC_WDATA(22) <= \<const0>\;
  M_AXI_IC_WDATA(21) <= \<const0>\;
  M_AXI_IC_WDATA(20) <= \<const0>\;
  M_AXI_IC_WDATA(19) <= \<const0>\;
  M_AXI_IC_WDATA(18) <= \<const0>\;
  M_AXI_IC_WDATA(17) <= \<const0>\;
  M_AXI_IC_WDATA(16) <= \<const0>\;
  M_AXI_IC_WDATA(15) <= \<const0>\;
  M_AXI_IC_WDATA(14) <= \<const0>\;
  M_AXI_IC_WDATA(13) <= \<const0>\;
  M_AXI_IC_WDATA(12) <= \<const0>\;
  M_AXI_IC_WDATA(11) <= \<const0>\;
  M_AXI_IC_WDATA(10) <= \<const0>\;
  M_AXI_IC_WDATA(9) <= \<const0>\;
  M_AXI_IC_WDATA(8) <= \<const0>\;
  M_AXI_IC_WDATA(7) <= \<const0>\;
  M_AXI_IC_WDATA(6) <= \<const0>\;
  M_AXI_IC_WDATA(5) <= \<const0>\;
  M_AXI_IC_WDATA(4) <= \<const0>\;
  M_AXI_IC_WDATA(3) <= \<const0>\;
  M_AXI_IC_WDATA(2) <= \<const0>\;
  M_AXI_IC_WDATA(1) <= \<const0>\;
  M_AXI_IC_WDATA(0) <= \<const0>\;
  M_AXI_IC_WLAST <= \<const0>\;
  M_AXI_IC_WSTRB(3) <= \<const0>\;
  M_AXI_IC_WSTRB(2) <= \<const0>\;
  M_AXI_IC_WSTRB(1) <= \<const0>\;
  M_AXI_IC_WSTRB(0) <= \<const0>\;
  M_AXI_IC_WUSER(0) <= \<const0>\;
  M_AXI_IC_WVALID <= \<const0>\;
  M_AXI_IP_ARADDR(31) <= \<const0>\;
  M_AXI_IP_ARADDR(30) <= \<const0>\;
  M_AXI_IP_ARADDR(29) <= \<const0>\;
  M_AXI_IP_ARADDR(28) <= \<const0>\;
  M_AXI_IP_ARADDR(27) <= \<const0>\;
  M_AXI_IP_ARADDR(26) <= \<const0>\;
  M_AXI_IP_ARADDR(25) <= \<const0>\;
  M_AXI_IP_ARADDR(24) <= \<const0>\;
  M_AXI_IP_ARADDR(23) <= \<const0>\;
  M_AXI_IP_ARADDR(22) <= \<const0>\;
  M_AXI_IP_ARADDR(21) <= \<const0>\;
  M_AXI_IP_ARADDR(20) <= \<const0>\;
  M_AXI_IP_ARADDR(19) <= \<const0>\;
  M_AXI_IP_ARADDR(18) <= \<const0>\;
  M_AXI_IP_ARADDR(17) <= \<const0>\;
  M_AXI_IP_ARADDR(16) <= \<const0>\;
  M_AXI_IP_ARADDR(15) <= \<const0>\;
  M_AXI_IP_ARADDR(14) <= \<const0>\;
  M_AXI_IP_ARADDR(13) <= \<const0>\;
  M_AXI_IP_ARADDR(12) <= \<const0>\;
  M_AXI_IP_ARADDR(11) <= \<const0>\;
  M_AXI_IP_ARADDR(10) <= \<const0>\;
  M_AXI_IP_ARADDR(9) <= \<const0>\;
  M_AXI_IP_ARADDR(8) <= \<const0>\;
  M_AXI_IP_ARADDR(7) <= \<const0>\;
  M_AXI_IP_ARADDR(6) <= \<const0>\;
  M_AXI_IP_ARADDR(5) <= \<const0>\;
  M_AXI_IP_ARADDR(4) <= \<const0>\;
  M_AXI_IP_ARADDR(3) <= \<const0>\;
  M_AXI_IP_ARADDR(2) <= \<const0>\;
  M_AXI_IP_ARADDR(1) <= \<const0>\;
  M_AXI_IP_ARADDR(0) <= \<const0>\;
  M_AXI_IP_ARBURST(1) <= \<const0>\;
  M_AXI_IP_ARBURST(0) <= \<const0>\;
  M_AXI_IP_ARCACHE(3) <= \<const0>\;
  M_AXI_IP_ARCACHE(2) <= \<const0>\;
  M_AXI_IP_ARCACHE(1) <= \<const0>\;
  M_AXI_IP_ARCACHE(0) <= \<const0>\;
  M_AXI_IP_ARID(0) <= \<const0>\;
  M_AXI_IP_ARLEN(7) <= \<const0>\;
  M_AXI_IP_ARLEN(6) <= \<const0>\;
  M_AXI_IP_ARLEN(5) <= \<const0>\;
  M_AXI_IP_ARLEN(4) <= \<const0>\;
  M_AXI_IP_ARLEN(3) <= \<const0>\;
  M_AXI_IP_ARLEN(2) <= \<const0>\;
  M_AXI_IP_ARLEN(1) <= \<const0>\;
  M_AXI_IP_ARLEN(0) <= \<const0>\;
  M_AXI_IP_ARLOCK <= \<const0>\;
  M_AXI_IP_ARPROT(2) <= \<const0>\;
  M_AXI_IP_ARPROT(1) <= \<const0>\;
  M_AXI_IP_ARPROT(0) <= \<const0>\;
  M_AXI_IP_ARQOS(3) <= \<const0>\;
  M_AXI_IP_ARQOS(2) <= \<const0>\;
  M_AXI_IP_ARQOS(1) <= \<const0>\;
  M_AXI_IP_ARQOS(0) <= \<const0>\;
  M_AXI_IP_ARSIZE(2) <= \<const0>\;
  M_AXI_IP_ARSIZE(1) <= \<const0>\;
  M_AXI_IP_ARSIZE(0) <= \<const0>\;
  M_AXI_IP_ARVALID <= \<const0>\;
  M_AXI_IP_AWADDR(31) <= \<const0>\;
  M_AXI_IP_AWADDR(30) <= \<const0>\;
  M_AXI_IP_AWADDR(29) <= \<const0>\;
  M_AXI_IP_AWADDR(28) <= \<const0>\;
  M_AXI_IP_AWADDR(27) <= \<const0>\;
  M_AXI_IP_AWADDR(26) <= \<const0>\;
  M_AXI_IP_AWADDR(25) <= \<const0>\;
  M_AXI_IP_AWADDR(24) <= \<const0>\;
  M_AXI_IP_AWADDR(23) <= \<const0>\;
  M_AXI_IP_AWADDR(22) <= \<const0>\;
  M_AXI_IP_AWADDR(21) <= \<const0>\;
  M_AXI_IP_AWADDR(20) <= \<const0>\;
  M_AXI_IP_AWADDR(19) <= \<const0>\;
  M_AXI_IP_AWADDR(18) <= \<const0>\;
  M_AXI_IP_AWADDR(17) <= \<const0>\;
  M_AXI_IP_AWADDR(16) <= \<const0>\;
  M_AXI_IP_AWADDR(15) <= \<const0>\;
  M_AXI_IP_AWADDR(14) <= \<const0>\;
  M_AXI_IP_AWADDR(13) <= \<const0>\;
  M_AXI_IP_AWADDR(12) <= \<const0>\;
  M_AXI_IP_AWADDR(11) <= \<const0>\;
  M_AXI_IP_AWADDR(10) <= \<const0>\;
  M_AXI_IP_AWADDR(9) <= \<const0>\;
  M_AXI_IP_AWADDR(8) <= \<const0>\;
  M_AXI_IP_AWADDR(7) <= \<const0>\;
  M_AXI_IP_AWADDR(6) <= \<const0>\;
  M_AXI_IP_AWADDR(5) <= \<const0>\;
  M_AXI_IP_AWADDR(4) <= \<const0>\;
  M_AXI_IP_AWADDR(3) <= \<const0>\;
  M_AXI_IP_AWADDR(2) <= \<const0>\;
  M_AXI_IP_AWADDR(1) <= \<const0>\;
  M_AXI_IP_AWADDR(0) <= \<const0>\;
  M_AXI_IP_AWBURST(1) <= \<const0>\;
  M_AXI_IP_AWBURST(0) <= \<const0>\;
  M_AXI_IP_AWCACHE(3) <= \<const0>\;
  M_AXI_IP_AWCACHE(2) <= \<const0>\;
  M_AXI_IP_AWCACHE(1) <= \<const0>\;
  M_AXI_IP_AWCACHE(0) <= \<const0>\;
  M_AXI_IP_AWID(0) <= \<const0>\;
  M_AXI_IP_AWLEN(7) <= \<const0>\;
  M_AXI_IP_AWLEN(6) <= \<const0>\;
  M_AXI_IP_AWLEN(5) <= \<const0>\;
  M_AXI_IP_AWLEN(4) <= \<const0>\;
  M_AXI_IP_AWLEN(3) <= \<const0>\;
  M_AXI_IP_AWLEN(2) <= \<const0>\;
  M_AXI_IP_AWLEN(1) <= \<const0>\;
  M_AXI_IP_AWLEN(0) <= \<const0>\;
  M_AXI_IP_AWLOCK <= \<const0>\;
  M_AXI_IP_AWPROT(2) <= \<const0>\;
  M_AXI_IP_AWPROT(1) <= \<const0>\;
  M_AXI_IP_AWPROT(0) <= \<const0>\;
  M_AXI_IP_AWQOS(3) <= \<const0>\;
  M_AXI_IP_AWQOS(2) <= \<const0>\;
  M_AXI_IP_AWQOS(1) <= \<const0>\;
  M_AXI_IP_AWQOS(0) <= \<const0>\;
  M_AXI_IP_AWSIZE(2) <= \<const0>\;
  M_AXI_IP_AWSIZE(1) <= \<const0>\;
  M_AXI_IP_AWSIZE(0) <= \<const0>\;
  M_AXI_IP_AWVALID <= \<const0>\;
  M_AXI_IP_BREADY <= \<const0>\;
  M_AXI_IP_RREADY <= \<const0>\;
  M_AXI_IP_WDATA(31) <= \<const0>\;
  M_AXI_IP_WDATA(30) <= \<const0>\;
  M_AXI_IP_WDATA(29) <= \<const0>\;
  M_AXI_IP_WDATA(28) <= \<const0>\;
  M_AXI_IP_WDATA(27) <= \<const0>\;
  M_AXI_IP_WDATA(26) <= \<const0>\;
  M_AXI_IP_WDATA(25) <= \<const0>\;
  M_AXI_IP_WDATA(24) <= \<const0>\;
  M_AXI_IP_WDATA(23) <= \<const0>\;
  M_AXI_IP_WDATA(22) <= \<const0>\;
  M_AXI_IP_WDATA(21) <= \<const0>\;
  M_AXI_IP_WDATA(20) <= \<const0>\;
  M_AXI_IP_WDATA(19) <= \<const0>\;
  M_AXI_IP_WDATA(18) <= \<const0>\;
  M_AXI_IP_WDATA(17) <= \<const0>\;
  M_AXI_IP_WDATA(16) <= \<const0>\;
  M_AXI_IP_WDATA(15) <= \<const0>\;
  M_AXI_IP_WDATA(14) <= \<const0>\;
  M_AXI_IP_WDATA(13) <= \<const0>\;
  M_AXI_IP_WDATA(12) <= \<const0>\;
  M_AXI_IP_WDATA(11) <= \<const0>\;
  M_AXI_IP_WDATA(10) <= \<const0>\;
  M_AXI_IP_WDATA(9) <= \<const0>\;
  M_AXI_IP_WDATA(8) <= \<const0>\;
  M_AXI_IP_WDATA(7) <= \<const0>\;
  M_AXI_IP_WDATA(6) <= \<const0>\;
  M_AXI_IP_WDATA(5) <= \<const0>\;
  M_AXI_IP_WDATA(4) <= \<const0>\;
  M_AXI_IP_WDATA(3) <= \<const0>\;
  M_AXI_IP_WDATA(2) <= \<const0>\;
  M_AXI_IP_WDATA(1) <= \<const0>\;
  M_AXI_IP_WDATA(0) <= \<const0>\;
  M_AXI_IP_WLAST <= \<const0>\;
  M_AXI_IP_WSTRB(3) <= \<const0>\;
  M_AXI_IP_WSTRB(2) <= \<const0>\;
  M_AXI_IP_WSTRB(1) <= \<const0>\;
  M_AXI_IP_WSTRB(0) <= \<const0>\;
  M_AXI_IP_WVALID <= \<const0>\;
  RAM_From(255) <= \<const0>\;
  RAM_From(254) <= \<const0>\;
  RAM_From(253) <= \<const0>\;
  RAM_From(252) <= \<const0>\;
  RAM_From(251) <= \<const0>\;
  RAM_From(250) <= \<const0>\;
  RAM_From(249) <= \<const0>\;
  RAM_From(248) <= \<const0>\;
  RAM_From(247) <= \<const0>\;
  RAM_From(246) <= \<const0>\;
  RAM_From(245) <= \<const0>\;
  RAM_From(244) <= \<const0>\;
  RAM_From(243) <= \<const0>\;
  RAM_From(242) <= \<const0>\;
  RAM_From(241) <= \<const0>\;
  RAM_From(240) <= \<const0>\;
  RAM_From(239) <= \<const0>\;
  RAM_From(238) <= \<const0>\;
  RAM_From(237) <= \<const0>\;
  RAM_From(236) <= \<const0>\;
  RAM_From(235) <= \<const0>\;
  RAM_From(234) <= \<const0>\;
  RAM_From(233) <= \<const0>\;
  RAM_From(232) <= \<const0>\;
  RAM_From(231) <= \<const0>\;
  RAM_From(230) <= \<const0>\;
  RAM_From(229) <= \<const0>\;
  RAM_From(228) <= \<const0>\;
  RAM_From(227) <= \<const0>\;
  RAM_From(226) <= \<const0>\;
  RAM_From(225) <= \<const0>\;
  RAM_From(224) <= \<const0>\;
  RAM_From(223) <= \<const0>\;
  RAM_From(222) <= \<const0>\;
  RAM_From(221) <= \<const0>\;
  RAM_From(220) <= \<const0>\;
  RAM_From(219) <= \<const0>\;
  RAM_From(218) <= \<const0>\;
  RAM_From(217) <= \<const0>\;
  RAM_From(216) <= \<const0>\;
  RAM_From(215) <= \<const0>\;
  RAM_From(214) <= \<const0>\;
  RAM_From(213) <= \<const0>\;
  RAM_From(212) <= \<const0>\;
  RAM_From(211) <= \<const0>\;
  RAM_From(210) <= \<const0>\;
  RAM_From(209) <= \<const0>\;
  RAM_From(208) <= \<const0>\;
  RAM_From(207) <= \<const0>\;
  RAM_From(206) <= \<const0>\;
  RAM_From(205) <= \<const0>\;
  RAM_From(204) <= \<const0>\;
  RAM_From(203) <= \<const0>\;
  RAM_From(202) <= \<const0>\;
  RAM_From(201) <= \<const0>\;
  RAM_From(200) <= \<const0>\;
  RAM_From(199) <= \<const0>\;
  RAM_From(198) <= \<const0>\;
  RAM_From(197) <= \<const0>\;
  RAM_From(196) <= \<const0>\;
  RAM_From(195) <= \<const0>\;
  RAM_From(194) <= \<const0>\;
  RAM_From(193) <= \<const0>\;
  RAM_From(192) <= \<const0>\;
  RAM_From(191) <= \<const0>\;
  RAM_From(190) <= \<const0>\;
  RAM_From(189) <= \<const0>\;
  RAM_From(188) <= \<const0>\;
  RAM_From(187) <= \<const0>\;
  RAM_From(186) <= \<const0>\;
  RAM_From(185) <= \<const0>\;
  RAM_From(184) <= \<const0>\;
  RAM_From(183) <= \<const0>\;
  RAM_From(182) <= \<const0>\;
  RAM_From(181) <= \<const0>\;
  RAM_From(180) <= \<const0>\;
  RAM_From(179) <= \<const0>\;
  RAM_From(178) <= \<const0>\;
  RAM_From(177) <= \<const0>\;
  RAM_From(176) <= \<const0>\;
  RAM_From(175) <= \<const0>\;
  RAM_From(174) <= \<const0>\;
  RAM_From(173) <= \<const0>\;
  RAM_From(172) <= \<const0>\;
  RAM_From(171) <= \<const0>\;
  RAM_From(170) <= \<const0>\;
  RAM_From(169) <= \<const0>\;
  RAM_From(168) <= \<const0>\;
  RAM_From(167) <= \<const0>\;
  RAM_From(166) <= \<const0>\;
  RAM_From(165) <= \<const0>\;
  RAM_From(164) <= \<const0>\;
  RAM_From(163) <= \<const0>\;
  RAM_From(162) <= \<const0>\;
  RAM_From(161) <= \<const0>\;
  RAM_From(160) <= \<const0>\;
  RAM_From(159) <= \<const0>\;
  RAM_From(158) <= \<const0>\;
  RAM_From(157) <= \<const0>\;
  RAM_From(156) <= \<const0>\;
  RAM_From(155) <= \<const0>\;
  RAM_From(154) <= \<const0>\;
  RAM_From(153) <= \<const0>\;
  RAM_From(152) <= \<const0>\;
  RAM_From(151) <= \<const0>\;
  RAM_From(150) <= \<const0>\;
  RAM_From(149) <= \<const0>\;
  RAM_From(148) <= \<const0>\;
  RAM_From(147) <= \<const0>\;
  RAM_From(146) <= \<const0>\;
  RAM_From(145) <= \<const0>\;
  RAM_From(144) <= \<const0>\;
  RAM_From(143) <= \<const0>\;
  RAM_From(142) <= \<const0>\;
  RAM_From(141) <= \<const0>\;
  RAM_From(140) <= \<const0>\;
  RAM_From(139) <= \<const0>\;
  RAM_From(138) <= \<const0>\;
  RAM_From(137) <= \<const0>\;
  RAM_From(136) <= \<const0>\;
  RAM_From(135) <= \<const0>\;
  RAM_From(134) <= \<const0>\;
  RAM_From(133) <= \<const0>\;
  RAM_From(132) <= \<const0>\;
  RAM_From(131) <= \<const0>\;
  RAM_From(130) <= \<const0>\;
  RAM_From(129) <= \<const0>\;
  RAM_From(128) <= \<const0>\;
  RAM_From(127) <= \<const0>\;
  RAM_From(126) <= \<const0>\;
  RAM_From(125) <= \<const0>\;
  RAM_From(124) <= \<const0>\;
  RAM_From(123) <= \<const0>\;
  RAM_From(122) <= \<const0>\;
  RAM_From(121) <= \<const0>\;
  RAM_From(120) <= \<const0>\;
  RAM_From(119) <= \<const0>\;
  RAM_From(118) <= \<const0>\;
  RAM_From(117) <= \<const0>\;
  RAM_From(116) <= \<const0>\;
  RAM_From(115) <= \<const0>\;
  RAM_From(114) <= \<const0>\;
  RAM_From(113) <= \<const0>\;
  RAM_From(112) <= \<const0>\;
  RAM_From(111) <= \<const0>\;
  RAM_From(110) <= \<const0>\;
  RAM_From(109) <= \<const0>\;
  RAM_From(108) <= \<const0>\;
  RAM_From(107) <= \<const0>\;
  RAM_From(106) <= \<const0>\;
  RAM_From(105) <= \<const0>\;
  RAM_From(104) <= \<const0>\;
  RAM_From(103) <= \<const0>\;
  RAM_From(102) <= \<const0>\;
  RAM_From(101) <= \<const0>\;
  RAM_From(100) <= \<const0>\;
  RAM_From(99) <= \<const0>\;
  RAM_From(98) <= \<const0>\;
  RAM_From(97) <= \<const0>\;
  RAM_From(96) <= \<const0>\;
  RAM_From(95) <= \<const0>\;
  RAM_From(94) <= \<const0>\;
  RAM_From(93) <= \<const0>\;
  RAM_From(92) <= \<const0>\;
  RAM_From(91) <= \<const0>\;
  RAM_From(90) <= \<const0>\;
  RAM_From(89) <= \<const0>\;
  RAM_From(88) <= \<const0>\;
  RAM_From(87) <= \<const0>\;
  RAM_From(86) <= \<const0>\;
  RAM_From(85) <= \<const0>\;
  RAM_From(84) <= \<const0>\;
  RAM_From(83) <= \<const0>\;
  RAM_From(82) <= \<const0>\;
  RAM_From(81) <= \<const0>\;
  RAM_From(80) <= \<const0>\;
  RAM_From(79) <= \<const0>\;
  RAM_From(78) <= \<const0>\;
  RAM_From(77) <= \<const0>\;
  RAM_From(76) <= \<const0>\;
  RAM_From(75) <= \<const0>\;
  RAM_From(74) <= \<const0>\;
  RAM_From(73) <= \<const0>\;
  RAM_From(72) <= \<const0>\;
  RAM_From(71) <= \<const0>\;
  RAM_From(70) <= \<const0>\;
  RAM_From(69) <= \<const0>\;
  RAM_From(68) <= \<const0>\;
  RAM_From(67) <= \<const0>\;
  RAM_From(66) <= \<const0>\;
  RAM_From(65) <= \<const0>\;
  RAM_From(64) <= \<const0>\;
  RAM_From(63) <= \<const0>\;
  RAM_From(62) <= \<const0>\;
  RAM_From(61) <= \<const0>\;
  RAM_From(60) <= \<const0>\;
  RAM_From(59) <= \<const0>\;
  RAM_From(58) <= \<const0>\;
  RAM_From(57) <= \<const0>\;
  RAM_From(56) <= \<const0>\;
  RAM_From(55) <= \<const0>\;
  RAM_From(54) <= \<const0>\;
  RAM_From(53) <= \<const0>\;
  RAM_From(52) <= \<const0>\;
  RAM_From(51) <= \<const0>\;
  RAM_From(50) <= \<const0>\;
  RAM_From(49) <= \<const0>\;
  RAM_From(48) <= \<const0>\;
  RAM_From(47) <= \<const0>\;
  RAM_From(46) <= \<const0>\;
  RAM_From(45) <= \<const0>\;
  RAM_From(44) <= \<const0>\;
  RAM_From(43) <= \<const0>\;
  RAM_From(42) <= \<const0>\;
  RAM_From(41) <= \<const0>\;
  RAM_From(40) <= \<const0>\;
  RAM_From(39) <= \<const0>\;
  RAM_From(38) <= \<const0>\;
  RAM_From(37) <= \<const0>\;
  RAM_From(36) <= \<const0>\;
  RAM_From(35) <= \<const0>\;
  RAM_From(34) <= \<const0>\;
  RAM_From(33) <= \<const0>\;
  RAM_From(32) <= \<const0>\;
  RAM_From(31) <= \<const0>\;
  RAM_From(30) <= \<const0>\;
  RAM_From(29) <= \<const0>\;
  RAM_From(28) <= \<const0>\;
  RAM_From(27) <= \<const0>\;
  RAM_From(26) <= \<const0>\;
  RAM_From(25) <= \<const0>\;
  RAM_From(24) <= \<const0>\;
  RAM_From(23) <= \<const0>\;
  RAM_From(22) <= \<const0>\;
  RAM_From(21) <= \<const0>\;
  RAM_From(20) <= \<const0>\;
  RAM_From(19) <= \<const0>\;
  RAM_From(18) <= \<const0>\;
  RAM_From(17) <= \<const0>\;
  RAM_From(16) <= \<const0>\;
  RAM_From(15) <= \<const0>\;
  RAM_From(14) <= \<const0>\;
  RAM_From(13) <= \<const0>\;
  RAM_From(12) <= \<const0>\;
  RAM_From(11) <= \<const0>\;
  RAM_From(10) <= \<const0>\;
  RAM_From(9) <= \<const0>\;
  RAM_From(8) <= \<const0>\;
  RAM_From(7) <= \<const0>\;
  RAM_From(6) <= \<const0>\;
  RAM_From(5) <= \<const0>\;
  RAM_From(4) <= \<const0>\;
  RAM_From(3) <= \<const0>\;
  RAM_From(2) <= \<const0>\;
  RAM_From(1) <= \<const0>\;
  RAM_From(0) <= \<const0>\;
  Read_Strobe <= \^read_strobe\;
  S0_AXIS_TREADY <= \<const0>\;
  S10_AXIS_TREADY <= \<const0>\;
  S11_AXIS_TREADY <= \<const0>\;
  S12_AXIS_TREADY <= \<const0>\;
  S13_AXIS_TREADY <= \<const0>\;
  S14_AXIS_TREADY <= \<const0>\;
  S15_AXIS_TREADY <= \<const0>\;
  S1_AXIS_TREADY <= \<const0>\;
  S2_AXIS_TREADY <= \<const0>\;
  S3_AXIS_TREADY <= \<const0>\;
  S4_AXIS_TREADY <= \<const0>\;
  S5_AXIS_TREADY <= \<const0>\;
  S6_AXIS_TREADY <= \<const0>\;
  S7_AXIS_TREADY <= \<const0>\;
  S8_AXIS_TREADY <= \<const0>\;
  S9_AXIS_TREADY <= \<const0>\;
  Trace_DCache_Hit <= \<const0>\;
  Trace_DCache_Rdy <= \<const0>\;
  Trace_DCache_Read <= \<const0>\;
  Trace_DCache_Req <= \<const0>\;
  Trace_Data_Access <= \^trace_data_access\;
  Trace_Data_Address(0 to 31) <= \^trace_data_address\(0 to 31);
  Trace_Data_Byte_Enable(0 to 3) <= \^trace_data_byte_enable\(0 to 3);
  Trace_Data_Read <= \^trace_data_read\;
  Trace_Data_Write <= \^trace_data_write\;
  Trace_Data_Write_Value(0 to 31) <= \^trace_data_write_value\(0 to 31);
  Trace_Delay_Slot <= \^trace_delay_slot\;
  Trace_EX_PipeRun <= \^trace_ex_piperun\;
  Trace_Exception_Kind(0) <= \<const0>\;
  Trace_Exception_Kind(1) <= \^trace_exception_kind\(1);
  Trace_Exception_Kind(2) <= \<const0>\;
  Trace_Exception_Kind(3 to 4) <= \^trace_exception_kind\(3 to 4);
  Trace_Exception_Taken <= \^trace_exception_taken\;
  Trace_ICache_Hit <= \<const0>\;
  Trace_ICache_Rdy <= \<const0>\;
  Trace_ICache_Req <= \<const0>\;
  Trace_Instruction(0 to 31) <= \^trace_instruction\(0 to 31);
  Trace_Jump_Hit <= \<const0>\;
  Trace_Jump_Taken <= \^trace_jump_taken\;
  Trace_MB_Halted <= \^trace_mb_halted\;
  Trace_MEM_PipeRun <= \^trace_mem_piperun\;
  Trace_MSR_Reg(0) <= \<const0>\;
  Trace_MSR_Reg(1) <= \<const0>\;
  Trace_MSR_Reg(2) <= \<const0>\;
  Trace_MSR_Reg(3) <= \<const0>\;
  Trace_MSR_Reg(4) <= \<const0>\;
  Trace_MSR_Reg(5) <= \<const0>\;
  Trace_MSR_Reg(6) <= \<const0>\;
  Trace_MSR_Reg(7) <= \<const0>\;
  Trace_MSR_Reg(8) <= \^trace_msr_reg\(8);
  Trace_MSR_Reg(9) <= \<const0>\;
  Trace_MSR_Reg(10) <= \<const0>\;
  Trace_MSR_Reg(11 to 13) <= \^trace_msr_reg\(11 to 13);
  Trace_MSR_Reg(14) <= \<const0>\;
  Trace_New_Reg_Value(0 to 31) <= \^trace_new_reg_value\(0 to 31);
  Trace_OF_PipeRun <= \^trace_of_piperun\;
  Trace_PC(0 to 31) <= \^trace_pc\(0 to 31);
  Trace_PID_Reg(0) <= \<const0>\;
  Trace_PID_Reg(1) <= \<const0>\;
  Trace_PID_Reg(2) <= \<const0>\;
  Trace_PID_Reg(3) <= \<const0>\;
  Trace_PID_Reg(4) <= \<const0>\;
  Trace_PID_Reg(5) <= \<const0>\;
  Trace_PID_Reg(6) <= \<const0>\;
  Trace_PID_Reg(7) <= \<const0>\;
  Trace_Reg_Addr(0 to 4) <= \^trace_reg_addr\(0 to 4);
  Trace_Reg_Write <= \^trace_reg_write\;
  Trace_Valid_Instr <= \^trace_valid_instr\;
  Write_Strobe <= \^write_strobe\;
  \^debug_rst\ <= Debug_Rst;
Dbg_TDO_INST_0_i_5: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00000020"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(6),
      I3 => Dbg_Reg_En(7),
      I4 => MicroBlaze_Core_I_n_413,
      O => Data_Read_Reg_En
    );
Dbg_TDO_INST_0_i_6: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00001000"
    )
        port map (
      I0 => Dbg_Reg_En(4),
      I1 => Dbg_Reg_En(5),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      I4 => MicroBlaze_Core_I_n_413,
      O => \Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\
    );
Dbg_TDO_INST_0_i_8: unisim.vcomponents.LUT5
    generic map(
      INIT => X"00002000"
    )
        port map (
      I0 => Dbg_Reg_En(5),
      I1 => Dbg_Reg_En(4),
      I2 => Dbg_Reg_En(7),
      I3 => Dbg_Reg_En(6),
      I4 => MicroBlaze_Core_I_n_413,
      O => Config_Reg_En
    );
GND: unisim.vcomponents.GND
     port map (
      G => \<const0>\
    );
\LOCKSTEP_Out_reg[0]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^mb_halted\,
      Q => \^lockstep_out\(0),
      R => Reset
    );
\LOCKSTEP_Out_reg[10]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(6),
      Q => \^lockstep_out\(10),
      R => Reset
    );
\LOCKSTEP_Out_reg[11]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(7),
      Q => \^lockstep_out\(11),
      R => Reset
    );
\LOCKSTEP_Out_reg[12]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(8),
      Q => \^lockstep_out\(12),
      R => Reset
    );
\LOCKSTEP_Out_reg[132]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(0),
      Q => \^lockstep_out\(132),
      R => Reset
    );
\LOCKSTEP_Out_reg[133]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(1),
      Q => \^lockstep_out\(133),
      R => Reset
    );
\LOCKSTEP_Out_reg[134]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(2),
      Q => \^lockstep_out\(134),
      R => Reset
    );
\LOCKSTEP_Out_reg[135]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(3),
      Q => \^lockstep_out\(135),
      R => Reset
    );
\LOCKSTEP_Out_reg[136]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(4),
      Q => \^lockstep_out\(136),
      R => Reset
    );
\LOCKSTEP_Out_reg[137]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(5),
      Q => \^lockstep_out\(137),
      R => Reset
    );
\LOCKSTEP_Out_reg[138]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(6),
      Q => \^lockstep_out\(138),
      R => Reset
    );
\LOCKSTEP_Out_reg[139]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(7),
      Q => \^lockstep_out\(139),
      R => Reset
    );
\LOCKSTEP_Out_reg[13]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(9),
      Q => \^lockstep_out\(13),
      R => Reset
    );
\LOCKSTEP_Out_reg[140]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(8),
      Q => \^lockstep_out\(140),
      R => Reset
    );
\LOCKSTEP_Out_reg[141]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(9),
      Q => \^lockstep_out\(141),
      R => Reset
    );
\LOCKSTEP_Out_reg[142]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(10),
      Q => \^lockstep_out\(142),
      R => Reset
    );
\LOCKSTEP_Out_reg[143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(11),
      Q => \^lockstep_out\(143),
      R => Reset
    );
\LOCKSTEP_Out_reg[144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(12),
      Q => \^lockstep_out\(144),
      R => Reset
    );
\LOCKSTEP_Out_reg[145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(13),
      Q => \^lockstep_out\(145),
      R => Reset
    );
\LOCKSTEP_Out_reg[146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(14),
      Q => \^lockstep_out\(146),
      R => Reset
    );
\LOCKSTEP_Out_reg[147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(15),
      Q => \^lockstep_out\(147),
      R => Reset
    );
\LOCKSTEP_Out_reg[148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(16),
      Q => \^lockstep_out\(148),
      R => Reset
    );
\LOCKSTEP_Out_reg[149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(17),
      Q => \^lockstep_out\(149),
      R => Reset
    );
\LOCKSTEP_Out_reg[14]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(10),
      Q => \^lockstep_out\(14),
      R => Reset
    );
\LOCKSTEP_Out_reg[150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(18),
      Q => \^lockstep_out\(150),
      R => Reset
    );
\LOCKSTEP_Out_reg[151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(19),
      Q => \^lockstep_out\(151),
      R => Reset
    );
\LOCKSTEP_Out_reg[152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(20),
      Q => \^lockstep_out\(152),
      R => Reset
    );
\LOCKSTEP_Out_reg[153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(21),
      Q => \^lockstep_out\(153),
      R => Reset
    );
\LOCKSTEP_Out_reg[154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(22),
      Q => \^lockstep_out\(154),
      R => Reset
    );
\LOCKSTEP_Out_reg[155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(23),
      Q => \^lockstep_out\(155),
      R => Reset
    );
\LOCKSTEP_Out_reg[156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(24),
      Q => \^lockstep_out\(156),
      R => Reset
    );
\LOCKSTEP_Out_reg[157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(25),
      Q => \^lockstep_out\(157),
      R => Reset
    );
\LOCKSTEP_Out_reg[158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(26),
      Q => \^lockstep_out\(158),
      R => Reset
    );
\LOCKSTEP_Out_reg[159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(27),
      Q => \^lockstep_out\(159),
      R => Reset
    );
\LOCKSTEP_Out_reg[15]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(11),
      Q => \^lockstep_out\(15),
      R => Reset
    );
\LOCKSTEP_Out_reg[160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(28),
      Q => \^lockstep_out\(160),
      R => Reset
    );
\LOCKSTEP_Out_reg[161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(29),
      Q => \^lockstep_out\(161),
      R => Reset
    );
\LOCKSTEP_Out_reg[162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(30),
      Q => \^lockstep_out\(162),
      R => Reset
    );
\LOCKSTEP_Out_reg[163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_write\(31),
      Q => \^lockstep_out\(163),
      R => Reset
    );
\LOCKSTEP_Out_reg[16]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(12),
      Q => \^lockstep_out\(16),
      R => Reset
    );
\LOCKSTEP_Out_reg[17]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(13),
      Q => \^lockstep_out\(17),
      R => Reset
    );
\LOCKSTEP_Out_reg[18]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(14),
      Q => \^lockstep_out\(18),
      R => Reset
    );
\LOCKSTEP_Out_reg[196]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^d_as\,
      Q => \^lockstep_out\(196),
      R => Reset
    );
\LOCKSTEP_Out_reg[197]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^read_strobe\,
      Q => \^lockstep_out\(197),
      R => Reset
    );
\LOCKSTEP_Out_reg[198]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^write_strobe\,
      Q => \^lockstep_out\(198),
      R => Reset
    );
\LOCKSTEP_Out_reg[199]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(0),
      Q => \^lockstep_out\(199),
      R => Reset
    );
\LOCKSTEP_Out_reg[19]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(15),
      Q => \^lockstep_out\(19),
      R => Reset
    );
\LOCKSTEP_Out_reg[200]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(1),
      Q => \^lockstep_out\(200),
      R => Reset
    );
\LOCKSTEP_Out_reg[201]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(2),
      Q => \^lockstep_out\(201),
      R => Reset
    );
\LOCKSTEP_Out_reg[202]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^byte_enable\(3),
      Q => \^lockstep_out\(202),
      R => Reset
    );
\LOCKSTEP_Out_reg[20]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(16),
      Q => \^lockstep_out\(20),
      R => Reset
    );
\LOCKSTEP_Out_reg[21]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(17),
      Q => \^lockstep_out\(21),
      R => Reset
    );
\LOCKSTEP_Out_reg[22]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(18),
      Q => \^lockstep_out\(22),
      R => Reset
    );
\LOCKSTEP_Out_reg[23]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(19),
      Q => \^lockstep_out\(23),
      R => Reset
    );
\LOCKSTEP_Out_reg[24]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(20),
      Q => \^lockstep_out\(24),
      R => Reset
    );
\LOCKSTEP_Out_reg[25]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(21),
      Q => \^lockstep_out\(25),
      R => Reset
    );
\LOCKSTEP_Out_reg[26]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(22),
      Q => \^lockstep_out\(26),
      R => Reset
    );
\LOCKSTEP_Out_reg[27]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(23),
      Q => \^lockstep_out\(27),
      R => Reset
    );
\LOCKSTEP_Out_reg[2881]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(0),
      Q => \^lockstep_out\(2881),
      R => Reset
    );
\LOCKSTEP_Out_reg[2882]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(1),
      Q => \^lockstep_out\(2882),
      R => Reset
    );
\LOCKSTEP_Out_reg[2883]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(2),
      Q => \^lockstep_out\(2883),
      R => Reset
    );
\LOCKSTEP_Out_reg[2884]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(3),
      Q => \^lockstep_out\(2884),
      R => Reset
    );
\LOCKSTEP_Out_reg[2885]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(4),
      Q => \^lockstep_out\(2885),
      R => Reset
    );
\LOCKSTEP_Out_reg[2886]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(5),
      Q => \^lockstep_out\(2886),
      R => Reset
    );
\LOCKSTEP_Out_reg[2887]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(6),
      Q => \^lockstep_out\(2887),
      R => Reset
    );
\LOCKSTEP_Out_reg[2888]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(7),
      Q => \^lockstep_out\(2888),
      R => Reset
    );
\LOCKSTEP_Out_reg[2889]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(8),
      Q => \^lockstep_out\(2889),
      R => Reset
    );
\LOCKSTEP_Out_reg[2890]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(9),
      Q => \^lockstep_out\(2890),
      R => Reset
    );
\LOCKSTEP_Out_reg[2891]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(10),
      Q => \^lockstep_out\(2891),
      R => Reset
    );
\LOCKSTEP_Out_reg[2892]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(11),
      Q => \^lockstep_out\(2892),
      R => Reset
    );
\LOCKSTEP_Out_reg[2893]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(12),
      Q => \^lockstep_out\(2893),
      R => Reset
    );
\LOCKSTEP_Out_reg[2894]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(13),
      Q => \^lockstep_out\(2894),
      R => Reset
    );
\LOCKSTEP_Out_reg[2895]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(14),
      Q => \^lockstep_out\(2895),
      R => Reset
    );
\LOCKSTEP_Out_reg[2896]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(15),
      Q => \^lockstep_out\(2896),
      R => Reset
    );
\LOCKSTEP_Out_reg[2897]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(16),
      Q => \^lockstep_out\(2897),
      R => Reset
    );
\LOCKSTEP_Out_reg[2898]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(17),
      Q => \^lockstep_out\(2898),
      R => Reset
    );
\LOCKSTEP_Out_reg[2899]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(18),
      Q => \^lockstep_out\(2899),
      R => Reset
    );
\LOCKSTEP_Out_reg[28]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(24),
      Q => \^lockstep_out\(28),
      R => Reset
    );
\LOCKSTEP_Out_reg[2900]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(19),
      Q => \^lockstep_out\(2900),
      R => Reset
    );
\LOCKSTEP_Out_reg[2901]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(20),
      Q => \^lockstep_out\(2901),
      R => Reset
    );
\LOCKSTEP_Out_reg[2902]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(21),
      Q => \^lockstep_out\(2902),
      R => Reset
    );
\LOCKSTEP_Out_reg[2903]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(22),
      Q => \^lockstep_out\(2903),
      R => Reset
    );
\LOCKSTEP_Out_reg[2904]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(23),
      Q => \^lockstep_out\(2904),
      R => Reset
    );
\LOCKSTEP_Out_reg[2905]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(24),
      Q => \^lockstep_out\(2905),
      R => Reset
    );
\LOCKSTEP_Out_reg[2906]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(25),
      Q => \^lockstep_out\(2906),
      R => Reset
    );
\LOCKSTEP_Out_reg[2907]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(26),
      Q => \^lockstep_out\(2907),
      R => Reset
    );
\LOCKSTEP_Out_reg[2908]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(27),
      Q => \^lockstep_out\(2908),
      R => Reset
    );
\LOCKSTEP_Out_reg[2909]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(28),
      Q => \^lockstep_out\(2909),
      R => Reset
    );
\LOCKSTEP_Out_reg[2910]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(29),
      Q => \^lockstep_out\(2910),
      R => Reset
    );
\LOCKSTEP_Out_reg[2911]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(30),
      Q => \^lockstep_out\(2911),
      R => Reset
    );
\LOCKSTEP_Out_reg[2912]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_instruction\(31),
      Q => \^lockstep_out\(2912),
      R => Reset
    );
\LOCKSTEP_Out_reg[2913]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_valid_instr\,
      Q => \^lockstep_out\(2913),
      R => Reset
    );
\LOCKSTEP_Out_reg[2914]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(0),
      Q => \^lockstep_out\(2914),
      R => Reset
    );
\LOCKSTEP_Out_reg[2915]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(1),
      Q => \^lockstep_out\(2915),
      R => Reset
    );
\LOCKSTEP_Out_reg[2916]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(2),
      Q => \^lockstep_out\(2916),
      R => Reset
    );
\LOCKSTEP_Out_reg[2917]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(3),
      Q => \^lockstep_out\(2917),
      R => Reset
    );
\LOCKSTEP_Out_reg[2918]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(4),
      Q => \^lockstep_out\(2918),
      R => Reset
    );
\LOCKSTEP_Out_reg[2919]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(5),
      Q => \^lockstep_out\(2919),
      R => Reset
    );
\LOCKSTEP_Out_reg[2920]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(6),
      Q => \^lockstep_out\(2920),
      R => Reset
    );
\LOCKSTEP_Out_reg[2921]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(7),
      Q => \^lockstep_out\(2921),
      R => Reset
    );
\LOCKSTEP_Out_reg[2922]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(8),
      Q => \^lockstep_out\(2922),
      R => Reset
    );
\LOCKSTEP_Out_reg[2923]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(9),
      Q => \^lockstep_out\(2923),
      R => Reset
    );
\LOCKSTEP_Out_reg[2924]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(10),
      Q => \^lockstep_out\(2924),
      R => Reset
    );
\LOCKSTEP_Out_reg[2925]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(11),
      Q => \^lockstep_out\(2925),
      R => Reset
    );
\LOCKSTEP_Out_reg[2926]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(12),
      Q => \^lockstep_out\(2926),
      R => Reset
    );
\LOCKSTEP_Out_reg[2927]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(13),
      Q => \^lockstep_out\(2927),
      R => Reset
    );
\LOCKSTEP_Out_reg[2928]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(14),
      Q => \^lockstep_out\(2928),
      R => Reset
    );
\LOCKSTEP_Out_reg[2929]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(15),
      Q => \^lockstep_out\(2929),
      R => Reset
    );
\LOCKSTEP_Out_reg[2930]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(16),
      Q => \^lockstep_out\(2930),
      R => Reset
    );
\LOCKSTEP_Out_reg[2931]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(17),
      Q => \^lockstep_out\(2931),
      R => Reset
    );
\LOCKSTEP_Out_reg[2932]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(18),
      Q => \^lockstep_out\(2932),
      R => Reset
    );
\LOCKSTEP_Out_reg[2933]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(19),
      Q => \^lockstep_out\(2933),
      R => Reset
    );
\LOCKSTEP_Out_reg[2934]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(20),
      Q => \^lockstep_out\(2934),
      R => Reset
    );
\LOCKSTEP_Out_reg[2935]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(21),
      Q => \^lockstep_out\(2935),
      R => Reset
    );
\LOCKSTEP_Out_reg[2936]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(22),
      Q => \^lockstep_out\(2936),
      R => Reset
    );
\LOCKSTEP_Out_reg[2937]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(23),
      Q => \^lockstep_out\(2937),
      R => Reset
    );
\LOCKSTEP_Out_reg[2938]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(24),
      Q => \^lockstep_out\(2938),
      R => Reset
    );
\LOCKSTEP_Out_reg[2939]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(25),
      Q => \^lockstep_out\(2939),
      R => Reset
    );
\LOCKSTEP_Out_reg[2940]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(26),
      Q => \^lockstep_out\(2940),
      R => Reset
    );
\LOCKSTEP_Out_reg[2941]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(27),
      Q => \^lockstep_out\(2941),
      R => Reset
    );
\LOCKSTEP_Out_reg[2942]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(28),
      Q => \^lockstep_out\(2942),
      R => Reset
    );
\LOCKSTEP_Out_reg[2943]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(29),
      Q => \^lockstep_out\(2943),
      R => Reset
    );
\LOCKSTEP_Out_reg[2944]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(30),
      Q => \^lockstep_out\(2944),
      R => Reset
    );
\LOCKSTEP_Out_reg[2945]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_pc\(31),
      Q => \^lockstep_out\(2945),
      R => Reset
    );
\LOCKSTEP_Out_reg[2978]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_write\,
      Q => \^lockstep_out\(2978),
      R => Reset
    );
\LOCKSTEP_Out_reg[2979]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(0),
      Q => \^lockstep_out\(2979),
      R => Reset
    );
\LOCKSTEP_Out_reg[2980]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(1),
      Q => \^lockstep_out\(2980),
      R => Reset
    );
\LOCKSTEP_Out_reg[2981]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(2),
      Q => \^lockstep_out\(2981),
      R => Reset
    );
\LOCKSTEP_Out_reg[2982]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(3),
      Q => \^lockstep_out\(2982),
      R => Reset
    );
\LOCKSTEP_Out_reg[2983]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_reg_addr\(4),
      Q => \^lockstep_out\(2983),
      R => Reset
    );
\LOCKSTEP_Out_reg[2992]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(8),
      Q => \^lockstep_out\(2992),
      R => Reset
    );
\LOCKSTEP_Out_reg[2995]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(11),
      Q => \^lockstep_out\(2995),
      R => Reset
    );
\LOCKSTEP_Out_reg[2996]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(12),
      Q => \^lockstep_out\(2996),
      R => Reset
    );
\LOCKSTEP_Out_reg[2997]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_msr_reg\(13),
      Q => \^lockstep_out\(2997),
      R => Reset
    );
\LOCKSTEP_Out_reg[29]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(25),
      Q => \^lockstep_out\(29),
      R => Reset
    );
\LOCKSTEP_Out_reg[2]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^ifetch\,
      Q => \^lockstep_out\(2),
      R => Reset
    );
\LOCKSTEP_Out_reg[3007]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(0),
      Q => \^lockstep_out\(3007),
      R => Reset
    );
\LOCKSTEP_Out_reg[3008]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(1),
      Q => \^lockstep_out\(3008),
      R => Reset
    );
\LOCKSTEP_Out_reg[3009]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(2),
      Q => \^lockstep_out\(3009),
      R => Reset
    );
\LOCKSTEP_Out_reg[3010]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(3),
      Q => \^lockstep_out\(3010),
      R => Reset
    );
\LOCKSTEP_Out_reg[3011]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(4),
      Q => \^lockstep_out\(3011),
      R => Reset
    );
\LOCKSTEP_Out_reg[3012]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(5),
      Q => \^lockstep_out\(3012),
      R => Reset
    );
\LOCKSTEP_Out_reg[3013]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(6),
      Q => \^lockstep_out\(3013),
      R => Reset
    );
\LOCKSTEP_Out_reg[3014]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(7),
      Q => \^lockstep_out\(3014),
      R => Reset
    );
\LOCKSTEP_Out_reg[3015]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(8),
      Q => \^lockstep_out\(3015),
      R => Reset
    );
\LOCKSTEP_Out_reg[3016]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(9),
      Q => \^lockstep_out\(3016),
      R => Reset
    );
\LOCKSTEP_Out_reg[3017]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(10),
      Q => \^lockstep_out\(3017),
      R => Reset
    );
\LOCKSTEP_Out_reg[3018]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(11),
      Q => \^lockstep_out\(3018),
      R => Reset
    );
\LOCKSTEP_Out_reg[3019]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(12),
      Q => \^lockstep_out\(3019),
      R => Reset
    );
\LOCKSTEP_Out_reg[3020]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(13),
      Q => \^lockstep_out\(3020),
      R => Reset
    );
\LOCKSTEP_Out_reg[3021]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(14),
      Q => \^lockstep_out\(3021),
      R => Reset
    );
\LOCKSTEP_Out_reg[3022]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(15),
      Q => \^lockstep_out\(3022),
      R => Reset
    );
\LOCKSTEP_Out_reg[3023]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(16),
      Q => \^lockstep_out\(3023),
      R => Reset
    );
\LOCKSTEP_Out_reg[3024]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(17),
      Q => \^lockstep_out\(3024),
      R => Reset
    );
\LOCKSTEP_Out_reg[3025]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(18),
      Q => \^lockstep_out\(3025),
      R => Reset
    );
\LOCKSTEP_Out_reg[3026]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(19),
      Q => \^lockstep_out\(3026),
      R => Reset
    );
\LOCKSTEP_Out_reg[3027]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(20),
      Q => \^lockstep_out\(3027),
      R => Reset
    );
\LOCKSTEP_Out_reg[3028]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(21),
      Q => \^lockstep_out\(3028),
      R => Reset
    );
\LOCKSTEP_Out_reg[3029]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(22),
      Q => \^lockstep_out\(3029),
      R => Reset
    );
\LOCKSTEP_Out_reg[3030]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(23),
      Q => \^lockstep_out\(3030),
      R => Reset
    );
\LOCKSTEP_Out_reg[3031]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(24),
      Q => \^lockstep_out\(3031),
      R => Reset
    );
\LOCKSTEP_Out_reg[3032]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(25),
      Q => \^lockstep_out\(3032),
      R => Reset
    );
\LOCKSTEP_Out_reg[3033]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(26),
      Q => \^lockstep_out\(3033),
      R => Reset
    );
\LOCKSTEP_Out_reg[3034]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(27),
      Q => \^lockstep_out\(3034),
      R => Reset
    );
\LOCKSTEP_Out_reg[3035]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(28),
      Q => \^lockstep_out\(3035),
      R => Reset
    );
\LOCKSTEP_Out_reg[3036]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(29),
      Q => \^lockstep_out\(3036),
      R => Reset
    );
\LOCKSTEP_Out_reg[3037]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(30),
      Q => \^lockstep_out\(3037),
      R => Reset
    );
\LOCKSTEP_Out_reg[3038]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_new_reg_value\(31),
      Q => \^lockstep_out\(3038),
      R => Reset
    );
\LOCKSTEP_Out_reg[3071]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_taken\,
      Q => \^lockstep_out\(3071),
      R => Reset
    );
\LOCKSTEP_Out_reg[3073]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(1),
      Q => \^lockstep_out\(3073),
      R => Reset
    );
\LOCKSTEP_Out_reg[3075]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(3),
      Q => \^lockstep_out\(3075),
      R => Reset
    );
\LOCKSTEP_Out_reg[3076]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_exception_kind\(4),
      Q => \^lockstep_out\(3076),
      R => Reset
    );
\LOCKSTEP_Out_reg[3077]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_jump_taken\,
      Q => \^lockstep_out\(3077),
      R => Reset
    );
\LOCKSTEP_Out_reg[3078]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_delay_slot\,
      Q => \^lockstep_out\(3078),
      R => Reset
    );
\LOCKSTEP_Out_reg[3079]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(0),
      Q => \^lockstep_out\(3079),
      R => Reset
    );
\LOCKSTEP_Out_reg[3080]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(1),
      Q => \^lockstep_out\(3080),
      R => Reset
    );
\LOCKSTEP_Out_reg[3081]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(2),
      Q => \^lockstep_out\(3081),
      R => Reset
    );
\LOCKSTEP_Out_reg[3082]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(3),
      Q => \^lockstep_out\(3082),
      R => Reset
    );
\LOCKSTEP_Out_reg[3083]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(4),
      Q => \^lockstep_out\(3083),
      R => Reset
    );
\LOCKSTEP_Out_reg[3084]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(5),
      Q => \^lockstep_out\(3084),
      R => Reset
    );
\LOCKSTEP_Out_reg[3085]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(6),
      Q => \^lockstep_out\(3085),
      R => Reset
    );
\LOCKSTEP_Out_reg[3086]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(7),
      Q => \^lockstep_out\(3086),
      R => Reset
    );
\LOCKSTEP_Out_reg[3087]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(8),
      Q => \^lockstep_out\(3087),
      R => Reset
    );
\LOCKSTEP_Out_reg[3088]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(9),
      Q => \^lockstep_out\(3088),
      R => Reset
    );
\LOCKSTEP_Out_reg[3089]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(10),
      Q => \^lockstep_out\(3089),
      R => Reset
    );
\LOCKSTEP_Out_reg[3090]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(11),
      Q => \^lockstep_out\(3090),
      R => Reset
    );
\LOCKSTEP_Out_reg[3091]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(12),
      Q => \^lockstep_out\(3091),
      R => Reset
    );
\LOCKSTEP_Out_reg[3092]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(13),
      Q => \^lockstep_out\(3092),
      R => Reset
    );
\LOCKSTEP_Out_reg[3093]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(14),
      Q => \^lockstep_out\(3093),
      R => Reset
    );
\LOCKSTEP_Out_reg[3094]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(15),
      Q => \^lockstep_out\(3094),
      R => Reset
    );
\LOCKSTEP_Out_reg[3095]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(16),
      Q => \^lockstep_out\(3095),
      R => Reset
    );
\LOCKSTEP_Out_reg[3096]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(17),
      Q => \^lockstep_out\(3096),
      R => Reset
    );
\LOCKSTEP_Out_reg[3097]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(18),
      Q => \^lockstep_out\(3097),
      R => Reset
    );
\LOCKSTEP_Out_reg[3098]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(19),
      Q => \^lockstep_out\(3098),
      R => Reset
    );
\LOCKSTEP_Out_reg[3099]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(20),
      Q => \^lockstep_out\(3099),
      R => Reset
    );
\LOCKSTEP_Out_reg[30]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(26),
      Q => \^lockstep_out\(30),
      R => Reset
    );
\LOCKSTEP_Out_reg[3100]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(21),
      Q => \^lockstep_out\(3100),
      R => Reset
    );
\LOCKSTEP_Out_reg[3101]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(22),
      Q => \^lockstep_out\(3101),
      R => Reset
    );
\LOCKSTEP_Out_reg[3102]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(23),
      Q => \^lockstep_out\(3102),
      R => Reset
    );
\LOCKSTEP_Out_reg[3103]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(24),
      Q => \^lockstep_out\(3103),
      R => Reset
    );
\LOCKSTEP_Out_reg[3104]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(25),
      Q => \^lockstep_out\(3104),
      R => Reset
    );
\LOCKSTEP_Out_reg[3105]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(26),
      Q => \^lockstep_out\(3105),
      R => Reset
    );
\LOCKSTEP_Out_reg[3106]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(27),
      Q => \^lockstep_out\(3106),
      R => Reset
    );
\LOCKSTEP_Out_reg[3107]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(28),
      Q => \^lockstep_out\(3107),
      R => Reset
    );
\LOCKSTEP_Out_reg[3108]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(29),
      Q => \^lockstep_out\(3108),
      R => Reset
    );
\LOCKSTEP_Out_reg[3109]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(30),
      Q => \^lockstep_out\(3109),
      R => Reset
    );
\LOCKSTEP_Out_reg[3110]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_address\(31),
      Q => \^lockstep_out\(3110),
      R => Reset
    );
\LOCKSTEP_Out_reg[3143]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(0),
      Q => \^lockstep_out\(3143),
      R => Reset
    );
\LOCKSTEP_Out_reg[3144]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(1),
      Q => \^lockstep_out\(3144),
      R => Reset
    );
\LOCKSTEP_Out_reg[3145]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(2),
      Q => \^lockstep_out\(3145),
      R => Reset
    );
\LOCKSTEP_Out_reg[3146]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(3),
      Q => \^lockstep_out\(3146),
      R => Reset
    );
\LOCKSTEP_Out_reg[3147]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(4),
      Q => \^lockstep_out\(3147),
      R => Reset
    );
\LOCKSTEP_Out_reg[3148]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(5),
      Q => \^lockstep_out\(3148),
      R => Reset
    );
\LOCKSTEP_Out_reg[3149]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(6),
      Q => \^lockstep_out\(3149),
      R => Reset
    );
\LOCKSTEP_Out_reg[3150]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(7),
      Q => \^lockstep_out\(3150),
      R => Reset
    );
\LOCKSTEP_Out_reg[3151]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(8),
      Q => \^lockstep_out\(3151),
      R => Reset
    );
\LOCKSTEP_Out_reg[3152]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(9),
      Q => \^lockstep_out\(3152),
      R => Reset
    );
\LOCKSTEP_Out_reg[3153]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(10),
      Q => \^lockstep_out\(3153),
      R => Reset
    );
\LOCKSTEP_Out_reg[3154]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(11),
      Q => \^lockstep_out\(3154),
      R => Reset
    );
\LOCKSTEP_Out_reg[3155]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(12),
      Q => \^lockstep_out\(3155),
      R => Reset
    );
\LOCKSTEP_Out_reg[3156]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(13),
      Q => \^lockstep_out\(3156),
      R => Reset
    );
\LOCKSTEP_Out_reg[3157]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(14),
      Q => \^lockstep_out\(3157),
      R => Reset
    );
\LOCKSTEP_Out_reg[3158]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(15),
      Q => \^lockstep_out\(3158),
      R => Reset
    );
\LOCKSTEP_Out_reg[3159]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(16),
      Q => \^lockstep_out\(3159),
      R => Reset
    );
\LOCKSTEP_Out_reg[3160]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(17),
      Q => \^lockstep_out\(3160),
      R => Reset
    );
\LOCKSTEP_Out_reg[3161]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(18),
      Q => \^lockstep_out\(3161),
      R => Reset
    );
\LOCKSTEP_Out_reg[3162]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(19),
      Q => \^lockstep_out\(3162),
      R => Reset
    );
\LOCKSTEP_Out_reg[3163]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(20),
      Q => \^lockstep_out\(3163),
      R => Reset
    );
\LOCKSTEP_Out_reg[3164]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(21),
      Q => \^lockstep_out\(3164),
      R => Reset
    );
\LOCKSTEP_Out_reg[3165]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(22),
      Q => \^lockstep_out\(3165),
      R => Reset
    );
\LOCKSTEP_Out_reg[3166]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(23),
      Q => \^lockstep_out\(3166),
      R => Reset
    );
\LOCKSTEP_Out_reg[3167]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(24),
      Q => \^lockstep_out\(3167),
      R => Reset
    );
\LOCKSTEP_Out_reg[3168]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(25),
      Q => \^lockstep_out\(3168),
      R => Reset
    );
\LOCKSTEP_Out_reg[3169]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(26),
      Q => \^lockstep_out\(3169),
      R => Reset
    );
\LOCKSTEP_Out_reg[3170]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(27),
      Q => \^lockstep_out\(3170),
      R => Reset
    );
\LOCKSTEP_Out_reg[3171]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(28),
      Q => \^lockstep_out\(3171),
      R => Reset
    );
\LOCKSTEP_Out_reg[3172]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(29),
      Q => \^lockstep_out\(3172),
      R => Reset
    );
\LOCKSTEP_Out_reg[3173]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(30),
      Q => \^lockstep_out\(3173),
      R => Reset
    );
\LOCKSTEP_Out_reg[3174]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write_value\(31),
      Q => \^lockstep_out\(3174),
      R => Reset
    );
\LOCKSTEP_Out_reg[31]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(27),
      Q => \^lockstep_out\(31),
      R => Reset
    );
\LOCKSTEP_Out_reg[3207]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(0),
      Q => \^lockstep_out\(3207),
      R => Reset
    );
\LOCKSTEP_Out_reg[3208]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(1),
      Q => \^lockstep_out\(3208),
      R => Reset
    );
\LOCKSTEP_Out_reg[3209]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(2),
      Q => \^lockstep_out\(3209),
      R => Reset
    );
\LOCKSTEP_Out_reg[3210]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_byte_enable\(3),
      Q => \^lockstep_out\(3210),
      R => Reset
    );
\LOCKSTEP_Out_reg[3215]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_access\,
      Q => \^lockstep_out\(3215),
      R => Reset
    );
\LOCKSTEP_Out_reg[3216]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_read\,
      Q => \^lockstep_out\(3216),
      R => Reset
    );
\LOCKSTEP_Out_reg[3217]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_data_write\,
      Q => \^lockstep_out\(3217),
      R => Reset
    );
\LOCKSTEP_Out_reg[3225]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_of_piperun\,
      Q => \^lockstep_out\(3225),
      R => Reset
    );
\LOCKSTEP_Out_reg[3226]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_ex_piperun\,
      Q => \^lockstep_out\(3226),
      R => Reset
    );
\LOCKSTEP_Out_reg[3227]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_mem_piperun\,
      Q => \^lockstep_out\(3227),
      R => Reset
    );
\LOCKSTEP_Out_reg[3228]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^trace_mb_halted\,
      Q => \^lockstep_out\(3228),
      R => Reset
    );
\LOCKSTEP_Out_reg[32]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(28),
      Q => \^lockstep_out\(32),
      R => Reset
    );
\LOCKSTEP_Out_reg[33]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(29),
      Q => \^lockstep_out\(33),
      R => Reset
    );
\LOCKSTEP_Out_reg[34]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(30),
      Q => \^lockstep_out\(34),
      R => Reset
    );
\LOCKSTEP_Out_reg[35]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(31),
      Q => \^lockstep_out\(35),
      R => Reset
    );
\LOCKSTEP_Out_reg[3]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^i_as\,
      Q => \^lockstep_out\(3),
      R => Reset
    );
\LOCKSTEP_Out_reg[466]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(31),
      Q => \^lockstep_out\(632),
      R => Reset
    );
\LOCKSTEP_Out_reg[467]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(30),
      Q => \^lockstep_out\(633),
      R => Reset
    );
\LOCKSTEP_Out_reg[468]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(29),
      Q => \^lockstep_out\(634),
      R => Reset
    );
\LOCKSTEP_Out_reg[469]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(28),
      Q => \^lockstep_out\(635),
      R => Reset
    );
\LOCKSTEP_Out_reg[470]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(27),
      Q => \^lockstep_out\(636),
      R => Reset
    );
\LOCKSTEP_Out_reg[471]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(26),
      Q => \^lockstep_out\(637),
      R => Reset
    );
\LOCKSTEP_Out_reg[472]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(25),
      Q => \^lockstep_out\(638),
      R => Reset
    );
\LOCKSTEP_Out_reg[473]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(24),
      Q => \^lockstep_out\(639),
      R => Reset
    );
\LOCKSTEP_Out_reg[474]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(23),
      Q => \^lockstep_out\(640),
      R => Reset
    );
\LOCKSTEP_Out_reg[475]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(22),
      Q => \^lockstep_out\(641),
      R => Reset
    );
\LOCKSTEP_Out_reg[476]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(21),
      Q => \^lockstep_out\(642),
      R => Reset
    );
\LOCKSTEP_Out_reg[477]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(20),
      Q => \^lockstep_out\(643),
      R => Reset
    );
\LOCKSTEP_Out_reg[478]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(19),
      Q => \^lockstep_out\(644),
      R => Reset
    );
\LOCKSTEP_Out_reg[479]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(18),
      Q => \^lockstep_out\(645),
      R => Reset
    );
\LOCKSTEP_Out_reg[480]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(17),
      Q => \^lockstep_out\(646),
      R => Reset
    );
\LOCKSTEP_Out_reg[481]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(16),
      Q => \^lockstep_out\(647),
      R => Reset
    );
\LOCKSTEP_Out_reg[482]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(15),
      Q => \^lockstep_out\(648),
      R => Reset
    );
\LOCKSTEP_Out_reg[483]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(14),
      Q => \^lockstep_out\(649),
      R => Reset
    );
\LOCKSTEP_Out_reg[484]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(13),
      Q => \^lockstep_out\(650),
      R => Reset
    );
\LOCKSTEP_Out_reg[485]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(12),
      Q => \^lockstep_out\(651),
      R => Reset
    );
\LOCKSTEP_Out_reg[486]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(11),
      Q => \^lockstep_out\(652),
      R => Reset
    );
\LOCKSTEP_Out_reg[487]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(10),
      Q => \^lockstep_out\(653),
      R => Reset
    );
\LOCKSTEP_Out_reg[488]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(9),
      Q => \^lockstep_out\(654),
      R => Reset
    );
\LOCKSTEP_Out_reg[489]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(8),
      Q => \^lockstep_out\(655),
      R => Reset
    );
\LOCKSTEP_Out_reg[490]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(7),
      Q => \^lockstep_out\(656),
      R => Reset
    );
\LOCKSTEP_Out_reg[491]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(6),
      Q => \^lockstep_out\(657),
      R => Reset
    );
\LOCKSTEP_Out_reg[492]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(5),
      Q => \^lockstep_out\(658),
      R => Reset
    );
\LOCKSTEP_Out_reg[493]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(4),
      Q => \^lockstep_out\(659),
      R => Reset
    );
\LOCKSTEP_Out_reg[494]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(3),
      Q => \^lockstep_out\(660),
      R => Reset
    );
\LOCKSTEP_Out_reg[495]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(2),
      Q => \^lockstep_out\(661),
      R => Reset
    );
\LOCKSTEP_Out_reg[496]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(1),
      Q => \^lockstep_out\(662),
      R => Reset
    );
\LOCKSTEP_Out_reg[497]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awaddr\(0),
      Q => \^lockstep_out\(663),
      R => Reset
    );
\LOCKSTEP_Out_reg[4]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(0),
      Q => \^lockstep_out\(4),
      R => Reset
    );
\LOCKSTEP_Out_reg[539]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => '1',
      Q => \^lockstep_out\(542),
      R => Reset
    );
\LOCKSTEP_Out_reg[555]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_awvalid\,
      Q => \^lockstep_out\(555),
      R => Reset
    );
\LOCKSTEP_Out_reg[556]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(31),
      Q => \^lockstep_out\(556),
      R => Reset
    );
\LOCKSTEP_Out_reg[557]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(30),
      Q => \^lockstep_out\(557),
      R => Reset
    );
\LOCKSTEP_Out_reg[558]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(29),
      Q => \^lockstep_out\(558),
      R => Reset
    );
\LOCKSTEP_Out_reg[559]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(28),
      Q => \^lockstep_out\(559),
      R => Reset
    );
\LOCKSTEP_Out_reg[560]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(27),
      Q => \^lockstep_out\(560),
      R => Reset
    );
\LOCKSTEP_Out_reg[561]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(26),
      Q => \^lockstep_out\(561),
      R => Reset
    );
\LOCKSTEP_Out_reg[562]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(25),
      Q => \^lockstep_out\(562),
      R => Reset
    );
\LOCKSTEP_Out_reg[563]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(24),
      Q => \^lockstep_out\(563),
      R => Reset
    );
\LOCKSTEP_Out_reg[564]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(23),
      Q => \^lockstep_out\(564),
      R => Reset
    );
\LOCKSTEP_Out_reg[565]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(22),
      Q => \^lockstep_out\(565),
      R => Reset
    );
\LOCKSTEP_Out_reg[566]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(21),
      Q => \^lockstep_out\(566),
      R => Reset
    );
\LOCKSTEP_Out_reg[567]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(20),
      Q => \^lockstep_out\(567),
      R => Reset
    );
\LOCKSTEP_Out_reg[568]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(19),
      Q => \^lockstep_out\(568),
      R => Reset
    );
\LOCKSTEP_Out_reg[569]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(18),
      Q => \^lockstep_out\(569),
      R => Reset
    );
\LOCKSTEP_Out_reg[570]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(17),
      Q => \^lockstep_out\(570),
      R => Reset
    );
\LOCKSTEP_Out_reg[571]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(16),
      Q => \^lockstep_out\(571),
      R => Reset
    );
\LOCKSTEP_Out_reg[572]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(15),
      Q => \^lockstep_out\(572),
      R => Reset
    );
\LOCKSTEP_Out_reg[573]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(14),
      Q => \^lockstep_out\(573),
      R => Reset
    );
\LOCKSTEP_Out_reg[574]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(13),
      Q => \^lockstep_out\(574),
      R => Reset
    );
\LOCKSTEP_Out_reg[575]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(12),
      Q => \^lockstep_out\(575),
      R => Reset
    );
\LOCKSTEP_Out_reg[576]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(11),
      Q => \^lockstep_out\(576),
      R => Reset
    );
\LOCKSTEP_Out_reg[577]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(10),
      Q => \^lockstep_out\(577),
      R => Reset
    );
\LOCKSTEP_Out_reg[578]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(9),
      Q => \^lockstep_out\(578),
      R => Reset
    );
\LOCKSTEP_Out_reg[579]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(8),
      Q => \^lockstep_out\(579),
      R => Reset
    );
\LOCKSTEP_Out_reg[580]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(7),
      Q => \^lockstep_out\(580),
      R => Reset
    );
\LOCKSTEP_Out_reg[581]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(6),
      Q => \^lockstep_out\(581),
      R => Reset
    );
\LOCKSTEP_Out_reg[582]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(5),
      Q => \^lockstep_out\(582),
      R => Reset
    );
\LOCKSTEP_Out_reg[583]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(4),
      Q => \^lockstep_out\(583),
      R => Reset
    );
\LOCKSTEP_Out_reg[584]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(3),
      Q => \^lockstep_out\(584),
      R => Reset
    );
\LOCKSTEP_Out_reg[585]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(2),
      Q => \^lockstep_out\(585),
      R => Reset
    );
\LOCKSTEP_Out_reg[586]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(1),
      Q => \^lockstep_out\(586),
      R => Reset
    );
\LOCKSTEP_Out_reg[587]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wdata\(0),
      Q => \^lockstep_out\(587),
      R => Reset
    );
\LOCKSTEP_Out_reg[5]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(1),
      Q => \^lockstep_out\(5),
      R => Reset
    );
\LOCKSTEP_Out_reg[620]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(3),
      Q => \^lockstep_out\(620),
      R => Reset
    );
\LOCKSTEP_Out_reg[621]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(2),
      Q => \^lockstep_out\(621),
      R => Reset
    );
\LOCKSTEP_Out_reg[622]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(1),
      Q => \^lockstep_out\(622),
      R => Reset
    );
\LOCKSTEP_Out_reg[623]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wstrb\(0),
      Q => \^lockstep_out\(623),
      R => Reset
    );
\LOCKSTEP_Out_reg[629]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_wvalid\,
      Q => \^lockstep_out\(629),
      R => Reset
    );
\LOCKSTEP_Out_reg[630]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_bready\,
      Q => \^lockstep_out\(630),
      R => Reset
    );
\LOCKSTEP_Out_reg[68]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(0),
      Q => \^lockstep_out\(68),
      R => Reset
    );
\LOCKSTEP_Out_reg[69]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(1),
      Q => \^lockstep_out\(69),
      R => Reset
    );
\LOCKSTEP_Out_reg[6]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(2),
      Q => \^lockstep_out\(6),
      R => Reset
    );
\LOCKSTEP_Out_reg[70]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(2),
      Q => \^lockstep_out\(70),
      R => Reset
    );
\LOCKSTEP_Out_reg[71]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(3),
      Q => \^lockstep_out\(71),
      R => Reset
    );
\LOCKSTEP_Out_reg[721]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_arvalid\,
      Q => \^lockstep_out\(721),
      R => Reset
    );
\LOCKSTEP_Out_reg[722]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^m_axi_dp_rready\,
      Q => \^lockstep_out\(722),
      R => Reset
    );
\LOCKSTEP_Out_reg[72]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(4),
      Q => \^lockstep_out\(72),
      R => Reset
    );
\LOCKSTEP_Out_reg[73]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(5),
      Q => \^lockstep_out\(73),
      R => Reset
    );
\LOCKSTEP_Out_reg[74]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(6),
      Q => \^lockstep_out\(74),
      R => Reset
    );
\LOCKSTEP_Out_reg[75]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(7),
      Q => \^lockstep_out\(75),
      R => Reset
    );
\LOCKSTEP_Out_reg[76]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(8),
      Q => \^lockstep_out\(76),
      R => Reset
    );
\LOCKSTEP_Out_reg[77]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(9),
      Q => \^lockstep_out\(77),
      R => Reset
    );
\LOCKSTEP_Out_reg[78]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(10),
      Q => \^lockstep_out\(78),
      R => Reset
    );
\LOCKSTEP_Out_reg[79]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(11),
      Q => \^lockstep_out\(79),
      R => Reset
    );
\LOCKSTEP_Out_reg[7]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(3),
      Q => \^lockstep_out\(7),
      R => Reset
    );
\LOCKSTEP_Out_reg[80]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(12),
      Q => \^lockstep_out\(80),
      R => Reset
    );
\LOCKSTEP_Out_reg[81]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(13),
      Q => \^lockstep_out\(81),
      R => Reset
    );
\LOCKSTEP_Out_reg[82]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(14),
      Q => \^lockstep_out\(82),
      R => Reset
    );
\LOCKSTEP_Out_reg[83]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(15),
      Q => \^lockstep_out\(83),
      R => Reset
    );
\LOCKSTEP_Out_reg[84]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(16),
      Q => \^lockstep_out\(84),
      R => Reset
    );
\LOCKSTEP_Out_reg[85]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(17),
      Q => \^lockstep_out\(85),
      R => Reset
    );
\LOCKSTEP_Out_reg[86]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(18),
      Q => \^lockstep_out\(86),
      R => Reset
    );
\LOCKSTEP_Out_reg[87]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(19),
      Q => \^lockstep_out\(87),
      R => Reset
    );
\LOCKSTEP_Out_reg[88]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(20),
      Q => \^lockstep_out\(88),
      R => Reset
    );
\LOCKSTEP_Out_reg[89]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(21),
      Q => \^lockstep_out\(89),
      R => Reset
    );
\LOCKSTEP_Out_reg[8]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(4),
      Q => \^lockstep_out\(8),
      R => Reset
    );
\LOCKSTEP_Out_reg[90]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(22),
      Q => \^lockstep_out\(90),
      R => Reset
    );
\LOCKSTEP_Out_reg[91]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(23),
      Q => \^lockstep_out\(91),
      R => Reset
    );
\LOCKSTEP_Out_reg[92]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(24),
      Q => \^lockstep_out\(92),
      R => Reset
    );
\LOCKSTEP_Out_reg[93]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(25),
      Q => \^lockstep_out\(93),
      R => Reset
    );
\LOCKSTEP_Out_reg[94]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(26),
      Q => \^lockstep_out\(94),
      R => Reset
    );
\LOCKSTEP_Out_reg[95]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(27),
      Q => \^lockstep_out\(95),
      R => Reset
    );
\LOCKSTEP_Out_reg[96]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(28),
      Q => \^lockstep_out\(96),
      R => Reset
    );
\LOCKSTEP_Out_reg[97]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(29),
      Q => \^lockstep_out\(97),
      R => Reset
    );
\LOCKSTEP_Out_reg[98]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(30),
      Q => \^lockstep_out\(98),
      R => Reset
    );
\LOCKSTEP_Out_reg[99]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^data_addr\(31),
      Q => \^lockstep_out\(99),
      R => Reset
    );
\LOCKSTEP_Out_reg[9]\: unisim.vcomponents.FDRE
     port map (
      C => Clk,
      CE => '1',
      D => \^instr_addr\(5),
      Q => \^lockstep_out\(9),
      R => Reset
    );
MicroBlaze_Core_I: entity work.microblaze_microblaze_0_0_MicroBlaze_Core
     port map (
      Clk => Clk,
      Config_Reg_En => Config_Reg_En,
      Config_Reset => Config_Reset,
      D(366) => \^mb_halted\,
      D(365) => \^ifetch\,
      D(364) => \^i_as\,
      D(363) => \^instr_addr\(0),
      D(362) => \^instr_addr\(1),
      D(361) => \^instr_addr\(2),
      D(360) => \^instr_addr\(3),
      D(359) => \^instr_addr\(4),
      D(358) => \^instr_addr\(5),
      D(357) => \^instr_addr\(6),
      D(356) => \^instr_addr\(7),
      D(355) => \^instr_addr\(8),
      D(354) => \^instr_addr\(9),
      D(353) => \^instr_addr\(10),
      D(352) => \^instr_addr\(11),
      D(351) => \^instr_addr\(12),
      D(350) => \^instr_addr\(13),
      D(349) => \^instr_addr\(14),
      D(348) => \^instr_addr\(15),
      D(347) => \^instr_addr\(16),
      D(346) => \^instr_addr\(17),
      D(345) => \^instr_addr\(18),
      D(344) => \^instr_addr\(19),
      D(343) => \^instr_addr\(20),
      D(342) => \^instr_addr\(21),
      D(341) => \^instr_addr\(22),
      D(340) => \^instr_addr\(23),
      D(339) => \^instr_addr\(24),
      D(338) => \^instr_addr\(25),
      D(337) => \^instr_addr\(26),
      D(336) => \^instr_addr\(27),
      D(335) => \^instr_addr\(28),
      D(334) => \^instr_addr\(29),
      D(333) => \^instr_addr\(30),
      D(332) => \^instr_addr\(31),
      D(331) => \^data_addr\(0),
      D(330) => \^data_addr\(1),
      D(329) => \^data_addr\(2),
      D(328) => \^data_addr\(3),
      D(327) => \^data_addr\(4),
      D(326) => \^data_addr\(5),
      D(325) => \^data_addr\(6),
      D(324) => \^data_addr\(7),
      D(323) => \^data_addr\(8),
      D(322) => \^data_addr\(9),
      D(321) => \^data_addr\(10),
      D(320) => \^data_addr\(11),
      D(319) => \^data_addr\(12),
      D(318) => \^data_addr\(13),
      D(317) => \^data_addr\(14),
      D(316) => \^data_addr\(15),
      D(315) => \^data_addr\(16),
      D(314) => \^data_addr\(17),
      D(313) => \^data_addr\(18),
      D(312) => \^data_addr\(19),
      D(311) => \^data_addr\(20),
      D(310) => \^data_addr\(21),
      D(309) => \^data_addr\(22),
      D(308) => \^data_addr\(23),
      D(307) => \^data_addr\(24),
      D(306) => \^data_addr\(25),
      D(305) => \^data_addr\(26),
      D(304) => \^data_addr\(27),
      D(303) => \^data_addr\(28),
      D(302) => \^data_addr\(29),
      D(301) => \^data_addr\(30),
      D(300) => \^data_addr\(31),
      D(299) => \^data_write\(0),
      D(298) => \^data_write\(1),
      D(297) => \^data_write\(2),
      D(296) => \^data_write\(3),
      D(295) => \^data_write\(4),
      D(294) => \^data_write\(5),
      D(293) => \^data_write\(6),
      D(292) => \^data_write\(7),
      D(291) => \^data_write\(8),
      D(290) => \^data_write\(9),
      D(289) => \^data_write\(10),
      D(288) => \^data_write\(11),
      D(287) => \^data_write\(12),
      D(286) => \^data_write\(13),
      D(285) => \^data_write\(14),
      D(284) => \^data_write\(15),
      D(283) => \^data_write\(16),
      D(282) => \^data_write\(17),
      D(281) => \^data_write\(18),
      D(280) => \^data_write\(19),
      D(279) => \^data_write\(20),
      D(278) => \^data_write\(21),
      D(277) => \^data_write\(22),
      D(276) => \^data_write\(23),
      D(275) => \^data_write\(24),
      D(274) => \^data_write\(25),
      D(273) => \^data_write\(26),
      D(272) => \^data_write\(27),
      D(271) => \^data_write\(28),
      D(270) => \^data_write\(29),
      D(269) => \^data_write\(30),
      D(268) => \^data_write\(31),
      D(267) => \^d_as\,
      D(266) => \^read_strobe\,
      D(265) => \^write_strobe\,
      D(264) => \^byte_enable\(0),
      D(263) => \^byte_enable\(1),
      D(262) => \^byte_enable\(2),
      D(261) => \^byte_enable\(3),
      D(260 downto 229) => \^m_axi_dp_awaddr\(31 downto 0),
      D(228) => \^m_axi_dp_awvalid\,
      D(227 downto 196) => \^m_axi_dp_wdata\(31 downto 0),
      D(195 downto 192) => \^m_axi_dp_wstrb\(3 downto 0),
      D(191) => \^m_axi_dp_wvalid\,
      D(190) => \^m_axi_dp_bready\,
      D(189) => \^m_axi_dp_arvalid\,
      D(188) => \^m_axi_dp_rready\,
      D(187) => \^trace_instruction\(0),
      D(186) => \^trace_instruction\(1),
      D(185) => \^trace_instruction\(2),
      D(184) => \^trace_instruction\(3),
      D(183) => \^trace_instruction\(4),
      D(182) => \^trace_instruction\(5),
      D(181) => \^trace_instruction\(6),
      D(180) => \^trace_instruction\(7),
      D(179) => \^trace_instruction\(8),
      D(178) => \^trace_instruction\(9),
      D(177) => \^trace_instruction\(10),
      D(176) => \^trace_instruction\(11),
      D(175) => \^trace_instruction\(12),
      D(174) => \^trace_instruction\(13),
      D(173) => \^trace_instruction\(14),
      D(172) => \^trace_instruction\(15),
      D(171) => \^trace_instruction\(16),
      D(170) => \^trace_instruction\(17),
      D(169) => \^trace_instruction\(18),
      D(168) => \^trace_instruction\(19),
      D(167) => \^trace_instruction\(20),
      D(166) => \^trace_instruction\(21),
      D(165) => \^trace_instruction\(22),
      D(164) => \^trace_instruction\(23),
      D(163) => \^trace_instruction\(24),
      D(162) => \^trace_instruction\(25),
      D(161) => \^trace_instruction\(26),
      D(160) => \^trace_instruction\(27),
      D(159) => \^trace_instruction\(28),
      D(158) => \^trace_instruction\(29),
      D(157) => \^trace_instruction\(30),
      D(156) => \^trace_instruction\(31),
      D(155) => \^trace_valid_instr\,
      D(154) => \^trace_pc\(0),
      D(153) => \^trace_pc\(1),
      D(152) => \^trace_pc\(2),
      D(151) => \^trace_pc\(3),
      D(150) => \^trace_pc\(4),
      D(149) => \^trace_pc\(5),
      D(148) => \^trace_pc\(6),
      D(147) => \^trace_pc\(7),
      D(146) => \^trace_pc\(8),
      D(145) => \^trace_pc\(9),
      D(144) => \^trace_pc\(10),
      D(143) => \^trace_pc\(11),
      D(142) => \^trace_pc\(12),
      D(141) => \^trace_pc\(13),
      D(140) => \^trace_pc\(14),
      D(139) => \^trace_pc\(15),
      D(138) => \^trace_pc\(16),
      D(137) => \^trace_pc\(17),
      D(136) => \^trace_pc\(18),
      D(135) => \^trace_pc\(19),
      D(134) => \^trace_pc\(20),
      D(133) => \^trace_pc\(21),
      D(132) => \^trace_pc\(22),
      D(131) => \^trace_pc\(23),
      D(130) => \^trace_pc\(24),
      D(129) => \^trace_pc\(25),
      D(128) => \^trace_pc\(26),
      D(127) => \^trace_pc\(27),
      D(126) => \^trace_pc\(28),
      D(125) => \^trace_pc\(29),
      D(124) => \^trace_pc\(30),
      D(123) => \^trace_pc\(31),
      D(122) => \^trace_reg_write\,
      D(121) => \^trace_reg_addr\(0),
      D(120) => \^trace_reg_addr\(1),
      D(119) => \^trace_reg_addr\(2),
      D(118) => \^trace_reg_addr\(3),
      D(117) => \^trace_reg_addr\(4),
      D(116) => \^trace_msr_reg\(8),
      D(115) => \^trace_msr_reg\(11),
      D(114) => \^trace_msr_reg\(12),
      D(113) => \^trace_msr_reg\(13),
      D(112) => \^trace_new_reg_value\(0),
      D(111) => \^trace_new_reg_value\(1),
      D(110) => \^trace_new_reg_value\(2),
      D(109) => \^trace_new_reg_value\(3),
      D(108) => \^trace_new_reg_value\(4),
      D(107) => \^trace_new_reg_value\(5),
      D(106) => \^trace_new_reg_value\(6),
      D(105) => \^trace_new_reg_value\(7),
      D(104) => \^trace_new_reg_value\(8),
      D(103) => \^trace_new_reg_value\(9),
      D(102) => \^trace_new_reg_value\(10),
      D(101) => \^trace_new_reg_value\(11),
      D(100) => \^trace_new_reg_value\(12),
      D(99) => \^trace_new_reg_value\(13),
      D(98) => \^trace_new_reg_value\(14),
      D(97) => \^trace_new_reg_value\(15),
      D(96) => \^trace_new_reg_value\(16),
      D(95) => \^trace_new_reg_value\(17),
      D(94) => \^trace_new_reg_value\(18),
      D(93) => \^trace_new_reg_value\(19),
      D(92) => \^trace_new_reg_value\(20),
      D(91) => \^trace_new_reg_value\(21),
      D(90) => \^trace_new_reg_value\(22),
      D(89) => \^trace_new_reg_value\(23),
      D(88) => \^trace_new_reg_value\(24),
      D(87) => \^trace_new_reg_value\(25),
      D(86) => \^trace_new_reg_value\(26),
      D(85) => \^trace_new_reg_value\(27),
      D(84) => \^trace_new_reg_value\(28),
      D(83) => \^trace_new_reg_value\(29),
      D(82) => \^trace_new_reg_value\(30),
      D(81) => \^trace_new_reg_value\(31),
      D(80) => \^trace_exception_taken\,
      D(79) => \^trace_exception_kind\(1),
      D(78) => \^trace_exception_kind\(3),
      D(77) => \^trace_exception_kind\(4),
      D(76) => \^trace_jump_taken\,
      D(75) => \^trace_delay_slot\,
      D(74) => \^trace_data_address\(0),
      D(73) => \^trace_data_address\(1),
      D(72) => \^trace_data_address\(2),
      D(71) => \^trace_data_address\(3),
      D(70) => \^trace_data_address\(4),
      D(69) => \^trace_data_address\(5),
      D(68) => \^trace_data_address\(6),
      D(67) => \^trace_data_address\(7),
      D(66) => \^trace_data_address\(8),
      D(65) => \^trace_data_address\(9),
      D(64) => \^trace_data_address\(10),
      D(63) => \^trace_data_address\(11),
      D(62) => \^trace_data_address\(12),
      D(61) => \^trace_data_address\(13),
      D(60) => \^trace_data_address\(14),
      D(59) => \^trace_data_address\(15),
      D(58) => \^trace_data_address\(16),
      D(57) => \^trace_data_address\(17),
      D(56) => \^trace_data_address\(18),
      D(55) => \^trace_data_address\(19),
      D(54) => \^trace_data_address\(20),
      D(53) => \^trace_data_address\(21),
      D(52) => \^trace_data_address\(22),
      D(51) => \^trace_data_address\(23),
      D(50) => \^trace_data_address\(24),
      D(49) => \^trace_data_address\(25),
      D(48) => \^trace_data_address\(26),
      D(47) => \^trace_data_address\(27),
      D(46) => \^trace_data_address\(28),
      D(45) => \^trace_data_address\(29),
      D(44) => \^trace_data_address\(30),
      D(43) => \^trace_data_address\(31),
      D(42) => \^trace_data_write_value\(0),
      D(41) => \^trace_data_write_value\(1),
      D(40) => \^trace_data_write_value\(2),
      D(39) => \^trace_data_write_value\(3),
      D(38) => \^trace_data_write_value\(4),
      D(37) => \^trace_data_write_value\(5),
      D(36) => \^trace_data_write_value\(6),
      D(35) => \^trace_data_write_value\(7),
      D(34) => \^trace_data_write_value\(8),
      D(33) => \^trace_data_write_value\(9),
      D(32) => \^trace_data_write_value\(10),
      D(31) => \^trace_data_write_value\(11),
      D(30) => \^trace_data_write_value\(12),
      D(29) => \^trace_data_write_value\(13),
      D(28) => \^trace_data_write_value\(14),
      D(27) => \^trace_data_write_value\(15),
      D(26) => \^trace_data_write_value\(16),
      D(25) => \^trace_data_write_value\(17),
      D(24) => \^trace_data_write_value\(18),
      D(23) => \^trace_data_write_value\(19),
      D(22) => \^trace_data_write_value\(20),
      D(21) => \^trace_data_write_value\(21),
      D(20) => \^trace_data_write_value\(22),
      D(19) => \^trace_data_write_value\(23),
      D(18) => \^trace_data_write_value\(24),
      D(17) => \^trace_data_write_value\(25),
      D(16) => \^trace_data_write_value\(26),
      D(15) => \^trace_data_write_value\(27),
      D(14) => \^trace_data_write_value\(28),
      D(13) => \^trace_data_write_value\(29),
      D(12) => \^trace_data_write_value\(30),
      D(11) => \^trace_data_write_value\(31),
      D(10) => \^trace_data_byte_enable\(0),
      D(9) => \^trace_data_byte_enable\(1),
      D(8) => \^trace_data_byte_enable\(2),
      D(7) => \^trace_data_byte_enable\(3),
      D(6) => \^trace_data_access\,
      D(5) => \^trace_data_read\,
      D(4) => \^trace_data_write\,
      D(3) => \^trace_of_piperun\,
      D(2) => \^trace_ex_piperun\,
      D(1) => \^trace_mem_piperun\,
      D(0) => \^trace_mb_halted\,
      DReady => DReady,
      DWait => DWait,
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Read_Reg_En => Data_Read_Reg_En,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Reg_En_2_sp_1 => MicroBlaze_Core_I_n_413,
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => Dbg_Stop,
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trig_Ack_In(1) => Dbg_Trig_Ack_In(0),
      Dbg_Trig_Ack_In(0) => Dbg_Trig_Ack_In(1),
      Dbg_Trig_Ack_Out(1) => \^dbg_trig_ack_out\(0),
      Dbg_Trig_Ack_Out(0) => \^dbg_trig_ack_out\(1),
      Dbg_Trig_In(1) => \^dbg_trig_in\(0),
      Dbg_Trig_In(0) => \^dbg_trig_in\(1),
      Dbg_Trig_Out(1) => Dbg_Trig_Out(0),
      Dbg_Trig_Out(0) => Dbg_Trig_Out(1),
      Dbg_Update => Dbg_Update,
      Debug_Rst => \^debug_rst\,
      Hibernate => Hibernate,
      IReady => IReady,
      IWAIT => IWAIT,
      Instr(0 to 31) => Instr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(38) => \^lockstep_master_out\(3),
      LOCKSTEP_Master_Out(37) => \^lockstep_master_out\(5),
      LOCKSTEP_Master_Out(36) => \^lockstep_master_out\(6),
      LOCKSTEP_Master_Out(35) => \^lockstep_master_out\(7),
      LOCKSTEP_Master_Out(34) => \^lockstep_master_out\(11),
      LOCKSTEP_Master_Out(33) => \^lockstep_master_out\(12),
      LOCKSTEP_Master_Out(32) => \^lockstep_master_out\(13),
      LOCKSTEP_Master_Out(31) => \^lockstep_master_out\(15),
      LOCKSTEP_Master_Out(30) => \^lockstep_master_out\(16),
      LOCKSTEP_Master_Out(29) => \^lockstep_master_out\(17),
      LOCKSTEP_Master_Out(28) => \^lockstep_master_out\(18),
      LOCKSTEP_Master_Out(27) => \^lockstep_master_out\(19),
      LOCKSTEP_Master_Out(26) => \^lockstep_master_out\(20),
      LOCKSTEP_Master_Out(25) => \^lockstep_master_out\(21),
      LOCKSTEP_Master_Out(24) => \^lockstep_master_out\(22),
      LOCKSTEP_Master_Out(23) => \^lockstep_master_out\(23),
      LOCKSTEP_Master_Out(22) => \^lockstep_master_out\(24),
      LOCKSTEP_Master_Out(21) => \^lockstep_master_out\(25),
      LOCKSTEP_Master_Out(20) => \^lockstep_master_out\(26),
      LOCKSTEP_Master_Out(19) => \^lockstep_master_out\(27),
      LOCKSTEP_Master_Out(18) => \^lockstep_master_out\(28),
      LOCKSTEP_Master_Out(17) => \^lockstep_master_out\(29),
      LOCKSTEP_Master_Out(16) => \^lockstep_master_out\(30),
      LOCKSTEP_Master_Out(15) => \^lockstep_master_out\(31),
      LOCKSTEP_Master_Out(14) => \^lockstep_master_out\(32),
      LOCKSTEP_Master_Out(13) => \^lockstep_master_out\(33),
      LOCKSTEP_Master_Out(12) => \^lockstep_master_out\(34),
      LOCKSTEP_Master_Out(11) => \^lockstep_master_out\(35),
      LOCKSTEP_Master_Out(10) => \^lockstep_master_out\(36),
      LOCKSTEP_Master_Out(9) => \^lockstep_master_out\(37),
      LOCKSTEP_Master_Out(8) => \^lockstep_master_out\(38),
      LOCKSTEP_Master_Out(7) => \^lockstep_master_out\(39),
      LOCKSTEP_Master_Out(6) => \^lockstep_master_out\(40),
      LOCKSTEP_Master_Out(5) => \^lockstep_master_out\(41),
      LOCKSTEP_Master_Out(4) => \^lockstep_master_out\(42),
      LOCKSTEP_Master_Out(3) => \^lockstep_master_out\(43),
      LOCKSTEP_Master_Out(2) => \^lockstep_master_out\(44),
      LOCKSTEP_Master_Out(1) => \^lockstep_master_out\(45),
      LOCKSTEP_Master_Out(0) => \^lockstep_master_out\(46),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      Mb_Reset => Mb_Reset,
      Pause => Pause,
      Pause_Ack => Pause_Ack,
      Reset => Reset,
      Reset_Mode(0 to 1) => Reset_Mode(0 to 1),
      Scan_En => Scan_En,
      Scan_Reset => Scan_Reset,
      Scan_Reset_Sel => Scan_Reset_Sel,
      \Serial_Dbg_Intf.if_debug_ready_i_reg\ => \^lockstep_master_out\(4),
      Sleep => Sleep,
      Status_Reg_En => \Frequency.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En\,
      Suspend => Suspend,
      Wakeup(0 to 1) => Wakeup(0 to 1)
    );
VCC: unisim.vcomponents.VCC
     port map (
      P => \<const1>\
    );
end STRUCTURE;
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;
entity microblaze_microblaze_0_0 is
  port (
    Clk : in STD_LOGIC;
    Reset : in STD_LOGIC;
    Interrupt : in STD_LOGIC;
    Interrupt_Address : in STD_LOGIC_VECTOR ( 0 to 31 );
    Interrupt_Ack : out STD_LOGIC_VECTOR ( 0 to 1 );
    Instr_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Instr : in STD_LOGIC_VECTOR ( 0 to 31 );
    IFetch : out STD_LOGIC;
    I_AS : out STD_LOGIC;
    IReady : in STD_LOGIC;
    IWAIT : in STD_LOGIC;
    ICE : in STD_LOGIC;
    IUE : in STD_LOGIC;
    Data_Addr : out STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Read : in STD_LOGIC_VECTOR ( 0 to 31 );
    Data_Write : out STD_LOGIC_VECTOR ( 0 to 31 );
    D_AS : out STD_LOGIC;
    Read_Strobe : out STD_LOGIC;
    Write_Strobe : out STD_LOGIC;
    DReady : in STD_LOGIC;
    DWait : in STD_LOGIC;
    DCE : in STD_LOGIC;
    DUE : in STD_LOGIC;
    Byte_Enable : out STD_LOGIC_VECTOR ( 0 to 3 );
    M_AXI_DP_AWADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_AWPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_AWVALID : out STD_LOGIC;
    M_AXI_DP_AWREADY : in STD_LOGIC;
    M_AXI_DP_WDATA : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_WSTRB : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AXI_DP_WVALID : out STD_LOGIC;
    M_AXI_DP_WREADY : in STD_LOGIC;
    M_AXI_DP_BRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_BVALID : in STD_LOGIC;
    M_AXI_DP_BREADY : out STD_LOGIC;
    M_AXI_DP_ARADDR : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_ARPROT : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AXI_DP_ARVALID : out STD_LOGIC;
    M_AXI_DP_ARREADY : in STD_LOGIC;
    M_AXI_DP_RDATA : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AXI_DP_RRESP : in STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AXI_DP_RVALID : in STD_LOGIC;
    M_AXI_DP_RREADY : out STD_LOGIC;
    Dbg_Clk : in STD_LOGIC;
    Dbg_TDI : in STD_LOGIC;
    Dbg_TDO : out STD_LOGIC;
    Dbg_Reg_En : in STD_LOGIC_VECTOR ( 0 to 7 );
    Dbg_Shift : in STD_LOGIC;
    Dbg_Capture : in STD_LOGIC;
    Dbg_Update : in STD_LOGIC;
    Debug_Rst : in STD_LOGIC;
    Dbg_Disable : in STD_LOGIC
  );
  attribute NotValidForBitStream : boolean;
  attribute NotValidForBitStream of microblaze_microblaze_0_0 : entity is true;
  attribute CHECK_LICENSE_TYPE : string;
  attribute CHECK_LICENSE_TYPE of microblaze_microblaze_0_0 : entity is "microblaze_microblaze_0_0,MicroBlaze,{}";
  attribute downgradeipidentifiedwarnings : string;
  attribute downgradeipidentifiedwarnings of microblaze_microblaze_0_0 : entity is "yes";
  attribute x_core_info : string;
  attribute x_core_info of microblaze_microblaze_0_0 : entity is "MicroBlaze,Vivado 2018.3";
end microblaze_microblaze_0_0;

architecture STRUCTURE of microblaze_microblaze_0_0 is
  signal NLW_U0_Dbg_ARREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_AWREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Continue_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Intr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_RVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Trace_Valid_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_WREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_Wakeup_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Hibernate_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M0_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M10_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M11_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M12_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M13_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M14_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M15_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M1_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M2_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M3_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M4_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M5_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M6_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M7_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M8_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M9_AXIS_TVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Error_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_DP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WACK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IC_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_BREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_RREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WLAST_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_M_AXI_IP_WVALID_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Pause_Ack_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S0_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S10_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S11_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S12_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S13_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S14_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S15_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S1_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S2_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S3_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S4_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S5_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S6_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S7_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S8_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_S9_AXIS_TREADY_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Sleep_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Suspend_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_DCache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Access_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Read_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Data_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Delay_Slot_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_EX_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Exception_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Rdy_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_ICache_Req_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Hit_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Jump_Taken_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MB_Halted_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_MEM_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_OF_PipeRun_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Reg_Write_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Trace_Valid_Instr_UNCONNECTED : STD_LOGIC;
  signal NLW_U0_Dbg_BRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_RDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_Dbg_RRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_Dbg_Trace_Data_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 35 );
  signal NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Dbg_Trig_In_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_LOCKSTEP_Out_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4095 );
  signal NLW_U0_M0_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M10_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M11_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M12_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M13_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M14_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M15_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M1_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M2_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M3_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M4_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M5_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M6_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M7_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M8_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M9_AXIS_TDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_DC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IC_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED : STD_LOGIC_VECTOR ( 4 downto 0 );
  signal NLW_U0_M_AXI_IC_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IC_WUSER_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED : STD_LOGIC_VECTOR ( 1 downto 0 );
  signal NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWID_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 0 );
  signal NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED : STD_LOGIC_VECTOR ( 7 downto 0 );
  signal NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED : STD_LOGIC_VECTOR ( 2 downto 0 );
  signal NLW_U0_M_AXI_IP_WDATA_UNCONNECTED : STD_LOGIC_VECTOR ( 31 downto 0 );
  signal NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED : STD_LOGIC_VECTOR ( 3 downto 0 );
  signal NLW_U0_RAM_From_UNCONNECTED : STD_LOGIC_VECTOR ( 255 downto 0 );
  signal NLW_U0_Trace_Data_Address_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 3 );
  signal NLW_U0_Trace_Data_Write_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_Exception_Kind_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  signal NLW_U0_Trace_Instruction_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_MSR_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 14 );
  signal NLW_U0_Trace_New_Reg_Value_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PC_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 31 );
  signal NLW_U0_Trace_PID_Reg_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 7 );
  signal NLW_U0_Trace_Reg_Addr_UNCONNECTED : STD_LOGIC_VECTOR ( 0 to 4 );
  attribute C_ADDR_TAG_BITS : integer;
  attribute C_ADDR_TAG_BITS of U0 : label is 0;
  attribute C_ALLOW_DCACHE_WR : integer;
  attribute C_ALLOW_DCACHE_WR of U0 : label is 1;
  attribute C_ALLOW_ICACHE_WR : integer;
  attribute C_ALLOW_ICACHE_WR of U0 : label is 1;
  attribute C_AREA_OPTIMIZED : integer;
  attribute C_AREA_OPTIMIZED of U0 : label is 2;
  attribute C_ASYNC_INTERRUPT : integer;
  attribute C_ASYNC_INTERRUPT of U0 : label is 1;
  attribute C_ASYNC_WAKEUP : integer;
  attribute C_ASYNC_WAKEUP of U0 : label is 3;
  attribute C_AVOID_PRIMITIVES : integer;
  attribute C_AVOID_PRIMITIVES of U0 : label is 0;
  attribute C_BASE_VECTORS : string;
  attribute C_BASE_VECTORS of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_BRANCH_TARGET_CACHE_SIZE : integer;
  attribute C_BRANCH_TARGET_CACHE_SIZE of U0 : label is 0;
  attribute C_CACHE_BYTE_SIZE : integer;
  attribute C_CACHE_BYTE_SIZE of U0 : label is 4096;
  attribute C_DADDR_SIZE : integer;
  attribute C_DADDR_SIZE of U0 : label is 32;
  attribute C_DATA_SIZE : integer;
  attribute C_DATA_SIZE of U0 : label is 32;
  attribute C_DCACHE_ADDR_TAG : integer;
  attribute C_DCACHE_ADDR_TAG of U0 : label is 0;
  attribute C_DCACHE_ALWAYS_USED : integer;
  attribute C_DCACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_DCACHE_BASEADDR : string;
  attribute C_DCACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_DCACHE_BYTE_SIZE : integer;
  attribute C_DCACHE_BYTE_SIZE of U0 : label is 4096;
  attribute C_DCACHE_DATA_WIDTH : integer;
  attribute C_DCACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_DCACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_DCACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_DCACHE_HIGHADDR : string;
  attribute C_DCACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_DCACHE_LINE_LEN : integer;
  attribute C_DCACHE_LINE_LEN of U0 : label is 4;
  attribute C_DCACHE_USE_WRITEBACK : integer;
  attribute C_DCACHE_USE_WRITEBACK of U0 : label is 0;
  attribute C_DCACHE_VICTIMS : integer;
  attribute C_DCACHE_VICTIMS of U0 : label is 0;
  attribute C_DEBUG_COUNTER_WIDTH : integer;
  attribute C_DEBUG_COUNTER_WIDTH of U0 : label is 32;
  attribute C_DEBUG_ENABLED : integer;
  attribute C_DEBUG_ENABLED of U0 : label is 1;
  attribute C_DEBUG_EVENT_COUNTERS : integer;
  attribute C_DEBUG_EVENT_COUNTERS of U0 : label is 5;
  attribute C_DEBUG_EXTERNAL_TRACE : integer;
  attribute C_DEBUG_EXTERNAL_TRACE of U0 : label is 0;
  attribute C_DEBUG_INTERFACE : integer;
  attribute C_DEBUG_INTERFACE of U0 : label is 0;
  attribute C_DEBUG_LATENCY_COUNTERS : integer;
  attribute C_DEBUG_LATENCY_COUNTERS of U0 : label is 1;
  attribute C_DEBUG_PROFILE_SIZE : integer;
  attribute C_DEBUG_PROFILE_SIZE of U0 : label is 0;
  attribute C_DEBUG_TRACE_ASYNC_RESET : integer;
  attribute C_DEBUG_TRACE_ASYNC_RESET of U0 : label is 0;
  attribute C_DEBUG_TRACE_SIZE : integer;
  attribute C_DEBUG_TRACE_SIZE of U0 : label is 8192;
  attribute C_DIV_ZERO_EXCEPTION : integer;
  attribute C_DIV_ZERO_EXCEPTION of U0 : label is 0;
  attribute C_DYNAMIC_BUS_SIZING : integer;
  attribute C_DYNAMIC_BUS_SIZING of U0 : label is 0;
  attribute C_D_AXI : integer;
  attribute C_D_AXI of U0 : label is 1;
  attribute C_D_LMB : integer;
  attribute C_D_LMB of U0 : label is 1;
  attribute C_ECC_USE_CE_EXCEPTION : integer;
  attribute C_ECC_USE_CE_EXCEPTION of U0 : label is 0;
  attribute C_EDGE_IS_POSITIVE : integer;
  attribute C_EDGE_IS_POSITIVE of U0 : label is 1;
  attribute C_ENDIANNESS : integer;
  attribute C_ENDIANNESS of U0 : label is 1;
  attribute C_FAMILY : string;
  attribute C_FAMILY of U0 : label is "artix7";
  attribute C_FAULT_TOLERANT : integer;
  attribute C_FAULT_TOLERANT of U0 : label is 0;
  attribute C_FPU_EXCEPTION : integer;
  attribute C_FPU_EXCEPTION of U0 : label is 0;
  attribute C_FREQ : integer;
  attribute C_FREQ of U0 : label is 100000000;
  attribute C_FSL_EXCEPTION : integer;
  attribute C_FSL_EXCEPTION of U0 : label is 0;
  attribute C_FSL_LINKS : integer;
  attribute C_FSL_LINKS of U0 : label is 0;
  attribute C_IADDR_SIZE : integer;
  attribute C_IADDR_SIZE of U0 : label is 32;
  attribute C_ICACHE_ALWAYS_USED : integer;
  attribute C_ICACHE_ALWAYS_USED of U0 : label is 0;
  attribute C_ICACHE_BASEADDR : string;
  attribute C_ICACHE_BASEADDR of U0 : label is "64'b0000000000000000000000000000000000000000000000000000000000000000";
  attribute C_ICACHE_DATA_WIDTH : integer;
  attribute C_ICACHE_DATA_WIDTH of U0 : label is 0;
  attribute C_ICACHE_FORCE_TAG_LUTRAM : integer;
  attribute C_ICACHE_FORCE_TAG_LUTRAM of U0 : label is 0;
  attribute C_ICACHE_HIGHADDR : string;
  attribute C_ICACHE_HIGHADDR of U0 : label is "64'b0000000000000000000000000000000000111111111111111111111111111111";
  attribute C_ICACHE_LINE_LEN : integer;
  attribute C_ICACHE_LINE_LEN of U0 : label is 4;
  attribute C_ICACHE_STREAMS : integer;
  attribute C_ICACHE_STREAMS of U0 : label is 0;
  attribute C_ICACHE_VICTIMS : integer;
  attribute C_ICACHE_VICTIMS of U0 : label is 0;
  attribute C_ILL_OPCODE_EXCEPTION : integer;
  attribute C_ILL_OPCODE_EXCEPTION of U0 : label is 0;
  attribute C_IMPRECISE_EXCEPTIONS : integer;
  attribute C_IMPRECISE_EXCEPTIONS of U0 : label is 0;
  attribute C_INSTANCE : string;
  attribute C_INSTANCE of U0 : label is "microblaze_microblaze_0_0";
  attribute C_INSTR_SIZE : integer;
  attribute C_INSTR_SIZE of U0 : label is 32;
  attribute C_INTERCONNECT : integer;
  attribute C_INTERCONNECT of U0 : label is 2;
  attribute C_INTERRUPT_IS_EDGE : integer;
  attribute C_INTERRUPT_IS_EDGE of U0 : label is 0;
  attribute C_I_AXI : integer;
  attribute C_I_AXI of U0 : label is 0;
  attribute C_I_LMB : integer;
  attribute C_I_LMB of U0 : label is 1;
  attribute C_LMB_DATA_SIZE : integer;
  attribute C_LMB_DATA_SIZE of U0 : label is 32;
  attribute C_LOCKSTEP_MASTER : integer;
  attribute C_LOCKSTEP_MASTER of U0 : label is 0;
  attribute C_LOCKSTEP_SLAVE : integer;
  attribute C_LOCKSTEP_SLAVE of U0 : label is 0;
  attribute C_M0_AXIS_DATA_WIDTH : integer;
  attribute C_M0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M10_AXIS_DATA_WIDTH : integer;
  attribute C_M10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M11_AXIS_DATA_WIDTH : integer;
  attribute C_M11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M12_AXIS_DATA_WIDTH : integer;
  attribute C_M12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M13_AXIS_DATA_WIDTH : integer;
  attribute C_M13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M14_AXIS_DATA_WIDTH : integer;
  attribute C_M14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M15_AXIS_DATA_WIDTH : integer;
  attribute C_M15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M1_AXIS_DATA_WIDTH : integer;
  attribute C_M1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M2_AXIS_DATA_WIDTH : integer;
  attribute C_M2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M3_AXIS_DATA_WIDTH : integer;
  attribute C_M3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M4_AXIS_DATA_WIDTH : integer;
  attribute C_M4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M5_AXIS_DATA_WIDTH : integer;
  attribute C_M5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M6_AXIS_DATA_WIDTH : integer;
  attribute C_M6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M7_AXIS_DATA_WIDTH : integer;
  attribute C_M7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M8_AXIS_DATA_WIDTH : integer;
  attribute C_M8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_M9_AXIS_DATA_WIDTH : integer;
  attribute C_M9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_MMU_DTLB_SIZE : integer;
  attribute C_MMU_DTLB_SIZE of U0 : label is 2;
  attribute C_MMU_ITLB_SIZE : integer;
  attribute C_MMU_ITLB_SIZE of U0 : label is 1;
  attribute C_MMU_PRIVILEGED_INSTR : integer;
  attribute C_MMU_PRIVILEGED_INSTR of U0 : label is 0;
  attribute C_MMU_TLB_ACCESS : integer;
  attribute C_MMU_TLB_ACCESS of U0 : label is 3;
  attribute C_MMU_ZONES : integer;
  attribute C_MMU_ZONES of U0 : label is 2;
  attribute C_M_AXI_DC_ADDR_WIDTH : integer;
  attribute C_M_AXI_DC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_DC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_DC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_DC_BUSER_WIDTH : integer;
  attribute C_M_AXI_DC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_DATA_WIDTH : integer;
  attribute C_M_AXI_DC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DC_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DC_RUSER_WIDTH : integer;
  attribute C_M_AXI_DC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DC_USER_VALUE : integer;
  attribute C_M_AXI_DC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_DC_WUSER_WIDTH : integer;
  attribute C_M_AXI_DC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_DP_ADDR_WIDTH : integer;
  attribute C_M_AXI_DP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_DATA_WIDTH : integer;
  attribute C_M_AXI_DP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS : integer;
  attribute C_M_AXI_DP_EXCLUSIVE_ACCESS of U0 : label is 0;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_DP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_D_BUS_EXCEPTION : integer;
  attribute C_M_AXI_D_BUS_EXCEPTION of U0 : label is 0;
  attribute C_M_AXI_IC_ADDR_WIDTH : integer;
  attribute C_M_AXI_IC_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_ARUSER_WIDTH : integer;
  attribute C_M_AXI_IC_ARUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_AWUSER_WIDTH : integer;
  attribute C_M_AXI_IC_AWUSER_WIDTH of U0 : label is 5;
  attribute C_M_AXI_IC_BUSER_WIDTH : integer;
  attribute C_M_AXI_IC_BUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_DATA_WIDTH : integer;
  attribute C_M_AXI_IC_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IC_RUSER_WIDTH : integer;
  attribute C_M_AXI_IC_RUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IC_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IC_USER_VALUE : integer;
  attribute C_M_AXI_IC_USER_VALUE of U0 : label is 31;
  attribute C_M_AXI_IC_WUSER_WIDTH : integer;
  attribute C_M_AXI_IC_WUSER_WIDTH of U0 : label is 1;
  attribute C_M_AXI_IP_ADDR_WIDTH : integer;
  attribute C_M_AXI_IP_ADDR_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_DATA_WIDTH : integer;
  attribute C_M_AXI_IP_DATA_WIDTH of U0 : label is 32;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH : integer;
  attribute C_M_AXI_IP_THREAD_ID_WIDTH of U0 : label is 1;
  attribute C_M_AXI_I_BUS_EXCEPTION : integer;
  attribute C_M_AXI_I_BUS_EXCEPTION of U0 : label is 0;
  attribute C_NUMBER_OF_PC_BRK : integer;
  attribute C_NUMBER_OF_PC_BRK of U0 : label is 1;
  attribute C_NUMBER_OF_RD_ADDR_BRK : integer;
  attribute C_NUMBER_OF_RD_ADDR_BRK of U0 : label is 0;
  attribute C_NUMBER_OF_WR_ADDR_BRK : integer;
  attribute C_NUMBER_OF_WR_ADDR_BRK of U0 : label is 0;
  attribute C_NUM_SYNC_FF_CLK : integer;
  attribute C_NUM_SYNC_FF_CLK of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_DEBUG : integer;
  attribute C_NUM_SYNC_FF_CLK_DEBUG of U0 : label is 2;
  attribute C_NUM_SYNC_FF_CLK_IRQ : integer;
  attribute C_NUM_SYNC_FF_CLK_IRQ of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_CLK of U0 : label is 1;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK : integer;
  attribute C_NUM_SYNC_FF_DBG_TRACE_CLK of U0 : label is 2;
  attribute C_OPCODE_0x0_ILLEGAL : integer;
  attribute C_OPCODE_0x0_ILLEGAL of U0 : label is 0;
  attribute C_OPTIMIZATION : integer;
  attribute C_OPTIMIZATION of U0 : label is 0;
  attribute C_PC_WIDTH : integer;
  attribute C_PC_WIDTH of U0 : label is 32;
  attribute C_PIADDR_SIZE : integer;
  attribute C_PIADDR_SIZE of U0 : label is 32;
  attribute C_PVR : integer;
  attribute C_PVR of U0 : label is 0;
  attribute C_PVR_USER1 : string;
  attribute C_PVR_USER1 of U0 : label is "8'b00000000";
  attribute C_PVR_USER2 : integer;
  attribute C_PVR_USER2 of U0 : label is 0;
  attribute C_RESET_MSR : integer;
  attribute C_RESET_MSR of U0 : label is 0;
  attribute C_S0_AXIS_DATA_WIDTH : integer;
  attribute C_S0_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S10_AXIS_DATA_WIDTH : integer;
  attribute C_S10_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S11_AXIS_DATA_WIDTH : integer;
  attribute C_S11_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S12_AXIS_DATA_WIDTH : integer;
  attribute C_S12_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S13_AXIS_DATA_WIDTH : integer;
  attribute C_S13_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S14_AXIS_DATA_WIDTH : integer;
  attribute C_S14_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S15_AXIS_DATA_WIDTH : integer;
  attribute C_S15_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S1_AXIS_DATA_WIDTH : integer;
  attribute C_S1_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S2_AXIS_DATA_WIDTH : integer;
  attribute C_S2_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S3_AXIS_DATA_WIDTH : integer;
  attribute C_S3_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S4_AXIS_DATA_WIDTH : integer;
  attribute C_S4_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S5_AXIS_DATA_WIDTH : integer;
  attribute C_S5_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S6_AXIS_DATA_WIDTH : integer;
  attribute C_S6_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S7_AXIS_DATA_WIDTH : integer;
  attribute C_S7_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S8_AXIS_DATA_WIDTH : integer;
  attribute C_S8_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_S9_AXIS_DATA_WIDTH : integer;
  attribute C_S9_AXIS_DATA_WIDTH of U0 : label is 32;
  attribute C_SCO : integer;
  attribute C_SCO of U0 : label is 0;
  attribute C_UNALIGNED_EXCEPTIONS : integer;
  attribute C_UNALIGNED_EXCEPTIONS of U0 : label is 0;
  attribute C_USE_BARREL : integer;
  attribute C_USE_BARREL of U0 : label is 1;
  attribute C_USE_BRANCH_TARGET_CACHE : integer;
  attribute C_USE_BRANCH_TARGET_CACHE of U0 : label is 0;
  attribute C_USE_CONFIG_RESET : integer;
  attribute C_USE_CONFIG_RESET of U0 : label is 0;
  attribute C_USE_DCACHE : integer;
  attribute C_USE_DCACHE of U0 : label is 0;
  attribute C_USE_DIV : integer;
  attribute C_USE_DIV of U0 : label is 1;
  attribute C_USE_EXTENDED_FSL_INSTR : integer;
  attribute C_USE_EXTENDED_FSL_INSTR of U0 : label is 0;
  attribute C_USE_EXT_BRK : integer;
  attribute C_USE_EXT_BRK of U0 : label is 0;
  attribute C_USE_EXT_NM_BRK : integer;
  attribute C_USE_EXT_NM_BRK of U0 : label is 0;
  attribute C_USE_FPU : integer;
  attribute C_USE_FPU of U0 : label is 0;
  attribute C_USE_HW_MUL : integer;
  attribute C_USE_HW_MUL of U0 : label is 1;
  attribute C_USE_ICACHE : integer;
  attribute C_USE_ICACHE of U0 : label is 0;
  attribute C_USE_INTERRUPT : integer;
  attribute C_USE_INTERRUPT of U0 : label is 2;
  attribute C_USE_MMU : integer;
  attribute C_USE_MMU of U0 : label is 0;
  attribute C_USE_MSR_INSTR : integer;
  attribute C_USE_MSR_INSTR of U0 : label is 1;
  attribute C_USE_NON_SECURE : integer;
  attribute C_USE_NON_SECURE of U0 : label is 0;
  attribute C_USE_PCMP_INSTR : integer;
  attribute C_USE_PCMP_INSTR of U0 : label is 1;
  attribute C_USE_REORDER_INSTR : integer;
  attribute C_USE_REORDER_INSTR of U0 : label is 0;
  attribute C_USE_STACK_PROTECTION : integer;
  attribute C_USE_STACK_PROTECTION of U0 : label is 0;
  attribute downgradeipidentifiedwarnings of U0 : label is "yes";
  attribute x_interface_info : string;
  attribute x_interface_info of Clk : signal is "xilinx.com:signal:clock:1.0 CLK.CLK CLK";
  attribute x_interface_parameter : string;
  attribute x_interface_parameter of Clk : signal is "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN microblaze_clk_100MHz, INSERT_VIP 0";
  attribute x_interface_info of DCE : signal is "xilinx.com:interface:lmb:1.0 DLMB CE";
  attribute x_interface_info of DReady : signal is "xilinx.com:interface:lmb:1.0 DLMB READY";
  attribute x_interface_info of DUE : signal is "xilinx.com:interface:lmb:1.0 DLMB UE";
  attribute x_interface_info of DWait : signal is "xilinx.com:interface:lmb:1.0 DLMB WAIT";
  attribute x_interface_info of D_AS : signal is "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE";
  attribute x_interface_info of Dbg_Capture : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE";
  attribute x_interface_info of Dbg_Clk : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG CLK";
  attribute x_interface_info of Dbg_Disable : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE";
  attribute x_interface_info of Dbg_Shift : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT";
  attribute x_interface_info of Dbg_TDI : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDI";
  attribute x_interface_info of Dbg_TDO : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG TDO";
  attribute x_interface_info of Dbg_Update : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE";
  attribute x_interface_info of Debug_Rst : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG RST";
  attribute x_interface_info of ICE : signal is "xilinx.com:interface:lmb:1.0 ILMB CE";
  attribute x_interface_info of IFetch : signal is "xilinx.com:interface:lmb:1.0 ILMB READSTROBE";
  attribute x_interface_info of IReady : signal is "xilinx.com:interface:lmb:1.0 ILMB READY";
  attribute x_interface_info of IUE : signal is "xilinx.com:interface:lmb:1.0 ILMB UE";
  attribute x_interface_info of IWAIT : signal is "xilinx.com:interface:lmb:1.0 ILMB WAIT";
  attribute x_interface_info of I_AS : signal is "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE";
  attribute x_interface_info of Interrupt : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT";
  attribute x_interface_parameter of Interrupt : signal is "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 1";
  attribute x_interface_info of M_AXI_DP_ARREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY";
  attribute x_interface_info of M_AXI_DP_ARVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID";
  attribute x_interface_info of M_AXI_DP_AWREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY";
  attribute x_interface_info of M_AXI_DP_AWVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID";
  attribute x_interface_info of M_AXI_DP_BREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY";
  attribute x_interface_info of M_AXI_DP_BVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID";
  attribute x_interface_info of M_AXI_DP_RREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY";
  attribute x_interface_info of M_AXI_DP_RVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID";
  attribute x_interface_info of M_AXI_DP_WREADY : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY";
  attribute x_interface_info of M_AXI_DP_WVALID : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID";
  attribute x_interface_info of Read_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB READSTROBE";
  attribute x_interface_info of Reset : signal is "xilinx.com:signal:reset:1.0 RST.RESET RST";
  attribute x_interface_parameter of Reset : signal is "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0";
  attribute x_interface_info of Write_Strobe : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE";
  attribute x_interface_info of Byte_Enable : signal is "xilinx.com:interface:lmb:1.0 DLMB BE";
  attribute x_interface_info of Data_Addr : signal is "xilinx.com:interface:lmb:1.0 DLMB ABUS";
  attribute x_interface_parameter of Data_Addr : signal is "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE";
  attribute x_interface_info of Data_Read : signal is "xilinx.com:interface:lmb:1.0 DLMB READDBUS";
  attribute x_interface_info of Data_Write : signal is "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS";
  attribute x_interface_info of Dbg_Reg_En : signal is "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN";
  attribute x_interface_info of Instr : signal is "xilinx.com:interface:lmb:1.0 ILMB READDBUS";
  attribute x_interface_info of Instr_Addr : signal is "xilinx.com:interface:lmb:1.0 ILMB ABUS";
  attribute x_interface_parameter of Instr_Addr : signal is "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_ONLY";
  attribute x_interface_info of Interrupt_Ack : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK";
  attribute x_interface_info of Interrupt_Address : signal is "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS";
  attribute x_interface_info of M_AXI_DP_ARADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR";
  attribute x_interface_info of M_AXI_DP_ARPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT";
  attribute x_interface_info of M_AXI_DP_AWADDR : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR";
  attribute x_interface_parameter of M_AXI_DP_AWADDR : signal is "XIL_INTERFACENAME M_AXI_DP, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 0, HAS_LOCK 0, DATA_WIDTH 32, ADDR_WIDTH 32, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, MAX_BURST_LENGTH 1, PROTOCOL AXI4LITE, FREQ_HZ 100000000, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.000, CLK_DOMAIN microblaze_clk_100MHz, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0";
  attribute x_interface_info of M_AXI_DP_AWPROT : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT";
  attribute x_interface_info of M_AXI_DP_BRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP";
  attribute x_interface_info of M_AXI_DP_RDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA";
  attribute x_interface_info of M_AXI_DP_RRESP : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP";
  attribute x_interface_info of M_AXI_DP_WDATA : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA";
  attribute x_interface_info of M_AXI_DP_WSTRB : signal is "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB";
begin
U0: entity work.microblaze_microblaze_0_0_MicroBlaze
     port map (
      Byte_Enable(0 to 3) => Byte_Enable(0 to 3),
      Clk => Clk,
      Config_Reset => '0',
      DCE => DCE,
      DEBUG_ACLK => '0',
      DEBUG_ARESETN => '0',
      DReady => DReady,
      DUE => DUE,
      DWait => DWait,
      D_AS => D_AS,
      Data_Addr(0 to 31) => Data_Addr(0 to 31),
      Data_Read(0 to 31) => Data_Read(0 to 31),
      Data_Write(0 to 31) => Data_Write(0 to 31),
      Dbg_ARADDR(14 downto 2) => B"0000000000000",
      Dbg_ARREADY => NLW_U0_Dbg_ARREADY_UNCONNECTED,
      Dbg_ARVALID => '0',
      Dbg_AWADDR(14 downto 2) => B"0000000000000",
      Dbg_AWREADY => NLW_U0_Dbg_AWREADY_UNCONNECTED,
      Dbg_AWVALID => '0',
      Dbg_BREADY => '0',
      Dbg_BRESP(1 downto 0) => NLW_U0_Dbg_BRESP_UNCONNECTED(1 downto 0),
      Dbg_BVALID => NLW_U0_Dbg_BVALID_UNCONNECTED,
      Dbg_Capture => Dbg_Capture,
      Dbg_Clk => Dbg_Clk,
      Dbg_Continue => NLW_U0_Dbg_Continue_UNCONNECTED,
      Dbg_Disable => Dbg_Disable,
      Dbg_Intr => NLW_U0_Dbg_Intr_UNCONNECTED,
      Dbg_RDATA(31 downto 0) => NLW_U0_Dbg_RDATA_UNCONNECTED(31 downto 0),
      Dbg_RREADY => '0',
      Dbg_RRESP(1 downto 0) => NLW_U0_Dbg_RRESP_UNCONNECTED(1 downto 0),
      Dbg_RVALID => NLW_U0_Dbg_RVALID_UNCONNECTED,
      Dbg_Reg_En(0 to 7) => Dbg_Reg_En(0 to 7),
      Dbg_Shift => Dbg_Shift,
      Dbg_Stop => '0',
      Dbg_TDI => Dbg_TDI,
      Dbg_TDO => Dbg_TDO,
      Dbg_Trace_Clk => '0',
      Dbg_Trace_Data(0 to 35) => NLW_U0_Dbg_Trace_Data_UNCONNECTED(0 to 35),
      Dbg_Trace_Ready => '0',
      Dbg_Trace_Valid => NLW_U0_Dbg_Trace_Valid_UNCONNECTED,
      Dbg_Trig_Ack_In(0 to 7) => B"00000000",
      Dbg_Trig_Ack_Out(0 to 7) => NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED(0 to 7),
      Dbg_Trig_In(0 to 7) => NLW_U0_Dbg_Trig_In_UNCONNECTED(0 to 7),
      Dbg_Trig_Out(0 to 7) => B"00000000",
      Dbg_Update => Dbg_Update,
      Dbg_WDATA(31 downto 0) => B"00000000000000000000000000000000",
      Dbg_WREADY => NLW_U0_Dbg_WREADY_UNCONNECTED,
      Dbg_WVALID => '0',
      Dbg_Wakeup => NLW_U0_Dbg_Wakeup_UNCONNECTED,
      Debug_Rst => Debug_Rst,
      Ext_BRK => '0',
      Ext_NM_BRK => '0',
      Hibernate => NLW_U0_Hibernate_UNCONNECTED,
      ICE => ICE,
      IFetch => IFetch,
      IReady => IReady,
      IUE => IUE,
      IWAIT => IWAIT,
      I_AS => I_AS,
      Instr(0 to 31) => Instr(0 to 31),
      Instr_Addr(0 to 31) => Instr_Addr(0 to 31),
      Interrupt => Interrupt,
      Interrupt_Ack(0 to 1) => Interrupt_Ack(0 to 1),
      Interrupt_Address(0 to 31) => Interrupt_Address(0 to 31),
      LOCKSTEP_Master_Out(0 to 4095) => NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Out(0 to 4095) => NLW_U0_LOCKSTEP_Out_UNCONNECTED(0 to 4095),
      LOCKSTEP_Slave_In(0 to
      M0_AXIS_TDATA(31 downto 0) => NLW_U0_M0_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M0_AXIS_TLAST => NLW_U0_M0_AXIS_TLAST_UNCONNECTED,
      M0_AXIS_TREADY => '0',
      M0_AXIS_TVALID => NLW_U0_M0_AXIS_TVALID_UNCONNECTED,
      M10_AXIS_TDATA(31 downto 0) => NLW_U0_M10_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M10_AXIS_TLAST => NLW_U0_M10_AXIS_TLAST_UNCONNECTED,
      M10_AXIS_TREADY => '0',
      M10_AXIS_TVALID => NLW_U0_M10_AXIS_TVALID_UNCONNECTED,
      M11_AXIS_TDATA(31 downto 0) => NLW_U0_M11_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M11_AXIS_TLAST => NLW_U0_M11_AXIS_TLAST_UNCONNECTED,
      M11_AXIS_TREADY => '0',
      M11_AXIS_TVALID => NLW_U0_M11_AXIS_TVALID_UNCONNECTED,
      M12_AXIS_TDATA(31 downto 0) => NLW_U0_M12_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M12_AXIS_TLAST => NLW_U0_M12_AXIS_TLAST_UNCONNECTED,
      M12_AXIS_TREADY => '0',
      M12_AXIS_TVALID => NLW_U0_M12_AXIS_TVALID_UNCONNECTED,
      M13_AXIS_TDATA(31 downto 0) => NLW_U0_M13_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M13_AXIS_TLAST => NLW_U0_M13_AXIS_TLAST_UNCONNECTED,
      M13_AXIS_TREADY => '0',
      M13_AXIS_TVALID => NLW_U0_M13_AXIS_TVALID_UNCONNECTED,
      M14_AXIS_TDATA(31 downto 0) => NLW_U0_M14_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M14_AXIS_TLAST => NLW_U0_M14_AXIS_TLAST_UNCONNECTED,
      M14_AXIS_TREADY => '0',
      M14_AXIS_TVALID => NLW_U0_M14_AXIS_TVALID_UNCONNECTED,
      M15_AXIS_TDATA(31 downto 0) => NLW_U0_M15_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M15_AXIS_TLAST => NLW_U0_M15_AXIS_TLAST_UNCONNECTED,
      M15_AXIS_TREADY => '0',
      M15_AXIS_TVALID => NLW_U0_M15_AXIS_TVALID_UNCONNECTED,
      M1_AXIS_TDATA(31 downto 0) => NLW_U0_M1_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M1_AXIS_TLAST => NLW_U0_M1_AXIS_TLAST_UNCONNECTED,
      M1_AXIS_TREADY => '0',
      M1_AXIS_TVALID => NLW_U0_M1_AXIS_TVALID_UNCONNECTED,
      M2_AXIS_TDATA(31 downto 0) => NLW_U0_M2_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M2_AXIS_TLAST => NLW_U0_M2_AXIS_TLAST_UNCONNECTED,
      M2_AXIS_TREADY => '0',
      M2_AXIS_TVALID => NLW_U0_M2_AXIS_TVALID_UNCONNECTED,
      M3_AXIS_TDATA(31 downto 0) => NLW_U0_M3_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M3_AXIS_TLAST => NLW_U0_M3_AXIS_TLAST_UNCONNECTED,
      M3_AXIS_TREADY => '0',
      M3_AXIS_TVALID => NLW_U0_M3_AXIS_TVALID_UNCONNECTED,
      M4_AXIS_TDATA(31 downto 0) => NLW_U0_M4_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M4_AXIS_TLAST => NLW_U0_M4_AXIS_TLAST_UNCONNECTED,
      M4_AXIS_TREADY => '0',
      M4_AXIS_TVALID => NLW_U0_M4_AXIS_TVALID_UNCONNECTED,
      M5_AXIS_TDATA(31 downto 0) => NLW_U0_M5_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M5_AXIS_TLAST => NLW_U0_M5_AXIS_TLAST_UNCONNECTED,
      M5_AXIS_TREADY => '0',
      M5_AXIS_TVALID => NLW_U0_M5_AXIS_TVALID_UNCONNECTED,
      M6_AXIS_TDATA(31 downto 0) => NLW_U0_M6_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M6_AXIS_TLAST => NLW_U0_M6_AXIS_TLAST_UNCONNECTED,
      M6_AXIS_TREADY => '0',
      M6_AXIS_TVALID => NLW_U0_M6_AXIS_TVALID_UNCONNECTED,
      M7_AXIS_TDATA(31 downto 0) => NLW_U0_M7_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M7_AXIS_TLAST => NLW_U0_M7_AXIS_TLAST_UNCONNECTED,
      M7_AXIS_TREADY => '0',
      M7_AXIS_TVALID => NLW_U0_M7_AXIS_TVALID_UNCONNECTED,
      M8_AXIS_TDATA(31 downto 0) => NLW_U0_M8_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M8_AXIS_TLAST => NLW_U0_M8_AXIS_TLAST_UNCONNECTED,
      M8_AXIS_TREADY => '0',
      M8_AXIS_TVALID => NLW_U0_M8_AXIS_TVALID_UNCONNECTED,
      M9_AXIS_TDATA(31 downto 0) => NLW_U0_M9_AXIS_TDATA_UNCONNECTED(31 downto 0),
      M9_AXIS_TLAST => NLW_U0_M9_AXIS_TLAST_UNCONNECTED,
      M9_AXIS_TREADY => '0',
      M9_AXIS_TVALID => NLW_U0_M9_AXIS_TVALID_UNCONNECTED,
      MB_Error => NLW_U0_MB_Error_UNCONNECTED,
      MB_Halted => NLW_U0_MB_Halted_UNCONNECTED,
      M_AXI_DC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_ACPROT(2 downto 0) => B"000",
      M_AXI_DC_ACREADY => NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED,
      M_AXI_DC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_DC_ACVALID => '0',
      M_AXI_DC_ARADDR(31 downto 0) => NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_ARBAR(1 downto 0) => NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARBURST(1 downto 0) => NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_ARID(0) => NLW_U0_M_AXI_DC_ARID_UNCONNECTED(0),
      M_AXI_DC_ARLEN(7 downto 0) => NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_ARLOCK => NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED,
      M_AXI_DC_ARPROT(2 downto 0) => NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARQOS(3 downto 0) => NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARREADY => '0',
      M_AXI_DC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_DC_ARUSER(4 downto 0) => NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_ARVALID => NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED,
      M_AXI_DC_AWADDR(31 downto 0) => NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_DC_AWBAR(1 downto 0) => NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWBURST(1 downto 0) => NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_DC_AWID(0) => NLW_U0_M_AXI_DC_AWID_UNCONNECTED(0),
      M_AXI_DC_AWLEN(7 downto 0) => NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DC_AWLOCK => NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED,
      M_AXI_DC_AWPROT(2 downto 0) => NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWQOS(3 downto 0) => NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DC_AWREADY => '0',
      M_AXI_DC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_DC_AWUSER(4 downto 0) => NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_DC_AWVALID => NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED,
      M_AXI_DC_BID(0) => '0',
      M_AXI_DC_BREADY => NLW_U0_M_AXI_DC_BREADY_UNCONNECTED,
      M_AXI_DC_BRESP(1 downto 0) => B"00",
      M_AXI_DC_BUSER(0) => '0',
      M_AXI_DC_BVALID => '0',
      M_AXI_DC_CDDATA(31 downto 0) => NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_CDLAST => NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED,
      M_AXI_DC_CDREADY => '0',
      M_AXI_DC_CDVALID => NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED,
      M_AXI_DC_CRREADY => '0',
      M_AXI_DC_CRRESP(4 downto 0) => NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_DC_CRVALID => NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED,
      M_AXI_DC_RACK => NLW_U0_M_AXI_DC_RACK_UNCONNECTED,
      M_AXI_DC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_DC_RID(0) => '0',
      M_AXI_DC_RLAST => '0',
      M_AXI_DC_RREADY => NLW_U0_M_AXI_DC_RREADY_UNCONNECTED,
      M_AXI_DC_RRESP(1 downto 0) => B"00",
      M_AXI_DC_RUSER(0) => '0',
      M_AXI_DC_RVALID => '0',
      M_AXI_DC_WACK => NLW_U0_M_AXI_DC_WACK_UNCONNECTED,
      M_AXI_DC_WDATA(31 downto 0) => NLW_U0_M_AXI_DC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_DC_WLAST => NLW_U0_M_AXI_DC_WLAST_UNCONNECTED,
      M_AXI_DC_WREADY => '0',
      M_AXI_DC_WSTRB(3 downto 0) => NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_DC_WUSER(0) => NLW_U0_M_AXI_DC_WUSER_UNCONNECTED(0),
      M_AXI_DC_WVALID => NLW_U0_M_AXI_DC_WVALID_UNCONNECTED,
      M_AXI_DP_ARADDR(31 downto 0) => M_AXI_DP_ARADDR(31 downto 0),
      M_AXI_DP_ARBURST(1 downto 0) => NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARID(0) => NLW_U0_M_AXI_DP_ARID_UNCONNECTED(0),
      M_AXI_DP_ARLEN(7 downto 0) => NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_ARLOCK => NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED,
      M_AXI_DP_ARPROT(2 downto 0) => M_AXI_DP_ARPROT(2 downto 0),
      M_AXI_DP_ARQOS(3 downto 0) => NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_ARREADY => M_AXI_DP_ARREADY,
      M_AXI_DP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_ARVALID => M_AXI_DP_ARVALID,
      M_AXI_DP_AWADDR(31 downto 0) => M_AXI_DP_AWADDR(31 downto 0),
      M_AXI_DP_AWBURST(1 downto 0) => NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_DP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWID(0) => NLW_U0_M_AXI_DP_AWID_UNCONNECTED(0),
      M_AXI_DP_AWLEN(7 downto 0) => NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_DP_AWLOCK => NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED,
      M_AXI_DP_AWPROT(2 downto 0) => M_AXI_DP_AWPROT(2 downto 0),
      M_AXI_DP_AWQOS(3 downto 0) => NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_DP_AWREADY => M_AXI_DP_AWREADY,
      M_AXI_DP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_DP_AWVALID => M_AXI_DP_AWVALID,
      M_AXI_DP_BID(0) => '0',
      M_AXI_DP_BREADY => M_AXI_DP_BREADY,
      M_AXI_DP_BRESP(1 downto 0) => M_AXI_DP_BRESP(1 downto 0),
      M_AXI_DP_BVALID => M_AXI_DP_BVALID,
      M_AXI_DP_RDATA(31 downto 0) => M_AXI_DP_RDATA(31 downto 0),
      M_AXI_DP_RID(0) => '0',
      M_AXI_DP_RLAST => '0',
      M_AXI_DP_RREADY => M_AXI_DP_RREADY,
      M_AXI_DP_RRESP(1 downto 0) => M_AXI_DP_RRESP(1 downto 0),
      M_AXI_DP_RVALID => M_AXI_DP_RVALID,
      M_AXI_DP_WDATA(31 downto 0) => M_AXI_DP_WDATA(31 downto 0),
      M_AXI_DP_WLAST => NLW_U0_M_AXI_DP_WLAST_UNCONNECTED,
      M_AXI_DP_WREADY => M_AXI_DP_WREADY,
      M_AXI_DP_WSTRB(3 downto 0) => M_AXI_DP_WSTRB(3 downto 0),
      M_AXI_DP_WVALID => M_AXI_DP_WVALID,
      M_AXI_IC_ACADDR(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_ACPROT(2 downto 0) => B"000",
      M_AXI_IC_ACREADY => NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED,
      M_AXI_IC_ACSNOOP(3 downto 0) => B"0000",
      M_AXI_IC_ACVALID => '0',
      M_AXI_IC_ARADDR(31 downto 0) => NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_ARBAR(1 downto 0) => NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARBURST(1 downto 0) => NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_ARID(0) => NLW_U0_M_AXI_IC_ARID_UNCONNECTED(0),
      M_AXI_IC_ARLEN(7 downto 0) => NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_ARLOCK => NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED,
      M_AXI_IC_ARPROT(2 downto 0) => NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARQOS(3 downto 0) => NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARREADY => '0',
      M_AXI_IC_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_ARSNOOP(3 downto 0) => NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED(3 downto 0),
      M_AXI_IC_ARUSER(4 downto 0) => NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_ARVALID => NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED,
      M_AXI_IC_AWADDR(31 downto 0) => NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IC_AWBAR(1 downto 0) => NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWBURST(1 downto 0) => NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWDOMAIN(1 downto 0) => NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED(1 downto 0),
      M_AXI_IC_AWID(0) => NLW_U0_M_AXI_IC_AWID_UNCONNECTED(0),
      M_AXI_IC_AWLEN(7 downto 0) => NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IC_AWLOCK => NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED,
      M_AXI_IC_AWPROT(2 downto 0) => NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWQOS(3 downto 0) => NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IC_AWREADY => '0',
      M_AXI_IC_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWSNOOP(2 downto 0) => NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED(2 downto 0),
      M_AXI_IC_AWUSER(4 downto 0) => NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED(4 downto 0),
      M_AXI_IC_AWVALID => NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED,
      M_AXI_IC_BID(0) => '0',
      M_AXI_IC_BREADY => NLW_U0_M_AXI_IC_BREADY_UNCONNECTED,
      M_AXI_IC_BRESP(1 downto 0) => B"00",
      M_AXI_IC_BUSER(0) => '0',
      M_AXI_IC_BVALID => '0',
      M_AXI_IC_CDDATA(31 downto 0) => NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_CDLAST => NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED,
      M_AXI_IC_CDREADY => '0',
      M_AXI_IC_CDVALID => NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED,
      M_AXI_IC_CRREADY => '0',
      M_AXI_IC_CRRESP(4 downto 0) => NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED(4 downto 0),
      M_AXI_IC_CRVALID => NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED,
      M_AXI_IC_RACK => NLW_U0_M_AXI_IC_RACK_UNCONNECTED,
      M_AXI_IC_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IC_RID(0) => '0',
      M_AXI_IC_RLAST => '0',
      M_AXI_IC_RREADY => NLW_U0_M_AXI_IC_RREADY_UNCONNECTED,
      M_AXI_IC_RRESP(1 downto 0) => B"00",
      M_AXI_IC_RUSER(0) => '0',
      M_AXI_IC_RVALID => '0',
      M_AXI_IC_WACK => NLW_U0_M_AXI_IC_WACK_UNCONNECTED,
      M_AXI_IC_WDATA(31 downto 0) => NLW_U0_M_AXI_IC_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IC_WLAST => NLW_U0_M_AXI_IC_WLAST_UNCONNECTED,
      M_AXI_IC_WREADY => '0',
      M_AXI_IC_WSTRB(3 downto 0) => NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IC_WUSER(0) => NLW_U0_M_AXI_IC_WUSER_UNCONNECTED(0),
      M_AXI_IC_WVALID => NLW_U0_M_AXI_IC_WVALID_UNCONNECTED,
      M_AXI_IP_ARADDR(31 downto 0) => NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_ARBURST(1 downto 0) => NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_ARCACHE(3 downto 0) => NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARID(0) => NLW_U0_M_AXI_IP_ARID_UNCONNECTED(0),
      M_AXI_IP_ARLEN(7 downto 0) => NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_ARLOCK => NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED,
      M_AXI_IP_ARPROT(2 downto 0) => NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARQOS(3 downto 0) => NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_ARREADY => '0',
      M_AXI_IP_ARSIZE(2 downto 0) => NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_ARVALID => NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED,
      M_AXI_IP_AWADDR(31 downto 0) => NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED(31 downto 0),
      M_AXI_IP_AWBURST(1 downto 0) => NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED(1 downto 0),
      M_AXI_IP_AWCACHE(3 downto 0) => NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWID(0) => NLW_U0_M_AXI_IP_AWID_UNCONNECTED(0),
      M_AXI_IP_AWLEN(7 downto 0) => NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED(7 downto 0),
      M_AXI_IP_AWLOCK => NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED,
      M_AXI_IP_AWPROT(2 downto 0) => NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWQOS(3 downto 0) => NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED(3 downto 0),
      M_AXI_IP_AWREADY => '0',
      M_AXI_IP_AWSIZE(2 downto 0) => NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED(2 downto 0),
      M_AXI_IP_AWVALID => NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED,
      M_AXI_IP_BID(0) => '0',
      M_AXI_IP_BREADY => NLW_U0_M_AXI_IP_BREADY_UNCONNECTED,
      M_AXI_IP_BRESP(1 downto 0) => B"00",
      M_AXI_IP_BVALID => '0',
      M_AXI_IP_RDATA(31 downto 0) => B"00000000000000000000000000000000",
      M_AXI_IP_RID(0) => '0',
      M_AXI_IP_RLAST => '0',
      M_AXI_IP_RREADY => NLW_U0_M_AXI_IP_RREADY_UNCONNECTED,
      M_AXI_IP_RRESP(1 downto 0) => B"00",
      M_AXI_IP_RVALID => '0',
      M_AXI_IP_WDATA(31 downto 0) => NLW_U0_M_AXI_IP_WDATA_UNCONNECTED(31 downto 0),
      M_AXI_IP_WLAST => NLW_U0_M_AXI_IP_WLAST_UNCONNECTED,
      M_AXI_IP_WREADY => '0',
      M_AXI_IP_WSTRB(3 downto 0) => NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED(3 downto 0),
      M_AXI_IP_WVALID => NLW_U0_M_AXI_IP_WVALID_UNCONNECTED,
      Mb_Reset => '0',
      Non_Secure(0 to 3) => B"0000",
      Pause => '0',
      Pause_Ack => NLW_U0_Pause_Ack_UNCONNECTED,
      RAM_From(255 downto 0) => NLW_U0_RAM_From_UNCONNECTED(255 downto 0),
      RAM_To(255 downto 0) => B"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
      Read_Strobe => Read_Strobe,
      Reset => Reset,
      Reset_Mode(0 to 1) => B"00",
      S0_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S0_AXIS_TLAST => '0',
      S0_AXIS_TREADY => NLW_U0_S0_AXIS_TREADY_UNCONNECTED,
      S0_AXIS_TVALID => '0',
      S10_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S10_AXIS_TLAST => '0',
      S10_AXIS_TREADY => NLW_U0_S10_AXIS_TREADY_UNCONNECTED,
      S10_AXIS_TVALID => '0',
      S11_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S11_AXIS_TLAST => '0',
      S11_AXIS_TREADY => NLW_U0_S11_AXIS_TREADY_UNCONNECTED,
      S11_AXIS_TVALID => '0',
      S12_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S12_AXIS_TLAST => '0',
      S12_AXIS_TREADY => NLW_U0_S12_AXIS_TREADY_UNCONNECTED,
      S12_AXIS_TVALID => '0',
      S13_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S13_AXIS_TLAST => '0',
      S13_AXIS_TREADY => NLW_U0_S13_AXIS_TREADY_UNCONNECTED,
      S13_AXIS_TVALID => '0',
      S14_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S14_AXIS_TLAST => '0',
      S14_AXIS_TREADY => NLW_U0_S14_AXIS_TREADY_UNCONNECTED,
      S14_AXIS_TVALID => '0',
      S15_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S15_AXIS_TLAST => '0',
      S15_AXIS_TREADY => NLW_U0_S15_AXIS_TREADY_UNCONNECTED,
      S15_AXIS_TVALID => '0',
      S1_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S1_AXIS_TLAST => '0',
      S1_AXIS_TREADY => NLW_U0_S1_AXIS_TREADY_UNCONNECTED,
      S1_AXIS_TVALID => '0',
      S2_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S2_AXIS_TLAST => '0',
      S2_AXIS_TREADY => NLW_U0_S2_AXIS_TREADY_UNCONNECTED,
      S2_AXIS_TVALID => '0',
      S3_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S3_AXIS_TLAST => '0',
      S3_AXIS_TREADY => NLW_U0_S3_AXIS_TREADY_UNCONNECTED,
      S3_AXIS_TVALID => '0',
      S4_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S4_AXIS_TLAST => '0',
      S4_AXIS_TREADY => NLW_U0_S4_AXIS_TREADY_UNCONNECTED,
      S4_AXIS_TVALID => '0',
      S5_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S5_AXIS_TLAST => '0',
      S5_AXIS_TREADY => NLW_U0_S5_AXIS_TREADY_UNCONNECTED,
      S5_AXIS_TVALID => '0',
      S6_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S6_AXIS_TLAST => '0',
      S6_AXIS_TREADY => NLW_U0_S6_AXIS_TREADY_UNCONNECTED,
      S6_AXIS_TVALID => '0',
      S7_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S7_AXIS_TLAST => '0',
      S7_AXIS_TREADY => NLW_U0_S7_AXIS_TREADY_UNCONNECTED,
      S7_AXIS_TVALID => '0',
      S8_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S8_AXIS_TLAST => '0',
      S8_AXIS_TREADY => NLW_U0_S8_AXIS_TREADY_UNCONNECTED,
      S8_AXIS_TVALID => '0',
      S9_AXIS_TDATA(31 downto 0) => B"00000000000000000000000000000000",
      S9_AXIS_TLAST => '0',
      S9_AXIS_TREADY => NLW_U0_S9_AXIS_TREADY_UNCONNECTED,
      S9_AXIS_TVALID => '0',
      Scan_En => '0',
      Scan_Reset => '0',
      Scan_Reset_Sel => '0',
      Sleep => NLW_U0_Sleep_UNCONNECTED,
      Suspend => NLW_U0_Suspend_UNCONNECTED,
      Trace_DCache_Hit => NLW_U0_Trace_DCache_Hit_UNCONNECTED,
      Trace_DCache_Rdy => NLW_U0_Trace_DCache_Rdy_UNCONNECTED,
      Trace_DCache_Read => NLW_U0_Trace_DCache_Read_UNCONNECTED,
      Trace_DCache_Req => NLW_U0_Trace_DCache_Req_UNCONNECTED,
      Trace_Data_Access => NLW_U0_Trace_Data_Access_UNCONNECTED,
      Trace_Data_Address(0 to 31) => NLW_U0_Trace_Data_Address_UNCONNECTED(0 to 31),
      Trace_Data_Byte_Enable(0 to 3) => NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED(0 to 3),
      Trace_Data_Read => NLW_U0_Trace_Data_Read_UNCONNECTED,
      Trace_Data_Write => NLW_U0_Trace_Data_Write_UNCONNECTED,
      Trace_Data_Write_Value(0 to 31) => NLW_U0_Trace_Data_Write_Value_UNCONNECTED(0 to 31),
      Trace_Delay_Slot => NLW_U0_Trace_Delay_Slot_UNCONNECTED,
      Trace_EX_PipeRun => NLW_U0_Trace_EX_PipeRun_UNCONNECTED,
      Trace_Exception_Kind(0 to 4) => NLW_U0_Trace_Exception_Kind_UNCONNECTED(0 to 4),
      Trace_Exception_Taken => NLW_U0_Trace_Exception_Taken_UNCONNECTED,
      Trace_ICache_Hit => NLW_U0_Trace_ICache_Hit_UNCONNECTED,
      Trace_ICache_Rdy => NLW_U0_Trace_ICache_Rdy_UNCONNECTED,
      Trace_ICache_Req => NLW_U0_Trace_ICache_Req_UNCONNECTED,
      Trace_Instruction(0 to 31) => NLW_U0_Trace_Instruction_UNCONNECTED(0 to 31),
      Trace_Jump_Hit => NLW_U0_Trace_Jump_Hit_UNCONNECTED,
      Trace_Jump_Taken => NLW_U0_Trace_Jump_Taken_UNCONNECTED,
      Trace_MB_Halted => NLW_U0_Trace_MB_Halted_UNCONNECTED,
      Trace_MEM_PipeRun => NLW_U0_Trace_MEM_PipeRun_UNCONNECTED,
      Trace_MSR_Reg(0 to 14) => NLW_U0_Trace_MSR_Reg_UNCONNECTED(0 to 14),
      Trace_New_Reg_Value(0 to 31) => NLW_U0_Trace_New_Reg_Value_UNCONNECTED(0 to 31),
      Trace_OF_PipeRun => NLW_U0_Trace_OF_PipeRun_UNCONNECTED,
      Trace_PC(0 to 31) => NLW_U0_Trace_PC_UNCONNECTED(0 to 31),
      Trace_PID_Reg(0 to 7) => NLW_U0_Trace_PID_Reg_UNCONNECTED(0 to 7),
      Trace_Reg_Addr(0 to 4) => NLW_U0_Trace_Reg_Addr_UNCONNECTED(0 to 4),
      Trace_Reg_Write => NLW_U0_Trace_Reg_Write_UNCONNECTED,
      Trace_Valid_Instr => NLW_U0_Trace_Valid_Instr_UNCONNECTED,
      Wakeup(0 to 1) => B"00",
      Write_Strobe => Write_Strobe
    );
end STRUCTURE;
